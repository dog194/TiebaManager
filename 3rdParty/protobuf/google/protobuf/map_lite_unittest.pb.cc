// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_lite_unittest.proto

#include "google/protobuf/map_lite_unittest.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32Int32Entry_DoNotUse::TestMapLite_MapInt32Int32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32Int32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32Int32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt64Int64Entry_DoNotUse::TestMapLite_MapInt64Int64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt64Int64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt64Int64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapUint32Uint32Entry_DoNotUse::TestMapLite_MapUint32Uint32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapUint32Uint32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapUint32Uint32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapUint64Uint64Entry_DoNotUse::TestMapLite_MapUint64Uint64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapUint64Uint64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapUint64Uint64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapSint32Sint32Entry_DoNotUse::TestMapLite_MapSint32Sint32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapSint32Sint32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapSint32Sint32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapSint64Sint64Entry_DoNotUse::TestMapLite_MapSint64Sint64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapSint64Sint64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapSint64Sint64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapFixed32Fixed32Entry_DoNotUse::TestMapLite_MapFixed32Fixed32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapFixed32Fixed32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapFixed64Fixed64Entry_DoNotUse::TestMapLite_MapFixed64Fixed64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapFixed64Fixed64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32FloatEntry_DoNotUse::TestMapLite_MapInt32FloatEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32FloatEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32FloatEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32DoubleEntry_DoNotUse::TestMapLite_MapInt32DoubleEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32DoubleEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32DoubleEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapBoolBoolEntry_DoNotUse::TestMapLite_MapBoolBoolEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapBoolBoolEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapBoolBoolEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapStringStringEntry_DoNotUse::TestMapLite_MapStringStringEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapStringStringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapStringStringEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32BytesEntry_DoNotUse::TestMapLite_MapInt32BytesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32BytesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32BytesEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32EnumEntry_DoNotUse::TestMapLite_MapInt32EnumEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32EnumEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32EnumEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestMapLite_MapInt32ForeignMessageEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_MapInt32ForeignMessageEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestMapLite_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMapLite_TeboringEntry_DoNotUse::TestMapLite_TeboringEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMapLite_TeboringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLite_TeboringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLite_TeboringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMapLite_TeboringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLite_TeboringEntry_DoNotUseDefaultTypeInternal _TestMapLite_TeboringEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMapLite::TestMapLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.map_int32_int32_) */ {},
      /* decltype(_impl_.map_int64_int64_) */ {},
      /* decltype(_impl_.map_uint32_uint32_) */ {},
      /* decltype(_impl_.map_uint64_uint64_) */ {},
      /* decltype(_impl_.map_sint32_sint32_) */ {},
      /* decltype(_impl_.map_sint64_sint64_) */ {},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {},
      /* decltype(_impl_.map_int32_float_) */ {},
      /* decltype(_impl_.map_int32_double_) */ {},
      /* decltype(_impl_.map_bool_bool_) */ {},
      /* decltype(_impl_.map_string_string_) */ {},
      /* decltype(_impl_.map_int32_bytes_) */ {},
      /* decltype(_impl_.map_int32_enum_) */ {},
      /* decltype(_impl_.map_int32_foreign_message_) */ {},
      /* decltype(_impl_.teboring_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestMapLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMapLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMapLiteDefaultTypeInternal() {}
  union {
    TestMapLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMapLiteDefaultTypeInternal _TestMapLite_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32Int32Entry_DoNotUse::TestArenaMapLite_MapInt32Int32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32Int32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32Int32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt64Int64Entry_DoNotUse::TestArenaMapLite_MapInt64Int64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt64Int64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt64Int64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::TestArenaMapLite_MapUint32Uint32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapUint32Uint32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapUint32Uint32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::TestArenaMapLite_MapUint64Uint64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapUint64Uint64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapUint64Uint64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::TestArenaMapLite_MapSint32Sint32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapSint32Sint32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapSint32Sint32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::TestArenaMapLite_MapSint64Sint64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapSint64Sint64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapSint64Sint64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32FloatEntry_DoNotUse::TestArenaMapLite_MapInt32FloatEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32FloatEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32FloatEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::TestArenaMapLite_MapInt32DoubleEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32DoubleEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32DoubleEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapBoolBoolEntry_DoNotUse::TestArenaMapLite_MapBoolBoolEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapBoolBoolEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapBoolBoolEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapStringStringEntry_DoNotUse::TestArenaMapLite_MapStringStringEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapStringStringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapStringStringEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32BytesEntry_DoNotUse::TestArenaMapLite_MapInt32BytesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32BytesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32BytesEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32EnumEntry_DoNotUse::TestArenaMapLite_MapInt32EnumEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32EnumEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32EnumEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestArenaMapLite::TestArenaMapLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.map_int32_int32_) */ {},
      /* decltype(_impl_.map_int64_int64_) */ {},
      /* decltype(_impl_.map_uint32_uint32_) */ {},
      /* decltype(_impl_.map_uint64_uint64_) */ {},
      /* decltype(_impl_.map_sint32_sint32_) */ {},
      /* decltype(_impl_.map_sint64_sint64_) */ {},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {},
      /* decltype(_impl_.map_int32_float_) */ {},
      /* decltype(_impl_.map_int32_double_) */ {},
      /* decltype(_impl_.map_bool_bool_) */ {},
      /* decltype(_impl_.map_string_string_) */ {},
      /* decltype(_impl_.map_int32_bytes_) */ {},
      /* decltype(_impl_.map_int32_enum_) */ {},
      /* decltype(_impl_.map_int32_foreign_message_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestArenaMapLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestArenaMapLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestArenaMapLiteDefaultTypeInternal() {}
  union {
    TestArenaMapLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestArenaMapLiteDefaultTypeInternal _TestArenaMapLite_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::TestRequiredMessageMapLite_MapFieldEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestRequiredMessageMapLite_MapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredMessageMapLite_MapFieldEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredMessageMapLite_MapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestRequiredMessageMapLite_MapFieldEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredMessageMapLite_MapFieldEntry_DoNotUseDefaultTypeInternal _TestRequiredMessageMapLite_MapFieldEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredMessageMapLite::TestRequiredMessageMapLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestRequiredMessageMapLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredMessageMapLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredMessageMapLiteDefaultTypeInternal() {}
  union {
    TestRequiredMessageMapLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredMessageMapLiteDefaultTypeInternal _TestRequiredMessageMapLite_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestEnumMapLite_KnownMapFieldEntry_DoNotUse::TestEnumMapLite_KnownMapFieldEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestEnumMapLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestEnumMapLite_KnownMapFieldEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapLite_KnownMapFieldEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapLite_UnknownMapFieldEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestEnumMapLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestEnumMapLite_UnknownMapFieldEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapLite_UnknownMapFieldEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEnumMapLite::TestEnumMapLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.known_map_field_) */ {},
      /* decltype(_impl_.unknown_map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestEnumMapLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapLiteDefaultTypeInternal() {}
  union {
    TestEnumMapLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapLiteDefaultTypeInternal _TestEnumMapLite_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUseDefaultTypeInternal _TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLite::TestEnumMapPlusExtraLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.known_map_field_) */ {},
      /* decltype(_impl_.unknown_map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestEnumMapPlusExtraLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEnumMapPlusExtraLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEnumMapPlusExtraLiteDefaultTypeInternal() {}
  union {
    TestEnumMapPlusExtraLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEnumMapPlusExtraLiteDefaultTypeInternal _TestEnumMapPlusExtraLite_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestMessageMapLite_MapInt32MessageEntry_DoNotUse::TestMessageMapLite_MapInt32MessageEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestMessageMapLite_MapInt32MessageEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageMapLite_MapInt32MessageEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageMapLite_MapInt32MessageEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestMessageMapLite_MapInt32MessageEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageMapLite_MapInt32MessageEntry_DoNotUseDefaultTypeInternal _TestMessageMapLite_MapInt32MessageEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMessageMapLite::TestMessageMapLite(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.map_int32_message_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestMessageMapLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageMapLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageMapLiteDefaultTypeInternal() {}
  union {
    TestMessageMapLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageMapLiteDefaultTypeInternal _TestMessageMapLite_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredLite::TestRequiredLite(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.b_)*/ 0,
      /*decltype(_impl_.c_)*/ 0,
    } {}
struct TestRequiredLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredLiteDefaultTypeInternal() {}
  union {
    TestRequiredLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredLiteDefaultTypeInternal _TestRequiredLite_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ForeignMessageArenaLite::ForeignMessageArenaLite(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.c_)*/ 0,
    } {}
struct ForeignMessageArenaLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForeignMessageArenaLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForeignMessageArenaLiteDefaultTypeInternal() {}
  union {
    ForeignMessageArenaLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForeignMessageArenaLiteDefaultTypeInternal _ForeignMessageArenaLite_default_instance_;
}  // namespace protobuf_unittest
namespace protobuf_unittest {
bool Proto2MapEnumLite_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    Proto2MapEnumLite_strings[3] = {};

static const char Proto2MapEnumLite_names[] = {
    "PROTO2_MAP_ENUM_BAR_LITE"
    "PROTO2_MAP_ENUM_BAZ_LITE"
    "PROTO2_MAP_ENUM_FOO_LITE"
};

static const ::google::protobuf::internal::EnumEntry Proto2MapEnumLite_entries[] =
    {
        {{&Proto2MapEnumLite_names[0], 24}, 1},
        {{&Proto2MapEnumLite_names[24], 24}, 2},
        {{&Proto2MapEnumLite_names[48], 24}, 0},
};

static const int Proto2MapEnumLite_entries_by_number[] = {
    2,  // 0 -> PROTO2_MAP_ENUM_FOO_LITE
    0,  // 1 -> PROTO2_MAP_ENUM_BAR_LITE
    1,  // 2 -> PROTO2_MAP_ENUM_BAZ_LITE
};

const std::string& Proto2MapEnumLite_Name(Proto2MapEnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          Proto2MapEnumLite_entries, Proto2MapEnumLite_entries_by_number,
          3, Proto2MapEnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      Proto2MapEnumLite_entries, Proto2MapEnumLite_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : Proto2MapEnumLite_strings[idx].get();
}

bool Proto2MapEnumLite_Parse(absl::string_view name, Proto2MapEnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      Proto2MapEnumLite_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<Proto2MapEnumLite>(int_value);
  }
  return success;
}
bool Proto2MapEnumPlusExtraLite_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    Proto2MapEnumPlusExtraLite_strings[4] = {};

static const char Proto2MapEnumPlusExtraLite_names[] = {
    "E_PROTO2_MAP_ENUM_BAR_LITE"
    "E_PROTO2_MAP_ENUM_BAZ_LITE"
    "E_PROTO2_MAP_ENUM_EXTRA_LITE"
    "E_PROTO2_MAP_ENUM_FOO_LITE"
};

static const ::google::protobuf::internal::EnumEntry Proto2MapEnumPlusExtraLite_entries[] =
    {
        {{&Proto2MapEnumPlusExtraLite_names[0], 26}, 1},
        {{&Proto2MapEnumPlusExtraLite_names[26], 26}, 2},
        {{&Proto2MapEnumPlusExtraLite_names[52], 28}, 3},
        {{&Proto2MapEnumPlusExtraLite_names[80], 26}, 0},
};

static const int Proto2MapEnumPlusExtraLite_entries_by_number[] = {
    3,  // 0 -> E_PROTO2_MAP_ENUM_FOO_LITE
    0,  // 1 -> E_PROTO2_MAP_ENUM_BAR_LITE
    1,  // 2 -> E_PROTO2_MAP_ENUM_BAZ_LITE
    2,  // 3 -> E_PROTO2_MAP_ENUM_EXTRA_LITE
};

const std::string& Proto2MapEnumPlusExtraLite_Name(Proto2MapEnumPlusExtraLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          Proto2MapEnumPlusExtraLite_entries, Proto2MapEnumPlusExtraLite_entries_by_number,
          4, Proto2MapEnumPlusExtraLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      Proto2MapEnumPlusExtraLite_entries, Proto2MapEnumPlusExtraLite_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : Proto2MapEnumPlusExtraLite_strings[idx].get();
}

bool Proto2MapEnumPlusExtraLite_Parse(absl::string_view name, Proto2MapEnumPlusExtraLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      Proto2MapEnumPlusExtraLite_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<Proto2MapEnumPlusExtraLite>(int_value);
  }
  return success;
}
bool MapEnumLite_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    MapEnumLite_strings[3] = {};

static const char MapEnumLite_names[] = {
    "MAP_ENUM_BAR_LITE"
    "MAP_ENUM_BAZ_LITE"
    "MAP_ENUM_FOO_LITE"
};

static const ::google::protobuf::internal::EnumEntry MapEnumLite_entries[] =
    {
        {{&MapEnumLite_names[0], 17}, 1},
        {{&MapEnumLite_names[17], 17}, 2},
        {{&MapEnumLite_names[34], 17}, 0},
};

static const int MapEnumLite_entries_by_number[] = {
    2,  // 0 -> MAP_ENUM_FOO_LITE
    0,  // 1 -> MAP_ENUM_BAR_LITE
    1,  // 2 -> MAP_ENUM_BAZ_LITE
};

const std::string& MapEnumLite_Name(MapEnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          MapEnumLite_entries, MapEnumLite_entries_by_number,
          3, MapEnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      MapEnumLite_entries, MapEnumLite_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : MapEnumLite_strings[idx].get();
}

bool MapEnumLite_Parse(absl::string_view name, MapEnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      MapEnumLite_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<MapEnumLite>(int_value);
  }
  return success;
}
// ===================================================================

TestMapLite_MapInt32Int32Entry_DoNotUse::TestMapLite_MapInt32Int32Entry_DoNotUse() {}
TestMapLite_MapInt32Int32Entry_DoNotUse::TestMapLite_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestMapLite_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt64Int64Entry_DoNotUse::TestMapLite_MapInt64Int64Entry_DoNotUse() {}
TestMapLite_MapInt64Int64Entry_DoNotUse::TestMapLite_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestMapLite_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapUint32Uint32Entry_DoNotUse::TestMapLite_MapUint32Uint32Entry_DoNotUse() {}
TestMapLite_MapUint32Uint32Entry_DoNotUse::TestMapLite_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestMapLite_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapUint64Uint64Entry_DoNotUse::TestMapLite_MapUint64Uint64Entry_DoNotUse() {}
TestMapLite_MapUint64Uint64Entry_DoNotUse::TestMapLite_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestMapLite_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapSint32Sint32Entry_DoNotUse::TestMapLite_MapSint32Sint32Entry_DoNotUse() {}
TestMapLite_MapSint32Sint32Entry_DoNotUse::TestMapLite_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestMapLite_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapSint64Sint64Entry_DoNotUse::TestMapLite_MapSint64Sint64Entry_DoNotUse() {}
TestMapLite_MapSint64Sint64Entry_DoNotUse::TestMapLite_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestMapLite_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapFixed32Fixed32Entry_DoNotUse::TestMapLite_MapFixed32Fixed32Entry_DoNotUse() {}
TestMapLite_MapFixed32Fixed32Entry_DoNotUse::TestMapLite_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestMapLite_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapFixed64Fixed64Entry_DoNotUse::TestMapLite_MapFixed64Fixed64Entry_DoNotUse() {}
TestMapLite_MapFixed64Fixed64Entry_DoNotUse::TestMapLite_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestMapLite_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt32FloatEntry_DoNotUse::TestMapLite_MapInt32FloatEntry_DoNotUse() {}
TestMapLite_MapInt32FloatEntry_DoNotUse::TestMapLite_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestMapLite_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt32DoubleEntry_DoNotUse::TestMapLite_MapInt32DoubleEntry_DoNotUse() {}
TestMapLite_MapInt32DoubleEntry_DoNotUse::TestMapLite_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestMapLite_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapBoolBoolEntry_DoNotUse::TestMapLite_MapBoolBoolEntry_DoNotUse() {}
TestMapLite_MapBoolBoolEntry_DoNotUse::TestMapLite_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestMapLite_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapStringStringEntry_DoNotUse::TestMapLite_MapStringStringEntry_DoNotUse() {}
TestMapLite_MapStringStringEntry_DoNotUse::TestMapLite_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapStringStringEntry_DoNotUse::MergeFrom(const TestMapLite_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt32BytesEntry_DoNotUse::TestMapLite_MapInt32BytesEntry_DoNotUse() {}
TestMapLite_MapInt32BytesEntry_DoNotUse::TestMapLite_MapInt32BytesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32BytesEntry_DoNotUse::MergeFrom(const TestMapLite_MapInt32BytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt32EnumEntry_DoNotUse::TestMapLite_MapInt32EnumEntry_DoNotUse() {}
TestMapLite_MapInt32EnumEntry_DoNotUse::TestMapLite_MapInt32EnumEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32EnumEntry_DoNotUse::MergeFrom(const TestMapLite_MapInt32EnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestMapLite_MapInt32ForeignMessageEntry_DoNotUse() {}
TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestMapLite_MapInt32ForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::MergeFrom(const TestMapLite_MapInt32ForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestMapLite_TeboringEntry_DoNotUse::TestMapLite_TeboringEntry_DoNotUse() {}
TestMapLite_TeboringEntry_DoNotUse::TestMapLite_TeboringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMapLite_TeboringEntry_DoNotUse::MergeFrom(const TestMapLite_TeboringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestMapLite::_Internal {
 public:
};

void TestMapLite::clear_map_int32_foreign_message() {
  _impl_.map_int32_foreign_message_.Clear();
}
TestMapLite::TestMapLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMapLite)
}
TestMapLite::TestMapLite(const TestMapLite& from) : ::google::protobuf::MessageLite() {
  TestMapLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_int32_) */ {},
      /* decltype(_impl_.map_int64_int64_) */ {},
      /* decltype(_impl_.map_uint32_uint32_) */ {},
      /* decltype(_impl_.map_uint64_uint64_) */ {},
      /* decltype(_impl_.map_sint32_sint32_) */ {},
      /* decltype(_impl_.map_sint64_sint64_) */ {},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {},
      /* decltype(_impl_.map_int32_float_) */ {},
      /* decltype(_impl_.map_int32_double_) */ {},
      /* decltype(_impl_.map_bool_bool_) */ {},
      /* decltype(_impl_.map_string_string_) */ {},
      /* decltype(_impl_.map_int32_bytes_) */ {},
      /* decltype(_impl_.map_int32_enum_) */ {},
      /* decltype(_impl_.map_int32_foreign_message_) */ {},
      /* decltype(_impl_.teboring_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.map_int32_int32_.MergeFrom(from._impl_.map_int32_int32_);
  _this->_impl_.map_int64_int64_.MergeFrom(from._impl_.map_int64_int64_);
  _this->_impl_.map_uint32_uint32_.MergeFrom(from._impl_.map_uint32_uint32_);
  _this->_impl_.map_uint64_uint64_.MergeFrom(from._impl_.map_uint64_uint64_);
  _this->_impl_.map_sint32_sint32_.MergeFrom(from._impl_.map_sint32_sint32_);
  _this->_impl_.map_sint64_sint64_.MergeFrom(from._impl_.map_sint64_sint64_);
  _this->_impl_.map_fixed32_fixed32_.MergeFrom(from._impl_.map_fixed32_fixed32_);
  _this->_impl_.map_fixed64_fixed64_.MergeFrom(from._impl_.map_fixed64_fixed64_);
  _this->_impl_.map_sfixed32_sfixed32_.MergeFrom(from._impl_.map_sfixed32_sfixed32_);
  _this->_impl_.map_sfixed64_sfixed64_.MergeFrom(from._impl_.map_sfixed64_sfixed64_);
  _this->_impl_.map_int32_float_.MergeFrom(from._impl_.map_int32_float_);
  _this->_impl_.map_int32_double_.MergeFrom(from._impl_.map_int32_double_);
  _this->_impl_.map_bool_bool_.MergeFrom(from._impl_.map_bool_bool_);
  _this->_impl_.map_string_string_.MergeFrom(from._impl_.map_string_string_);
  _this->_impl_.map_int32_bytes_.MergeFrom(from._impl_.map_int32_bytes_);
  _this->_impl_.map_int32_enum_.MergeFrom(from._impl_.map_int32_enum_);
  _this->_impl_.map_int32_foreign_message_.MergeFrom(from._impl_.map_int32_foreign_message_);
  _this->_impl_.teboring_.MergeFrom(from._impl_.teboring_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMapLite)
}
inline void TestMapLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_int32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int64_int64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_uint32_uint32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_uint64_uint64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sint32_sint32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sint64_sint64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_float_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_double_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_bool_bool_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_string_string_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_bytes_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_enum_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_foreign_message_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.teboring_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestMapLite::~TestMapLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMapLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestMapLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_int32_int32_.~MapFieldLite();
  _impl_.map_int64_int64_.~MapFieldLite();
  _impl_.map_uint32_uint32_.~MapFieldLite();
  _impl_.map_uint64_uint64_.~MapFieldLite();
  _impl_.map_sint32_sint32_.~MapFieldLite();
  _impl_.map_sint64_sint64_.~MapFieldLite();
  _impl_.map_fixed32_fixed32_.~MapFieldLite();
  _impl_.map_fixed64_fixed64_.~MapFieldLite();
  _impl_.map_sfixed32_sfixed32_.~MapFieldLite();
  _impl_.map_sfixed64_sfixed64_.~MapFieldLite();
  _impl_.map_int32_float_.~MapFieldLite();
  _impl_.map_int32_double_.~MapFieldLite();
  _impl_.map_bool_bool_.~MapFieldLite();
  _impl_.map_string_string_.~MapFieldLite();
  _impl_.map_int32_bytes_.~MapFieldLite();
  _impl_.map_int32_enum_.~MapFieldLite();
  _impl_.map_int32_foreign_message_.~MapFieldLite();
  _impl_.teboring_.~MapFieldLite();
}
void TestMapLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMapLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMapLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_int32_int32_.Clear();
  _impl_.map_int64_int64_.Clear();
  _impl_.map_uint32_uint32_.Clear();
  _impl_.map_uint64_uint64_.Clear();
  _impl_.map_sint32_sint32_.Clear();
  _impl_.map_sint64_sint64_.Clear();
  _impl_.map_fixed32_fixed32_.Clear();
  _impl_.map_fixed64_fixed64_.Clear();
  _impl_.map_sfixed32_sfixed32_.Clear();
  _impl_.map_sfixed64_sfixed64_.Clear();
  _impl_.map_int32_float_.Clear();
  _impl_.map_int32_double_.Clear();
  _impl_.map_bool_bool_.Clear();
  _impl_.map_string_string_.Clear();
  _impl_.map_int32_bytes_.Clear();
  _impl_.map_int32_enum_.Clear();
  _impl_.map_int32_foreign_message_.Clear();
  _impl_.teboring_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestMapLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 18, 20, 0, 2> TestMapLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    18, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    20,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMapLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, int32> map_int32_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int64, int64> map_int64_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int64_int64_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<uint32, uint32> map_uint32_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_uint32_uint32_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<uint64, uint64> map_uint64_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_uint64_uint64_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sint32, sint32> map_sint32_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_sint32_sint32_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sint64, sint64> map_sint64_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_sint64_sint64_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_fixed32_fixed32_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_fixed64_fixed64_), 0, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_sfixed32_sfixed32_), 0, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_sfixed64_sfixed64_), 0, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, float> map_int32_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_float_), 0, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, double> map_int32_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_double_), 0, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<bool, bool> map_bool_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_bool_bool_), 0, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> map_string_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_string_string_), 0, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, bytes> map_int32_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_bytes_), 0, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_enum_), 0, 15,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.ForeignMessageLite> map_int32_foreign_message = 17;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.map_int32_foreign_message_), 0, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, int32> teboring = 18;
    {PROTOBUF_FIELD_OFFSET(TestMapLite, _impl_.teboring_), 0, 19,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_int32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int64_int64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_uint32_uint32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_uint64_uint64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_sint32_sint32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_sint64_sint64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_fixed32_fixed32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_fixed64_fixed64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_sfixed32_sfixed32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_sfixed64_sfixed64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_float_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_double_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_bool_bool_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_string_string_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_bytes_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_enum_)>(0, 0, 1)},
    {::protobuf_unittest::MapEnumLite_IsValid},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.map_int32_foreign_message_)>(0, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::protobuf_unittest::ForeignMessageLite>},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMapLite()._impl_.teboring_)>(0, 0, 0)},
  }}, {{
  }},
};

::uint8_t* TestMapLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMapLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  if (!_internal_map_int32_int32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestMapLite_MapInt32Int32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_int32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 2;
  if (!_internal_map_int64_int64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestMapLite_MapInt64Int64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_int64_int64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  if (!_internal_map_uint32_uint32().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::uint32_t>;
    using WireHelper = TestMapLite_MapUint32Uint32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_uint32_uint32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  if (!_internal_map_uint64_uint64().empty()) {
    using MapType = ::google::protobuf::Map<::uint64_t, ::uint64_t>;
    using WireHelper = TestMapLite_MapUint64Uint64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_uint64_uint64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  if (!_internal_map_sint32_sint32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestMapLite_MapSint32Sint32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sint32_sint32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  if (!_internal_map_sint64_sint64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestMapLite_MapSint64Sint64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sint64_sint64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  if (!_internal_map_fixed32_fixed32().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::uint32_t>;
    using WireHelper = TestMapLite_MapFixed32Fixed32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_fixed32_fixed32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  if (!_internal_map_fixed64_fixed64().empty()) {
    using MapType = ::google::protobuf::Map<::uint64_t, ::uint64_t>;
    using WireHelper = TestMapLite_MapFixed64Fixed64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_fixed64_fixed64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  if (!_internal_map_sfixed32_sfixed32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sfixed32_sfixed32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  if (!_internal_map_sfixed64_sfixed64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sfixed64_sfixed64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, float> map_int32_float = 11;
  if (!_internal_map_int32_float().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, float>;
    using WireHelper = TestMapLite_MapInt32FloatEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_float();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, double> map_int32_double = 12;
  if (!_internal_map_int32_double().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, double>;
    using WireHelper = TestMapLite_MapInt32DoubleEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_double();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<bool, bool> map_bool_bool = 13;
  if (!_internal_map_bool_bool().empty()) {
    using MapType = ::google::protobuf::Map<bool, bool>;
    using WireHelper = TestMapLite_MapBoolBoolEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_bool_bool();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, string> map_string_string = 14;
  if (!_internal_map_string_string().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = TestMapLite_MapStringStringEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_string_string();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, bytes> map_int32_bytes = 15;
  if (!_internal_map_int32_bytes().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, std::string>;
    using WireHelper = TestMapLite_MapInt32BytesEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_bytes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            15, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            15, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  if (!_internal_map_int32_enum().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>;
    using WireHelper = TestMapLite_MapInt32EnumEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_enum();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            16, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            16, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.ForeignMessageLite> map_int32_foreign_message = 17;
  if (!_internal_map_int32_foreign_message().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageLite>;
    using WireHelper = TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_foreign_message();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            17, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            17, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, int32> teboring = 18;
  if (!_internal_teboring().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestMapLite_TeboringEntry_DoNotUse::Funcs;
    const auto& field = _internal_teboring();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            18, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            18, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMapLite)
  return target;
}

::size_t TestMapLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMapLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_int32_size());
  for (const auto& entry : _internal_map_int32_int32()) {
    total_size += TestMapLite_MapInt32Int32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int64, int64> map_int64_int64 = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int64_int64_size());
  for (const auto& entry : _internal_map_int64_int64()) {
    total_size += TestMapLite_MapInt64Int64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<uint32, uint32> map_uint32_uint32 = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_uint32_uint32_size());
  for (const auto& entry : _internal_map_uint32_uint32()) {
    total_size += TestMapLite_MapUint32Uint32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<uint64, uint64> map_uint64_uint64 = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_uint64_uint64_size());
  for (const auto& entry : _internal_map_uint64_uint64()) {
    total_size += TestMapLite_MapUint64Uint64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sint32, sint32> map_sint32_sint32 = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sint32_sint32_size());
  for (const auto& entry : _internal_map_sint32_sint32()) {
    total_size += TestMapLite_MapSint32Sint32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sint64, sint64> map_sint64_sint64 = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sint64_sint64_size());
  for (const auto& entry : _internal_map_sint64_sint64()) {
    total_size += TestMapLite_MapSint64Sint64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_fixed32_fixed32_size());
  for (const auto& entry : _internal_map_fixed32_fixed32()) {
    total_size += TestMapLite_MapFixed32Fixed32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_fixed64_fixed64_size());
  for (const auto& entry : _internal_map_fixed64_fixed64()) {
    total_size += TestMapLite_MapFixed64Fixed64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sfixed32_sfixed32_size());
  for (const auto& entry : _internal_map_sfixed32_sfixed32()) {
    total_size += TestMapLite_MapSfixed32Sfixed32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sfixed64_sfixed64_size());
  for (const auto& entry : _internal_map_sfixed64_sfixed64()) {
    total_size += TestMapLite_MapSfixed64Sfixed64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, float> map_int32_float = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_float_size());
  for (const auto& entry : _internal_map_int32_float()) {
    total_size += TestMapLite_MapInt32FloatEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, double> map_int32_double = 12;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_double_size());
  for (const auto& entry : _internal_map_int32_double()) {
    total_size += TestMapLite_MapInt32DoubleEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<bool, bool> map_bool_bool = 13;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_bool_bool_size());
  for (const auto& entry : _internal_map_bool_bool()) {
    total_size += TestMapLite_MapBoolBoolEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> map_string_string = 14;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_string_string_size());
  for (const auto& entry : _internal_map_string_string()) {
    total_size += TestMapLite_MapStringStringEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, bytes> map_int32_bytes = 15;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_bytes_size());
  for (const auto& entry : _internal_map_int32_bytes()) {
    total_size += TestMapLite_MapInt32BytesEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_enum_size());
  for (const auto& entry : _internal_map_int32_enum()) {
    total_size += TestMapLite_MapInt32EnumEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.ForeignMessageLite> map_int32_foreign_message = 17;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_foreign_message_size());
  for (const auto& entry : _internal_map_int32_foreign_message()) {
    total_size += TestMapLite_MapInt32ForeignMessageEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, int32> teboring = 18;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_teboring_size());
  for (const auto& entry : _internal_teboring()) {
    total_size += TestMapLite_TeboringEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMapLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestMapLite*>(
      &from));
}

void TestMapLite::MergeFrom(const TestMapLite& from) {
  TestMapLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMapLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_int32_int32_.MergeFrom(from._impl_.map_int32_int32_);
  _this->_impl_.map_int64_int64_.MergeFrom(from._impl_.map_int64_int64_);
  _this->_impl_.map_uint32_uint32_.MergeFrom(from._impl_.map_uint32_uint32_);
  _this->_impl_.map_uint64_uint64_.MergeFrom(from._impl_.map_uint64_uint64_);
  _this->_impl_.map_sint32_sint32_.MergeFrom(from._impl_.map_sint32_sint32_);
  _this->_impl_.map_sint64_sint64_.MergeFrom(from._impl_.map_sint64_sint64_);
  _this->_impl_.map_fixed32_fixed32_.MergeFrom(from._impl_.map_fixed32_fixed32_);
  _this->_impl_.map_fixed64_fixed64_.MergeFrom(from._impl_.map_fixed64_fixed64_);
  _this->_impl_.map_sfixed32_sfixed32_.MergeFrom(from._impl_.map_sfixed32_sfixed32_);
  _this->_impl_.map_sfixed64_sfixed64_.MergeFrom(from._impl_.map_sfixed64_sfixed64_);
  _this->_impl_.map_int32_float_.MergeFrom(from._impl_.map_int32_float_);
  _this->_impl_.map_int32_double_.MergeFrom(from._impl_.map_int32_double_);
  _this->_impl_.map_bool_bool_.MergeFrom(from._impl_.map_bool_bool_);
  _this->_impl_.map_string_string_.MergeFrom(from._impl_.map_string_string_);
  _this->_impl_.map_int32_bytes_.MergeFrom(from._impl_.map_int32_bytes_);
  _this->_impl_.map_int32_enum_.MergeFrom(from._impl_.map_int32_enum_);
  _this->_impl_.map_int32_foreign_message_.MergeFrom(from._impl_.map_int32_foreign_message_);
  _this->_impl_.teboring_.MergeFrom(from._impl_.teboring_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestMapLite::CopyFrom(const TestMapLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMapLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMapLite::IsInitialized() const {
  return true;
}

void TestMapLite::InternalSwap(TestMapLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.map_int32_int32_.InternalSwap(&other->_impl_.map_int32_int32_);
  _impl_.map_int64_int64_.InternalSwap(&other->_impl_.map_int64_int64_);
  _impl_.map_uint32_uint32_.InternalSwap(&other->_impl_.map_uint32_uint32_);
  _impl_.map_uint64_uint64_.InternalSwap(&other->_impl_.map_uint64_uint64_);
  _impl_.map_sint32_sint32_.InternalSwap(&other->_impl_.map_sint32_sint32_);
  _impl_.map_sint64_sint64_.InternalSwap(&other->_impl_.map_sint64_sint64_);
  _impl_.map_fixed32_fixed32_.InternalSwap(&other->_impl_.map_fixed32_fixed32_);
  _impl_.map_fixed64_fixed64_.InternalSwap(&other->_impl_.map_fixed64_fixed64_);
  _impl_.map_sfixed32_sfixed32_.InternalSwap(&other->_impl_.map_sfixed32_sfixed32_);
  _impl_.map_sfixed64_sfixed64_.InternalSwap(&other->_impl_.map_sfixed64_sfixed64_);
  _impl_.map_int32_float_.InternalSwap(&other->_impl_.map_int32_float_);
  _impl_.map_int32_double_.InternalSwap(&other->_impl_.map_int32_double_);
  _impl_.map_bool_bool_.InternalSwap(&other->_impl_.map_bool_bool_);
  _impl_.map_string_string_.InternalSwap(&other->_impl_.map_string_string_);
  _impl_.map_int32_bytes_.InternalSwap(&other->_impl_.map_int32_bytes_);
  _impl_.map_int32_enum_.InternalSwap(&other->_impl_.map_int32_enum_);
  _impl_.map_int32_foreign_message_.InternalSwap(&other->_impl_.map_int32_foreign_message_);
  _impl_.teboring_.InternalSwap(&other->_impl_.teboring_);
}

std::string TestMapLite::GetTypeName() const {
  return "protobuf_unittest.TestMapLite";
}

// ===================================================================

TestArenaMapLite_MapInt32Int32Entry_DoNotUse::TestArenaMapLite_MapInt32Int32Entry_DoNotUse() {}
TestArenaMapLite_MapInt32Int32Entry_DoNotUse::TestArenaMapLite_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt64Int64Entry_DoNotUse::TestArenaMapLite_MapInt64Int64Entry_DoNotUse() {}
TestArenaMapLite_MapInt64Int64Entry_DoNotUse::TestArenaMapLite_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::TestArenaMapLite_MapUint32Uint32Entry_DoNotUse() {}
TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::TestArenaMapLite_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::TestArenaMapLite_MapUint64Uint64Entry_DoNotUse() {}
TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::TestArenaMapLite_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::TestArenaMapLite_MapSint32Sint32Entry_DoNotUse() {}
TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::TestArenaMapLite_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::TestArenaMapLite_MapSint64Sint64Entry_DoNotUse() {}
TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::TestArenaMapLite_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse() {}
TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse() {}
TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt32FloatEntry_DoNotUse::TestArenaMapLite_MapInt32FloatEntry_DoNotUse() {}
TestArenaMapLite_MapInt32FloatEntry_DoNotUse::TestArenaMapLite_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::TestArenaMapLite_MapInt32DoubleEntry_DoNotUse() {}
TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::TestArenaMapLite_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapBoolBoolEntry_DoNotUse::TestArenaMapLite_MapBoolBoolEntry_DoNotUse() {}
TestArenaMapLite_MapBoolBoolEntry_DoNotUse::TestArenaMapLite_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapStringStringEntry_DoNotUse::TestArenaMapLite_MapStringStringEntry_DoNotUse() {}
TestArenaMapLite_MapStringStringEntry_DoNotUse::TestArenaMapLite_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapStringStringEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt32BytesEntry_DoNotUse::TestArenaMapLite_MapInt32BytesEntry_DoNotUse() {}
TestArenaMapLite_MapInt32BytesEntry_DoNotUse::TestArenaMapLite_MapInt32BytesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32BytesEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32BytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt32EnumEntry_DoNotUse::TestArenaMapLite_MapInt32EnumEntry_DoNotUse() {}
TestArenaMapLite_MapInt32EnumEntry_DoNotUse::TestArenaMapLite_MapInt32EnumEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32EnumEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32EnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse() {}
TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::MergeFrom(const TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestArenaMapLite::_Internal {
 public:
};

TestArenaMapLite::TestArenaMapLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestArenaMapLite)
}
TestArenaMapLite::TestArenaMapLite(const TestArenaMapLite& from) : ::google::protobuf::MessageLite() {
  TestArenaMapLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_int32_) */ {},
      /* decltype(_impl_.map_int64_int64_) */ {},
      /* decltype(_impl_.map_uint32_uint32_) */ {},
      /* decltype(_impl_.map_uint64_uint64_) */ {},
      /* decltype(_impl_.map_sint32_sint32_) */ {},
      /* decltype(_impl_.map_sint64_sint64_) */ {},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {},
      /* decltype(_impl_.map_int32_float_) */ {},
      /* decltype(_impl_.map_int32_double_) */ {},
      /* decltype(_impl_.map_bool_bool_) */ {},
      /* decltype(_impl_.map_string_string_) */ {},
      /* decltype(_impl_.map_int32_bytes_) */ {},
      /* decltype(_impl_.map_int32_enum_) */ {},
      /* decltype(_impl_.map_int32_foreign_message_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.map_int32_int32_.MergeFrom(from._impl_.map_int32_int32_);
  _this->_impl_.map_int64_int64_.MergeFrom(from._impl_.map_int64_int64_);
  _this->_impl_.map_uint32_uint32_.MergeFrom(from._impl_.map_uint32_uint32_);
  _this->_impl_.map_uint64_uint64_.MergeFrom(from._impl_.map_uint64_uint64_);
  _this->_impl_.map_sint32_sint32_.MergeFrom(from._impl_.map_sint32_sint32_);
  _this->_impl_.map_sint64_sint64_.MergeFrom(from._impl_.map_sint64_sint64_);
  _this->_impl_.map_fixed32_fixed32_.MergeFrom(from._impl_.map_fixed32_fixed32_);
  _this->_impl_.map_fixed64_fixed64_.MergeFrom(from._impl_.map_fixed64_fixed64_);
  _this->_impl_.map_sfixed32_sfixed32_.MergeFrom(from._impl_.map_sfixed32_sfixed32_);
  _this->_impl_.map_sfixed64_sfixed64_.MergeFrom(from._impl_.map_sfixed64_sfixed64_);
  _this->_impl_.map_int32_float_.MergeFrom(from._impl_.map_int32_float_);
  _this->_impl_.map_int32_double_.MergeFrom(from._impl_.map_int32_double_);
  _this->_impl_.map_bool_bool_.MergeFrom(from._impl_.map_bool_bool_);
  _this->_impl_.map_string_string_.MergeFrom(from._impl_.map_string_string_);
  _this->_impl_.map_int32_bytes_.MergeFrom(from._impl_.map_int32_bytes_);
  _this->_impl_.map_int32_enum_.MergeFrom(from._impl_.map_int32_enum_);
  _this->_impl_.map_int32_foreign_message_.MergeFrom(from._impl_.map_int32_foreign_message_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestArenaMapLite)
}
inline void TestArenaMapLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_int32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int64_int64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_uint32_uint32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_uint64_uint64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sint32_sint32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sint64_sint64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_fixed32_fixed32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_fixed64_fixed64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sfixed32_sfixed32_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_sfixed64_sfixed64_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_float_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_double_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_bool_bool_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_string_string_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_bytes_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_enum_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_int32_foreign_message_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestArenaMapLite::~TestArenaMapLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestArenaMapLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestArenaMapLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_int32_int32_.~MapFieldLite();
  _impl_.map_int64_int64_.~MapFieldLite();
  _impl_.map_uint32_uint32_.~MapFieldLite();
  _impl_.map_uint64_uint64_.~MapFieldLite();
  _impl_.map_sint32_sint32_.~MapFieldLite();
  _impl_.map_sint64_sint64_.~MapFieldLite();
  _impl_.map_fixed32_fixed32_.~MapFieldLite();
  _impl_.map_fixed64_fixed64_.~MapFieldLite();
  _impl_.map_sfixed32_sfixed32_.~MapFieldLite();
  _impl_.map_sfixed64_sfixed64_.~MapFieldLite();
  _impl_.map_int32_float_.~MapFieldLite();
  _impl_.map_int32_double_.~MapFieldLite();
  _impl_.map_bool_bool_.~MapFieldLite();
  _impl_.map_string_string_.~MapFieldLite();
  _impl_.map_int32_bytes_.~MapFieldLite();
  _impl_.map_int32_enum_.~MapFieldLite();
  _impl_.map_int32_foreign_message_.~MapFieldLite();
}
void TestArenaMapLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestArenaMapLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestArenaMapLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_int32_int32_.Clear();
  _impl_.map_int64_int64_.Clear();
  _impl_.map_uint32_uint32_.Clear();
  _impl_.map_uint64_uint64_.Clear();
  _impl_.map_sint32_sint32_.Clear();
  _impl_.map_sint64_sint64_.Clear();
  _impl_.map_fixed32_fixed32_.Clear();
  _impl_.map_fixed64_fixed64_.Clear();
  _impl_.map_sfixed32_sfixed32_.Clear();
  _impl_.map_sfixed64_sfixed64_.Clear();
  _impl_.map_int32_float_.Clear();
  _impl_.map_int32_double_.Clear();
  _impl_.map_bool_bool_.Clear();
  _impl_.map_string_string_.Clear();
  _impl_.map_int32_bytes_.Clear();
  _impl_.map_int32_enum_.Clear();
  _impl_.map_int32_foreign_message_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestArenaMapLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 17, 19, 0, 2> TestArenaMapLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    19,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestArenaMapLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, int32> map_int32_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int64, int64> map_int64_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int64_int64_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<uint32, uint32> map_uint32_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_uint32_uint32_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<uint64, uint64> map_uint64_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_uint64_uint64_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sint32, sint32> map_sint32_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_sint32_sint32_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sint64, sint64> map_sint64_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_sint64_sint64_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_fixed32_fixed32_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_fixed64_fixed64_), 0, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_sfixed32_sfixed32_), 0, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_sfixed64_sfixed64_), 0, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, float> map_int32_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_float_), 0, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, double> map_int32_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_double_), 0, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<bool, bool> map_bool_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_bool_bool_), 0, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> map_string_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_string_string_), 0, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, bytes> map_int32_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_bytes_), 0, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_enum_), 0, 15,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.ForeignMessageArenaLite> map_int32_foreign_message = 17;
    {PROTOBUF_FIELD_OFFSET(TestArenaMapLite, _impl_.map_int32_foreign_message_), 0, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_int32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int64_int64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_uint32_uint32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_uint64_uint64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_sint32_sint32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_sint64_sint64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_fixed32_fixed32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_fixed64_fixed64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_sfixed32_sfixed32_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_sfixed64_sfixed64_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_float_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_double_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_bool_bool_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_string_string_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_bytes_)>(0, 0, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_enum_)>(0, 0, 1)},
    {::protobuf_unittest::MapEnumLite_IsValid},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestArenaMapLite()._impl_.map_int32_foreign_message_)>(0, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::protobuf_unittest::ForeignMessageArenaLite>},
  }}, {{
  }},
};

::uint8_t* TestArenaMapLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestArenaMapLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  if (!_internal_map_int32_int32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestArenaMapLite_MapInt32Int32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_int32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 2;
  if (!_internal_map_int64_int64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestArenaMapLite_MapInt64Int64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_int64_int64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 3;
  if (!_internal_map_uint32_uint32().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::uint32_t>;
    using WireHelper = TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_uint32_uint32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 4;
  if (!_internal_map_uint64_uint64().empty()) {
    using MapType = ::google::protobuf::Map<::uint64_t, ::uint64_t>;
    using WireHelper = TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_uint64_uint64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 5;
  if (!_internal_map_sint32_sint32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sint32_sint32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 6;
  if (!_internal_map_sint64_sint64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sint64_sint64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  if (!_internal_map_fixed32_fixed32().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::uint32_t>;
    using WireHelper = TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_fixed32_fixed32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  if (!_internal_map_fixed64_fixed64().empty()) {
    using MapType = ::google::protobuf::Map<::uint64_t, ::uint64_t>;
    using WireHelper = TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_fixed64_fixed64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  if (!_internal_map_sfixed32_sfixed32().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sfixed32_sfixed32();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  if (!_internal_map_sfixed64_sfixed64().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
    using WireHelper = TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::Funcs;
    const auto& field = _internal_map_sfixed64_sfixed64();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, float> map_int32_float = 11;
  if (!_internal_map_int32_float().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, float>;
    using WireHelper = TestArenaMapLite_MapInt32FloatEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_float();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, double> map_int32_double = 12;
  if (!_internal_map_int32_double().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, double>;
    using WireHelper = TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_double();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<bool, bool> map_bool_bool = 13;
  if (!_internal_map_bool_bool().empty()) {
    using MapType = ::google::protobuf::Map<bool, bool>;
    using WireHelper = TestArenaMapLite_MapBoolBoolEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_bool_bool();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            13, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, string> map_string_string = 14;
  if (!_internal_map_string_string().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = TestArenaMapLite_MapStringStringEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_string_string();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            14, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, bytes> map_int32_bytes = 15;
  if (!_internal_map_int32_bytes().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, std::string>;
    using WireHelper = TestArenaMapLite_MapInt32BytesEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_bytes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            15, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            15, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  if (!_internal_map_int32_enum().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnumLite>;
    using WireHelper = TestArenaMapLite_MapInt32EnumEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_enum();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            16, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            16, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.ForeignMessageArenaLite> map_int32_foreign_message = 17;
  if (!_internal_map_int32_foreign_message().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessageArenaLite>;
    using WireHelper = TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_foreign_message();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            17, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            17, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestArenaMapLite)
  return target;
}

::size_t TestArenaMapLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestArenaMapLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> map_int32_int32 = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_int32_size());
  for (const auto& entry : _internal_map_int32_int32()) {
    total_size += TestArenaMapLite_MapInt32Int32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int64, int64> map_int64_int64 = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int64_int64_size());
  for (const auto& entry : _internal_map_int64_int64()) {
    total_size += TestArenaMapLite_MapInt64Int64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<uint32, uint32> map_uint32_uint32 = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_uint32_uint32_size());
  for (const auto& entry : _internal_map_uint32_uint32()) {
    total_size += TestArenaMapLite_MapUint32Uint32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<uint64, uint64> map_uint64_uint64 = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_uint64_uint64_size());
  for (const auto& entry : _internal_map_uint64_uint64()) {
    total_size += TestArenaMapLite_MapUint64Uint64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sint32, sint32> map_sint32_sint32 = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sint32_sint32_size());
  for (const auto& entry : _internal_map_sint32_sint32()) {
    total_size += TestArenaMapLite_MapSint32Sint32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sint64, sint64> map_sint64_sint64 = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sint64_sint64_size());
  for (const auto& entry : _internal_map_sint64_sint64()) {
    total_size += TestArenaMapLite_MapSint64Sint64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_fixed32_fixed32_size());
  for (const auto& entry : _internal_map_fixed32_fixed32()) {
    total_size += TestArenaMapLite_MapFixed32Fixed32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_fixed64_fixed64_size());
  for (const auto& entry : _internal_map_fixed64_fixed64()) {
    total_size += TestArenaMapLite_MapFixed64Fixed64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sfixed32_sfixed32_size());
  for (const auto& entry : _internal_map_sfixed32_sfixed32()) {
    total_size += TestArenaMapLite_MapSfixed32Sfixed32Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_sfixed64_sfixed64_size());
  for (const auto& entry : _internal_map_sfixed64_sfixed64()) {
    total_size += TestArenaMapLite_MapSfixed64Sfixed64Entry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, float> map_int32_float = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_float_size());
  for (const auto& entry : _internal_map_int32_float()) {
    total_size += TestArenaMapLite_MapInt32FloatEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, double> map_int32_double = 12;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_double_size());
  for (const auto& entry : _internal_map_int32_double()) {
    total_size += TestArenaMapLite_MapInt32DoubleEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<bool, bool> map_bool_bool = 13;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_bool_bool_size());
  for (const auto& entry : _internal_map_bool_bool()) {
    total_size += TestArenaMapLite_MapBoolBoolEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> map_string_string = 14;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_string_string_size());
  for (const auto& entry : _internal_map_string_string()) {
    total_size += TestArenaMapLite_MapStringStringEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, bytes> map_int32_bytes = 15;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_bytes_size());
  for (const auto& entry : _internal_map_int32_bytes()) {
    total_size += TestArenaMapLite_MapInt32BytesEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.MapEnumLite> map_int32_enum = 16;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_enum_size());
  for (const auto& entry : _internal_map_int32_enum()) {
    total_size += TestArenaMapLite_MapInt32EnumEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.ForeignMessageArenaLite> map_int32_foreign_message = 17;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_foreign_message_size());
  for (const auto& entry : _internal_map_int32_foreign_message()) {
    total_size += TestArenaMapLite_MapInt32ForeignMessageEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestArenaMapLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestArenaMapLite*>(
      &from));
}

void TestArenaMapLite::MergeFrom(const TestArenaMapLite& from) {
  TestArenaMapLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestArenaMapLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_int32_int32_.MergeFrom(from._impl_.map_int32_int32_);
  _this->_impl_.map_int64_int64_.MergeFrom(from._impl_.map_int64_int64_);
  _this->_impl_.map_uint32_uint32_.MergeFrom(from._impl_.map_uint32_uint32_);
  _this->_impl_.map_uint64_uint64_.MergeFrom(from._impl_.map_uint64_uint64_);
  _this->_impl_.map_sint32_sint32_.MergeFrom(from._impl_.map_sint32_sint32_);
  _this->_impl_.map_sint64_sint64_.MergeFrom(from._impl_.map_sint64_sint64_);
  _this->_impl_.map_fixed32_fixed32_.MergeFrom(from._impl_.map_fixed32_fixed32_);
  _this->_impl_.map_fixed64_fixed64_.MergeFrom(from._impl_.map_fixed64_fixed64_);
  _this->_impl_.map_sfixed32_sfixed32_.MergeFrom(from._impl_.map_sfixed32_sfixed32_);
  _this->_impl_.map_sfixed64_sfixed64_.MergeFrom(from._impl_.map_sfixed64_sfixed64_);
  _this->_impl_.map_int32_float_.MergeFrom(from._impl_.map_int32_float_);
  _this->_impl_.map_int32_double_.MergeFrom(from._impl_.map_int32_double_);
  _this->_impl_.map_bool_bool_.MergeFrom(from._impl_.map_bool_bool_);
  _this->_impl_.map_string_string_.MergeFrom(from._impl_.map_string_string_);
  _this->_impl_.map_int32_bytes_.MergeFrom(from._impl_.map_int32_bytes_);
  _this->_impl_.map_int32_enum_.MergeFrom(from._impl_.map_int32_enum_);
  _this->_impl_.map_int32_foreign_message_.MergeFrom(from._impl_.map_int32_foreign_message_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestArenaMapLite::CopyFrom(const TestArenaMapLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestArenaMapLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestArenaMapLite::IsInitialized() const {
  return true;
}

void TestArenaMapLite::InternalSwap(TestArenaMapLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.map_int32_int32_.InternalSwap(&other->_impl_.map_int32_int32_);
  _impl_.map_int64_int64_.InternalSwap(&other->_impl_.map_int64_int64_);
  _impl_.map_uint32_uint32_.InternalSwap(&other->_impl_.map_uint32_uint32_);
  _impl_.map_uint64_uint64_.InternalSwap(&other->_impl_.map_uint64_uint64_);
  _impl_.map_sint32_sint32_.InternalSwap(&other->_impl_.map_sint32_sint32_);
  _impl_.map_sint64_sint64_.InternalSwap(&other->_impl_.map_sint64_sint64_);
  _impl_.map_fixed32_fixed32_.InternalSwap(&other->_impl_.map_fixed32_fixed32_);
  _impl_.map_fixed64_fixed64_.InternalSwap(&other->_impl_.map_fixed64_fixed64_);
  _impl_.map_sfixed32_sfixed32_.InternalSwap(&other->_impl_.map_sfixed32_sfixed32_);
  _impl_.map_sfixed64_sfixed64_.InternalSwap(&other->_impl_.map_sfixed64_sfixed64_);
  _impl_.map_int32_float_.InternalSwap(&other->_impl_.map_int32_float_);
  _impl_.map_int32_double_.InternalSwap(&other->_impl_.map_int32_double_);
  _impl_.map_bool_bool_.InternalSwap(&other->_impl_.map_bool_bool_);
  _impl_.map_string_string_.InternalSwap(&other->_impl_.map_string_string_);
  _impl_.map_int32_bytes_.InternalSwap(&other->_impl_.map_int32_bytes_);
  _impl_.map_int32_enum_.InternalSwap(&other->_impl_.map_int32_enum_);
  _impl_.map_int32_foreign_message_.InternalSwap(&other->_impl_.map_int32_foreign_message_);
}

std::string TestArenaMapLite::GetTypeName() const {
  return "protobuf_unittest.TestArenaMapLite";
}

// ===================================================================

TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::TestRequiredMessageMapLite_MapFieldEntry_DoNotUse() {}
TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::TestRequiredMessageMapLite_MapFieldEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::MergeFrom(const TestRequiredMessageMapLite_MapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestRequiredMessageMapLite::_Internal {
 public:
};

TestRequiredMessageMapLite::TestRequiredMessageMapLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredMessageMapLite)
}
TestRequiredMessageMapLite::TestRequiredMessageMapLite(const TestRequiredMessageMapLite& from) : ::google::protobuf::MessageLite() {
  TestRequiredMessageMapLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.map_field_.MergeFrom(from._impl_.map_field_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredMessageMapLite)
}
inline void TestRequiredMessageMapLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_field_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestRequiredMessageMapLite::~TestRequiredMessageMapLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredMessageMapLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestRequiredMessageMapLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_field_.~MapFieldLite();
}
void TestRequiredMessageMapLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequiredMessageMapLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredMessageMapLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_field_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestRequiredMessageMapLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 0, 2> TestRequiredMessageMapLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRequiredMessageMapLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, .protobuf_unittest.TestRequiredLite> map_field = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredMessageMapLite, _impl_.map_field_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestRequiredMessageMapLite()._impl_.map_field_)>(0, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::protobuf_unittest::TestRequiredLite>},
  }}, {{
  }},
};

::uint8_t* TestRequiredMessageMapLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredMessageMapLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, .protobuf_unittest.TestRequiredLite> map_field = 1;
  if (!_internal_map_field().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequiredLite>;
    using WireHelper = TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_field();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredMessageMapLite)
  return target;
}

::size_t TestRequiredMessageMapLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredMessageMapLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestRequiredLite> map_field = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_field_size());
  for (const auto& entry : _internal_map_field()) {
    total_size += TestRequiredMessageMapLite_MapFieldEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRequiredMessageMapLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestRequiredMessageMapLite*>(
      &from));
}

void TestRequiredMessageMapLite::MergeFrom(const TestRequiredMessageMapLite& from) {
  TestRequiredMessageMapLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredMessageMapLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_field_.MergeFrom(from._impl_.map_field_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestRequiredMessageMapLite::CopyFrom(const TestRequiredMessageMapLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredMessageMapLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredMessageMapLite::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_impl_.map_field_)) {
    return false;
  }
  return true;
}

void TestRequiredMessageMapLite::InternalSwap(TestRequiredMessageMapLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.map_field_.InternalSwap(&other->_impl_.map_field_);
}

std::string TestRequiredMessageMapLite::GetTypeName() const {
  return "protobuf_unittest.TestRequiredMessageMapLite";
}

// ===================================================================

TestEnumMapLite_KnownMapFieldEntry_DoNotUse::TestEnumMapLite_KnownMapFieldEntry_DoNotUse() {}
TestEnumMapLite_KnownMapFieldEntry_DoNotUse::TestEnumMapLite_KnownMapFieldEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestEnumMapLite_KnownMapFieldEntry_DoNotUse::MergeFrom(const TestEnumMapLite_KnownMapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapLite_UnknownMapFieldEntry_DoNotUse() {}
TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapLite_UnknownMapFieldEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::MergeFrom(const TestEnumMapLite_UnknownMapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestEnumMapLite::_Internal {
 public:
};

TestEnumMapLite::TestEnumMapLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEnumMapLite)
}
TestEnumMapLite::TestEnumMapLite(const TestEnumMapLite& from) : ::google::protobuf::MessageLite() {
  TestEnumMapLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.known_map_field_) */ {},
      /* decltype(_impl_.unknown_map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.known_map_field_.MergeFrom(from._impl_.known_map_field_);
  _this->_impl_.unknown_map_field_.MergeFrom(from._impl_.unknown_map_field_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEnumMapLite)
}
inline void TestEnumMapLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.known_map_field_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.unknown_map_field_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestEnumMapLite::~TestEnumMapLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEnumMapLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestEnumMapLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.known_map_field_.~MapFieldLite();
  _impl_.unknown_map_field_.~MapFieldLite();
}
void TestEnumMapLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEnumMapLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEnumMapLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.known_map_field_.Clear();
  _impl_.unknown_map_field_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestEnumMapLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 4, 0, 7> TestEnumMapLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    102, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestEnumMapLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    101, 0, 1,
    65532, 0,
    65535, 65535
  }}, {{
    // map<int32, .protobuf_unittest.Proto2MapEnumLite> known_map_field = 101;
    {PROTOBUF_FIELD_OFFSET(TestEnumMapLite, _impl_.known_map_field_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.Proto2MapEnumLite> unknown_map_field = 102;
    {PROTOBUF_FIELD_OFFSET(TestEnumMapLite, _impl_.unknown_map_field_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestEnumMapLite()._impl_.known_map_field_)>(0, 0, 1)},
    {::protobuf_unittest::Proto2MapEnumLite_IsValid},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestEnumMapLite()._impl_.unknown_map_field_)>(0, 0, 1)},
    {::protobuf_unittest::Proto2MapEnumLite_IsValid},
  }}, {{
  }},
};

::uint8_t* TestEnumMapLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEnumMapLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, .protobuf_unittest.Proto2MapEnumLite> known_map_field = 101;
  if (!_internal_known_map_field().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>;
    using WireHelper = TestEnumMapLite_KnownMapFieldEntry_DoNotUse::Funcs;
    const auto& field = _internal_known_map_field();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            101, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            101, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnumLite> unknown_map_field = 102;
  if (!_internal_unknown_map_field().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumLite>;
    using WireHelper = TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::Funcs;
    const auto& field = _internal_unknown_map_field();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            102, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            102, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEnumMapLite)
  return target;
}

::size_t TestEnumMapLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEnumMapLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.Proto2MapEnumLite> known_map_field = 101;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_known_map_field_size());
  for (const auto& entry : _internal_known_map_field()) {
    total_size += TestEnumMapLite_KnownMapFieldEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.Proto2MapEnumLite> unknown_map_field = 102;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_unknown_map_field_size());
  for (const auto& entry : _internal_unknown_map_field()) {
    total_size += TestEnumMapLite_UnknownMapFieldEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestEnumMapLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestEnumMapLite*>(
      &from));
}

void TestEnumMapLite::MergeFrom(const TestEnumMapLite& from) {
  TestEnumMapLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEnumMapLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.known_map_field_.MergeFrom(from._impl_.known_map_field_);
  _this->_impl_.unknown_map_field_.MergeFrom(from._impl_.unknown_map_field_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestEnumMapLite::CopyFrom(const TestEnumMapLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEnumMapLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEnumMapLite::IsInitialized() const {
  return true;
}

void TestEnumMapLite::InternalSwap(TestEnumMapLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.known_map_field_.InternalSwap(&other->_impl_.known_map_field_);
  _impl_.unknown_map_field_.InternalSwap(&other->_impl_.unknown_map_field_);
}

std::string TestEnumMapLite::GetTypeName() const {
  return "protobuf_unittest.TestEnumMapLite";
}

// ===================================================================

TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse() {}
TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::MergeFrom(const TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse() {}
TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::MergeFrom(const TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestEnumMapPlusExtraLite::_Internal {
 public:
};

TestEnumMapPlusExtraLite::TestEnumMapPlusExtraLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEnumMapPlusExtraLite)
}
TestEnumMapPlusExtraLite::TestEnumMapPlusExtraLite(const TestEnumMapPlusExtraLite& from) : ::google::protobuf::MessageLite() {
  TestEnumMapPlusExtraLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.known_map_field_) */ {},
      /* decltype(_impl_.unknown_map_field_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.known_map_field_.MergeFrom(from._impl_.known_map_field_);
  _this->_impl_.unknown_map_field_.MergeFrom(from._impl_.unknown_map_field_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEnumMapPlusExtraLite)
}
inline void TestEnumMapPlusExtraLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.known_map_field_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.unknown_map_field_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestEnumMapPlusExtraLite::~TestEnumMapPlusExtraLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEnumMapPlusExtraLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestEnumMapPlusExtraLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.known_map_field_.~MapFieldLite();
  _impl_.unknown_map_field_.~MapFieldLite();
}
void TestEnumMapPlusExtraLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEnumMapPlusExtraLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEnumMapPlusExtraLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.known_map_field_.Clear();
  _impl_.unknown_map_field_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestEnumMapPlusExtraLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 4, 0, 7> TestEnumMapPlusExtraLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    102, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestEnumMapPlusExtraLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    101, 0, 1,
    65532, 0,
    65535, 65535
  }}, {{
    // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> known_map_field = 101;
    {PROTOBUF_FIELD_OFFSET(TestEnumMapPlusExtraLite, _impl_.known_map_field_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> unknown_map_field = 102;
    {PROTOBUF_FIELD_OFFSET(TestEnumMapPlusExtraLite, _impl_.unknown_map_field_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestEnumMapPlusExtraLite()._impl_.known_map_field_)>(0, 0, 1)},
    {::protobuf_unittest::Proto2MapEnumPlusExtraLite_IsValid},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestEnumMapPlusExtraLite()._impl_.unknown_map_field_)>(0, 0, 1)},
    {::protobuf_unittest::Proto2MapEnumPlusExtraLite_IsValid},
  }}, {{
  }},
};

::uint8_t* TestEnumMapPlusExtraLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEnumMapPlusExtraLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> known_map_field = 101;
  if (!_internal_known_map_field().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>;
    using WireHelper = TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::Funcs;
    const auto& field = _internal_known_map_field();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            101, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            101, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> unknown_map_field = 102;
  if (!_internal_unknown_map_field().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::Proto2MapEnumPlusExtraLite>;
    using WireHelper = TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::Funcs;
    const auto& field = _internal_unknown_map_field();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            102, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            102, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEnumMapPlusExtraLite)
  return target;
}

::size_t TestEnumMapPlusExtraLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEnumMapPlusExtraLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> known_map_field = 101;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_known_map_field_size());
  for (const auto& entry : _internal_known_map_field()) {
    total_size += TestEnumMapPlusExtraLite_KnownMapFieldEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtraLite> unknown_map_field = 102;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_unknown_map_field_size());
  for (const auto& entry : _internal_unknown_map_field()) {
    total_size += TestEnumMapPlusExtraLite_UnknownMapFieldEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestEnumMapPlusExtraLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestEnumMapPlusExtraLite*>(
      &from));
}

void TestEnumMapPlusExtraLite::MergeFrom(const TestEnumMapPlusExtraLite& from) {
  TestEnumMapPlusExtraLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEnumMapPlusExtraLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.known_map_field_.MergeFrom(from._impl_.known_map_field_);
  _this->_impl_.unknown_map_field_.MergeFrom(from._impl_.unknown_map_field_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestEnumMapPlusExtraLite::CopyFrom(const TestEnumMapPlusExtraLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEnumMapPlusExtraLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEnumMapPlusExtraLite::IsInitialized() const {
  return true;
}

void TestEnumMapPlusExtraLite::InternalSwap(TestEnumMapPlusExtraLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.known_map_field_.InternalSwap(&other->_impl_.known_map_field_);
  _impl_.unknown_map_field_.InternalSwap(&other->_impl_.unknown_map_field_);
}

std::string TestEnumMapPlusExtraLite::GetTypeName() const {
  return "protobuf_unittest.TestEnumMapPlusExtraLite";
}

// ===================================================================

TestMessageMapLite_MapInt32MessageEntry_DoNotUse::TestMessageMapLite_MapInt32MessageEntry_DoNotUse() {}
TestMessageMapLite_MapInt32MessageEntry_DoNotUse::TestMessageMapLite_MapInt32MessageEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestMessageMapLite_MapInt32MessageEntry_DoNotUse::MergeFrom(const TestMessageMapLite_MapInt32MessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
// ===================================================================

class TestMessageMapLite::_Internal {
 public:
};

void TestMessageMapLite::clear_map_int32_message() {
  _impl_.map_int32_message_.Clear();
}
TestMessageMapLite::TestMessageMapLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageMapLite)
}
TestMessageMapLite::TestMessageMapLite(const TestMessageMapLite& from) : ::google::protobuf::MessageLite() {
  TestMessageMapLite* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_message_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.map_int32_message_.MergeFrom(from._impl_.map_int32_message_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageMapLite)
}
inline void TestMessageMapLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.map_int32_message_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestMessageMapLite::~TestMessageMapLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageMapLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestMessageMapLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_int32_message_.~MapFieldLite();
}
void TestMessageMapLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMessageMapLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageMapLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_int32_message_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestMessageMapLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 0, 2> TestMessageMapLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMessageMapLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, .protobuf_unittest.TestAllTypesLite> map_int32_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestMessageMapLite, _impl_.map_int32_message_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestMessageMapLite()._impl_.map_int32_message_)>(0, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::protobuf_unittest::TestAllTypesLite>},
  }}, {{
  }},
};

::uint8_t* TestMessageMapLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageMapLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, .protobuf_unittest.TestAllTypesLite> map_int32_message = 1;
  if (!_internal_map_int32_message().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypesLite>;
    using WireHelper = TestMessageMapLite_MapInt32MessageEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_int32_message();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageMapLite)
  return target;
}

::size_t TestMessageMapLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageMapLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .protobuf_unittest.TestAllTypesLite> map_int32_message = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_int32_message_size());
  for (const auto& entry : _internal_map_int32_message()) {
    total_size += TestMessageMapLite_MapInt32MessageEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessageMapLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestMessageMapLite*>(
      &from));
}

void TestMessageMapLite::MergeFrom(const TestMessageMapLite& from) {
  TestMessageMapLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageMapLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_int32_message_.MergeFrom(from._impl_.map_int32_message_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestMessageMapLite::CopyFrom(const TestMessageMapLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageMapLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMessageMapLite::IsInitialized() const {
  return true;
}

void TestMessageMapLite::InternalSwap(TestMessageMapLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.map_int32_message_.InternalSwap(&other->_impl_.map_int32_message_);
}

std::string TestMessageMapLite::GetTypeName() const {
  return "protobuf_unittest.TestMessageMapLite";
}

// ===================================================================

class TestRequiredLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRequiredLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_c(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

TestRequiredLite::TestRequiredLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredLite)
}
TestRequiredLite::TestRequiredLite(const TestRequiredLite& from)
    : ::google::protobuf::MessageLite(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredLite)
}
inline void TestRequiredLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
      decltype(_impl_.b_){0},
      decltype(_impl_.c_){0},
  };
}
TestRequiredLite::~TestRequiredLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestRequiredLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestRequiredLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequiredLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.c_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.c_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestRequiredLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TestRequiredLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestRequiredLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 a = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.a_)}},
    // required int32 b = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.b_)}},
    // required int32 c = 3;
    {::_pbi::TcParser::FastV32S1,
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 b = 2;
    {PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 c = 3;
    {PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.c_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestRequiredLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // required int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_b(), target);
  }

  // required int32 c = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredLite)
  return target;
}

::size_t TestRequiredLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required int32 a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

    // required int32 b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_b());
    }

    // required int32 c = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_c());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRequiredLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestRequiredLite*>(
      &from));
}

void TestRequiredLite::MergeFrom(const TestRequiredLite& from) {
  TestRequiredLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.c_ = from._impl_.c_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestRequiredLite::CopyFrom(const TestRequiredLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredLite::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TestRequiredLite::InternalSwap(TestRequiredLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.c_)
      + sizeof(TestRequiredLite::_impl_.c_)
      - PROTOBUF_FIELD_OFFSET(TestRequiredLite, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

std::string TestRequiredLite::GetTypeName() const {
  return "protobuf_unittest.TestRequiredLite";
}

// ===================================================================

class ForeignMessageArenaLite::_Internal {
 public:
  using HasBits = decltype(std::declval<ForeignMessageArenaLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ForeignMessageArenaLite, _impl_._has_bits_);
  static void set_has_c(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ForeignMessageArenaLite::ForeignMessageArenaLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.ForeignMessageArenaLite)
}
ForeignMessageArenaLite::ForeignMessageArenaLite(const ForeignMessageArenaLite& from)
    : ::google::protobuf::MessageLite(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ForeignMessageArenaLite)
}
inline void ForeignMessageArenaLite::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.c_){0},
  };
}
ForeignMessageArenaLite::~ForeignMessageArenaLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessageArenaLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void ForeignMessageArenaLite::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void ForeignMessageArenaLite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ForeignMessageArenaLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ForeignMessageArenaLite)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* ForeignMessageArenaLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ForeignMessageArenaLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ForeignMessageArenaLite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ForeignMessageArenaLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int32 c = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ForeignMessageArenaLite, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(ForeignMessageArenaLite, _impl_.c_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ForeignMessageArenaLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ForeignMessageArenaLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 c = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ForeignMessageArenaLite)
  return target;
}

::size_t ForeignMessageArenaLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ForeignMessageArenaLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 c = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_c());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForeignMessageArenaLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const ForeignMessageArenaLite*>(
      &from));
}

void ForeignMessageArenaLite::MergeFrom(const ForeignMessageArenaLite& from) {
  ForeignMessageArenaLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ForeignMessageArenaLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ForeignMessageArenaLite::CopyFrom(const ForeignMessageArenaLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ForeignMessageArenaLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ForeignMessageArenaLite::IsInitialized() const {
  return true;
}

void ForeignMessageArenaLite::InternalSwap(ForeignMessageArenaLite* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.c_, other->_impl_.c_);
}

std::string ForeignMessageArenaLite::GetTypeName() const {
  return "protobuf_unittest.ForeignMessageArenaLite";
}

#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestRequiredLite::kSingleFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestRequiredLite >, 11, false>
  TestRequiredLite::single(kSingleFieldNumber, ::protobuf_unittest::TestRequiredLite::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
