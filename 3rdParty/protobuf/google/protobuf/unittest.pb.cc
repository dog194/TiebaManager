// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest.proto

#include "google/protobuf/unittest.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "absl/strings/internal/string_constant.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {
        template <typename>
PROTOBUF_CONSTEXPR TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.bb_)*/ 0,
    } {}
struct TestAllTypes_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypes_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypes_NestedMessageDefaultTypeInternal() {}
  union {
    TestAllTypes_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypes_NestedMessageDefaultTypeInternal _TestAllTypes_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestAllTypes_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypes_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypes_OptionalGroupDefaultTypeInternal() {}
  union {
    TestAllTypes_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypes_OptionalGroupDefaultTypeInternal _TestAllTypes_OptionalGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestAllTypes_RepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypes_RepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypes_RepeatedGroupDefaultTypeInternal() {}
  union {
    TestAllTypes_RepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypes_RepeatedGroupDefaultTypeInternal _TestAllTypes_RepeatedGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestAllTypes::TestAllTypes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_int32_)*/ {},
      /*decltype(_impl_.repeated_int64_)*/ {},
      /*decltype(_impl_.repeated_uint32_)*/ {},
      /*decltype(_impl_.repeated_uint64_)*/ {},
      /*decltype(_impl_.repeated_sint32_)*/ {},
      /*decltype(_impl_.repeated_sint64_)*/ {},
      /*decltype(_impl_.repeated_fixed32_)*/ {},
      /*decltype(_impl_.repeated_fixed64_)*/ {},
      /*decltype(_impl_.repeated_sfixed32_)*/ {},
      /*decltype(_impl_.repeated_sfixed64_)*/ {},
      /*decltype(_impl_.repeated_float_)*/ {},
      /*decltype(_impl_.repeated_double_)*/ {},
      /*decltype(_impl_.repeated_bool_)*/ {},
      /*decltype(_impl_.repeated_string_)*/ {},
      /*decltype(_impl_.repeated_bytes_)*/ {},
      /*decltype(_impl_.repeatedgroup_)*/ {},
      /*decltype(_impl_.repeated_nested_message_)*/ {},
      /*decltype(_impl_.repeated_foreign_message_)*/ {},
      /*decltype(_impl_.repeated_import_message_)*/ {},
      /*decltype(_impl_.repeated_nested_enum_)*/ {},
      /*decltype(_impl_.repeated_foreign_enum_)*/ {},
      /*decltype(_impl_.repeated_import_enum_)*/ {},
      /*decltype(_impl_.repeated_string_piece_)*/ {},
      /*decltype(_impl_.repeated_cord_)*/ {},
      /*decltype(_impl_.repeated_lazy_message_)*/ {},
      /*decltype(_impl_.optional_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_bytes_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_string_piece_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_cord_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.default_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.default_bytes_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.default_string_piece_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.default_cord_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optionalgroup_)*/ nullptr,
      /*decltype(_impl_.optional_nested_message_)*/ nullptr,
      /*decltype(_impl_.optional_foreign_message_)*/ nullptr,
      /*decltype(_impl_.optional_import_message_)*/ nullptr,
      /*decltype(_impl_.optional_public_import_message_)*/ nullptr,
      /*decltype(_impl_.optional_lazy_message_)*/ nullptr,
      /*decltype(_impl_.optional_unverified_lazy_message_)*/ nullptr,
      /*decltype(_impl_.optional_int64_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int32_)*/ 0,
      /*decltype(_impl_.optional_uint32_)*/ 0u,
      /*decltype(_impl_.optional_uint64_)*/ ::uint64_t{0u},
      /*decltype(_impl_.optional_sint64_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_sint32_)*/ 0,
      /*decltype(_impl_.optional_fixed32_)*/ 0u,
      /*decltype(_impl_.optional_fixed64_)*/ ::uint64_t{0u},
      /*decltype(_impl_.optional_sfixed64_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_sfixed32_)*/ 0,
      /*decltype(_impl_.optional_float_)*/ 0,
      /*decltype(_impl_.optional_double_)*/ 0,
      /*decltype(_impl_.optional_bool_)*/ false,
      /*decltype(_impl_.default_import_enum_)*/ 8,
      /*decltype(_impl_.optional_nested_enum_)*/ 1,
      /*decltype(_impl_.optional_foreign_enum_)*/ 4,
      /*decltype(_impl_.optional_import_enum_)*/ 7,
      /*decltype(_impl_.default_int32_)*/ 41,
      /*decltype(_impl_.default_int64_)*/ ::int64_t{42},
      /*decltype(_impl_.default_uint64_)*/ ::uint64_t{44u},
      /*decltype(_impl_.default_uint32_)*/ 43u,
      /*decltype(_impl_.default_sint32_)*/ -45,
      /*decltype(_impl_.default_sint64_)*/ ::int64_t{46},
      /*decltype(_impl_.default_fixed64_)*/ ::uint64_t{48u},
      /*decltype(_impl_.default_fixed32_)*/ 47u,
      /*decltype(_impl_.default_sfixed32_)*/ 49,
      /*decltype(_impl_.default_sfixed64_)*/ ::int64_t{-50},
      /*decltype(_impl_.default_double_)*/ 52000,
      /*decltype(_impl_.default_float_)*/ 51.5f,
      /*decltype(_impl_.default_bool_)*/ true,
      /*decltype(_impl_.default_nested_enum_)*/ 2,
      /*decltype(_impl_.default_foreign_enum_)*/ 5,
      /*decltype(_impl_.oneof_field_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestAllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesDefaultTypeInternal() {}
  union {
    TestAllTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesDefaultTypeInternal _TestAllTypes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR NestedTestAllTypes::NestedTestAllTypes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_child_)*/ {},
      /*decltype(_impl_.child_)*/ nullptr,
      /*decltype(_impl_.payload_)*/ nullptr,
      /*decltype(_impl_.lazy_child_)*/ nullptr,
      /*decltype(_impl_.eager_child_)*/ nullptr,
    } {}
struct NestedTestAllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NestedTestAllTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NestedTestAllTypesDefaultTypeInternal() {}
  union {
    NestedTestAllTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NestedTestAllTypesDefaultTypeInternal _NestedTestAllTypes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDeprecatedFields::TestDeprecatedFields(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.deprecated_repeated_string_)*/ {},
      /*decltype(_impl_.deprecated_message_)*/ nullptr,
      /*decltype(_impl_.nested_)*/ nullptr,
      /*decltype(_impl_.deprecated_int32_)*/ 0,
      /*decltype(_impl_.oneof_fields_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestDeprecatedFieldsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDeprecatedFieldsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDeprecatedFieldsDefaultTypeInternal() {}
  union {
    TestDeprecatedFields _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDeprecatedFieldsDefaultTypeInternal _TestDeprecatedFields_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestDeprecatedMessage::TestDeprecatedMessage(::_pbi::ConstantInitialized) {}
struct TestDeprecatedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDeprecatedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDeprecatedMessageDefaultTypeInternal() {}
  union {
    TestDeprecatedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDeprecatedMessageDefaultTypeInternal _TestDeprecatedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ForeignMessage::ForeignMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.c_)*/ 0,
      /*decltype(_impl_.d_)*/ 0,
    } {}
struct ForeignMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForeignMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForeignMessageDefaultTypeInternal() {}
  union {
    ForeignMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForeignMessageDefaultTypeInternal _ForeignMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestReservedFields::TestReservedFields(::_pbi::ConstantInitialized) {}
struct TestReservedFieldsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestReservedFieldsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestReservedFieldsDefaultTypeInternal() {}
  union {
    TestReservedFields _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestReservedFieldsDefaultTypeInternal _TestReservedFields_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestAllExtensions::TestAllExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestAllExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllExtensionsDefaultTypeInternal() {}
  union {
    TestAllExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllExtensionsDefaultTypeInternal _TestAllExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionalGroup_extension::OptionalGroup_extension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct OptionalGroup_extensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionalGroup_extensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionalGroup_extensionDefaultTypeInternal() {}
  union {
    OptionalGroup_extension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionalGroup_extensionDefaultTypeInternal _OptionalGroup_extension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RepeatedGroup_extension::RepeatedGroup_extension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct RepeatedGroup_extensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepeatedGroup_extensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepeatedGroup_extensionDefaultTypeInternal() {}
  union {
    RepeatedGroup_extension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepeatedGroup_extensionDefaultTypeInternal _RepeatedGroup_extension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMixedFieldsAndExtensions::TestMixedFieldsAndExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.b_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestMixedFieldsAndExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMixedFieldsAndExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMixedFieldsAndExtensionsDefaultTypeInternal() {}
  union {
    TestMixedFieldsAndExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMixedFieldsAndExtensionsDefaultTypeInternal _TestMixedFieldsAndExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestGroup_OptionalGroup::TestGroup_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.zz_)*/ 0,
    } {}
struct TestGroup_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestGroup_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestGroup_OptionalGroupDefaultTypeInternal() {}
  union {
    TestGroup_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestGroup_OptionalGroupDefaultTypeInternal _TestGroup_OptionalGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestGroup::TestGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optionalgroup_)*/ nullptr,
      /*decltype(_impl_.optional_foreign_enum_)*/ 4,
    } {}
struct TestGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestGroupDefaultTypeInternal() {}
  union {
    TestGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestGroupDefaultTypeInternal _TestGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestGroupExtension::TestGroupExtension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestGroupExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestGroupExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestGroupExtensionDefaultTypeInternal() {}
  union {
    TestGroupExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestGroupExtensionDefaultTypeInternal _TestGroupExtension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedExtension_OptionalGroup_extension::TestNestedExtension_OptionalGroup_extension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal() {}
  union {
    TestNestedExtension_OptionalGroup_extension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedExtension_OptionalGroup_extensionDefaultTypeInternal _TestNestedExtension_OptionalGroup_extension_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestNestedExtension::TestNestedExtension(::_pbi::ConstantInitialized) {}
struct TestNestedExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedExtensionDefaultTypeInternal() {}
  union {
    TestNestedExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedExtensionDefaultTypeInternal _TestNestedExtension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestChildExtension::TestChildExtension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.b_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_extension_)*/ nullptr,
    } {}
struct TestChildExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestChildExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestChildExtensionDefaultTypeInternal() {}
  union {
    TestChildExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestChildExtensionDefaultTypeInternal _TestChildExtension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.b_)*/ 0,
    } {}
struct TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal() {}
  union {
    TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensionsDefaultTypeInternal _TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsData::TestChildExtensionData_NestedTestAllExtensionsData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dynamic_)*/ nullptr,
    } {}
struct TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal() {}
  union {
    TestChildExtensionData_NestedTestAllExtensionsData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestChildExtensionData_NestedTestAllExtensionsDataDefaultTypeInternal _TestChildExtensionData_NestedTestAllExtensionsData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestChildExtensionData::TestChildExtensionData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.b_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_extension_)*/ nullptr,
    } {}
struct TestChildExtensionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestChildExtensionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestChildExtensionDataDefaultTypeInternal() {}
  union {
    TestChildExtensionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestChildExtensionDataDefaultTypeInternal _TestChildExtensionData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedChildExtension::TestNestedChildExtension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.child_)*/ nullptr,
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestNestedChildExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedChildExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedChildExtensionDefaultTypeInternal() {}
  union {
    TestNestedChildExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedChildExtensionDefaultTypeInternal _TestNestedChildExtension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedChildExtensionData::TestNestedChildExtensionData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.child_)*/ nullptr,
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestNestedChildExtensionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedChildExtensionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedChildExtensionDataDefaultTypeInternal() {}
  union {
    TestNestedChildExtensionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedChildExtensionDataDefaultTypeInternal _TestNestedChildExtensionData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequired::TestRequired(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_foreign_)*/ nullptr,
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.dummy2_)*/ 0,
      /*decltype(_impl_.b_)*/ 0,
      /*decltype(_impl_.dummy4_)*/ 0,
      /*decltype(_impl_.dummy5_)*/ 0,
      /*decltype(_impl_.dummy6_)*/ 0,
      /*decltype(_impl_.dummy7_)*/ 0,
      /*decltype(_impl_.dummy8_)*/ 0,
      /*decltype(_impl_.dummy9_)*/ 0,
      /*decltype(_impl_.dummy10_)*/ 0,
      /*decltype(_impl_.dummy11_)*/ 0,
      /*decltype(_impl_.dummy12_)*/ 0,
      /*decltype(_impl_.dummy13_)*/ 0,
      /*decltype(_impl_.dummy14_)*/ 0,
      /*decltype(_impl_.dummy15_)*/ 0,
      /*decltype(_impl_.dummy16_)*/ 0,
      /*decltype(_impl_.dummy17_)*/ 0,
      /*decltype(_impl_.dummy18_)*/ 0,
      /*decltype(_impl_.dummy19_)*/ 0,
      /*decltype(_impl_.dummy20_)*/ 0,
      /*decltype(_impl_.dummy21_)*/ 0,
      /*decltype(_impl_.dummy22_)*/ 0,
      /*decltype(_impl_.dummy23_)*/ 0,
      /*decltype(_impl_.dummy24_)*/ 0,
      /*decltype(_impl_.dummy25_)*/ 0,
      /*decltype(_impl_.dummy26_)*/ 0,
      /*decltype(_impl_.dummy27_)*/ 0,
      /*decltype(_impl_.dummy28_)*/ 0,
      /*decltype(_impl_.dummy29_)*/ 0,
      /*decltype(_impl_.dummy30_)*/ 0,
      /*decltype(_impl_.dummy31_)*/ 0,
      /*decltype(_impl_.dummy32_)*/ 0,
      /*decltype(_impl_.c_)*/ 0,
    } {}
struct TestRequiredDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredDefaultTypeInternal() {}
  union {
    TestRequired _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredDefaultTypeInternal _TestRequired_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredForeign::TestRequiredForeign(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_message_)*/ {},
      /*decltype(_impl_.optional_message_)*/ nullptr,
      /*decltype(_impl_.optional_lazy_message_)*/ nullptr,
      /*decltype(_impl_.dummy_)*/ 0,
    } {}
struct TestRequiredForeignDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredForeignDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredForeignDefaultTypeInternal() {}
  union {
    TestRequiredForeign _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredForeignDefaultTypeInternal _TestRequiredForeign_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredMessage::TestRequiredMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_message_)*/ {},
      /*decltype(_impl_.optional_message_)*/ nullptr,
      /*decltype(_impl_.required_message_)*/ nullptr,
    } {}
struct TestRequiredMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredMessageDefaultTypeInternal() {}
  union {
    TestRequiredMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredMessageDefaultTypeInternal _TestRequiredMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedRequiredForeign::TestNestedRequiredForeign(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.child_)*/ nullptr,
      /*decltype(_impl_.payload_)*/ nullptr,
      /*decltype(_impl_.dummy_)*/ 0,
    } {}
struct TestNestedRequiredForeignDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedRequiredForeignDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedRequiredForeignDefaultTypeInternal() {}
  union {
    TestNestedRequiredForeign _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedRequiredForeignDefaultTypeInternal _TestNestedRequiredForeign_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestForeignNested::TestForeignNested(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.foreign_nested_)*/ nullptr,
    } {}
struct TestForeignNestedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestForeignNestedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestForeignNestedDefaultTypeInternal() {}
  union {
    TestForeignNested _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestForeignNestedDefaultTypeInternal _TestForeignNested_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestEmptyMessage::TestEmptyMessage(::_pbi::ConstantInitialized) {}
struct TestEmptyMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmptyMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmptyMessageDefaultTypeInternal() {}
  union {
    TestEmptyMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmptyMessageDefaultTypeInternal _TestEmptyMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestEmptyMessageWithExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmptyMessageWithExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmptyMessageWithExtensionsDefaultTypeInternal() {}
  union {
    TestEmptyMessageWithExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmptyMessageWithExtensionsDefaultTypeInternal _TestEmptyMessageWithExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.cc_)*/ 0,
    } {}
struct TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage_NestedMessage_NestedNestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessage_NestedMessage_NestedNestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.bb_)*/ 0,
    } {}
struct TestPickleNestedMessage_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessage_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessage_NestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessage_NestedMessageDefaultTypeInternal _TestPickleNestedMessage_NestedMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestPickleNestedMessage::TestPickleNestedMessage(::_pbi::ConstantInitialized) {}
struct TestPickleNestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPickleNestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPickleNestedMessageDefaultTypeInternal() {}
  union {
    TestPickleNestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPickleNestedMessageDefaultTypeInternal _TestPickleNestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMultipleExtensionRanges::TestMultipleExtensionRanges(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestMultipleExtensionRangesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMultipleExtensionRangesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMultipleExtensionRangesDefaultTypeInternal() {}
  union {
    TestMultipleExtensionRanges _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMultipleExtensionRangesDefaultTypeInternal _TestMultipleExtensionRanges_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestReallyLargeTagNumber::TestReallyLargeTagNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
      /*decltype(_impl_.bb_)*/ 0,
    } {}
struct TestReallyLargeTagNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestReallyLargeTagNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestReallyLargeTagNumberDefaultTypeInternal() {}
  union {
    TestReallyLargeTagNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestReallyLargeTagNumberDefaultTypeInternal _TestReallyLargeTagNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRecursiveMessage::TestRecursiveMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ nullptr,
      /*decltype(_impl_.i_)*/ 0,
    } {}
struct TestRecursiveMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRecursiveMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRecursiveMessageDefaultTypeInternal() {}
  union {
    TestRecursiveMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRecursiveMessageDefaultTypeInternal _TestRecursiveMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMutualRecursionA_SubMessage::TestMutualRecursionA_SubMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.b_)*/ nullptr,
    } {}
struct TestMutualRecursionA_SubMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMutualRecursionA_SubMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMutualRecursionA_SubMessageDefaultTypeInternal() {}
  union {
    TestMutualRecursionA_SubMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMutualRecursionA_SubMessageDefaultTypeInternal _TestMutualRecursionA_SubMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroup::TestMutualRecursionA_SubGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sub_message_)*/ nullptr,
      /*decltype(_impl_.not_in_this_scc_)*/ nullptr,
    } {}
struct TestMutualRecursionA_SubGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMutualRecursionA_SubGroupDefaultTypeInternal() {}
  union {
    TestMutualRecursionA_SubGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMutualRecursionA_SubGroupDefaultTypeInternal _TestMutualRecursionA_SubGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroupR::TestMutualRecursionA_SubGroupR(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.payload_)*/ nullptr,
    } {}
struct TestMutualRecursionA_SubGroupRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMutualRecursionA_SubGroupRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMutualRecursionA_SubGroupRDefaultTypeInternal() {}
  union {
    TestMutualRecursionA_SubGroupR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMutualRecursionA_SubGroupRDefaultTypeInternal _TestMutualRecursionA_SubGroupR_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMutualRecursionA::TestMutualRecursionA(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.subgroupr_)*/ {},
      /*decltype(_impl_.bb_)*/ nullptr,
      /*decltype(_impl_.subgroup_)*/ nullptr,
    } {}
struct TestMutualRecursionADefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMutualRecursionADefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMutualRecursionADefaultTypeInternal() {}
  union {
    TestMutualRecursionA _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMutualRecursionADefaultTypeInternal _TestMutualRecursionA_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMutualRecursionB::TestMutualRecursionB(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ nullptr,
      /*decltype(_impl_.optional_int32_)*/ 0,
    } {}
struct TestMutualRecursionBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMutualRecursionBDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMutualRecursionBDefaultTypeInternal() {}
  union {
    TestMutualRecursionB _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMutualRecursionBDefaultTypeInternal _TestMutualRecursionB_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestIsInitialized_SubMessage_SubGroup::TestIsInitialized_SubMessage_SubGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.i_)*/ 0,
    } {}
struct TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal() {}
  union {
    TestIsInitialized_SubMessage_SubGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestIsInitialized_SubMessage_SubGroupDefaultTypeInternal _TestIsInitialized_SubMessage_SubGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestIsInitialized_SubMessage::TestIsInitialized_SubMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.subgroup_)*/ nullptr,
    } {}
struct TestIsInitialized_SubMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestIsInitialized_SubMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestIsInitialized_SubMessageDefaultTypeInternal() {}
  union {
    TestIsInitialized_SubMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestIsInitialized_SubMessageDefaultTypeInternal _TestIsInitialized_SubMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestIsInitialized::TestIsInitialized(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sub_message_)*/ nullptr,
    } {}
struct TestIsInitializedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestIsInitializedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestIsInitializedDefaultTypeInternal() {}
  union {
    TestIsInitialized _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestIsInitializedDefaultTypeInternal _TestIsInitialized_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestDupFieldNumber_FooDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDupFieldNumber_FooDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDupFieldNumber_FooDefaultTypeInternal() {}
  union {
    TestDupFieldNumber_Foo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDupFieldNumber_FooDefaultTypeInternal _TestDupFieldNumber_Foo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestDupFieldNumber_BarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDupFieldNumber_BarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDupFieldNumber_BarDefaultTypeInternal() {}
  union {
    TestDupFieldNumber_Bar _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDupFieldNumber_BarDefaultTypeInternal _TestDupFieldNumber_Bar_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDupFieldNumber::TestDupFieldNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.foo_)*/ nullptr,
      /*decltype(_impl_.bar_)*/ nullptr,
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestDupFieldNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDupFieldNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDupFieldNumberDefaultTypeInternal() {}
  union {
    TestDupFieldNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDupFieldNumberDefaultTypeInternal _TestDupFieldNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEagerMessage::TestEagerMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sub_message_)*/ nullptr,
    } {}
struct TestEagerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEagerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEagerMessageDefaultTypeInternal() {}
  union {
    TestEagerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEagerMessageDefaultTypeInternal _TestEagerMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestLazyMessage::TestLazyMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sub_message_)*/ nullptr,
    } {}
struct TestLazyMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestLazyMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestLazyMessageDefaultTypeInternal() {}
  union {
    TestLazyMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestLazyMessageDefaultTypeInternal _TestLazyMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestLazyMessageRepeated::TestLazyMessageRepeated(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.repeated_message_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestLazyMessageRepeatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestLazyMessageRepeatedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestLazyMessageRepeatedDefaultTypeInternal() {}
  union {
    TestLazyMessageRepeated _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestLazyMessageRepeatedDefaultTypeInternal _TestLazyMessageRepeated_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEagerMaybeLazy_NestedMessage::TestEagerMaybeLazy_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.packed_)*/ nullptr,
    } {}
struct TestEagerMaybeLazy_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEagerMaybeLazy_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEagerMaybeLazy_NestedMessageDefaultTypeInternal() {}
  union {
    TestEagerMaybeLazy_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEagerMaybeLazy_NestedMessageDefaultTypeInternal _TestEagerMaybeLazy_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestEagerMaybeLazy::TestEagerMaybeLazy(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.message_foo_)*/ nullptr,
      /*decltype(_impl_.message_bar_)*/ nullptr,
      /*decltype(_impl_.message_baz_)*/ nullptr,
    } {}
struct TestEagerMaybeLazyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEagerMaybeLazyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEagerMaybeLazyDefaultTypeInternal() {}
  union {
    TestEagerMaybeLazy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEagerMaybeLazyDefaultTypeInternal _TestEagerMaybeLazy_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.nestedmessage_repeated_int32_)*/ {},
      /*decltype(_impl_.nestedmessage_repeated_foreignmessage_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestNestedMessageHasBits_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedMessageHasBits_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedMessageHasBits_NestedMessageDefaultTypeInternal() {}
  union {
    TestNestedMessageHasBits_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedMessageHasBits_NestedMessageDefaultTypeInternal _TestNestedMessageHasBits_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedMessageHasBits::TestNestedMessageHasBits(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_nested_message_)*/ nullptr,
    } {}
struct TestNestedMessageHasBitsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedMessageHasBitsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedMessageHasBitsDefaultTypeInternal() {}
  union {
    TestNestedMessageHasBits _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedMessageHasBitsDefaultTypeInternal _TestNestedMessageHasBits_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestCamelCaseFieldNames::TestCamelCaseFieldNames(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeatedprimitivefield_)*/ {},
      /*decltype(_impl_.repeatedstringfield_)*/ {},
      /*decltype(_impl_.repeatedenumfield_)*/ {},
      /*decltype(_impl_.repeatedmessagefield_)*/ {},
      /*decltype(_impl_.repeatedstringpiecefield_)*/ {},
      /*decltype(_impl_.repeatedcordfield_)*/ {},
      /*decltype(_impl_.stringfield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.stringpiecefield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cordfield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.messagefield_)*/ nullptr,
      /*decltype(_impl_.primitivefield_)*/ 0,
      /*decltype(_impl_.enumfield_)*/ 4,
    } {}
struct TestCamelCaseFieldNamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestCamelCaseFieldNamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestCamelCaseFieldNamesDefaultTypeInternal() {}
  union {
    TestCamelCaseFieldNames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestCamelCaseFieldNamesDefaultTypeInternal _TestCamelCaseFieldNames_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.oo_)*/ ::int64_t{0},
      /*decltype(_impl_.bb_)*/ 0,
    } {}
struct TestFieldOrderings_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestFieldOrderings_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestFieldOrderings_NestedMessageDefaultTypeInternal() {}
  union {
    TestFieldOrderings_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestFieldOrderings_NestedMessageDefaultTypeInternal _TestFieldOrderings_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestFieldOrderings::TestFieldOrderings(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.my_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_nested_message_)*/ nullptr,
      /*decltype(_impl_.my_int_)*/ ::int64_t{0},
      /*decltype(_impl_.my_float_)*/ 0,
    } {}
struct TestFieldOrderingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestFieldOrderingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestFieldOrderingsDefaultTypeInternal() {}
  union {
    TestFieldOrderings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestFieldOrderingsDefaultTypeInternal _TestFieldOrderings_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtensionOrderings1::TestExtensionOrderings1(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.my_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestExtensionOrderings1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtensionOrderings1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtensionOrderings1DefaultTypeInternal() {}
  union {
    TestExtensionOrderings1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtensionOrderings1DefaultTypeInternal _TestExtensionOrderings1_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtensionOrderings2_TestExtensionOrderings3::TestExtensionOrderings2_TestExtensionOrderings3(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.my_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal() {}
  union {
    TestExtensionOrderings2_TestExtensionOrderings3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtensionOrderings2_TestExtensionOrderings3DefaultTypeInternal _TestExtensionOrderings2_TestExtensionOrderings3_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtensionOrderings2::TestExtensionOrderings2(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.my_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestExtensionOrderings2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtensionOrderings2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtensionOrderings2DefaultTypeInternal() {}
  union {
    TestExtensionOrderings2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtensionOrderings2DefaultTypeInternal _TestExtensionOrderings2_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtremeDefaultValues::TestExtremeDefaultValues(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.escaped_bytes_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.utf8_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cpp_trigraph_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.string_with_zero_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bytes_with_zero_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.string_piece_with_zero_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cord_with_zero_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.replacement_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.zero_float_)*/ 0,
      /*decltype(_impl_.large_uint64_)*/ ::uint64_t{18446744073709551615u},
      /*decltype(_impl_.large_uint32_)*/ 4294967295u,
      /*decltype(_impl_.small_int32_)*/ -2147483647,
      /*decltype(_impl_.small_int64_)*/ ::int64_t{-9223372036854775807},
      /*decltype(_impl_.one_float_)*/ 1,
      /*decltype(_impl_.small_float_)*/ 1.5f,
      /*decltype(_impl_.negative_one_float_)*/ -1,
      /*decltype(_impl_.negative_float_)*/ -1.5f,
      /*decltype(_impl_.large_float_)*/ 2e+08f,
      /*decltype(_impl_.small_negative_float_)*/ -8e-28f,
      /*decltype(_impl_.inf_double_)*/ std::numeric_limits<double>::infinity(),
      /*decltype(_impl_.neg_inf_double_)*/ -std::numeric_limits<double>::infinity(),
      /*decltype(_impl_.nan_double_)*/ std::numeric_limits<double>::quiet_NaN(),
      /*decltype(_impl_.inf_float_)*/ std::numeric_limits<float>::infinity(),
      /*decltype(_impl_.neg_inf_float_)*/ -std::numeric_limits<float>::infinity(),
      /*decltype(_impl_.nan_float_)*/ std::numeric_limits<float>::quiet_NaN(),
      /*decltype(_impl_.really_small_int32_)*/ -2147483647 - 1,
      /*decltype(_impl_.really_small_int64_)*/ ::int64_t{-9223372036854775807} - 1,
    } {}
struct TestExtremeDefaultValuesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtremeDefaultValuesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtremeDefaultValuesDefaultTypeInternal() {}
  union {
    TestExtremeDefaultValues _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtremeDefaultValuesDefaultTypeInternal _TestExtremeDefaultValues_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SparseEnumMessage::SparseEnumMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.sparse_enum_)*/ 123,
    } {}
struct SparseEnumMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SparseEnumMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SparseEnumMessageDefaultTypeInternal() {}
  union {
    SparseEnumMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SparseEnumMessageDefaultTypeInternal _SparseEnumMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OneString::OneString(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct OneStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneStringDefaultTypeInternal() {}
  union {
    OneString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneStringDefaultTypeInternal _OneString_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MoreString::MoreString(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoreStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoreStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoreStringDefaultTypeInternal() {}
  union {
    MoreString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoreStringDefaultTypeInternal _MoreString_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OneBytes::OneBytes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct OneBytesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneBytesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneBytesDefaultTypeInternal() {}
  union {
    OneBytes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneBytesDefaultTypeInternal _OneBytes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MoreBytes::MoreBytes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MoreBytesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoreBytesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoreBytesDefaultTypeInternal() {}
  union {
    MoreBytes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoreBytesDefaultTypeInternal _MoreBytes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ManyOptionalString::ManyOptionalString(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.str1_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str2_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str3_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str4_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str5_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str6_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str7_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str8_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str9_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str10_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str11_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str12_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str13_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str14_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str15_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str16_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str17_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str18_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str19_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str20_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str21_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str22_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str23_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str24_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str25_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str26_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str27_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str28_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str29_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str30_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str31_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str32_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct ManyOptionalStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManyOptionalStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManyOptionalStringDefaultTypeInternal() {}
  union {
    ManyOptionalString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManyOptionalStringDefaultTypeInternal _ManyOptionalString_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int32Message::Int32Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ 0,
    } {}
struct Int32MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int32MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int32MessageDefaultTypeInternal() {}
  union {
    Int32Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int32MessageDefaultTypeInternal _Int32Message_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Uint32Message::Uint32Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ 0u,
    } {}
struct Uint32MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Uint32MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Uint32MessageDefaultTypeInternal() {}
  union {
    Uint32Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Uint32MessageDefaultTypeInternal _Uint32Message_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int64Message::Int64Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ ::int64_t{0},
    } {}
struct Int64MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64MessageDefaultTypeInternal() {}
  union {
    Int64Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64MessageDefaultTypeInternal _Int64Message_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Uint64Message::Uint64Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ ::uint64_t{0u},
    } {}
struct Uint64MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Uint64MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Uint64MessageDefaultTypeInternal() {}
  union {
    Uint64Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Uint64MessageDefaultTypeInternal _Uint64Message_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BoolMessage::BoolMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.data_)*/ false,
    } {}
struct BoolMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolMessageDefaultTypeInternal() {}
  union {
    BoolMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolMessageDefaultTypeInternal _BoolMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneof_FooGroup::TestOneof_FooGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.b_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestOneof_FooGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneof_FooGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneof_FooGroupDefaultTypeInternal() {}
  union {
    TestOneof_FooGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneof_FooGroupDefaultTypeInternal _TestOneof_FooGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneof::TestOneof(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.foo_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestOneofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneofDefaultTypeInternal() {}
  union {
    TestOneof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneofDefaultTypeInternal _TestOneof_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.b_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal() {}
  union {
    TestOneofBackwardsCompatible_FooGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneofBackwardsCompatible_FooGroupDefaultTypeInternal _TestOneofBackwardsCompatible_FooGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.foo_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.foo_message_)*/ nullptr,
      /*decltype(_impl_.foogroup_)*/ nullptr,
      /*decltype(_impl_.foo_int_)*/ 0,
    } {}
struct TestOneofBackwardsCompatibleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneofBackwardsCompatibleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneofBackwardsCompatibleDefaultTypeInternal() {}
  union {
    TestOneofBackwardsCompatible _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneofBackwardsCompatibleDefaultTypeInternal _TestOneofBackwardsCompatible_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneof2_FooGroup::TestOneof2_FooGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.b_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.a_)*/ 0,
    } {}
struct TestOneof2_FooGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneof2_FooGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneof2_FooGroupDefaultTypeInternal() {}
  union {
    TestOneof2_FooGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneof2_FooGroupDefaultTypeInternal _TestOneof2_FooGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneof2_NestedMessage::TestOneof2_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.corge_int_)*/ {},
      /*decltype(_impl_.moo_int_)*/ ::int64_t{0},
    } {}
struct TestOneof2_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneof2_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneof2_NestedMessageDefaultTypeInternal() {}
  union {
    TestOneof2_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneof2_NestedMessageDefaultTypeInternal _TestOneof2_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestOneof2::TestOneof2(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.baz_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.baz_int_)*/ 0,
      /*decltype(_impl_.foo_)*/ {},
      /*decltype(_impl_.bar_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestOneof2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneof2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneof2DefaultTypeInternal() {}
  union {
    TestOneof2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneof2DefaultTypeInternal _TestOneof2_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.required_double_)*/ 0,
    } {}
struct TestRequiredOneof_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredOneof_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredOneof_NestedMessageDefaultTypeInternal() {}
  union {
    TestRequiredOneof_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredOneof_NestedMessageDefaultTypeInternal _TestRequiredOneof_NestedMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRequiredOneof::TestRequiredOneof(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.foo_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestRequiredOneofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRequiredOneofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRequiredOneofDefaultTypeInternal() {}
  union {
    TestRequiredOneof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRequiredOneofDefaultTypeInternal _TestRequiredOneof_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestPackedTypes::TestPackedTypes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.packed_int32_)*/ {},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_int64_)*/ {},
      /* _impl_._packed_int64_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_uint32_)*/ {},
      /* _impl_._packed_uint32_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_uint64_)*/ {},
      /* _impl_._packed_uint64_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_sint32_)*/ {},
      /* _impl_._packed_sint32_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_sint64_)*/ {},
      /* _impl_._packed_sint64_cached_byte_size_ = */ {0},
      /*decltype(_impl_.packed_fixed32_)*/ {},
      /*decltype(_impl_.packed_fixed64_)*/ {},
      /*decltype(_impl_.packed_sfixed32_)*/ {},
      /*decltype(_impl_.packed_sfixed64_)*/ {},
      /*decltype(_impl_.packed_float_)*/ {},
      /*decltype(_impl_.packed_double_)*/ {},
      /*decltype(_impl_.packed_bool_)*/ {},
      /*decltype(_impl_.packed_enum_)*/ {},
      /*decltype(_impl_._packed_enum_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestPackedTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedTypesDefaultTypeInternal() {}
  union {
    TestPackedTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedTypesDefaultTypeInternal _TestPackedTypes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestUnpackedTypes::TestUnpackedTypes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.unpacked_int32_)*/ {},
      /*decltype(_impl_.unpacked_int64_)*/ {},
      /*decltype(_impl_.unpacked_uint32_)*/ {},
      /*decltype(_impl_.unpacked_uint64_)*/ {},
      /*decltype(_impl_.unpacked_sint32_)*/ {},
      /*decltype(_impl_.unpacked_sint64_)*/ {},
      /*decltype(_impl_.unpacked_fixed32_)*/ {},
      /*decltype(_impl_.unpacked_fixed64_)*/ {},
      /*decltype(_impl_.unpacked_sfixed32_)*/ {},
      /*decltype(_impl_.unpacked_sfixed64_)*/ {},
      /*decltype(_impl_.unpacked_float_)*/ {},
      /*decltype(_impl_.unpacked_double_)*/ {},
      /*decltype(_impl_.unpacked_bool_)*/ {},
      /*decltype(_impl_.unpacked_enum_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestUnpackedTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestUnpackedTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestUnpackedTypesDefaultTypeInternal() {}
  union {
    TestUnpackedTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestUnpackedTypesDefaultTypeInternal _TestUnpackedTypes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestPackedExtensions::TestPackedExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestPackedExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedExtensionsDefaultTypeInternal() {}
  union {
    TestPackedExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedExtensionsDefaultTypeInternal _TestPackedExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestUnpackedExtensions::TestUnpackedExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestUnpackedExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestUnpackedExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestUnpackedExtensionsDefaultTypeInternal() {}
  union {
    TestUnpackedExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestUnpackedExtensionsDefaultTypeInternal _TestUnpackedExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.dynamic_field_)*/ 0,
    } {}
struct TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal() {}
  union {
    TestDynamicExtensions_DynamicMessageType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDynamicExtensions_DynamicMessageTypeDefaultTypeInternal _TestDynamicExtensions_DynamicMessageType_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestDynamicExtensions::TestDynamicExtensions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_extension_)*/ {},
      /*decltype(_impl_.packed_extension_)*/ {},
      /* _impl_._packed_extension_cached_byte_size_ = */ {0},
      /*decltype(_impl_.message_extension_)*/ nullptr,
      /*decltype(_impl_.dynamic_message_extension_)*/ nullptr,
      /*decltype(_impl_.scalar_extension_)*/ 0u,
      /*decltype(_impl_.enum_extension_)*/ 4,
      /*decltype(_impl_.dynamic_enum_extension_)*/ 2200,
    } {}
struct TestDynamicExtensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDynamicExtensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDynamicExtensionsDefaultTypeInternal() {}
  union {
    TestDynamicExtensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDynamicExtensionsDefaultTypeInternal _TestDynamicExtensions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRepeatedString::TestRepeatedString(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.repeated_string1_)*/ {},
      /*decltype(_impl_.repeated_string2_)*/ {},
      /*decltype(_impl_.repeated_bytes11_)*/ {},
      /*decltype(_impl_.repeated_bytes12_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestRepeatedStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRepeatedStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRepeatedStringDefaultTypeInternal() {}
  union {
    TestRepeatedString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRepeatedStringDefaultTypeInternal _TestRepeatedString_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.repeated_fixed32_)*/ {},
      /*decltype(_impl_.repeated_int32_)*/ {},
      /*decltype(_impl_.repeated_fixed64_)*/ {},
      /*decltype(_impl_.repeated_int64_)*/ {},
      /*decltype(_impl_.repeated_float_)*/ {},
      /*decltype(_impl_.repeated_uint64_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestRepeatedScalarDifferentTagSizesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestRepeatedScalarDifferentTagSizesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestRepeatedScalarDifferentTagSizesDefaultTypeInternal() {}
  union {
    TestRepeatedScalarDifferentTagSizes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestRepeatedScalarDifferentTagSizesDefaultTypeInternal _TestRepeatedScalarDifferentTagSizes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.field1_)*/ nullptr,
    } {}
struct TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal() {}
  union {
    TestParsingMerge_RepeatedFieldsGenerator_Group1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMerge_RepeatedFieldsGenerator_Group1DefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.field1_)*/ nullptr,
    } {}
struct TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal() {}
  union {
    TestParsingMerge_RepeatedFieldsGenerator_Group2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMerge_RepeatedFieldsGenerator_Group2DefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.field1_)*/ {},
      /*decltype(_impl_.field2_)*/ {},
      /*decltype(_impl_.field3_)*/ {},
      /*decltype(_impl_.group1_)*/ {},
      /*decltype(_impl_.group2_)*/ {},
      /*decltype(_impl_.ext1_)*/ {},
      /*decltype(_impl_.ext2_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal() {}
  union {
    TestParsingMerge_RepeatedFieldsGenerator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMerge_RepeatedFieldsGeneratorDefaultTypeInternal _TestParsingMerge_RepeatedFieldsGenerator_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_group_all_types_)*/ nullptr,
    } {}
struct TestParsingMerge_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMerge_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMerge_OptionalGroupDefaultTypeInternal() {}
  union {
    TestParsingMerge_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMerge_OptionalGroupDefaultTypeInternal _TestParsingMerge_OptionalGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_group_all_types_)*/ nullptr,
    } {}
struct TestParsingMerge_RepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMerge_RepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMerge_RepeatedGroupDefaultTypeInternal() {}
  union {
    TestParsingMerge_RepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMerge_RepeatedGroupDefaultTypeInternal _TestParsingMerge_RepeatedGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestParsingMerge::TestParsingMerge(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.repeatedgroup_)*/ {},
      /*decltype(_impl_.required_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optionalgroup_)*/ nullptr,
    } {}
struct TestParsingMergeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeDefaultTypeInternal() {}
  union {
    TestParsingMerge _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeDefaultTypeInternal _TestParsingMerge_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMergeException::TestMergeException(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.all_extensions_)*/ nullptr,
    } {}
struct TestMergeExceptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMergeExceptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMergeExceptionDefaultTypeInternal() {}
  union {
    TestMergeException _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMergeExceptionDefaultTypeInternal _TestMergeException_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestCommentInjectionMessage::TestCommentInjectionMessage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.a_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestCommentInjectionMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestCommentInjectionMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestCommentInjectionMessageDefaultTypeInternal() {}
  union {
    TestCommentInjectionMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestCommentInjectionMessageDefaultTypeInternal _TestCommentInjectionMessage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestMessageSize::TestMessageSize(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.m4_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.m2_)*/ ::int64_t{0},
      /*decltype(_impl_.m1_)*/ false,
      /*decltype(_impl_.m3_)*/ false,
      /*decltype(_impl_.m5_)*/ 0,
      /*decltype(_impl_.m6_)*/ ::int64_t{0},
    } {}
struct TestMessageSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageSizeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageSizeDefaultTypeInternal() {}
  union {
    TestMessageSize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageSizeDefaultTypeInternal _TestMessageSize_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FooRequest::FooRequest(::_pbi::ConstantInitialized) {}
struct FooRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FooRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FooRequestDefaultTypeInternal() {}
  union {
    FooRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FooRequestDefaultTypeInternal _FooRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FooResponse::FooResponse(::_pbi::ConstantInitialized) {}
struct FooResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FooResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FooResponseDefaultTypeInternal() {}
  union {
    FooResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FooResponseDefaultTypeInternal _FooResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FooClientMessage::FooClientMessage(::_pbi::ConstantInitialized) {}
struct FooClientMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FooClientMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FooClientMessageDefaultTypeInternal() {}
  union {
    FooClientMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FooClientMessageDefaultTypeInternal _FooClientMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FooServerMessage::FooServerMessage(::_pbi::ConstantInitialized) {}
struct FooServerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FooServerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FooServerMessageDefaultTypeInternal() {}
  union {
    FooServerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FooServerMessageDefaultTypeInternal _FooServerMessage_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR BarRequest::BarRequest(::_pbi::ConstantInitialized) {}
struct BarRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarRequestDefaultTypeInternal() {}
  union {
    BarRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarRequestDefaultTypeInternal _BarRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR BarResponse::BarResponse(::_pbi::ConstantInitialized) {}
struct BarResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarResponseDefaultTypeInternal() {}
  union {
    BarResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarResponseDefaultTypeInternal _BarResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestJsonName::TestJsonName(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.field_name1_)*/ 0,
      /*decltype(_impl_.fieldname2_)*/ 0,
      /*decltype(_impl_.fieldname3_)*/ 0,
      /*decltype(_impl_._field_name4_)*/ 0,
      /*decltype(_impl_.field_name5_)*/ 0,
      /*decltype(_impl_.field_name6_)*/ 0,
      /*decltype(_impl_.fieldname7_)*/ 0,
    } {}
struct TestJsonNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestJsonNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestJsonNameDefaultTypeInternal() {}
  union {
    TestJsonName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestJsonNameDefaultTypeInternal _TestJsonName_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestHugeFieldNumbers_OptionalGroup::TestHugeFieldNumbers_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.group_a_)*/ 0,
    } {}
struct TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal() {}
  union {
    TestHugeFieldNumbers_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestHugeFieldNumbers_OptionalGroupDefaultTypeInternal _TestHugeFieldNumbers_OptionalGroup_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestHugeFieldNumbers_StringStringMapEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestHugeFieldNumbers_StringStringMapEntry_DoNotUseDefaultTypeInternal _TestHugeFieldNumbers_StringStringMapEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestHugeFieldNumbers::TestHugeFieldNumbers(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_int32_)*/ {},
      /*decltype(_impl_.packed_int32_)*/ {},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      /* decltype(_impl_.string_string_map_) */ {},
      /*decltype(_impl_.optional_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_bytes_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_message_)*/ nullptr,
      /*decltype(_impl_.optionalgroup_)*/ nullptr,
      /*decltype(_impl_.optional_int32_)*/ 0,
      /*decltype(_impl_.fixed_32_)*/ 0,
      /*decltype(_impl_.optional_enum_)*/ 4,
      /*decltype(_impl_.oneof_field_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TestHugeFieldNumbersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestHugeFieldNumbersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestHugeFieldNumbersDefaultTypeInternal() {}
  union {
    TestHugeFieldNumbers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestHugeFieldNumbersDefaultTypeInternal _TestHugeFieldNumbers_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtensionInsideTable::TestExtensionInsideTable(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.field1_)*/ 0,
      /*decltype(_impl_.field2_)*/ 0,
      /*decltype(_impl_.field3_)*/ 0,
      /*decltype(_impl_.field4_)*/ 0,
      /*decltype(_impl_.field6_)*/ 0,
      /*decltype(_impl_.field7_)*/ 0,
      /*decltype(_impl_.field8_)*/ 0,
      /*decltype(_impl_.field9_)*/ 0,
      /*decltype(_impl_.field10_)*/ 0,
    } {}
struct TestExtensionInsideTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtensionInsideTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtensionInsideTableDefaultTypeInternal() {}
  union {
    TestExtensionInsideTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtensionInsideTableDefaultTypeInternal _TestExtensionInsideTable_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.another_field_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal() {}
  union {
    TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.but_why_tho_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal() {}
  union {
    TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.layer2repeatedgroup_)*/ {},
      /*decltype(_impl_.layer2anotheroptionalrepeatedgroup_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal() {}
  union {
    TestNestedGroupExtensionOuter_Layer1OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedGroupExtensionOuter_Layer1OptionalGroupDefaultTypeInternal _TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuter::TestNestedGroupExtensionOuter(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.layer1optionalgroup_)*/ nullptr,
    } {}
struct TestNestedGroupExtensionOuterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedGroupExtensionOuterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedGroupExtensionOuterDefaultTypeInternal() {}
  union {
    TestNestedGroupExtensionOuter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedGroupExtensionOuterDefaultTypeInternal _TestNestedGroupExtensionOuter_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedGroupExtensionInnerExtension::TestNestedGroupExtensionInnerExtension(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.inner_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestNestedGroupExtensionInnerExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedGroupExtensionInnerExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedGroupExtensionInnerExtensionDefaultTypeInternal() {}
  union {
    TestNestedGroupExtensionInnerExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedGroupExtensionInnerExtensionDefaultTypeInternal _TestNestedGroupExtensionInnerExtension_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestExtensionRangeSerialize::TestExtensionRangeSerialize(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.foo_one_)*/ 0,
      /*decltype(_impl_.foo_two_)*/ 0,
      /*decltype(_impl_.foo_three_)*/ 0,
      /*decltype(_impl_.foo_four_)*/ 0,
    } {}
struct TestExtensionRangeSerializeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestExtensionRangeSerializeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestExtensionRangeSerializeDefaultTypeInternal() {}
  union {
    TestExtensionRangeSerialize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestExtensionRangeSerializeDefaultTypeInternal _TestExtensionRangeSerialize_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyInt32Simple::TestVerifyInt32Simple(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_int32_1_)*/ 0,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
    } {}
struct TestVerifyInt32SimpleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyInt32SimpleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyInt32SimpleDefaultTypeInternal() {}
  union {
    TestVerifyInt32Simple _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyInt32SimpleDefaultTypeInternal _TestVerifyInt32Simple_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyInt32::TestVerifyInt32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_int32_1_)*/ 0,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
    } {}
struct TestVerifyInt32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyInt32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyInt32DefaultTypeInternal() {}
  union {
    TestVerifyInt32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyInt32DefaultTypeInternal _TestVerifyInt32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyMostlyInt32::TestVerifyMostlyInt32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_int32_1_)*/ 0,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_3_)*/ 0,
      /*decltype(_impl_.optional_int32_4_)*/ 0,
      /*decltype(_impl_.optional_int64_30_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
    } {}
struct TestVerifyMostlyInt32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyMostlyInt32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyMostlyInt32DefaultTypeInternal() {}
  union {
    TestVerifyMostlyInt32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyMostlyInt32DefaultTypeInternal _TestVerifyMostlyInt32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyMostlyInt32BigFieldNumber::TestVerifyMostlyInt32BigFieldNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_int32_1_)*/ 0,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_3_)*/ 0,
      /*decltype(_impl_.optional_int32_4_)*/ 0,
      /*decltype(_impl_.optional_int64_30_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
      /*decltype(_impl_.optional_int32_300_)*/ 0,
    } {}
struct TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal() {}
  union {
    TestVerifyMostlyInt32BigFieldNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyMostlyInt32BigFieldNumberDefaultTypeInternal _TestVerifyMostlyInt32BigFieldNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyUint32Simple::TestVerifyUint32Simple(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_uint32_1_)*/ 0u,
      /*decltype(_impl_.optional_uint32_2_)*/ 0u,
      /*decltype(_impl_.optional_uint32_63_)*/ 0u,
      /*decltype(_impl_.optional_uint32_64_)*/ 0u,
    } {}
struct TestVerifyUint32SimpleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyUint32SimpleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyUint32SimpleDefaultTypeInternal() {}
  union {
    TestVerifyUint32Simple _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyUint32SimpleDefaultTypeInternal _TestVerifyUint32Simple_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyUint32::TestVerifyUint32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_uint32_1_)*/ 0u,
      /*decltype(_impl_.optional_uint32_2_)*/ 0u,
      /*decltype(_impl_.optional_uint32_63_)*/ 0u,
      /*decltype(_impl_.optional_uint32_64_)*/ 0u,
    } {}
struct TestVerifyUint32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyUint32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyUint32DefaultTypeInternal() {}
  union {
    TestVerifyUint32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyUint32DefaultTypeInternal _TestVerifyUint32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyOneUint32::TestVerifyOneUint32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_uint32_1_)*/ 0u,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
    } {}
struct TestVerifyOneUint32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyOneUint32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyOneUint32DefaultTypeInternal() {}
  union {
    TestVerifyOneUint32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyOneUint32DefaultTypeInternal _TestVerifyOneUint32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyOneInt32BigFieldNumber::TestVerifyOneInt32BigFieldNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_int64_1_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int64_2_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int64_63_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int64_64_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int32_65_)*/ 0,
    } {}
struct TestVerifyOneInt32BigFieldNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyOneInt32BigFieldNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyOneInt32BigFieldNumberDefaultTypeInternal() {}
  union {
    TestVerifyOneInt32BigFieldNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyOneInt32BigFieldNumberDefaultTypeInternal _TestVerifyOneInt32BigFieldNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyInt32BigFieldNumber::TestVerifyInt32BigFieldNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_int32_1_)*/ 0,
      /*decltype(_impl_.optional_int32_2_)*/ 0,
      /*decltype(_impl_.optional_int32_63_)*/ 0,
      /*decltype(_impl_.optional_int32_64_)*/ 0,
      /*decltype(_impl_.optional_int32_65_)*/ 0,
      /*decltype(_impl_.optional_int32_1000_)*/ 0,
    } {}
struct TestVerifyInt32BigFieldNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyInt32BigFieldNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyInt32BigFieldNumberDefaultTypeInternal() {}
  union {
    TestVerifyInt32BigFieldNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyInt32BigFieldNumberDefaultTypeInternal _TestVerifyInt32BigFieldNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyUint32BigFieldNumber::TestVerifyUint32BigFieldNumber(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_all_types_)*/ {},
      /*decltype(_impl_.optional_all_types_)*/ nullptr,
      /*decltype(_impl_.optional_uint32_1_)*/ 0u,
      /*decltype(_impl_.optional_uint32_2_)*/ 0u,
      /*decltype(_impl_.optional_uint32_63_)*/ 0u,
      /*decltype(_impl_.optional_uint32_64_)*/ 0u,
      /*decltype(_impl_.optional_uint32_65_)*/ 0u,
      /*decltype(_impl_.optional_uint32_1000_)*/ 0u,
    } {}
struct TestVerifyUint32BigFieldNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyUint32BigFieldNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyUint32BigFieldNumberDefaultTypeInternal() {}
  union {
    TestVerifyUint32BigFieldNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyUint32BigFieldNumberDefaultTypeInternal _TestVerifyUint32BigFieldNumber_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32_Nested::TestVerifyBigFieldNumberUint32_Nested(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_nested_)*/ {},
      /*decltype(_impl_.optional_nested_)*/ nullptr,
      /*decltype(_impl_.optional_uint32_1_)*/ 0u,
      /*decltype(_impl_.optional_uint32_2_)*/ 0u,
      /*decltype(_impl_.optional_uint32_63_)*/ 0u,
      /*decltype(_impl_.optional_uint32_64_)*/ 0u,
      /*decltype(_impl_.optional_uint32_65_)*/ 0u,
      /*decltype(_impl_.optional_uint32_66_)*/ 0u,
      /*decltype(_impl_.optional_uint32_1000_)*/ 0u,
      /*decltype(_impl_.optional_uint32_5000_)*/ 0u,
    } {}
struct TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal() {}
  union {
    TestVerifyBigFieldNumberUint32_Nested _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyBigFieldNumberUint32_NestedDefaultTypeInternal _TestVerifyBigFieldNumberUint32_Nested_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32::TestVerifyBigFieldNumberUint32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_nested_)*/ nullptr,
    } {}
struct TestVerifyBigFieldNumberUint32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestVerifyBigFieldNumberUint32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestVerifyBigFieldNumberUint32DefaultTypeInternal() {}
  union {
    TestVerifyBigFieldNumberUint32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestVerifyBigFieldNumberUint32DefaultTypeInternal _TestVerifyBigFieldNumberUint32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR EnumParseTester::EnumParseTester(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_seq_small_0_lowfield_)*/ {},
      /*decltype(_impl_.packed_seq_small_0_lowfield_)*/ {},
      /*decltype(_impl_._packed_seq_small_0_lowfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_small_1_lowfield_)*/ {},
      /*decltype(_impl_.packed_seq_small_1_lowfield_)*/ {},
      /*decltype(_impl_._packed_seq_small_1_lowfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_large_lowfield_)*/ {},
      /*decltype(_impl_.packed_seq_large_lowfield_)*/ {},
      /*decltype(_impl_._packed_seq_large_lowfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_arbitrary_lowfield_)*/ {},
      /*decltype(_impl_.packed_arbitrary_lowfield_)*/ {},
      /*decltype(_impl_._packed_arbitrary_lowfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_small_0_midfield_)*/ {},
      /*decltype(_impl_.packed_seq_small_0_midfield_)*/ {},
      /*decltype(_impl_._packed_seq_small_0_midfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_small_1_midfield_)*/ {},
      /*decltype(_impl_.packed_seq_small_1_midfield_)*/ {},
      /*decltype(_impl_._packed_seq_small_1_midfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_large_midfield_)*/ {},
      /*decltype(_impl_.packed_seq_large_midfield_)*/ {},
      /*decltype(_impl_._packed_seq_large_midfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_arbitrary_midfield_)*/ {},
      /*decltype(_impl_.packed_arbitrary_midfield_)*/ {},
      /*decltype(_impl_._packed_arbitrary_midfield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_small_0_hifield_)*/ {},
      /*decltype(_impl_.packed_seq_small_0_hifield_)*/ {},
      /*decltype(_impl_._packed_seq_small_0_hifield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_small_1_hifield_)*/ {},
      /*decltype(_impl_.packed_seq_small_1_hifield_)*/ {},
      /*decltype(_impl_._packed_seq_small_1_hifield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_seq_large_hifield_)*/ {},
      /*decltype(_impl_.packed_seq_large_hifield_)*/ {},
      /*decltype(_impl_._packed_seq_large_hifield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.repeated_arbitrary_hifield_)*/ {},
      /*decltype(_impl_.packed_arbitrary_hifield_)*/ {},
      /*decltype(_impl_._packed_arbitrary_hifield_cached_byte_size_)*/ {0},
      /*decltype(_impl_.optional_seq_small_0_lowfield_)*/ 0,
      /*decltype(_impl_.other_field_)*/ 0,
      /*decltype(_impl_.optional_seq_small_0_midfield_)*/ 0,
      /*decltype(_impl_.optional_seq_small_0_hifield_)*/ 0,
      /*decltype(_impl_.optional_arbitrary_hifield_)*/ -123123,
      /*decltype(_impl_.optional_seq_small_1_lowfield_)*/ 1,
      /*decltype(_impl_.optional_seq_large_lowfield_)*/ -1,
      /*decltype(_impl_.optional_arbitrary_lowfield_)*/ -123123,
      /*decltype(_impl_.optional_seq_small_1_midfield_)*/ 1,
      /*decltype(_impl_.optional_seq_large_midfield_)*/ -1,
      /*decltype(_impl_.optional_arbitrary_midfield_)*/ -123123,
      /*decltype(_impl_.optional_seq_small_1_hifield_)*/ 1,
      /*decltype(_impl_.optional_seq_large_hifield_)*/ -1,
    } {}
struct EnumParseTesterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnumParseTesterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnumParseTesterDefaultTypeInternal() {}
  union {
    EnumParseTester _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnumParseTesterDefaultTypeInternal _EnumParseTester_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BoolParseTester::BoolParseTester(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_bool_lowfield_)*/ {},
      /*decltype(_impl_.packed_bool_lowfield_)*/ {},
      /*decltype(_impl_.repeated_bool_midfield_)*/ {},
      /*decltype(_impl_.packed_bool_midfield_)*/ {},
      /*decltype(_impl_.repeated_bool_hifield_)*/ {},
      /*decltype(_impl_.packed_bool_hifield_)*/ {},
      /*decltype(_impl_.other_field_)*/ 0,
      /*decltype(_impl_.optional_bool_lowfield_)*/ false,
      /*decltype(_impl_.optional_bool_midfield_)*/ false,
      /*decltype(_impl_.optional_bool_hifield_)*/ false,
    } {}
struct BoolParseTesterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolParseTesterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolParseTesterDefaultTypeInternal() {}
  union {
    BoolParseTester _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolParseTesterDefaultTypeInternal _BoolParseTester_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int32ParseTester::Int32ParseTester(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_int32_lowfield_)*/ {},
      /*decltype(_impl_.packed_int32_lowfield_)*/ {},
      /* _impl_._packed_int32_lowfield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.repeated_int32_midfield_)*/ {},
      /*decltype(_impl_.packed_int32_midfield_)*/ {},
      /* _impl_._packed_int32_midfield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.repeated_int32_hifield_)*/ {},
      /*decltype(_impl_.packed_int32_hifield_)*/ {},
      /* _impl_._packed_int32_hifield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.optional_int32_lowfield_)*/ 0,
      /*decltype(_impl_.other_field_)*/ 0,
      /*decltype(_impl_.optional_int32_midfield_)*/ 0,
      /*decltype(_impl_.optional_int32_hifield_)*/ 0,
    } {}
struct Int32ParseTesterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int32ParseTesterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int32ParseTesterDefaultTypeInternal() {}
  union {
    Int32ParseTester _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int32ParseTesterDefaultTypeInternal _Int32ParseTester_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Int64ParseTester::Int64ParseTester(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_int64_lowfield_)*/ {},
      /*decltype(_impl_.packed_int64_lowfield_)*/ {},
      /* _impl_._packed_int64_lowfield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.repeated_int64_midfield_)*/ {},
      /*decltype(_impl_.packed_int64_midfield_)*/ {},
      /* _impl_._packed_int64_midfield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.repeated_int64_hifield_)*/ {},
      /*decltype(_impl_.packed_int64_hifield_)*/ {},
      /* _impl_._packed_int64_hifield_cached_byte_size_ = */ {0},
      /*decltype(_impl_.optional_int64_lowfield_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int64_midfield_)*/ ::int64_t{0},
      /*decltype(_impl_.optional_int64_hifield_)*/ ::int64_t{0},
      /*decltype(_impl_.other_field_)*/ 0,
    } {}
struct Int64ParseTesterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64ParseTesterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64ParseTesterDefaultTypeInternal() {}
  union {
    Int64ParseTester _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64ParseTesterDefaultTypeInternal _Int64ParseTester_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR InlinedStringIdxRegressionProto::InlinedStringIdxRegressionProto(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.str1_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str2_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.str3_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sub_)*/ nullptr,
    } {}
struct InlinedStringIdxRegressionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InlinedStringIdxRegressionProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InlinedStringIdxRegressionProtoDefaultTypeInternal() {}
  union {
    InlinedStringIdxRegressionProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InlinedStringIdxRegressionProtoDefaultTypeInternal _InlinedStringIdxRegressionProto_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StringParseTester::StringParseTester(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_string_lowfield_)*/ {},
      /*decltype(_impl_.repeated_string_midfield_)*/ {},
      /*decltype(_impl_.repeated_string_hifield_)*/ {},
      /*decltype(_impl_.optional_string_lowfield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_string_midfield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_string_hifield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct StringParseTesterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringParseTesterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringParseTesterDefaultTypeInternal() {}
  union {
    StringParseTester _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringParseTesterDefaultTypeInternal _StringParseTester_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BadFieldNames::BadFieldNames(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optionalint32_)*/ 0,
      /*decltype(_impl_.for__)*/ 0,
    } {}
struct BadFieldNamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BadFieldNamesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BadFieldNamesDefaultTypeInternal() {}
  union {
    BadFieldNames _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BadFieldNamesDefaultTypeInternal _BadFieldNames_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestNestedMessageRedaction::TestNestedMessageRedaction(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_unredacted_nested_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_redacted_nested_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
    } {}
struct TestNestedMessageRedactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedMessageRedactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedMessageRedactionDefaultTypeInternal() {}
  union {
    TestNestedMessageRedaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedMessageRedactionDefaultTypeInternal _TestNestedMessageRedaction_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RedactedFields_MapRedactedStringEntry_DoNotUse::RedactedFields_MapRedactedStringEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RedactedFields_MapRedactedStringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedactedFields_MapRedactedStringEntry_DoNotUseDefaultTypeInternal _RedactedFields_MapRedactedStringEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RedactedFields_MapUnredactedStringEntry_DoNotUse::RedactedFields_MapUnredactedStringEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RedactedFields_MapUnredactedStringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedactedFields_MapUnredactedStringEntry_DoNotUseDefaultTypeInternal _RedactedFields_MapUnredactedStringEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RedactedFields::RedactedFields(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.repeated_redacted_string_)*/ {},
      /*decltype(_impl_.repeated_unredacted_string_)*/ {},
      /*decltype(_impl_.repeated_redacted_message_)*/ {},
      /*decltype(_impl_.repeated_unredacted_message_)*/ {},
      /* decltype(_impl_.map_redacted_string_) */ {},
      /* decltype(_impl_.map_unredacted_string_) */ {},
      /*decltype(_impl_.optional_redacted_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_unredacted_string_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.optional_redacted_message_)*/ nullptr,
      /*decltype(_impl_.optional_unredacted_message_)*/ nullptr,
    } {}
struct RedactedFieldsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedactedFieldsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedactedFieldsDefaultTypeInternal() {}
  union {
    RedactedFields _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedactedFieldsDefaultTypeInternal _RedactedFields_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestCord::TestCord(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.optional_bytes_cord_)*/ {},
      /*decltype(_impl_.optional_bytes_cord_default_)*/ {::absl::strings_internal::MakeStringConstant(
          TestCord::Impl_::_default_optional_bytes_cord_default_func_{})},
    } {}
struct TestCordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestCordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestCordDefaultTypeInternal() {}
  union {
    TestCord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestCordDefaultTypeInternal _TestCord_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TestPackedEnumSmallRange::TestPackedEnumSmallRange(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.vals_)*/ {},
      /*decltype(_impl_._vals_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TestPackedEnumSmallRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedEnumSmallRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedEnumSmallRangeDefaultTypeInternal() {}
  union {
    TestPackedEnumSmallRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedEnumSmallRangeDefaultTypeInternal _TestPackedEnumSmallRange_default_instance_;
}  // namespace protobuf_unittest
static ::_pb::Metadata file_level_metadata_google_2fprotobuf_2funittest_2eproto[141];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[13];
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_google_2fprotobuf_2funittest_2eproto[1];
const ::uint32_t TableStruct_google_2fprotobuf_2funittest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_NestedMessage, _impl_.bb_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_OptionalGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_OptionalGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_OptionalGroup, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_RepeatedGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_RepeatedGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes_RepeatedGroup, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_sint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_sint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_bool_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_bytes_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optionalgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_nested_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_foreign_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_import_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_nested_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_foreign_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_import_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_string_piece_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_cord_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_public_import_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_lazy_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.optional_unverified_lazy_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_sint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_sint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_bool_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_bytes_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeatedgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_nested_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_foreign_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_import_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_nested_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_foreign_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_import_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_string_piece_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_cord_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.repeated_lazy_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_sint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_sint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_bool_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_bytes_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_nested_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_foreign_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_import_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_string_piece_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.default_cord_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_.oneof_field_),
    16,
    15,
    17,
    18,
    20,
    19,
    21,
    22,
    24,
    23,
    25,
    26,
    27,
    0,
    1,
    8,
    9,
    10,
    11,
    29,
    30,
    31,
    2,
    3,
    12,
    13,
    14,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    32,
    33,
    35,
    34,
    36,
    37,
    39,
    38,
    40,
    41,
    43,
    42,
    44,
    4,
    5,
    45,
    46,
    28,
    6,
    7,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_.child_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_.repeated_child_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_.lazy_child_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::NestedTestAllTypes, _impl_.eager_child_),
    0,
    1,
    ~0u,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_.deprecated_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_.deprecated_repeated_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_.deprecated_message_),
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_.nested_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_.oneof_fields_),
    2,
    ~0u,
    0,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ForeignMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ForeignMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ForeignMessage, _impl_.c_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ForeignMessage, _impl_.d_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestReservedFields, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllExtensions, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllExtensions, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OptionalGroup_extension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OptionalGroup_extension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OptionalGroup_extension, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedGroup_extension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedGroup_extension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RepeatedGroup_extension, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMixedFieldsAndExtensions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMixedFieldsAndExtensions, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMixedFieldsAndExtensions, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMixedFieldsAndExtensions, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMixedFieldsAndExtensions, _impl_.b_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup_OptionalGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup_OptionalGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup_OptionalGroup, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup_OptionalGroup, _impl_.zz_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup, _impl_.optionalgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroup, _impl_.optional_foreign_enum_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroupExtension, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestGroupExtension, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedExtension_OptionalGroup_extension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedExtension_OptionalGroup_extension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedExtension_OptionalGroup_extension, _impl_.a_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedExtension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtension, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtension, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtension, _impl_.optional_extension_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.b_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData, _impl_.dynamic_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestChildExtensionData, _impl_.optional_extension_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtension, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtension, _impl_.child_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtensionData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtensionData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtensionData, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedChildExtensionData, _impl_.child_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy5_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy6_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy7_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy8_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy9_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy10_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy11_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy12_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy13_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy14_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy15_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy16_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy17_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy18_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy19_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy20_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy21_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy22_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy23_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy24_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy25_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy26_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy27_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy28_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy29_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy30_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy31_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.dummy32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.c_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequired, _impl_.optional_foreign_),
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _impl_.optional_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _impl_.repeated_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _impl_.dummy_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredForeign, _impl_.optional_lazy_message_),
    0,
    ~0u,
    2,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessage, _impl_.optional_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessage, _impl_.repeated_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredMessage, _impl_.required_message_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedRequiredForeign, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedRequiredForeign, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedRequiredForeign, _impl_.child_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedRequiredForeign, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedRequiredForeign, _impl_.dummy_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestForeignNested, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestForeignNested, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestForeignNested, _impl_.foreign_nested_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmptyMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmptyMessageWithExtensions, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEmptyMessageWithExtensions, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage_NestedMessage, _impl_.bb_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPickleNestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMultipleExtensionRanges, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMultipleExtensionRanges, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestReallyLargeTagNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestReallyLargeTagNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestReallyLargeTagNumber, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestReallyLargeTagNumber, _impl_.bb_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMessage, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRecursiveMessage, _impl_.i_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubMessage, _impl_.b_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroup, _impl_.sub_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroup, _impl_.not_in_this_scc_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroupR, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroupR, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA_SubGroupR, _impl_.payload_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA, _impl_.bb_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA, _impl_.subgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionA, _impl_.subgroupr_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionB, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionB, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionB, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMutualRecursionB, _impl_.optional_int32_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup, _impl_.i_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized_SubMessage, _impl_.subgroup_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestIsInitialized, _impl_.sub_message_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Foo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Foo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Foo, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Bar, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Bar, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber_Bar, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber, _impl_.foo_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDupFieldNumber, _impl_.bar_),
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMessage, _impl_.sub_message_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestLazyMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestLazyMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestLazyMessage, _impl_.sub_message_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestLazyMessageRepeated, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestLazyMessageRepeated, _impl_.repeated_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy_NestedMessage, _impl_.packed_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy, _impl_.message_foo_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy, _impl_.message_bar_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestEagerMaybeLazy, _impl_.message_baz_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_foreignmessage_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageHasBits, _impl_.optional_nested_message_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.primitivefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.stringfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.enumfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.messagefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.stringpiecefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.cordfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedprimitivefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedstringfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedenumfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedmessagefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedstringpiecefield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCamelCaseFieldNames, _impl_.repeatedcordfield_),
    4,
    0,
    5,
    3,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings_NestedMessage, _impl_.oo_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings_NestedMessage, _impl_.bb_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_.my_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_.my_int_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_.my_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestFieldOrderings, _impl_.optional_nested_message_),
    0,
    2,
    3,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings1, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings1, _impl_.my_string_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3, _impl_.my_string_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionOrderings2, _impl_.my_string_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.escaped_bytes_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.large_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.large_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.small_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.small_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.really_small_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.really_small_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.utf8_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.zero_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.one_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.small_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.negative_one_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.negative_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.large_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.small_negative_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.inf_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.neg_inf_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.nan_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.inf_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.neg_inf_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.nan_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.cpp_trigraph_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.string_with_zero_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.bytes_with_zero_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.string_piece_with_zero_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.cord_with_zero_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtremeDefaultValues, _impl_.replacement_string_),
    0,
    10,
    9,
    11,
    12,
    25,
    26,
    1,
    8,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    2,
    3,
    4,
    5,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::SparseEnumMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::SparseEnumMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::SparseEnumMessage, _impl_.sparse_enum_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneString, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneString, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneString, _impl_.data_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MoreString, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MoreString, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneBytes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneBytes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::OneBytes, _impl_.data_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MoreBytes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::MoreBytes, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str5_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str6_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str7_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str8_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str9_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str10_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str11_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str12_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str13_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str14_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str15_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str16_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str17_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str18_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str19_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str20_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str21_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str22_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str23_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str24_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str25_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str26_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str27_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str28_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str29_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str30_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str31_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::ManyOptionalString, _impl_.str32_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32Message, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint32Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint32Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint32Message, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64Message, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint64Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint64Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Uint64Message, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolMessage, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof_FooGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof_FooGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof_FooGroup, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof_FooGroup, _impl_.b_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof, _impl_.foo_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup, _impl_.b_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _impl_.foo_int_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _impl_.foo_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _impl_.foo_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofBackwardsCompatible, _impl_.foogroup_),
    3,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_FooGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_FooGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_FooGroup, _impl_.a_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_FooGroup, _impl_.b_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_NestedMessage, _impl_.moo_int_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2_NestedMessage, _impl_.corge_int_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_.baz_int_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_.baz_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_.foo_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_.bar_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof_NestedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof_NestedMessage, _impl_.required_double_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof, _impl_.foo_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_sint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_sint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_bool_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedTypes, _impl_.packed_enum_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_uint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_sint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_sint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_double_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_bool_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedTypes, _impl_.unpacked_enum_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedExtensions, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedExtensions, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedExtensions, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestUnpackedExtensions, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions_DynamicMessageType, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions_DynamicMessageType, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions_DynamicMessageType, _impl_.dynamic_field_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.scalar_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.enum_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.dynamic_enum_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.message_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.dynamic_message_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.repeated_extension_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDynamicExtensions, _impl_.packed_extension_),
    2,
    3,
    4,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedString, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedString, _impl_.repeated_string1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedString, _impl_.repeated_string2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedString, _impl_.repeated_bytes11_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedString, _impl_.repeated_bytes12_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_float_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes, _impl_.repeated_uint64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_.field1_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_.field1_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.field1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.field2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.field3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.group1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.group2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.ext1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator, _impl_.ext2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_OptionalGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_OptionalGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_OptionalGroup, _impl_.optional_group_all_types_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge_RepeatedGroup, _impl_.repeated_group_all_types_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_.required_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_.repeated_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_.optionalgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestParsingMerge, _impl_.repeatedgroup_),
    0,
    1,
    ~0u,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMergeException, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMergeException, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMergeException, _impl_.all_extensions_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCommentInjectionMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCommentInjectionMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCommentInjectionMessage, _impl_.a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m5_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSize, _impl_.m6_),
    2,
    1,
    3,
    0,
    4,
    5,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::FooRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::FooResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::FooClientMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::FooServerMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BarRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BarResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.field_name1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.fieldname2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.fieldname3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_._field_name4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.field_name5_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.field_name6_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestJsonName, _impl_.fieldname7_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup, _impl_.group_a_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_._extensions_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optional_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.fixed_32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.repeated_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.packed_int32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optional_enum_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optional_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optional_bytes_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optional_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.optionalgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.string_string_map_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_.oneof_field_),
    4,
    5,
    ~0u,
    ~0u,
    6,
    0,
    1,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field6_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field7_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field8_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field9_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionInsideTable, _impl_.field10_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_.another_field_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_.but_why_tho_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2repeatedgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2anotheroptionalrepeatedgroup_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionOuter, _impl_.layer1optionalgroup_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionInnerExtension, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionInnerExtension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedGroupExtensionInnerExtension, _impl_.inner_name_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_.foo_one_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_.foo_two_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_.foo_three_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestExtensionRangeSerialize, _impl_.foo_four_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _impl_.optional_int32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32Simple, _impl_.optional_int32_64_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.optional_int32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.optional_int32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32, _impl_.repeated_all_types_),
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int64_30_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_int32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32, _impl_.repeated_all_types_),
    5,
    1,
    2,
    3,
    4,
    6,
    7,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int64_30_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_300_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_3_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_4_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber, _impl_.repeated_all_types_),
    5,
    8,
    1,
    2,
    3,
    4,
    6,
    7,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _impl_.optional_uint32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _impl_.optional_uint32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _impl_.optional_uint32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32Simple, _impl_.optional_uint32_64_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.optional_uint32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.optional_uint32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.optional_uint32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.optional_uint32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32, _impl_.repeated_all_types_),
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.optional_uint32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.optional_int32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneUint32, _impl_.repeated_all_types_),
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_int32_65_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber, _impl_.repeated_all_types_),
    5,
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1000_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_65_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_int32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyInt32BigFieldNumber, _impl_.repeated_all_types_),
    6,
    5,
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1000_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_65_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.optional_all_types_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyUint32BigFieldNumber, _impl_.repeated_all_types_),
    6,
    5,
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_5000_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1000_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_66_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_65_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_63_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_64_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_nested_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested, _impl_.repeated_nested_),
    8,
    7,
    6,
    5,
    1,
    2,
    3,
    4,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestVerifyBigFieldNumberUint32, _impl_.optional_nested_),
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_0_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_0_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_0_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_0_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_0_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_0_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_0_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_0_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_0_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_1_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_1_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_small_1_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_1_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_1_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_small_1_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_1_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_1_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_small_1_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_large_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_large_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_seq_large_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_large_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_large_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_seq_large_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_large_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_large_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_seq_large_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_arbitrary_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_arbitrary_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.optional_arbitrary_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_arbitrary_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_arbitrary_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.repeated_arbitrary_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_arbitrary_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_arbitrary_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.packed_arbitrary_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::EnumParseTester, _impl_.other_field_),
    0,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    5,
    8,
    11,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    6,
    9,
    12,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    7,
    10,
    4,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.optional_bool_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.optional_bool_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.optional_bool_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.repeated_bool_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.repeated_bool_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.repeated_bool_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.packed_bool_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.packed_bool_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.packed_bool_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BoolParseTester, _impl_.other_field_),
    1,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.optional_int32_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.optional_int32_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.optional_int32_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.repeated_int32_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.repeated_int32_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.repeated_int32_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.packed_int32_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.packed_int32_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.packed_int32_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int32ParseTester, _impl_.other_field_),
    0,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.optional_int64_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.optional_int64_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.optional_int64_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.repeated_int64_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.repeated_int64_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.repeated_int64_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.packed_int64_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.packed_int64_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.packed_int64_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::Int64ParseTester, _impl_.other_field_),
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _impl_.str1_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _impl_.sub_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _impl_.str2_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::InlinedStringIdxRegressionProto, _impl_.str3_),
    0,
    3,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.optional_string_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.optional_string_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.optional_string_hifield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.repeated_string_lowfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.repeated_string_midfield_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::StringParseTester, _impl_.repeated_string_hifield_),
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BadFieldNames, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BadFieldNames, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BadFieldNames, _impl_.optionalint32_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::BadFieldNames, _impl_.for__),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageRedaction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageRedaction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageRedaction, _impl_.optional_unredacted_nested_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestNestedMessageRedaction, _impl_.optional_redacted_nested_string_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapRedactedStringEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapRedactedStringEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapRedactedStringEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapRedactedStringEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapUnredactedStringEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapUnredactedStringEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapUnredactedStringEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields_MapUnredactedStringEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.optional_redacted_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.optional_unredacted_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.repeated_redacted_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.repeated_unredacted_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.optional_redacted_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.optional_unredacted_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.repeated_redacted_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.repeated_unredacted_message_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.map_redacted_string_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RedactedFields, _impl_.map_unredacted_string_),
    0,
    1,
    ~0u,
    ~0u,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCord, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCord, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCord, _impl_.optional_bytes_cord_),
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestCord, _impl_.optional_bytes_cord_default_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedEnumSmallRange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestPackedEnumSmallRange, _impl_.vals_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::protobuf_unittest::TestAllTypes_NestedMessage)},
        {10, 19, -1, sizeof(::protobuf_unittest::TestAllTypes_OptionalGroup)},
        {20, 29, -1, sizeof(::protobuf_unittest::TestAllTypes_RepeatedGroup)},
        {30, 115, -1, sizeof(::protobuf_unittest::TestAllTypes)},
        {191, 204, -1, sizeof(::protobuf_unittest::NestedTestAllTypes)},
        {209, 223, -1, sizeof(::protobuf_unittest::TestDeprecatedFields)},
        {228, -1, -1, sizeof(::protobuf_unittest::TestDeprecatedMessage)},
        {236, 246, -1, sizeof(::protobuf_unittest::ForeignMessage)},
        {248, -1, -1, sizeof(::protobuf_unittest::TestReservedFields)},
        {256, -1, -1, sizeof(::protobuf_unittest::TestAllExtensions)},
        {264, 273, -1, sizeof(::protobuf_unittest::OptionalGroup_extension)},
        {274, 283, -1, sizeof(::protobuf_unittest::RepeatedGroup_extension)},
        {284, 294, -1, sizeof(::protobuf_unittest::TestMixedFieldsAndExtensions)},
        {296, 306, -1, sizeof(::protobuf_unittest::TestGroup_OptionalGroup)},
        {308, 318, -1, sizeof(::protobuf_unittest::TestGroup)},
        {320, -1, -1, sizeof(::protobuf_unittest::TestGroupExtension)},
        {328, 337, -1, sizeof(::protobuf_unittest::TestNestedExtension_OptionalGroup_extension)},
        {338, -1, -1, sizeof(::protobuf_unittest::TestNestedExtension)},
        {346, 357, -1, sizeof(::protobuf_unittest::TestChildExtension)},
        {360, 370, -1, sizeof(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions)},
        {372, 381, -1, sizeof(::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData)},
        {382, 393, -1, sizeof(::protobuf_unittest::TestChildExtensionData)},
        {396, 406, -1, sizeof(::protobuf_unittest::TestNestedChildExtension)},
        {408, 418, -1, sizeof(::protobuf_unittest::TestNestedChildExtensionData)},
        {420, 462, -1, sizeof(::protobuf_unittest::TestRequired)},
        {496, 508, -1, sizeof(::protobuf_unittest::TestRequiredForeign)},
        {512, 523, -1, sizeof(::protobuf_unittest::TestRequiredMessage)},
        {526, 537, -1, sizeof(::protobuf_unittest::TestNestedRequiredForeign)},
        {540, 549, -1, sizeof(::protobuf_unittest::TestForeignNested)},
        {550, -1, -1, sizeof(::protobuf_unittest::TestEmptyMessage)},
        {558, -1, -1, sizeof(::protobuf_unittest::TestEmptyMessageWithExtensions)},
        {566, 575, -1, sizeof(::protobuf_unittest::TestPickleNestedMessage_NestedMessage_NestedNestedMessage)},
        {576, 585, -1, sizeof(::protobuf_unittest::TestPickleNestedMessage_NestedMessage)},
        {586, -1, -1, sizeof(::protobuf_unittest::TestPickleNestedMessage)},
        {594, -1, -1, sizeof(::protobuf_unittest::TestMultipleExtensionRanges)},
        {602, 612, -1, sizeof(::protobuf_unittest::TestReallyLargeTagNumber)},
        {614, 624, -1, sizeof(::protobuf_unittest::TestRecursiveMessage)},
        {626, 635, -1, sizeof(::protobuf_unittest::TestMutualRecursionA_SubMessage)},
        {636, 646, -1, sizeof(::protobuf_unittest::TestMutualRecursionA_SubGroup)},
        {648, 657, -1, sizeof(::protobuf_unittest::TestMutualRecursionA_SubGroupR)},
        {658, 669, -1, sizeof(::protobuf_unittest::TestMutualRecursionA)},
        {672, 682, -1, sizeof(::protobuf_unittest::TestMutualRecursionB)},
        {684, 693, -1, sizeof(::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup)},
        {694, 703, -1, sizeof(::protobuf_unittest::TestIsInitialized_SubMessage)},
        {704, 713, -1, sizeof(::protobuf_unittest::TestIsInitialized)},
        {714, 723, -1, sizeof(::protobuf_unittest::TestDupFieldNumber_Foo)},
        {724, 733, -1, sizeof(::protobuf_unittest::TestDupFieldNumber_Bar)},
        {734, 745, -1, sizeof(::protobuf_unittest::TestDupFieldNumber)},
        {748, 757, -1, sizeof(::protobuf_unittest::TestEagerMessage)},
        {758, 767, -1, sizeof(::protobuf_unittest::TestLazyMessage)},
        {768, -1, -1, sizeof(::protobuf_unittest::TestLazyMessageRepeated)},
        {777, 786, -1, sizeof(::protobuf_unittest::TestEagerMaybeLazy_NestedMessage)},
        {787, 798, -1, sizeof(::protobuf_unittest::TestEagerMaybeLazy)},
        {801, -1, -1, sizeof(::protobuf_unittest::TestNestedMessageHasBits_NestedMessage)},
        {811, 820, -1, sizeof(::protobuf_unittest::TestNestedMessageHasBits)},
        {821, 841, -1, sizeof(::protobuf_unittest::TestCamelCaseFieldNames)},
        {853, 863, -1, sizeof(::protobuf_unittest::TestFieldOrderings_NestedMessage)},
        {865, 877, -1, sizeof(::protobuf_unittest::TestFieldOrderings)},
        {881, 890, -1, sizeof(::protobuf_unittest::TestExtensionOrderings1)},
        {891, 900, -1, sizeof(::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3)},
        {901, 910, -1, sizeof(::protobuf_unittest::TestExtensionOrderings2)},
        {911, 946, -1, sizeof(::protobuf_unittest::TestExtremeDefaultValues)},
        {973, 982, -1, sizeof(::protobuf_unittest::SparseEnumMessage)},
        {983, 992, -1, sizeof(::protobuf_unittest::OneString)},
        {993, -1, -1, sizeof(::protobuf_unittest::MoreString)},
        {1002, 1011, -1, sizeof(::protobuf_unittest::OneBytes)},
        {1012, -1, -1, sizeof(::protobuf_unittest::MoreBytes)},
        {1021, 1061, -1, sizeof(::protobuf_unittest::ManyOptionalString)},
        {1093, 1102, -1, sizeof(::protobuf_unittest::Int32Message)},
        {1103, 1112, -1, sizeof(::protobuf_unittest::Uint32Message)},
        {1113, 1122, -1, sizeof(::protobuf_unittest::Int64Message)},
        {1123, 1132, -1, sizeof(::protobuf_unittest::Uint64Message)},
        {1133, 1142, -1, sizeof(::protobuf_unittest::BoolMessage)},
        {1143, 1153, -1, sizeof(::protobuf_unittest::TestOneof_FooGroup)},
        {1155, -1, -1, sizeof(::protobuf_unittest::TestOneof)},
        {1168, 1178, -1, sizeof(::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup)},
        {1180, 1192, -1, sizeof(::protobuf_unittest::TestOneofBackwardsCompatible)},
        {1196, 1206, -1, sizeof(::protobuf_unittest::TestOneof2_FooGroup)},
        {1208, 1218, -1, sizeof(::protobuf_unittest::TestOneof2_NestedMessage)},
        {1220, 1252, -1, sizeof(::protobuf_unittest::TestOneof2)},
        {1274, 1283, -1, sizeof(::protobuf_unittest::TestRequiredOneof_NestedMessage)},
        {1284, -1, -1, sizeof(::protobuf_unittest::TestRequiredOneof)},
        {1297, -1, -1, sizeof(::protobuf_unittest::TestPackedTypes)},
        {1319, -1, -1, sizeof(::protobuf_unittest::TestUnpackedTypes)},
        {1341, -1, -1, sizeof(::protobuf_unittest::TestPackedExtensions)},
        {1349, -1, -1, sizeof(::protobuf_unittest::TestUnpackedExtensions)},
        {1357, 1366, -1, sizeof(::protobuf_unittest::TestDynamicExtensions_DynamicMessageType)},
        {1367, 1382, -1, sizeof(::protobuf_unittest::TestDynamicExtensions)},
        {1389, -1, -1, sizeof(::protobuf_unittest::TestRepeatedString)},
        {1401, -1, -1, sizeof(::protobuf_unittest::TestRepeatedScalarDifferentTagSizes)},
        {1415, 1424, -1, sizeof(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1)},
        {1425, 1434, -1, sizeof(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2)},
        {1435, -1, -1, sizeof(::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator)},
        {1450, 1459, -1, sizeof(::protobuf_unittest::TestParsingMerge_OptionalGroup)},
        {1460, 1469, -1, sizeof(::protobuf_unittest::TestParsingMerge_RepeatedGroup)},
        {1470, 1483, -1, sizeof(::protobuf_unittest::TestParsingMerge)},
        {1488, 1497, -1, sizeof(::protobuf_unittest::TestMergeException)},
        {1498, 1507, -1, sizeof(::protobuf_unittest::TestCommentInjectionMessage)},
        {1508, 1522, -1, sizeof(::protobuf_unittest::TestMessageSize)},
        {1528, -1, -1, sizeof(::protobuf_unittest::FooRequest)},
        {1536, -1, -1, sizeof(::protobuf_unittest::FooResponse)},
        {1544, -1, -1, sizeof(::protobuf_unittest::FooClientMessage)},
        {1552, -1, -1, sizeof(::protobuf_unittest::FooServerMessage)},
        {1560, -1, -1, sizeof(::protobuf_unittest::BarRequest)},
        {1568, -1, -1, sizeof(::protobuf_unittest::BarResponse)},
        {1576, 1591, -1, sizeof(::protobuf_unittest::TestJsonName)},
        {1598, 1607, -1, sizeof(::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup)},
        {1608, 1618, -1, sizeof(::protobuf_unittest::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse)},
        {1620, 1643, -1, sizeof(::protobuf_unittest::TestHugeFieldNumbers)},
        {1657, 1674, -1, sizeof(::protobuf_unittest::TestExtensionInsideTable)},
        {1683, 1692, -1, sizeof(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup)},
        {1693, 1702, -1, sizeof(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup)},
        {1703, -1, -1, sizeof(::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup)},
        {1713, 1722, -1, sizeof(::protobuf_unittest::TestNestedGroupExtensionOuter)},
        {1723, 1732, -1, sizeof(::protobuf_unittest::TestNestedGroupExtensionInnerExtension)},
        {1733, 1745, -1, sizeof(::protobuf_unittest::TestExtensionRangeSerialize)},
        {1749, 1761, -1, sizeof(::protobuf_unittest::TestVerifyInt32Simple)},
        {1765, 1779, -1, sizeof(::protobuf_unittest::TestVerifyInt32)},
        {1785, 1802, -1, sizeof(::protobuf_unittest::TestVerifyMostlyInt32)},
        {1811, 1829, -1, sizeof(::protobuf_unittest::TestVerifyMostlyInt32BigFieldNumber)},
        {1839, 1851, -1, sizeof(::protobuf_unittest::TestVerifyUint32Simple)},
        {1855, 1869, -1, sizeof(::protobuf_unittest::TestVerifyUint32)},
        {1875, 1889, -1, sizeof(::protobuf_unittest::TestVerifyOneUint32)},
        {1895, 1910, -1, sizeof(::protobuf_unittest::TestVerifyOneInt32BigFieldNumber)},
        {1917, 1933, -1, sizeof(::protobuf_unittest::TestVerifyInt32BigFieldNumber)},
        {1941, 1957, -1, sizeof(::protobuf_unittest::TestVerifyUint32BigFieldNumber)},
        {1965, 1983, -1, sizeof(::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested)},
        {1993, 2002, -1, sizeof(::protobuf_unittest::TestVerifyBigFieldNumberUint32)},
        {2003, 2048, -1, sizeof(::protobuf_unittest::EnumParseTester)},
        {2085, 2103, -1, sizeof(::protobuf_unittest::BoolParseTester)},
        {2113, 2131, -1, sizeof(::protobuf_unittest::Int32ParseTester)},
        {2141, 2159, -1, sizeof(::protobuf_unittest::Int64ParseTester)},
        {2169, 2181, -1, sizeof(::protobuf_unittest::InlinedStringIdxRegressionProto)},
        {2185, 2199, -1, sizeof(::protobuf_unittest::StringParseTester)},
        {2205, 2215, -1, sizeof(::protobuf_unittest::BadFieldNames)},
        {2217, 2227, -1, sizeof(::protobuf_unittest::TestNestedMessageRedaction)},
        {2229, 2239, -1, sizeof(::protobuf_unittest::RedactedFields_MapRedactedStringEntry_DoNotUse)},
        {2241, 2251, -1, sizeof(::protobuf_unittest::RedactedFields_MapUnredactedStringEntry_DoNotUse)},
        {2253, 2271, -1, sizeof(::protobuf_unittest::RedactedFields)},
        {2281, 2291, -1, sizeof(::protobuf_unittest::TestCord)},
        {2293, -1, -1, sizeof(::protobuf_unittest::TestPackedEnumSmallRange)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf_unittest::_TestAllTypes_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestAllTypes_OptionalGroup_default_instance_._instance,
    &::protobuf_unittest::_TestAllTypes_RepeatedGroup_default_instance_._instance,
    &::protobuf_unittest::_TestAllTypes_default_instance_._instance,
    &::protobuf_unittest::_NestedTestAllTypes_default_instance_._instance,
    &::protobuf_unittest::_TestDeprecatedFields_default_instance_._instance,
    &::protobuf_unittest::_TestDeprecatedMessage_default_instance_._instance,
    &::protobuf_unittest::_ForeignMessage_default_instance_._instance,
    &::protobuf_unittest::_TestReservedFields_default_instance_._instance,
    &::protobuf_unittest::_TestAllExtensions_default_instance_._instance,
    &::protobuf_unittest::_OptionalGroup_extension_default_instance_._instance,
    &::protobuf_unittest::_RepeatedGroup_extension_default_instance_._instance,
    &::protobuf_unittest::_TestMixedFieldsAndExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestGroup_OptionalGroup_default_instance_._instance,
    &::protobuf_unittest::_TestGroup_default_instance_._instance,
    &::protobuf_unittest::_TestGroupExtension_default_instance_._instance,
    &::protobuf_unittest::_TestNestedExtension_OptionalGroup_extension_default_instance_._instance,
    &::protobuf_unittest::_TestNestedExtension_default_instance_._instance,
    &::protobuf_unittest::_TestChildExtension_default_instance_._instance,
    &::protobuf_unittest::_TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestChildExtensionData_NestedTestAllExtensionsData_default_instance_._instance,
    &::protobuf_unittest::_TestChildExtensionData_default_instance_._instance,
    &::protobuf_unittest::_TestNestedChildExtension_default_instance_._instance,
    &::protobuf_unittest::_TestNestedChildExtensionData_default_instance_._instance,
    &::protobuf_unittest::_TestRequired_default_instance_._instance,
    &::protobuf_unittest::_TestRequiredForeign_default_instance_._instance,
    &::protobuf_unittest::_TestRequiredMessage_default_instance_._instance,
    &::protobuf_unittest::_TestNestedRequiredForeign_default_instance_._instance,
    &::protobuf_unittest::_TestForeignNested_default_instance_._instance,
    &::protobuf_unittest::_TestEmptyMessage_default_instance_._instance,
    &::protobuf_unittest::_TestEmptyMessageWithExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestPickleNestedMessage_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestPickleNestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestMultipleExtensionRanges_default_instance_._instance,
    &::protobuf_unittest::_TestReallyLargeTagNumber_default_instance_._instance,
    &::protobuf_unittest::_TestRecursiveMessage_default_instance_._instance,
    &::protobuf_unittest::_TestMutualRecursionA_SubMessage_default_instance_._instance,
    &::protobuf_unittest::_TestMutualRecursionA_SubGroup_default_instance_._instance,
    &::protobuf_unittest::_TestMutualRecursionA_SubGroupR_default_instance_._instance,
    &::protobuf_unittest::_TestMutualRecursionA_default_instance_._instance,
    &::protobuf_unittest::_TestMutualRecursionB_default_instance_._instance,
    &::protobuf_unittest::_TestIsInitialized_SubMessage_SubGroup_default_instance_._instance,
    &::protobuf_unittest::_TestIsInitialized_SubMessage_default_instance_._instance,
    &::protobuf_unittest::_TestIsInitialized_default_instance_._instance,
    &::protobuf_unittest::_TestDupFieldNumber_Foo_default_instance_._instance,
    &::protobuf_unittest::_TestDupFieldNumber_Bar_default_instance_._instance,
    &::protobuf_unittest::_TestDupFieldNumber_default_instance_._instance,
    &::protobuf_unittest::_TestEagerMessage_default_instance_._instance,
    &::protobuf_unittest::_TestLazyMessage_default_instance_._instance,
    &::protobuf_unittest::_TestLazyMessageRepeated_default_instance_._instance,
    &::protobuf_unittest::_TestEagerMaybeLazy_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestEagerMaybeLazy_default_instance_._instance,
    &::protobuf_unittest::_TestNestedMessageHasBits_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestNestedMessageHasBits_default_instance_._instance,
    &::protobuf_unittest::_TestCamelCaseFieldNames_default_instance_._instance,
    &::protobuf_unittest::_TestFieldOrderings_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestFieldOrderings_default_instance_._instance,
    &::protobuf_unittest::_TestExtensionOrderings1_default_instance_._instance,
    &::protobuf_unittest::_TestExtensionOrderings2_TestExtensionOrderings3_default_instance_._instance,
    &::protobuf_unittest::_TestExtensionOrderings2_default_instance_._instance,
    &::protobuf_unittest::_TestExtremeDefaultValues_default_instance_._instance,
    &::protobuf_unittest::_SparseEnumMessage_default_instance_._instance,
    &::protobuf_unittest::_OneString_default_instance_._instance,
    &::protobuf_unittest::_MoreString_default_instance_._instance,
    &::protobuf_unittest::_OneBytes_default_instance_._instance,
    &::protobuf_unittest::_MoreBytes_default_instance_._instance,
    &::protobuf_unittest::_ManyOptionalString_default_instance_._instance,
    &::protobuf_unittest::_Int32Message_default_instance_._instance,
    &::protobuf_unittest::_Uint32Message_default_instance_._instance,
    &::protobuf_unittest::_Int64Message_default_instance_._instance,
    &::protobuf_unittest::_Uint64Message_default_instance_._instance,
    &::protobuf_unittest::_BoolMessage_default_instance_._instance,
    &::protobuf_unittest::_TestOneof_FooGroup_default_instance_._instance,
    &::protobuf_unittest::_TestOneof_default_instance_._instance,
    &::protobuf_unittest::_TestOneofBackwardsCompatible_FooGroup_default_instance_._instance,
    &::protobuf_unittest::_TestOneofBackwardsCompatible_default_instance_._instance,
    &::protobuf_unittest::_TestOneof2_FooGroup_default_instance_._instance,
    &::protobuf_unittest::_TestOneof2_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestOneof2_default_instance_._instance,
    &::protobuf_unittest::_TestRequiredOneof_NestedMessage_default_instance_._instance,
    &::protobuf_unittest::_TestRequiredOneof_default_instance_._instance,
    &::protobuf_unittest::_TestPackedTypes_default_instance_._instance,
    &::protobuf_unittest::_TestUnpackedTypes_default_instance_._instance,
    &::protobuf_unittest::_TestPackedExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestUnpackedExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestDynamicExtensions_DynamicMessageType_default_instance_._instance,
    &::protobuf_unittest::_TestDynamicExtensions_default_instance_._instance,
    &::protobuf_unittest::_TestRepeatedString_default_instance_._instance,
    &::protobuf_unittest::_TestRepeatedScalarDifferentTagSizes_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_RepeatedFieldsGenerator_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_OptionalGroup_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_RepeatedGroup_default_instance_._instance,
    &::protobuf_unittest::_TestParsingMerge_default_instance_._instance,
    &::protobuf_unittest::_TestMergeException_default_instance_._instance,
    &::protobuf_unittest::_TestCommentInjectionMessage_default_instance_._instance,
    &::protobuf_unittest::_TestMessageSize_default_instance_._instance,
    &::protobuf_unittest::_FooRequest_default_instance_._instance,
    &::protobuf_unittest::_FooResponse_default_instance_._instance,
    &::protobuf_unittest::_FooClientMessage_default_instance_._instance,
    &::protobuf_unittest::_FooServerMessage_default_instance_._instance,
    &::protobuf_unittest::_BarRequest_default_instance_._instance,
    &::protobuf_unittest::_BarResponse_default_instance_._instance,
    &::protobuf_unittest::_TestJsonName_default_instance_._instance,
    &::protobuf_unittest::_TestHugeFieldNumbers_OptionalGroup_default_instance_._instance,
    &::protobuf_unittest::_TestHugeFieldNumbers_StringStringMapEntry_DoNotUse_default_instance_._instance,
    &::protobuf_unittest::_TestHugeFieldNumbers_default_instance_._instance,
    &::protobuf_unittest::_TestExtensionInsideTable_default_instance_._instance,
    &::protobuf_unittest::_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_._instance,
    &::protobuf_unittest::_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_._instance,
    &::protobuf_unittest::_TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_._instance,
    &::protobuf_unittest::_TestNestedGroupExtensionOuter_default_instance_._instance,
    &::protobuf_unittest::_TestNestedGroupExtensionInnerExtension_default_instance_._instance,
    &::protobuf_unittest::_TestExtensionRangeSerialize_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyInt32Simple_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyInt32_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyMostlyInt32_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyMostlyInt32BigFieldNumber_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyUint32Simple_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyUint32_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyOneUint32_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyOneInt32BigFieldNumber_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyInt32BigFieldNumber_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyUint32BigFieldNumber_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyBigFieldNumberUint32_Nested_default_instance_._instance,
    &::protobuf_unittest::_TestVerifyBigFieldNumberUint32_default_instance_._instance,
    &::protobuf_unittest::_EnumParseTester_default_instance_._instance,
    &::protobuf_unittest::_BoolParseTester_default_instance_._instance,
    &::protobuf_unittest::_Int32ParseTester_default_instance_._instance,
    &::protobuf_unittest::_Int64ParseTester_default_instance_._instance,
    &::protobuf_unittest::_InlinedStringIdxRegressionProto_default_instance_._instance,
    &::protobuf_unittest::_StringParseTester_default_instance_._instance,
    &::protobuf_unittest::_BadFieldNames_default_instance_._instance,
    &::protobuf_unittest::_TestNestedMessageRedaction_default_instance_._instance,
    &::protobuf_unittest::_RedactedFields_MapRedactedStringEntry_DoNotUse_default_instance_._instance,
    &::protobuf_unittest::_RedactedFields_MapUnredactedStringEntry_DoNotUse_default_instance_._instance,
    &::protobuf_unittest::_RedactedFields_default_instance_._instance,
    &::protobuf_unittest::_TestCord_default_instance_._instance,
    &::protobuf_unittest::_TestPackedEnumSmallRange_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2funittest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036google/protobuf/unittest.proto\022\021protob"
    "uf_unittest\032%google/protobuf/unittest_im"
    "port.proto\"\312\031\n\014TestAllTypes\022\026\n\016optional_"
    "int32\030\001 \001(\005\022\026\n\016optional_int64\030\002 \001(\003\022\027\n\017o"
    "ptional_uint32\030\003 \001(\r\022\027\n\017optional_uint64\030"
    "\004 \001(\004\022\027\n\017optional_sint32\030\005 \001(\021\022\027\n\017option"
    "al_sint64\030\006 \001(\022\022\030\n\020optional_fixed32\030\007 \001("
    "\007\022\030\n\020optional_fixed64\030\010 \001(\006\022\031\n\021optional_"
    "sfixed32\030\t \001(\017\022\031\n\021optional_sfixed64\030\n \001("
    "\020\022\026\n\016optional_float\030\013 \001(\002\022\027\n\017optional_do"
    "uble\030\014 \001(\001\022\025\n\roptional_bool\030\r \001(\010\022\027\n\017opt"
    "ional_string\030\016 \001(\t\022\026\n\016optional_bytes\030\017 \001"
    "(\014\022D\n\roptionalgroup\030\020 \001(\n2-.protobuf_uni"
    "ttest.TestAllTypes.OptionalGroup\022N\n\027opti"
    "onal_nested_message\030\022 \001(\0132-.protobuf_uni"
    "ttest.TestAllTypes.NestedMessage\022C\n\030opti"
    "onal_foreign_message\030\023 \001(\0132!.protobuf_un"
    "ittest.ForeignMessage\022H\n\027optional_import"
    "_message\030\024 \001(\0132\'.protobuf_unittest_impor"
    "t.ImportMessage\022H\n\024optional_nested_enum\030"
    "\025 \001(\0162*.protobuf_unittest.TestAllTypes.N"
    "estedEnum\022=\n\025optional_foreign_enum\030\026 \001(\016"
    "2\036.protobuf_unittest.ForeignEnum\022B\n\024opti"
    "onal_import_enum\030\027 \001(\0162$.protobuf_unitte"
    "st_import.ImportEnum\022!\n\025optional_string_"
    "piece\030\030 \001(\tB\002\010\002\022\031\n\roptional_cord\030\031 \001(\tB\002"
    "\010\001\022U\n\036optional_public_import_message\030\032 \001"
    "(\0132-.protobuf_unittest_import.PublicImpo"
    "rtMessage\022P\n\025optional_lazy_message\030\033 \001(\013"
    "2-.protobuf_unittest.TestAllTypes.Nested"
    "MessageB\002(\001\022[\n optional_unverified_lazy_"
    "message\030\034 \001(\0132-.protobuf_unittest.TestAl"
    "lTypes.NestedMessageB\002x\001\022\026\n\016repeated_int"
    "32\030\037 \003(\005\022\026\n\016repeated_int64\030  \003(\003\022\027\n\017repe"
    "ated_uint32\030! \003(\r\022\027\n\017repeated_uint64\030\" \003"
    "(\004\022\027\n\017repeated_sint32\030# \003(\021\022\027\n\017repeated_"
    "sint64\030$ \003(\022\022\030\n\020repeated_fixed32\030% \003(\007\022\030"
    "\n\020repeated_fixed64\030& \003(\006\022\031\n\021repeated_sfi"
    "xed32\030\' \003(\017\022\031\n\021repeated_sfixed64\030( \003(\020\022\026"
    "\n\016repeated_float\030) \003(\002\022\027\n\017repeated_doubl"
    "e\030* \003(\001\022\025\n\rrepeated_bool\030+ \003(\010\022\027\n\017repeat"
    "ed_string\030, \003(\t\022\026\n\016repeated_bytes\030- \003(\014\022"
    "D\n\rrepeatedgroup\030. \003(\n2-.protobuf_unitte"
    "st.TestAllTypes.RepeatedGroup\022N\n\027repeate"
    "d_nested_message\0300 \003(\0132-.protobuf_unitte"
    "st.TestAllTypes.NestedMessage\022C\n\030repeate"
    "d_foreign_message\0301 \003(\0132!.protobuf_unitt"
    "est.ForeignMessage\022H\n\027repeated_import_me"
    "ssage\0302 \003(\0132\'.protobuf_unittest_import.I"
    "mportMessage\022H\n\024repeated_nested_enum\0303 \003"
    "(\0162*.protobuf_unittest.TestAllTypes.Nest"
    "edEnum\022=\n\025repeated_foreign_enum\0304 \003(\0162\036."
    "protobuf_unittest.ForeignEnum\022B\n\024repeate"
    "d_import_enum\0305 \003(\0162$.protobuf_unittest_"
    "import.ImportEnum\022!\n\025repeated_string_pie"
    "ce\0306 \003(\tB\002\010\002\022\031\n\rrepeated_cord\0307 \003(\tB\002\010\001\022"
    "P\n\025repeated_lazy_message\0309 \003(\0132-.protobu"
    "f_unittest.TestAllTypes.NestedMessageB\002("
    "\001\022\031\n\rdefault_int32\030= \001(\005:\00241\022\031\n\rdefault_"
    "int64\030> \001(\003:\00242\022\032\n\016default_uint32\030\? \001(\r:"
    "\00243\022\032\n\016default_uint64\030@ \001(\004:\00244\022\033\n\016defau"
    "lt_sint32\030A \001(\021:\003-45\022\032\n\016default_sint64\030B"
    " \001(\022:\00246\022\033\n\017default_fixed32\030C \001(\007:\00247\022\033\n"
    "\017default_fixed64\030D \001(\006:\00248\022\034\n\020default_sf"
    "ixed32\030E \001(\017:\00249\022\035\n\020default_sfixed64\030F \001"
    "(\020:\003-50\022\033\n\rdefault_float\030G \001(\002:\00451.5\022\035\n\016"
    "default_double\030H \001(\001:\00552000\022\032\n\014default_b"
    "ool\030I \001(\010:\004true\022\035\n\016default_string\030J \001(\t:"
    "\005hello\022\034\n\rdefault_bytes\030K \001(\014:\005world\022L\n\023"
    "default_nested_enum\030Q \001(\0162*.protobuf_uni"
    "ttest.TestAllTypes.NestedEnum:\003BAR\022I\n\024de"
    "fault_foreign_enum\030R \001(\0162\036.protobuf_unit"
    "test.ForeignEnum:\013FOREIGN_BAR\022M\n\023default"
    "_import_enum\030S \001(\0162$.protobuf_unittest_i"
    "mport.ImportEnum:\nIMPORT_BAR\022%\n\024default_"
    "string_piece\030T \001(\t:\003abcB\002\010\002\022\035\n\014default_c"
    "ord\030U \001(\t:\003123B\002\010\001\022\026\n\014oneof_uint32\030o \001(\r"
    "H\000\022M\n\024oneof_nested_message\030p \001(\0132-.proto"
    "buf_unittest.TestAllTypes.NestedMessageH"
    "\000\022\026\n\014oneof_string\030q \001(\tH\000\022\025\n\013oneof_bytes"
    "\030r \001(\014H\000\032\033\n\rNestedMessage\022\n\n\002bb\030\001 \001(\005\032\032\n"
    "\rOptionalGroup\022\t\n\001a\030\021 \001(\005\032\032\n\rRepeatedGro"
    "up\022\t\n\001a\030/ \001(\005\"9\n\nNestedEnum\022\007\n\003FOO\020\001\022\007\n\003"
    "BAR\020\002\022\007\n\003BAZ\020\003\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001B\r\n\013oneo"
    "f_field\"\264\002\n\022NestedTestAllTypes\0224\n\005child\030"
    "\001 \001(\0132%.protobuf_unittest.NestedTestAllT"
    "ypes\0220\n\007payload\030\002 \001(\0132\037.protobuf_unittes"
    "t.TestAllTypes\022=\n\016repeated_child\030\003 \003(\0132%"
    ".protobuf_unittest.NestedTestAllTypes\022=\n"
    "\nlazy_child\030\004 \001(\0132%.protobuf_unittest.Ne"
    "stedTestAllTypesB\002(\001\0228\n\013eager_child\030\005 \001("
    "\0132\037.protobuf_unittest.TestAllTypesB\002(\000\"\235"
    "\002\n\024TestDeprecatedFields\022\034\n\020deprecated_in"
    "t32\030\001 \001(\005B\002\030\001\022&\n\032deprecated_repeated_str"
    "ing\030\004 \003(\tB\002\030\001\022M\n\022deprecated_message\030\003 \001("
    "\0132-.protobuf_unittest.TestAllTypes.Neste"
    "dMessageB\002\030\001\022\'\n\031deprecated_int32_in_oneo"
    "f\030\002 \001(\005B\002\030\001H\000\0227\n\006nested\030\005 \001(\0132\'.protobuf"
    "_unittest.TestDeprecatedFieldsB\016\n\014oneof_"
    "fields\"\033\n\025TestDeprecatedMessage:\002\030\001\"&\n\016F"
    "oreignMessage\022\t\n\001c\030\001 \001(\005\022\t\n\001d\030\002 \001(\005\"0\n\022T"
    "estReservedFieldsJ\004\010\002\020\003J\004\010\017\020\020J\004\010\t\020\014R\003bar"
    "R\003baz\"\035\n\021TestAllExtensions*\010\010\001\020\200\200\200\200\002\"$\n\027"
    "OptionalGroup_extension\022\t\n\001a\030\021 \001(\005\"$\n\027Re"
    "peatedGroup_extension\022\t\n\001a\030/ \001(\005\"\270\001\n\034Tes"
    "tMixedFieldsAndExtensions\022\t\n\001a\030\001 \001(\005\022\t\n\001"
    "b\030\003 \003(\007*\004\010\002\020\003*\004\010\004\020\0052:\n\001c\022/.protobuf_unit"
    "test.TestMixedFieldsAndExtensions\030\002 \001(\0052"
    ":\n\001d\022/.protobuf_unittest.TestMixedFields"
    "AndExtensions\030\004 \003(\007\"\265\001\n\tTestGroup\022A\n\ropt"
    "ionalgroup\030\020 \001(\n2*.protobuf_unittest.Tes"
    "tGroup.OptionalGroup\022=\n\025optional_foreign"
    "_enum\030\026 \001(\0162\036.protobuf_unittest.ForeignE"
    "num\032&\n\rOptionalGroup\022\t\n\001a\030\021 \001(\005\022\n\n\002zz\030Y "
    "\001(\005\"\036\n\022TestGroupExtension*\010\010\001\020\200\200\200\200\002\"\267\003\n\023"
    "TestNestedExtension\032$\n\027OptionalGroup_ext"
    "ension\022\t\n\001a\030\021 \001(\00529\n\004test\022$.protobuf_uni"
    "ttest.TestAllExtensions\030\352\007 \001(\t:\004test2F\n\027"
    "nested_string_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\030\353\007 \001(\t2\206\001\n\027optiona"
    "lgroup_extension\022%.protobuf_unittest.Tes"
    "tGroupExtension\030\020 \001(\n2>.protobuf_unittes"
    "t.TestNestedExtension.OptionalGroup_exte"
    "nsion2n\n\037optional_foreign_enum_extension"
    "\022%.protobuf_unittest.TestGroupExtension\030"
    "\026 \001(\0162\036.protobuf_unittest.ForeignEnum\"l\n"
    "\022TestChildExtension\022\t\n\001a\030\001 \001(\t\022\t\n\001b\030\002 \001("
    "\t\022@\n\022optional_extension\030\003 \001(\0132$.protobuf"
    "_unittest.TestAllExtensions\"\326\002\n\026TestChil"
    "dExtensionData\022\t\n\001a\030\001 \001(\t\022\t\n\001b\030\002 \001(\t\022a\n\022"
    "optional_extension\030\003 \001(\0132E.protobuf_unit"
    "test.TestChildExtensionData.NestedTestAl"
    "lExtensionsData\032\302\001\n\033NestedTestAllExtensi"
    "onsData\022r\n\007dynamic\030\200\304\256\303\001 \001(\0132].protobuf_"
    "unittest.TestChildExtensionData.NestedTe"
    "stAllExtensionsData.NestedDynamicExtensi"
    "ons\032/\n\027NestedDynamicExtensions\022\t\n\001a\030\001 \001("
    "\005\022\t\n\001b\030\002 \001(\005\"[\n\030TestNestedChildExtension"
    "\022\t\n\001a\030\001 \001(\005\0224\n\005child\030\002 \001(\0132%.protobuf_un"
    "ittest.TestChildExtension\"c\n\034TestNestedC"
    "hildExtensionData\022\t\n\001a\030\001 \001(\005\0228\n\005child\030\002 "
    "\001(\0132).protobuf_unittest.TestChildExtensi"
    "onData\"\222\006\n\014TestRequired\022\t\n\001a\030\001 \002(\005\022\016\n\006du"
    "mmy2\030\002 \001(\005\022\t\n\001b\030\003 \002(\005\022\016\n\006dummy4\030\004 \001(\005\022\016\n"
    "\006dummy5\030\005 \001(\005\022\016\n\006dummy6\030\006 \001(\005\022\016\n\006dummy7\030"
    "\007 \001(\005\022\016\n\006dummy8\030\010 \001(\005\022\016\n\006dummy9\030\t \001(\005\022\017\n"
    "\007dummy10\030\n \001(\005\022\017\n\007dummy11\030\013 \001(\005\022\017\n\007dummy"
    "12\030\014 \001(\005\022\017\n\007dummy13\030\r \001(\005\022\017\n\007dummy14\030\016 \001"
    "(\005\022\017\n\007dummy15\030\017 \001(\005\022\017\n\007dummy16\030\020 \001(\005\022\017\n\007"
    "dummy17\030\021 \001(\005\022\017\n\007dummy18\030\022 \001(\005\022\017\n\007dummy1"
    "9\030\023 \001(\005\022\017\n\007dummy20\030\024 \001(\005\022\017\n\007dummy21\030\025 \001("
    "\005\022\017\n\007dummy22\030\026 \001(\005\022\017\n\007dummy23\030\027 \001(\005\022\017\n\007d"
    "ummy24\030\030 \001(\005\022\017\n\007dummy25\030\031 \001(\005\022\017\n\007dummy26"
    "\030\032 \001(\005\022\017\n\007dummy27\030\033 \001(\005\022\017\n\007dummy28\030\034 \001(\005"
    "\022\017\n\007dummy29\030\035 \001(\005\022\017\n\007dummy30\030\036 \001(\005\022\017\n\007du"
    "mmy31\030\037 \001(\005\022\017\n\007dummy32\030  \001(\005\022\t\n\001c\030! \002(\005\022"
    ";\n\020optional_foreign\030\" \001(\0132!.protobuf_uni"
    "ttest.ForeignMessage2V\n\006single\022$.protobu"
    "f_unittest.TestAllExtensions\030\350\007 \001(\0132\037.pr"
    "otobuf_unittest.TestRequired2U\n\005multi\022$."
    "protobuf_unittest.TestAllExtensions\030\351\007 \003"
    "(\0132\037.protobuf_unittest.TestRequired\"\344\001\n\023"
    "TestRequiredForeign\0229\n\020optional_message\030"
    "\001 \001(\0132\037.protobuf_unittest.TestRequired\0229"
    "\n\020repeated_message\030\002 \003(\0132\037.protobuf_unit"
    "test.TestRequired\022\r\n\005dummy\030\003 \001(\005\022H\n\025opti"
    "onal_lazy_message\030\004 \001(\0132%.protobuf_unitt"
    "est.NestedTestAllTypesB\002(\001\"\306\001\n\023TestRequi"
    "redMessage\0229\n\020optional_message\030\001 \001(\0132\037.p"
    "rotobuf_unittest.TestRequired\0229\n\020repeate"
    "d_message\030\002 \003(\0132\037.protobuf_unittest.Test"
    "Required\0229\n\020required_message\030\003 \002(\0132\037.pro"
    "tobuf_unittest.TestRequired\"\240\001\n\031TestNest"
    "edRequiredForeign\022;\n\005child\030\001 \001(\0132,.proto"
    "buf_unittest.TestNestedRequiredForeign\0227"
    "\n\007payload\030\002 \001(\0132&.protobuf_unittest.Test"
    "RequiredForeign\022\r\n\005dummy\030\003 \001(\005\"Z\n\021TestFo"
    "reignNested\022E\n\016foreign_nested\030\001 \001(\0132-.pr"
    "otobuf_unittest.TestAllTypes.NestedMessa"
    "ge\"\022\n\020TestEmptyMessage\"*\n\036TestEmptyMessa"
    "geWithExtensions*\010\010\001\020\200\200\200\200\002\"Y\n\027TestPickle"
    "NestedMessage\032>\n\rNestedMessage\022\n\n\002bb\030\001 \001"
    "(\005\032!\n\023NestedNestedMessage\022\n\n\002cc\030\001 \001(\005\"7\n"
    "\033TestMultipleExtensionRanges*\004\010*\020+*\006\010\257 \020"
    "\224!*\n\010\200\200\004\020\200\200\200\200\002\"4\n\030TestReallyLargeTagNumb"
    "er\022\t\n\001a\030\001 \001(\005\022\r\n\002bb\030\377\377\377\177 \001(\005\"U\n\024TestRecu"
    "rsiveMessage\0222\n\001a\030\001 \001(\0132\'.protobuf_unitt"
    "est.TestRecursiveMessage\022\t\n\001i\030\002 \001(\005\"\346\003\n\024"
    "TestMutualRecursionA\0223\n\002bb\030\001 \001(\0132\'.proto"
    "buf_unittest.TestMutualRecursionB\022B\n\010sub"
    "group\030\002 \001(\n20.protobuf_unittest.TestMutu"
    "alRecursionA.SubGroup\022D\n\tsubgroupr\030\005 \003(\n"
    "21.protobuf_unittest.TestMutualRecursion"
    "A.SubGroupR\032@\n\nSubMessage\0222\n\001b\030\001 \001(\0132\'.p"
    "rotobuf_unittest.TestMutualRecursionB\032\215\001"
    "\n\010SubGroup\022G\n\013sub_message\030\003 \001(\01322.protob"
    "uf_unittest.TestMutualRecursionA.SubMess"
    "age\0228\n\017not_in_this_scc\030\004 \001(\0132\037.protobuf_"
    "unittest.TestAllTypes\032=\n\tSubGroupR\0220\n\007pa"
    "yload\030\006 \001(\0132\037.protobuf_unittest.TestAllT"
    "ypes\"b\n\024TestMutualRecursionB\0222\n\001a\030\001 \001(\0132"
    "\'.protobuf_unittest.TestMutualRecursionA"
    "\022\026\n\016optional_int32\030\002 \001(\005\"\312\001\n\021TestIsIniti"
    "alized\022D\n\013sub_message\030\001 \001(\0132/.protobuf_u"
    "nittest.TestIsInitialized.SubMessage\032o\n\n"
    "SubMessage\022J\n\010subgroup\030\001 \001(\n28.protobuf_"
    "unittest.TestIsInitialized.SubMessage.Su"
    "bGroup\032\025\n\010SubGroup\022\t\n\001i\030\002 \002(\005\"\263\001\n\022TestDu"
    "pFieldNumber\022\t\n\001a\030\001 \001(\005\0226\n\003foo\030\002 \001(\n2).p"
    "rotobuf_unittest.TestDupFieldNumber.Foo\022"
    "6\n\003bar\030\003 \001(\n2).protobuf_unittest.TestDup"
    "FieldNumber.Bar\032\020\n\003Foo\022\t\n\001a\030\001 \001(\005\032\020\n\003Bar"
    "\022\t\n\001a\030\001 \001(\005\"L\n\020TestEagerMessage\0228\n\013sub_m"
    "essage\030\001 \001(\0132\037.protobuf_unittest.TestAll"
    "TypesB\002(\000\"K\n\017TestLazyMessage\0228\n\013sub_mess"
    "age\030\001 \001(\0132\037.protobuf_unittest.TestAllTyp"
    "esB\002(\001\"W\n\027TestLazyMessageRepeated\022<\n\020rep"
    "eated_message\030\001 \003(\0132\".protobuf_unittest."
    "TestLazyMessage\"\217\002\n\022TestEagerMaybeLazy\0224"
    "\n\013message_foo\030\001 \001(\0132\037.protobuf_unittest."
    "TestAllTypes\0224\n\013message_bar\030\002 \001(\0132\037.prot"
    "obuf_unittest.TestAllTypes\022H\n\013message_ba"
    "z\030\003 \001(\01323.protobuf_unittest.TestEagerMay"
    "beLazy.NestedMessage\032C\n\rNestedMessage\0222\n"
    "\006packed\030\001 \001(\0132\".protobuf_unittest.TestPa"
    "ckedTypes\"\200\002\n\030TestNestedMessageHasBits\022Z"
    "\n\027optional_nested_message\030\001 \001(\01329.protob"
    "uf_unittest.TestNestedMessageHasBits.Nes"
    "tedMessage\032\207\001\n\rNestedMessage\022$\n\034nestedme"
    "ssage_repeated_int32\030\001 \003(\005\022P\n%nestedmess"
    "age_repeated_foreignmessage\030\002 \003(\0132!.prot"
    "obuf_unittest.ForeignMessage\"\345\003\n\027TestCam"
    "elCaseFieldNames\022\026\n\016PrimitiveField\030\001 \001(\005"
    "\022\023\n\013StringField\030\002 \001(\t\0221\n\tEnumField\030\003 \001(\016"
    "2\036.protobuf_unittest.ForeignEnum\0227\n\014Mess"
    "ageField\030\004 \001(\0132!.protobuf_unittest.Forei"
    "gnMessage\022\034\n\020StringPieceField\030\005 \001(\tB\002\010\002\022"
    "\025\n\tCordField\030\006 \001(\tB\002\010\001\022\036\n\026RepeatedPrimit"
    "iveField\030\007 \003(\005\022\033\n\023RepeatedStringField\030\010 "
    "\003(\t\0229\n\021RepeatedEnumField\030\t \003(\0162\036.protobu"
    "f_unittest.ForeignEnum\022\?\n\024RepeatedMessag"
    "eField\030\n \003(\0132!.protobuf_unittest.Foreign"
    "Message\022$\n\030RepeatedStringPieceField\030\013 \003("
    "\tB\002\010\002\022\035\n\021RepeatedCordField\030\014 \003(\tB\002\010\001\"\325\001\n"
    "\022TestFieldOrderings\022\021\n\tmy_string\030\013 \001(\t\022\016"
    "\n\006my_int\030\001 \001(\003\022\020\n\010my_float\030e \001(\002\022U\n\027opti"
    "onal_nested_message\030\310\001 \001(\01323.protobuf_un"
    "ittest.TestFieldOrderings.NestedMessage\032"
    "\'\n\rNestedMessage\022\n\n\002oo\030\002 \001(\003\022\n\n\002bb\030\001 \001(\005"
    "*\004\010\002\020\013*\004\010\014\020e\"\234\001\n\027TestExtensionOrderings1"
    "\022\021\n\tmy_string\030\001 \001(\t2n\n\023test_ext_ordering"
    "s1\022%.protobuf_unittest.TestFieldOrdering"
    "s\030\r \001(\0132*.protobuf_unittest.TestExtensio"
    "nOrderings1\"\324\002\n\027TestExtensionOrderings2\022"
    "\021\n\tmy_string\030\001 \001(\t\032\265\001\n\027TestExtensionOrde"
    "rings3\022\021\n\tmy_string\030\001 \001(\t2\206\001\n\023test_ext_o"
    "rderings3\022%.protobuf_unittest.TestFieldO"
    "rderings\030\016 \001(\0132B.protobuf_unittest.TestE"
    "xtensionOrderings2.TestExtensionOrdering"
    "s32n\n\023test_ext_orderings2\022%.protobuf_uni"
    "ttest.TestFieldOrderings\030\014 \001(\0132*.protobu"
    "f_unittest.TestExtensionOrderings2\"\266\007\n\030T"
    "estExtremeDefaultValues\022\?\n\rescaped_bytes"
    "\030\001 \001(\014:(\\000\\001\\007\\010\\014\\n\\r\\t\\013\\\\"
    "\\\'\\\"\\376\022 \n\014large_uint32\030\002 \001(\r:\n42949672"
    "95\022*\n\014large_uint64\030\003 \001(\004:\02418446744073709"
    "551615\022 \n\013small_int32\030\004 \001(\005:\013-2147483647"
    "\022)\n\013small_int64\030\005 \001(\003:\024-9223372036854775"
    "807\022\'\n\022really_small_int32\030\025 \001(\005:\013-214748"
    "3648\0220\n\022really_small_int64\030\026 \001(\003:\024-92233"
    "72036854775808\022\030\n\013utf8_string\030\006 \001(\t:\003\341\210\264"
    "\022\025\n\nzero_float\030\007 \001(\002:\0010\022\024\n\tone_float\030\010 \001"
    "(\002:\0011\022\030\n\013small_float\030\t \001(\002:\0031.5\022\036\n\022negat"
    "ive_one_float\030\n \001(\002:\002-1\022\034\n\016negative_floa"
    "t\030\013 \001(\002:\004-1.5\022\032\n\013large_float\030\014 \001(\002:\0052e+0"
    "8\022$\n\024small_negative_float\030\r \001(\002:\006-8e-28\022"
    "\027\n\ninf_double\030\016 \001(\001:\003inf\022\034\n\016neg_inf_doub"
    "le\030\017 \001(\001:\004-inf\022\027\n\nnan_double\030\020 \001(\001:\003nan\022"
    "\026\n\tinf_float\030\021 \001(\002:\003inf\022\033\n\rneg_inf_float"
    "\030\022 \001(\002:\004-inf\022\026\n\tnan_float\030\023 \001(\002:\003nan\022+\n\014"
    "cpp_trigraph\030\024 \001(\t:\025\? \? \?\? \?\? \?\?\? \?\?/ \?\?"
    "-\022 \n\020string_with_zero\030\027 \001(\t:\006hel\000lo\022\"\n\017b"
    "ytes_with_zero\030\030 \001(\014:\twor\\000ld\022(\n\026strin"
    "g_piece_with_zero\030\031 \001(\t:\004ab\000cB\002\010\002\022 \n\016cor"
    "d_with_zero\030\032 \001(\t:\00412\0003B\002\010\001\022&\n\022replaceme"
    "nt_string\030\033 \001(\t:\n${unknown}\"K\n\021SparseEnu"
    "mMessage\0226\n\013sparse_enum\030\001 \001(\0162!.protobuf"
    "_unittest.TestSparseEnum\"\031\n\tOneString\022\014\n"
    "\004data\030\001 \001(\t\"\032\n\nMoreString\022\014\n\004data\030\001 \003(\t\""
    "\030\n\010OneBytes\022\014\n\004data\030\001 \001(\014\"\031\n\tMoreBytes\022\014"
    "\n\004data\030\001 \003(\014\"\353\003\n\022ManyOptionalString\022\014\n\004s"
    "tr1\030\001 \001(\t\022\014\n\004str2\030\002 \001(\t\022\014\n\004str3\030\003 \001(\t\022\014\n"
    "\004str4\030\004 \001(\t\022\014\n\004str5\030\005 \001(\t\022\014\n\004str6\030\006 \001(\t\022"
    "\014\n\004str7\030\007 \001(\t\022\014\n\004str8\030\010 \001(\t\022\014\n\004str9\030\t \001("
    "\t\022\r\n\005str10\030\n \001(\t\022\r\n\005str11\030\013 \001(\t\022\r\n\005str12"
    "\030\014 \001(\t\022\r\n\005str13\030\r \001(\t\022\r\n\005str14\030\016 \001(\t\022\r\n\005"
    "str15\030\017 \001(\t\022\r\n\005str16\030\020 \001(\t\022\r\n\005str17\030\021 \001("
    "\t\022\r\n\005str18\030\022 \001(\t\022\r\n\005str19\030\023 \001(\t\022\r\n\005str20"
    "\030\024 \001(\t\022\r\n\005str21\030\025 \001(\t\022\r\n\005str22\030\026 \001(\t\022\r\n\005"
    "str23\030\027 \001(\t\022\r\n\005str24\030\030 \001(\t\022\r\n\005str25\030\031 \001("
    "\t\022\r\n\005str26\030\032 \001(\t\022\r\n\005str27\030\033 \001(\t\022\r\n\005str28"
    "\030\034 \001(\t\022\r\n\005str29\030\035 \001(\t\022\r\n\005str30\030\036 \001(\t\022\r\n\005"
    "str31\030\037 \001(\t\022\r\n\005str32\030  \001(\t\"\034\n\014Int32Messa"
    "ge\022\014\n\004data\030\001 \001(\005\"\035\n\rUint32Message\022\014\n\004dat"
    "a\030\001 \001(\r\"\034\n\014Int64Message\022\014\n\004data\030\001 \001(\003\"\035\n"
    "\rUint64Message\022\014\n\004data\030\001 \001(\004\"\033\n\013BoolMess"
    "age\022\014\n\004data\030\001 \001(\010\"\320\001\n\tTestOneof\022\021\n\007foo_i"
    "nt\030\001 \001(\005H\000\022\024\n\nfoo_string\030\002 \001(\tH\000\0226\n\013foo_"
    "message\030\003 \001(\0132\037.protobuf_unittest.TestAl"
    "lTypesH\000\0229\n\010foogroup\030\004 \001(\n2%.protobuf_un"
    "ittest.TestOneof.FooGroupH\000\032 \n\010FooGroup\022"
    "\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\tB\005\n\003foo\"\347\001\n\034TestOne"
    "ofBackwardsCompatible\022\017\n\007foo_int\030\001 \001(\005\022\022"
    "\n\nfoo_string\030\002 \001(\t\0224\n\013foo_message\030\003 \001(\0132"
    "\037.protobuf_unittest.TestAllTypes\022J\n\010foog"
    "roup\030\004 \001(\n28.protobuf_unittest.TestOneof"
    "BackwardsCompatible.FooGroup\032 \n\010FooGroup"
    "\022\t\n\001a\030\005 \001(\005\022\t\n\001b\030\006 \001(\t\"\363\007\n\nTestOneof2\022\021\n"
    "\007foo_int\030\001 \001(\005H\000\022\024\n\nfoo_string\030\002 \001(\tH\000\022\026"
    "\n\010foo_cord\030\003 \001(\tB\002\010\001H\000\022\036\n\020foo_string_pie"
    "ce\030\004 \001(\tB\002\010\002H\000\022\023\n\tfoo_bytes\030\005 \001(\014H\000\022<\n\010f"
    "oo_enum\030\006 \001(\0162(.protobuf_unittest.TestOn"
    "eof2.NestedEnumH\000\022B\n\013foo_message\030\007 \001(\0132+"
    ".protobuf_unittest.TestOneof2.NestedMess"
    "ageH\000\022:\n\010foogroup\030\010 \001(\n2&.protobuf_unitt"
    "est.TestOneof2.FooGroupH\000\022K\n\020foo_lazy_me"
    "ssage\030\013 \001(\0132+.protobuf_unittest.TestOneo"
    "f2.NestedMessageB\002(\001H\000\022\034\n\016foo_bytes_cord"
    "\030\036 \001(\014B\002\010\001H\000\022\024\n\007bar_int\030\014 \001(\005:\0015H\001\022\034\n\nba"
    "r_string\030\r \001(\t:\006STRINGH\001\022\034\n\010bar_cord\030\016 \001"
    "(\t:\004CORDB\002\010\001H\001\022&\n\020bar_string_piece\030\017 \001(\t"
    ":\006SPIECEB\002\010\002H\001\022\032\n\tbar_bytes\030\020 \001(\014:\005BYTES"
    "H\001\022A\n\010bar_enum\030\021 \001(\0162(.protobuf_unittest"
    ".TestOneof2.NestedEnum:\003BARH\001\022)\n\035bar_str"
    "ing_with_empty_default\030\024 \001(\t:\000H\001\022+\n\033bar_"
    "cord_with_empty_default\030\025 \001(\t:\000B\002\010\001H\001\0223\n"
    "#bar_string_piece_with_empty_default\030\026 \001"
    "(\t:\000B\002\010\002H\001\022(\n\034bar_bytes_with_empty_defau"
    "lt\030\027 \001(\014:\000H\001\022\017\n\007baz_int\030\022 \001(\005\022\027\n\nbaz_str"
    "ing\030\023 \001(\t:\003BAZ\032 \n\010FooGroup\022\t\n\001a\030\t \001(\005\022\t\n"
    "\001b\030\n \001(\t\0323\n\rNestedMessage\022\017\n\007moo_int\030\001 \001"
    "(\003\022\021\n\tcorge_int\030\002 \003(\005\"\'\n\nNestedEnum\022\007\n\003F"
    "OO\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020\003B\005\n\003fooB\005\n\003bar\"\214\002\n"
    "\021TestRequiredOneof\022\021\n\007foo_int\030\001 \001(\005H\000\022\024\n"
    "\nfoo_string\030\002 \001(\tH\000\022I\n\013foo_message\030\003 \001(\013"
    "22.protobuf_unittest.TestRequiredOneof.N"
    "estedMessageH\000\022R\n\020foo_lazy_message\030\004 \001(\013"
    "22.protobuf_unittest.TestRequiredOneof.N"
    "estedMessageB\002(\001H\000\032(\n\rNestedMessage\022\027\n\017r"
    "equired_double\030\001 \002(\001B\005\n\003foo\"\252\003\n\017TestPack"
    "edTypes\022\030\n\014packed_int32\030Z \003(\005B\002\020\001\022\030\n\014pac"
    "ked_int64\030[ \003(\003B\002\020\001\022\031\n\rpacked_uint32\030\\ \003"
    "(\rB\002\020\001\022\031\n\rpacked_uint64\030] \003(\004B\002\020\001\022\031\n\rpac"
    "ked_sint32\030^ \003(\021B\002\020\001\022\031\n\rpacked_sint64\030_ "
    "\003(\022B\002\020\001\022\032\n\016packed_fixed32\030` \003(\007B\002\020\001\022\032\n\016p"
    "acked_fixed64\030a \003(\006B\002\020\001\022\033\n\017packed_sfixed"
    "32\030b \003(\017B\002\020\001\022\033\n\017packed_sfixed64\030c \003(\020B\002\020"
    "\001\022\030\n\014packed_float\030d \003(\002B\002\020\001\022\031\n\rpacked_do"
    "uble\030e \003(\001B\002\020\001\022\027\n\013packed_bool\030f \003(\010B\002\020\001\022"
    "7\n\013packed_enum\030g \003(\0162\036.protobuf_unittest"
    ".ForeignEnumB\002\020\001\"\310\003\n\021TestUnpackedTypes\022\032"
    "\n\016unpacked_int32\030Z \003(\005B\002\020\000\022\032\n\016unpacked_i"
    "nt64\030[ \003(\003B\002\020\000\022\033\n\017unpacked_uint32\030\\ \003(\rB"
    "\002\020\000\022\033\n\017unpacked_uint64\030] \003(\004B\002\020\000\022\033\n\017unpa"
    "cked_sint32\030^ \003(\021B\002\020\000\022\033\n\017unpacked_sint64"
    "\030_ \003(\022B\002\020\000\022\034\n\020unpacked_fixed32\030` \003(\007B\002\020\000"
    "\022\034\n\020unpacked_fixed64\030a \003(\006B\002\020\000\022\035\n\021unpack"
    "ed_sfixed32\030b \003(\017B\002\020\000\022\035\n\021unpacked_sfixed"
    "64\030c \003(\020B\002\020\000\022\032\n\016unpacked_float\030d \003(\002B\002\020\000"
    "\022\033\n\017unpacked_double\030e \003(\001B\002\020\000\022\031\n\runpacke"
    "d_bool\030f \003(\010B\002\020\000\0229\n\runpacked_enum\030g \003(\0162"
    "\036.protobuf_unittest.ForeignEnumB\002\020\000\" \n\024T"
    "estPackedExtensions*\010\010\001\020\200\200\200\200\002\"\"\n\026TestUnp"
    "ackedExtensions*\010\010\001\020\200\200\200\200\002\"\231\004\n\025TestDynami"
    "cExtensions\022\031\n\020scalar_extension\030\320\017 \001(\007\0227"
    "\n\016enum_extension\030\321\017 \001(\0162\036.protobuf_unitt"
    "est.ForeignEnum\022Y\n\026dynamic_enum_extensio"
    "n\030\322\017 \001(\01628.protobuf_unittest.TestDynamic"
    "Extensions.DynamicEnumType\022=\n\021message_ex"
    "tension\030\323\017 \001(\0132!.protobuf_unittest.Forei"
    "gnMessage\022_\n\031dynamic_message_extension\030\324"
    "\017 \001(\0132;.protobuf_unittest.TestDynamicExt"
    "ensions.DynamicMessageType\022\033\n\022repeated_e"
    "xtension\030\325\017 \003(\t\022\035\n\020packed_extension\030\326\017 \003"
    "(\021B\002\020\001\032,\n\022DynamicMessageType\022\026\n\rdynamic_"
    "field\030\264\020 \001(\005\"G\n\017DynamicEnumType\022\020\n\013DYNAM"
    "IC_FOO\020\230\021\022\020\n\013DYNAMIC_BAR\020\231\021\022\020\n\013DYNAMIC_B"
    "AZ\020\232\021\"|\n\022TestRepeatedString\022\030\n\020repeated_"
    "string1\030\001 \003(\t\022\030\n\020repeated_string2\030\002 \003(\t\022"
    "\030\n\020repeated_bytes11\030\013 \003(\014\022\030\n\020repeated_by"
    "tes12\030\014 \003(\014\"\300\001\n#TestRepeatedScalarDiffer"
    "entTagSizes\022\030\n\020repeated_fixed32\030\014 \003(\007\022\026\n"
    "\016repeated_int32\030\r \003(\005\022\031\n\020repeated_fixed6"
    "4\030\376\017 \003(\006\022\027\n\016repeated_int64\030\377\017 \003(\003\022\030\n\016rep"
    "eated_float\030\376\377\017 \003(\002\022\031\n\017repeated_uint64\030\377"
    "\377\017 \003(\004\"\367\t\n\020TestParsingMerge\022;\n\022required_"
    "all_types\030\001 \002(\0132\037.protobuf_unittest.Test"
    "AllTypes\022;\n\022optional_all_types\030\002 \001(\0132\037.p"
    "rotobuf_unittest.TestAllTypes\022;\n\022repeate"
    "d_all_types\030\003 \003(\0132\037.protobuf_unittest.Te"
    "stAllTypes\022H\n\roptionalgroup\030\n \001(\n21.prot"
    "obuf_unittest.TestParsingMerge.OptionalG"
    "roup\022H\n\rrepeatedgroup\030\024 \003(\n21.protobuf_u"
    "nittest.TestParsingMerge.RepeatedGroup\032\252"
    "\004\n\027RepeatedFieldsGenerator\022/\n\006field1\030\001 \003"
    "(\0132\037.protobuf_unittest.TestAllTypes\022/\n\006f"
    "ield2\030\002 \003(\0132\037.protobuf_unittest.TestAllT"
    "ypes\022/\n\006field3\030\003 \003(\0132\037.protobuf_unittest"
    ".TestAllTypes\022R\n\006group1\030\n \003(\n2B.protobuf"
    "_unittest.TestParsingMerge.RepeatedField"
    "sGenerator.Group1\022R\n\006group2\030\024 \003(\n2B.prot"
    "obuf_unittest.TestParsingMerge.RepeatedF"
    "ieldsGenerator.Group2\022.\n\004ext1\030\350\007 \003(\0132\037.p"
    "rotobuf_unittest.TestAllTypes\022.\n\004ext2\030\351\007"
    " \003(\0132\037.protobuf_unittest.TestAllTypes\0329\n"
    "\006Group1\022/\n\006field1\030\013 \001(\0132\037.protobuf_unitt"
    "est.TestAllTypes\0329\n\006Group2\022/\n\006field1\030\025 \001"
    "(\0132\037.protobuf_unittest.TestAllTypes\032R\n\rO"
    "ptionalGroup\022A\n\030optional_group_all_types"
    "\030\013 \001(\0132\037.protobuf_unittest.TestAllTypes\032"
    "R\n\rRepeatedGroup\022A\n\030repeated_group_all_t"
    "ypes\030\025 \001(\0132\037.protobuf_unittest.TestAllTy"
    "pes*\t\010\350\007\020\200\200\200\200\0022[\n\014optional_ext\022#.protobu"
    "f_unittest.TestParsingMerge\030\350\007 \001(\0132\037.pro"
    "tobuf_unittest.TestAllTypes2[\n\014repeated_"
    "ext\022#.protobuf_unittest.TestParsingMerge"
    "\030\351\007 \003(\0132\037.protobuf_unittest.TestAllTypes"
    "\"R\n\022TestMergeException\022<\n\016all_extensions"
    "\030\001 \001(\0132$.protobuf_unittest.TestAllExtens"
    "ions\"D\n\033TestCommentInjectionMessage\022%\n\001a"
    "\030\001 \001(\t:\032*/ <- Neither should this.\"Y\n\017Te"
    "stMessageSize\022\n\n\002m1\030\001 \001(\010\022\n\n\002m2\030\002 \001(\003\022\n\n"
    "\002m3\030\003 \001(\010\022\n\n\002m4\030\004 \001(\t\022\n\n\002m5\030\005 \001(\005\022\n\n\002m6\030"
    "\006 \001(\003\"\014\n\nFooRequest\"\r\n\013FooResponse\"\022\n\020Fo"
    "oClientMessage\"\022\n\020FooServerMessage\"\014\n\nBa"
    "rRequest\"\r\n\013BarResponse\"\246\001\n\014TestJsonName"
    "\022\023\n\013field_name1\030\001 \001(\005\022\022\n\nfieldName2\030\002 \001("
    "\005\022\022\n\nFieldName3\030\003 \001(\005\022\024\n\014_field_name4\030\004 "
    "\001(\005\022\023\n\013FIELD_NAME5\030\005 \001(\005\022\032\n\013field_name6\030"
    "\006 \001(\005R\005@type\022\022\n\nfieldname7\030\007 \001(\005\"\375\005\n\024Tes"
    "tHugeFieldNumbers\022\032\n\016optional_int32\030\360\370\377\377"
    "\001 \001(\005\022\024\n\010fixed_32\030\361\370\377\377\001 \001(\005\022\036\n\016repeated_"
    "int32\030\362\370\377\377\001 \003(\005B\002\020\000\022\034\n\014packed_int32\030\363\370\377\377"
    "\001 \003(\005B\002\020\001\0229\n\roptional_enum\030\364\370\377\377\001 \001(\0162\036.p"
    "rotobuf_unittest.ForeignEnum\022\033\n\017optional"
    "_string\030\365\370\377\377\001 \001(\t\022\032\n\016optional_bytes\030\366\370\377\377"
    "\001 \001(\014\022\?\n\020optional_message\030\367\370\377\377\001 \001(\0132!.pr"
    "otobuf_unittest.ForeignMessage\022P\n\roption"
    "algroup\030\370\370\377\377\001 \001(\n25.protobuf_unittest.Te"
    "stHugeFieldNumbers.OptionalGroup\022[\n\021stri"
    "ng_string_map\030\372\370\377\377\001 \003(\0132<.protobuf_unitt"
    "est.TestHugeFieldNumbers.StringStringMap"
    "Entry\022\032\n\014oneof_uint32\030\373\370\377\377\001 \001(\rH\000\022C\n\024one"
    "of_test_all_types\030\374\370\377\377\001 \001(\0132\037.protobuf_u"
    "nittest.TestAllTypesH\000\022\032\n\014oneof_string\030\375"
    "\370\377\377\001 \001(\tH\000\022\031\n\013oneof_bytes\030\376\370\377\377\001 \001(\014H\000\032$\n"
    "\rOptionalGroup\022\023\n\007group_a\030\371\370\377\377\001 \001(\005\0326\n\024S"
    "tringStringMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001*\014\010\340\252\377\377\001\020\360\370\377\377\001B\r\n\013oneof_field"
    "\"\261\001\n\030TestExtensionInsideTable\022\016\n\006field1\030"
    "\001 \001(\005\022\016\n\006field2\030\002 \001(\005\022\016\n\006field3\030\003 \001(\005\022\016\n"
    "\006field4\030\004 \001(\005\022\016\n\006field6\030\006 \001(\005\022\016\n\006field7\030"
    "\007 \001(\005\022\016\n\006field8\030\010 \001(\005\022\016\n\006field9\030\t \001(\005\022\017\n"
    "\007field10\030\n \001(\005*\004\010\005\020\006\"\226\004\n\035TestNestedGroup"
    "ExtensionOuter\022a\n\023layer1optionalgroup\030\001 "
    "\001(\n2D.protobuf_unittest.TestNestedGroupE"
    "xtensionOuter.Layer1OptionalGroup\032\221\003\n\023La"
    "yer1OptionalGroup\022u\n\023layer2repeatedgroup"
    "\030\002 \003(\n2X.protobuf_unittest.TestNestedGro"
    "upExtensionOuter.Layer1OptionalGroup.Lay"
    "er2RepeatedGroup\022\223\001\n\"layer2anotheroption"
    "alrepeatedgroup\030\004 \003(\n2g.protobuf_unittes"
    "t.TestNestedGroupExtensionOuter.Layer1Op"
    "tionalGroup.Layer2AnotherOptionalRepeate"
    "dGroup\0322\n\023Layer2RepeatedGroup\022\025\n\ranother"
    "_field\030\006 \001(\t*\004\010\003\020\004\0329\n\"Layer2AnotherOptio"
    "nalRepeatedGroup\022\023\n\013but_why_tho\030\005 \001(\t\"<\n"
    "&TestNestedGroupExtensionInnerExtension\022"
    "\022\n\ninner_name\030\001 \001(\t\"\321\003\n\033TestExtensionRan"
    "geSerialize\022\017\n\007foo_one\030\001 \001(\005\022\017\n\007foo_two\030"
    "\006 \001(\005\022\021\n\tfoo_three\030\007 \001(\005\022\020\n\010foo_four\030\r \001"
    "(\005*\004\010\002\020\003*\004\010\003\020\005*\004\010\t\020\013*\004\010\017\020\020*\004\010\021\020\022*\004\010\023\020\0242\?"
    "\n\007bar_one\022..protobuf_unittest.TestExtens"
    "ionRangeSerialize\030\002 \001(\0052\?\n\007bar_two\022..pro"
    "tobuf_unittest.TestExtensionRangeSeriali"
    "ze\030\004 \001(\0052A\n\tbar_three\022..protobuf_unittes"
    "t.TestExtensionRangeSerialize\030\n \001(\0052@\n\010b"
    "ar_four\022..protobuf_unittest.TestExtensio"
    "nRangeSerialize\030\017 \001(\0052@\n\010bar_five\022..prot"
    "obuf_unittest.TestExtensionRangeSerializ"
    "e\030\023 \001(\005\"\201\001\n\025TestVerifyInt32Simple\022\030\n\020opt"
    "ional_int32_1\030\001 \001(\005\022\030\n\020optional_int32_2\030"
    "\002 \001(\005\022\031\n\021optional_int32_63\030\? \001(\005\022\031\n\021opti"
    "onal_int32_64\030@ \001(\005\"\365\001\n\017TestVerifyInt32\022"
    "\030\n\020optional_int32_1\030\001 \001(\005\022\030\n\020optional_in"
    "t32_2\030\002 \001(\005\022\031\n\021optional_int32_63\030\? \001(\005\022\031"
    "\n\021optional_int32_64\030@ \001(\005\022;\n\022optional_al"
    "l_types\030\t \001(\0132\037.protobuf_unittest.TestAl"
    "lTypes\022;\n\022repeated_all_types\030\n \003(\0132\037.pro"
    "tobuf_unittest.TestAllTypes\"\312\002\n\025TestVeri"
    "fyMostlyInt32\022\031\n\021optional_int64_30\030\036 \001(\003"
    "\022\030\n\020optional_int32_1\030\001 \001(\005\022\030\n\020optional_i"
    "nt32_2\030\002 \001(\005\022\030\n\020optional_int32_3\030\003 \001(\005\022\030"
    "\n\020optional_int32_4\030\004 \001(\005\022\031\n\021optional_int"
    "32_63\030\? \001(\005\022\031\n\021optional_int32_64\030@ \001(\005\022;"
    "\n\022optional_all_types\030\t \001(\0132\037.protobuf_un"
    "ittest.TestAllTypes\022;\n\022repeated_all_type"
    "s\030\n \003(\0132\037.protobuf_unittest.TestAllTypes"
    "\"\365\002\n#TestVerifyMostlyInt32BigFieldNumber"
    "\022\031\n\021optional_int64_30\030\036 \001(\003\022\033\n\022optional_"
    "int32_300\030\254\002 \001(\005\022\030\n\020optional_int32_1\030\001 \001"
    "(\005\022\030\n\020optional_int32_2\030\002 \001(\005\022\030\n\020optional"
    "_int32_3\030\003 \001(\005\022\030\n\020optional_int32_4\030\004 \001(\005"
    "\022\031\n\021optional_int32_63\030\? \001(\005\022\031\n\021optional_"
    "int32_64\030@ \001(\005\022;\n\022optional_all_types\030\t \001"
    "(\0132\037.protobuf_unittest.TestAllTypes\022;\n\022r"
    "epeated_all_types\030\n \003(\0132\037.protobuf_unitt"
    "est.TestAllTypes\"\206\001\n\026TestVerifyUint32Sim"
    "ple\022\031\n\021optional_uint32_1\030\001 \001(\r\022\031\n\021option"
    "al_uint32_2\030\002 \001(\r\022\032\n\022optional_uint32_63\030"
    "\? \001(\r\022\032\n\022optional_uint32_64\030@ \001(\r\"\372\001\n\020Te"
    "stVerifyUint32\022\031\n\021optional_uint32_1\030\001 \001("
    "\r\022\031\n\021optional_uint32_2\030\002 \001(\r\022\032\n\022optional"
    "_uint32_63\030\? \001(\r\022\032\n\022optional_uint32_64\030@"
    " \001(\r\022;\n\022optional_all_types\030\t \001(\0132\037.proto"
    "buf_unittest.TestAllTypes\022;\n\022repeated_al"
    "l_types\030\n \003(\0132\037.protobuf_unittest.TestAl"
    "lTypes\"\372\001\n\023TestVerifyOneUint32\022\031\n\021option"
    "al_uint32_1\030\001 \001(\r\022\030\n\020optional_int32_2\030\002 "
    "\001(\005\022\031\n\021optional_int32_63\030\? \001(\005\022\031\n\021option"
    "al_int32_64\030@ \001(\005\022;\n\022optional_all_types\030"
    "\t \001(\0132\037.protobuf_unittest.TestAllTypes\022;"
    "\n\022repeated_all_types\030\n \003(\0132\037.protobuf_un"
    "ittest.TestAllTypes\"\241\002\n TestVerifyOneInt"
    "32BigFieldNumber\022\031\n\021optional_int32_65\030A "
    "\001(\005\022\030\n\020optional_int64_1\030\001 \001(\003\022\030\n\020optiona"
    "l_int64_2\030\002 \001(\003\022\031\n\021optional_int64_63\030\? \001"
    "(\003\022\031\n\021optional_int64_64\030@ \001(\003\022;\n\022optiona"
    "l_all_types\030\t \001(\0132\037.protobuf_unittest.Te"
    "stAllTypes\022;\n\022repeated_all_types\030\n \003(\0132\037"
    ".protobuf_unittest.TestAllTypes\"\274\002\n\035Test"
    "VerifyInt32BigFieldNumber\022\034\n\023optional_in"
    "t32_1000\030\350\007 \001(\005\022\031\n\021optional_int32_65\030A \001"
    "(\005\022\030\n\020optional_int32_1\030\001 \001(\005\022\030\n\020optional"
    "_int32_2\030\002 \001(\005\022\031\n\021optional_int32_63\030\? \001("
    "\005\022\031\n\021optional_int32_64\030@ \001(\005\022;\n\022optional"
    "_all_types\030\t \001(\0132\037.protobuf_unittest.Tes"
    "tAllTypes\022;\n\022repeated_all_types\030\n \003(\0132\037."
    "protobuf_unittest.TestAllTypes\"\303\002\n\036TestV"
    "erifyUint32BigFieldNumber\022\035\n\024optional_ui"
    "nt32_1000\030\350\007 \001(\r\022\032\n\022optional_uint32_65\030A"
    " \001(\r\022\031\n\021optional_uint32_1\030\001 \001(\r\022\031\n\021optio"
    "nal_uint32_2\030\002 \001(\r\022\032\n\022optional_uint32_63"
    "\030\? \001(\r\022\032\n\022optional_uint32_64\030@ \001(\r\022;\n\022op"
    "tional_all_types\030\t \001(\0132\037.protobuf_unitte"
    "st.TestAllTypes\022;\n\022repeated_all_types\030\n "
    "\003(\0132\037.protobuf_unittest.TestAllTypes\"\210\004\n"
    "\036TestVerifyBigFieldNumberUint32\022Q\n\017optio"
    "nal_nested\030\001 \001(\01328.protobuf_unittest.Tes"
    "tVerifyBigFieldNumberUint32.Nested\032\222\003\n\006N"
    "ested\022\035\n\024optional_uint32_5000\030\210\' \001(\r\022\035\n\024"
    "optional_uint32_1000\030\350\007 \001(\r\022\032\n\022optional_"
    "uint32_66\030B \001(\r\022\032\n\022optional_uint32_65\030A "
    "\001(\r\022\031\n\021optional_uint32_1\030\001 \001(\r\022\031\n\021option"
    "al_uint32_2\030\002 \001(\r\022\032\n\022optional_uint32_63\030"
    "\? \001(\r\022\032\n\022optional_uint32_64\030@ \001(\r\022Q\n\017opt"
    "ional_nested\030\t \001(\01328.protobuf_unittest.T"
    "estVerifyBigFieldNumberUint32.Nested\022Q\n\017"
    "repeated_nested\030\n \003(\01328.protobuf_unittes"
    "t.TestVerifyBigFieldNumberUint32.Nested\""
    "\306\"\n\017EnumParseTester\022S\n\035optional_seq_smal"
    "l_0_lowfield\030\001 \001(\0162,.protobuf_unittest.E"
    "numParseTester.SeqSmall0\022T\n\035optional_seq"
    "_small_0_midfield\030\351\007 \001(\0162,.protobuf_unit"
    "test.EnumParseTester.SeqSmall0\022T\n\034option"
    "al_seq_small_0_hifield\030\301\204= \001(\0162,.protobu"
    "f_unittest.EnumParseTester.SeqSmall0\022S\n\035"
    "repeated_seq_small_0_lowfield\030\002 \003(\0162,.pr"
    "otobuf_unittest.EnumParseTester.SeqSmall"
    "0\022T\n\035repeated_seq_small_0_midfield\030\352\007 \003("
    "\0162,.protobuf_unittest.EnumParseTester.Se"
    "qSmall0\022T\n\034repeated_seq_small_0_hifield\030"
    "\302\204= \003(\0162,.protobuf_unittest.EnumParseTes"
    "ter.SeqSmall0\022U\n\033packed_seq_small_0_lowf"
    "ield\030\003 \003(\0162,.protobuf_unittest.EnumParse"
    "Tester.SeqSmall0B\002\020\001\022V\n\033packed_seq_small"
    "_0_midfield\030\353\007 \003(\0162,.protobuf_unittest.E"
    "numParseTester.SeqSmall0B\002\020\001\022V\n\032packed_s"
    "eq_small_0_hifield\030\303\204= \003(\0162,.protobuf_un"
    "ittest.EnumParseTester.SeqSmall0B\002\020\001\022S\n\035"
    "optional_seq_small_1_lowfield\030\004 \001(\0162,.pr"
    "otobuf_unittest.EnumParseTester.SeqSmall"
    "1\022T\n\035optional_seq_small_1_midfield\030\354\007 \001("
    "\0162,.protobuf_unittest.EnumParseTester.Se"
    "qSmall1\022T\n\034optional_seq_small_1_hifield\030"
    "\304\204= \001(\0162,.protobuf_unittest.EnumParseTes"
    "ter.SeqSmall1\022S\n\035repeated_seq_small_1_lo"
    "wfield\030\005 \003(\0162,.protobuf_unittest.EnumPar"
    "seTester.SeqSmall1\022T\n\035repeated_seq_small"
    "_1_midfield\030\355\007 \003(\0162,.protobuf_unittest.E"
    "numParseTester.SeqSmall1\022T\n\034repeated_seq"
    "_small_1_hifield\030\305\204= \003(\0162,.protobuf_unit"
    "test.EnumParseTester.SeqSmall1\022U\n\033packed"
    "_seq_small_1_lowfield\030\006 \003(\0162,.protobuf_u"
    "nittest.EnumParseTester.SeqSmall1B\002\020\001\022V\n"
    "\033packed_seq_small_1_midfield\030\356\007 \003(\0162,.pr"
    "otobuf_unittest.EnumParseTester.SeqSmall"
    "1B\002\020\001\022V\n\032packed_seq_small_1_hifield\030\306\204= "
    "\003(\0162,.protobuf_unittest.EnumParseTester."
    "SeqSmall1B\002\020\001\022P\n\033optional_seq_large_lowf"
    "ield\030\007 \001(\0162+.protobuf_unittest.EnumParse"
    "Tester.SeqLarge\022Q\n\033optional_seq_large_mi"
    "dfield\030\357\007 \001(\0162+.protobuf_unittest.EnumPa"
    "rseTester.SeqLarge\022Q\n\032optional_seq_large"
    "_hifield\030\307\204= \001(\0162+.protobuf_unittest.Enu"
    "mParseTester.SeqLarge\022P\n\033repeated_seq_la"
    "rge_lowfield\030\010 \003(\0162+.protobuf_unittest.E"
    "numParseTester.SeqLarge\022Q\n\033repeated_seq_"
    "large_midfield\030\360\007 \003(\0162+.protobuf_unittes"
    "t.EnumParseTester.SeqLarge\022Q\n\032repeated_s"
    "eq_large_hifield\030\310\204= \003(\0162+.protobuf_unit"
    "test.EnumParseTester.SeqLarge\022R\n\031packed_"
    "seq_large_lowfield\030\t \003(\0162+.protobuf_unit"
    "test.EnumParseTester.SeqLargeB\002\020\001\022S\n\031pac"
    "ked_seq_large_midfield\030\361\007 \003(\0162+.protobuf"
    "_unittest.EnumParseTester.SeqLargeB\002\020\001\022S"
    "\n\030packed_seq_large_hifield\030\311\204= \003(\0162+.pro"
    "tobuf_unittest.EnumParseTester.SeqLargeB"
    "\002\020\001\022Q\n\033optional_arbitrary_lowfield\030\n \001(\016"
    "2,.protobuf_unittest.EnumParseTester.Arb"
    "itrary\022R\n\033optional_arbitrary_midfield\030\362\007"
    " \001(\0162,.protobuf_unittest.EnumParseTester"
    ".Arbitrary\022R\n\032optional_arbitrary_hifield"
    "\030\312\204= \001(\0162,.protobuf_unittest.EnumParseTe"
    "ster.Arbitrary\022Q\n\033repeated_arbitrary_low"
    "field\030\013 \003(\0162,.protobuf_unittest.EnumPars"
    "eTester.Arbitrary\022R\n\033repeated_arbitrary_"
    "midfield\030\363\007 \003(\0162,.protobuf_unittest.Enum"
    "ParseTester.Arbitrary\022R\n\032repeated_arbitr"
    "ary_hifield\030\313\204= \003(\0162,.protobuf_unittest."
    "EnumParseTester.Arbitrary\022S\n\031packed_arbi"
    "trary_lowfield\030\014 \003(\0162,.protobuf_unittest"
    ".EnumParseTester.ArbitraryB\002\020\001\022T\n\031packed"
    "_arbitrary_midfield\030\364\007 \003(\0162,.protobuf_un"
    "ittest.EnumParseTester.ArbitraryB\002\020\001\022T\n\030"
    "packed_arbitrary_hifield\030\314\204= \003(\0162,.proto"
    "buf_unittest.EnumParseTester.ArbitraryB\002"
    "\020\001\022\023\n\013other_field\030c \001(\005\"J\n\tSeqSmall0\022\027\n\023"
    "SEQ_SMALL_0_DEFAULT\020\000\022\021\n\rSEQ_SMALL_0_1\020\001"
    "\022\021\n\rSEQ_SMALL_0_2\020\002\"J\n\tSeqSmall1\022\027\n\023SEQ_"
    "SMALL_1_DEFAULT\020\001\022\021\n\rSEQ_SMALL_1_2\020\002\022\021\n\r"
    "SEQ_SMALL_1_3\020\003\"\204\005\n\010SeqLarge\022\036\n\021SEQ_LARG"
    "E_DEFAULT\020\377\377\377\377\377\377\377\377\377\001\022\017\n\013SEQ_LARGE_0\020\000\022\017\n"
    "\013SEQ_LARGE_1\020\001\022\017\n\013SEQ_LARGE_2\020\002\022\017\n\013SEQ_L"
    "ARGE_3\020\003\022\017\n\013SEQ_LARGE_4\020\004\022\017\n\013SEQ_LARGE_5"
    "\020\005\022\017\n\013SEQ_LARGE_6\020\006\022\017\n\013SEQ_LARGE_7\020\007\022\017\n\013"
    "SEQ_LARGE_8\020\010\022\017\n\013SEQ_LARGE_9\020\t\022\020\n\014SEQ_LA"
    "RGE_10\020\n\022\020\n\014SEQ_LARGE_11\020\013\022\020\n\014SEQ_LARGE_"
    "12\020\014\022\020\n\014SEQ_LARGE_13\020\r\022\020\n\014SEQ_LARGE_14\020\016"
    "\022\020\n\014SEQ_LARGE_15\020\017\022\020\n\014SEQ_LARGE_16\020\020\022\020\n\014"
    "SEQ_LARGE_17\020\021\022\020\n\014SEQ_LARGE_18\020\022\022\020\n\014SEQ_"
    "LARGE_19\020\023\022\020\n\014SEQ_LARGE_20\020\024\022\020\n\014SEQ_LARG"
    "E_21\020\025\022\020\n\014SEQ_LARGE_22\020\026\022\020\n\014SEQ_LARGE_23"
    "\020\027\022\020\n\014SEQ_LARGE_24\020\030\022\020\n\014SEQ_LARGE_25\020\031\022\020"
    "\n\014SEQ_LARGE_26\020\032\022\020\n\014SEQ_LARGE_27\020\033\022\020\n\014SE"
    "Q_LARGE_28\020\034\022\020\n\014SEQ_LARGE_29\020\035\022\020\n\014SEQ_LA"
    "RGE_30\020\036\022\020\n\014SEQ_LARGE_31\020\037\022\020\n\014SEQ_LARGE_"
    "32\020 \022\020\n\014SEQ_LARGE_33\020!\"\235\001\n\tArbitrary\022\036\n\021"
    "ARBITRARY_DEFAULT\020\215\276\370\377\377\377\377\377\377\001\022\030\n\013ARBITRAR"
    "Y_1\020\205\377\377\377\377\377\377\377\377\001\022\020\n\013ARBITRARY_2\020\325\001\022\021\n\013ARBI"
    "TRARY_3\020\335\201\r\022\032\n\rARBITRARY_MIN\020\200\200\200\200\370\377\377\377\377\001\022"
    "\025\n\rARBITRARY_MAX\020\377\377\377\377\007*\n\010\200\211z\020\200\200\200\200\0022r\n\026op"
    "tional_arbitrary_ext\022\".protobuf_unittest"
    ".EnumParseTester\030\200\211z \001(\0162,.protobuf_unit"
    "test.EnumParseTester.Arbitrary2r\n\026repeat"
    "ed_arbitrary_ext\022\".protobuf_unittest.Enu"
    "mParseTester\030\201\211z \003(\0162,.protobuf_unittest"
    ".EnumParseTester.Arbitrary2t\n\024packed_arb"
    "itrary_ext\022\".protobuf_unittest.EnumParse"
    "Tester\030\202\211z \003(\0162,.protobuf_unittest.EnumP"
    "arseTester.ArbitraryB\002\020\001\"\243\004\n\017BoolParseTe"
    "ster\022\036\n\026optional_bool_lowfield\030\001 \001(\010\022\037\n\026"
    "optional_bool_midfield\030\351\007 \001(\010\022\037\n\025optiona"
    "l_bool_hifield\030\301\204= \001(\010\022\036\n\026repeated_bool_"
    "lowfield\030\002 \003(\010\022\037\n\026repeated_bool_midfield"
    "\030\352\007 \003(\010\022\037\n\025repeated_bool_hifield\030\302\204= \003(\010"
    "\022 \n\024packed_bool_lowfield\030\003 \003(\010B\002\020\001\022!\n\024pa"
    "cked_bool_midfield\030\353\007 \003(\010B\002\020\001\022!\n\023packed_"
    "bool_hifield\030\303\204= \003(\010B\002\020\001\022\023\n\013other_field\030"
    "c \001(\005*\n\010\200\211z\020\200\200\200\200\0022\?\n\021optional_bool_ext\022\""
    ".protobuf_unittest.BoolParseTester\030\200\211z \001"
    "(\0102\?\n\021repeated_bool_ext\022\".protobuf_unitt"
    "est.BoolParseTester\030\201\211z \003(\0102A\n\017packed_bo"
    "ol_ext\022\".protobuf_unittest.BoolParseTest"
    "er\030\202\211z \003(\010B\002\020\001\"\263\004\n\020Int32ParseTester\022\037\n\027o"
    "ptional_int32_lowfield\030\001 \001(\005\022 \n\027optional"
    "_int32_midfield\030\351\007 \001(\005\022 \n\026optional_int32"
    "_hifield\030\301\204= \001(\005\022\037\n\027repeated_int32_lowfi"
    "eld\030\002 \003(\005\022 \n\027repeated_int32_midfield\030\352\007 "
    "\003(\005\022 \n\026repeated_int32_hifield\030\302\204= \003(\005\022!\n"
    "\025packed_int32_lowfield\030\003 \003(\005B\002\020\001\022\"\n\025pack"
    "ed_int32_midfield\030\353\007 \003(\005B\002\020\001\022\"\n\024packed_i"
    "nt32_hifield\030\303\204= \003(\005B\002\020\001\022\023\n\013other_field\030"
    "c \001(\005*\n\010\200\211z\020\200\200\200\200\0022A\n\022optional_int32_ext\022"
    "#.protobuf_unittest.Int32ParseTester\030\200\211z"
    " \001(\0052A\n\022repeated_int32_ext\022#.protobuf_un"
    "ittest.Int32ParseTester\030\201\211z \003(\0052C\n\020packe"
    "d_int32_ext\022#.protobuf_unittest.Int32Par"
    "seTester\030\202\211z \003(\005B\002\020\001\"\263\004\n\020Int64ParseTeste"
    "r\022\037\n\027optional_int64_lowfield\030\001 \001(\003\022 \n\027op"
    "tional_int64_midfield\030\351\007 \001(\003\022 \n\026optional"
    "_int64_hifield\030\301\204= \001(\003\022\037\n\027repeated_int64"
    "_lowfield\030\002 \003(\003\022 \n\027repeated_int64_midfie"
    "ld\030\352\007 \003(\003\022 \n\026repeated_int64_hifield\030\302\204= "
    "\003(\003\022!\n\025packed_int64_lowfield\030\003 \003(\003B\002\020\001\022\""
    "\n\025packed_int64_midfield\030\353\007 \003(\003B\002\020\001\022\"\n\024pa"
    "cked_int64_hifield\030\303\204= \003(\003B\002\020\001\022\023\n\013other_"
    "field\030c \001(\005*\n\010\200\211z\020\200\200\200\200\0022A\n\022optional_int6"
    "4_ext\022#.protobuf_unittest.Int64ParseTest"
    "er\030\200\211z \001(\0032A\n\022repeated_int64_ext\022#.proto"
    "buf_unittest.Int64ParseTester\030\201\211z \003(\0032C\n"
    "\020packed_int64_ext\022#.protobuf_unittest.In"
    "t64ParseTester\030\202\211z \003(\003B\002\020\001\"\214\001\n\037InlinedSt"
    "ringIdxRegressionProto\022\014\n\004str1\030\001 \001(\t\022\?\n\003"
    "sub\030\002 \001(\01322.protobuf_unittest.InlinedStr"
    "ingIdxRegressionProto\022\014\n\004str2\030\003 \001(\t\022\014\n\004s"
    "tr3\030\004 \001(\014\"\371\002\n\021StringParseTester\022 \n\030optio"
    "nal_string_lowfield\030\001 \001(\t\022!\n\030optional_st"
    "ring_midfield\030\351\007 \001(\t\022!\n\027optional_string_"
    "hifield\030\301\204= \001(\t\022 \n\030repeated_string_lowfi"
    "eld\030\002 \003(\t\022!\n\030repeated_string_midfield\030\352\007"
    " \003(\t\022!\n\027repeated_string_hifield\030\302\204= \003(\t*"
    "\n\010\200\211z\020\200\200\200\200\0022C\n\023optional_string_ext\022$.pro"
    "tobuf_unittest.StringParseTester\030\200\211z \001(\t"
    "2C\n\023repeated_string_ext\022$.protobuf_unitt"
    "est.StringParseTester\030\201\211z \003(\t\"3\n\rBadFiel"
    "dNames\022\025\n\rOptionalInt32\030\001 \001(\005\022\013\n\003for\030\002 \001"
    "(\005\"u\n\032TestNestedMessageRedaction\022)\n!opti"
    "onal_unredacted_nested_string\030\001 \001(\t\022,\n\037o"
    "ptional_redacted_nested_string\030\002 \001(\tB\003\200\001"
    "\001\"\251\006\n\016RedactedFields\022%\n\030optional_redacte"
    "d_string\030\001 \001(\tB\003\200\001\001\022\"\n\032optional_unredact"
    "ed_string\030\002 \001(\t\022%\n\030repeated_redacted_str"
    "ing\030\003 \003(\tB\003\200\001\001\022\"\n\032repeated_unredacted_st"
    "ring\030\004 \003(\t\022U\n\031optional_redacted_message\030"
    "\005 \001(\0132-.protobuf_unittest.TestNestedMess"
    "ageRedactionB\003\200\001\001\022R\n\033optional_unredacted"
    "_message\030\006 \001(\0132-.protobuf_unittest.TestN"
    "estedMessageRedaction\022U\n\031repeated_redact"
    "ed_message\030\007 \003(\0132-.protobuf_unittest.Tes"
    "tNestedMessageRedactionB\003\200\001\001\022R\n\033repeated"
    "_unredacted_message\030\010 \003(\0132-.protobuf_uni"
    "ttest.TestNestedMessageRedaction\022Z\n\023map_"
    "redacted_string\030\t \003(\01328.protobuf_unittes"
    "t.RedactedFields.MapRedactedStringEntryB"
    "\003\200\001\001\022Y\n\025map_unredacted_string\030\n \003(\0132:.pr"
    "otobuf_unittest.RedactedFields.MapUnreda"
    "ctedStringEntry\0328\n\026MapRedactedStringEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032:\n\030Map"
    "UnredactedStringEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\"[\n\010TestCord\022\037\n\023optional_by"
    "tes_cord\030\001 \001(\014B\002\010\001\022.\n\033optional_bytes_cor"
    "d_default\030\002 \001(\014:\005helloB\002\010\001\"\236\001\n\030TestPacke"
    "dEnumSmallRange\022H\n\004vals\030\001 \003(\01626.protobuf"
    "_unittest.TestPackedEnumSmallRange.Neste"
    "dEnumB\002\020\001\"8\n\nNestedEnum\022\017\n\013UNSPECIFIED\020\000"
    "\022\007\n\003FOO\020\001\022\007\n\003BAR\020\002\022\007\n\003BAZ\020\003*@\n\013ForeignEn"
    "um\022\017\n\013FOREIGN_FOO\020\004\022\017\n\013FOREIGN_BAR\020\005\022\017\n\013"
    "FOREIGN_BAZ\020\006*A\n\026TestReservedEnumFields\022"
    "\013\n\007UNKNOWN\020\000\"\004\010\002\020\002\"\004\010\017\020\017\"\004\010\t\020\013*\003bar*\003baz"
    "*K\n\024TestEnumWithDupValue\022\010\n\004FOO1\020\001\022\010\n\004BA"
    "R1\020\002\022\007\n\003BAZ\020\003\022\010\n\004FOO2\020\001\022\010\n\004BAR2\020\002\032\002\020\001*\211\001"
    "\n\016TestSparseEnum\022\014\n\010SPARSE_A\020{\022\016\n\010SPARSE"
    "_B\020\246\347\003\022\017\n\010SPARSE_C\020\262\261\200\006\022\025\n\010SPARSE_D\020\361\377\377\377"
    "\377\377\377\377\377\001\022\025\n\010SPARSE_E\020\264\336\374\377\377\377\377\377\377\001\022\014\n\010SPARSE_"
    "F\020\000\022\014\n\010SPARSE_G\020\002*\213\017\n\rVeryLargeEnum\022\026\n\022E"
    "NUM_LABEL_DEFAULT\020\000\022\020\n\014ENUM_LABEL_1\020\001\022\020\n"
    "\014ENUM_LABEL_2\020\002\022\020\n\014ENUM_LABEL_3\020\003\022\020\n\014ENU"
    "M_LABEL_4\020\004\022\020\n\014ENUM_LABEL_5\020\005\022\020\n\014ENUM_LA"
    "BEL_6\020\006\022\020\n\014ENUM_LABEL_7\020\007\022\020\n\014ENUM_LABEL_"
    "8\020\010\022\020\n\014ENUM_LABEL_9\020\t\022\021\n\rENUM_LABEL_10\020\n"
    "\022\021\n\rENUM_LABEL_11\020\013\022\021\n\rENUM_LABEL_12\020\014\022\021"
    "\n\rENUM_LABEL_13\020\r\022\021\n\rENUM_LABEL_14\020\016\022\021\n\r"
    "ENUM_LABEL_15\020\017\022\021\n\rENUM_LABEL_16\020\020\022\021\n\rEN"
    "UM_LABEL_17\020\021\022\021\n\rENUM_LABEL_18\020\022\022\021\n\rENUM"
    "_LABEL_19\020\023\022\021\n\rENUM_LABEL_20\020\024\022\021\n\rENUM_L"
    "ABEL_21\020\025\022\021\n\rENUM_LABEL_22\020\026\022\021\n\rENUM_LAB"
    "EL_23\020\027\022\021\n\rENUM_LABEL_24\020\030\022\021\n\rENUM_LABEL"
    "_25\020\031\022\021\n\rENUM_LABEL_26\020\032\022\021\n\rENUM_LABEL_2"
    "7\020\033\022\021\n\rENUM_LABEL_28\020\034\022\021\n\rENUM_LABEL_29\020"
    "\035\022\021\n\rENUM_LABEL_30\020\036\022\021\n\rENUM_LABEL_31\020\037\022"
    "\021\n\rENUM_LABEL_32\020 \022\021\n\rENUM_LABEL_33\020!\022\021\n"
    "\rENUM_LABEL_34\020\"\022\021\n\rENUM_LABEL_35\020#\022\021\n\rE"
    "NUM_LABEL_36\020$\022\021\n\rENUM_LABEL_37\020%\022\021\n\rENU"
    "M_LABEL_38\020&\022\021\n\rENUM_LABEL_39\020\'\022\021\n\rENUM_"
    "LABEL_40\020(\022\021\n\rENUM_LABEL_41\020)\022\021\n\rENUM_LA"
    "BEL_42\020*\022\021\n\rENUM_LABEL_43\020+\022\021\n\rENUM_LABE"
    "L_44\020,\022\021\n\rENUM_LABEL_45\020-\022\021\n\rENUM_LABEL_"
    "46\020.\022\021\n\rENUM_LABEL_47\020/\022\021\n\rENUM_LABEL_48"
    "\0200\022\021\n\rENUM_LABEL_49\0201\022\021\n\rENUM_LABEL_50\0202"
    "\022\021\n\rENUM_LABEL_51\0203\022\021\n\rENUM_LABEL_52\0204\022\021"
    "\n\rENUM_LABEL_53\0205\022\021\n\rENUM_LABEL_54\0206\022\021\n\r"
    "ENUM_LABEL_55\0207\022\021\n\rENUM_LABEL_56\0208\022\021\n\rEN"
    "UM_LABEL_57\0209\022\021\n\rENUM_LABEL_58\020:\022\021\n\rENUM"
    "_LABEL_59\020;\022\021\n\rENUM_LABEL_60\020<\022\021\n\rENUM_L"
    "ABEL_61\020=\022\021\n\rENUM_LABEL_62\020>\022\021\n\rENUM_LAB"
    "EL_63\020\?\022\021\n\rENUM_LABEL_64\020@\022\021\n\rENUM_LABEL"
    "_65\020A\022\021\n\rENUM_LABEL_66\020B\022\021\n\rENUM_LABEL_6"
    "7\020C\022\021\n\rENUM_LABEL_68\020D\022\021\n\rENUM_LABEL_69\020"
    "E\022\021\n\rENUM_LABEL_70\020F\022\021\n\rENUM_LABEL_71\020G\022"
    "\021\n\rENUM_LABEL_72\020H\022\021\n\rENUM_LABEL_73\020I\022\021\n"
    "\rENUM_LABEL_74\020J\022\021\n\rENUM_LABEL_75\020K\022\021\n\rE"
    "NUM_LABEL_76\020L\022\021\n\rENUM_LABEL_77\020M\022\021\n\rENU"
    "M_LABEL_78\020N\022\021\n\rENUM_LABEL_79\020O\022\021\n\rENUM_"
    "LABEL_80\020P\022\021\n\rENUM_LABEL_81\020Q\022\021\n\rENUM_LA"
    "BEL_82\020R\022\021\n\rENUM_LABEL_83\020S\022\021\n\rENUM_LABE"
    "L_84\020T\022\021\n\rENUM_LABEL_85\020U\022\021\n\rENUM_LABEL_"
    "86\020V\022\021\n\rENUM_LABEL_87\020W\022\021\n\rENUM_LABEL_88"
    "\020X\022\021\n\rENUM_LABEL_89\020Y\022\021\n\rENUM_LABEL_90\020Z"
    "\022\021\n\rENUM_LABEL_91\020[\022\021\n\rENUM_LABEL_92\020\\\022\021"
    "\n\rENUM_LABEL_93\020]\022\021\n\rENUM_LABEL_94\020^\022\021\n\r"
    "ENUM_LABEL_95\020_\022\021\n\rENUM_LABEL_96\020`\022\021\n\rEN"
    "UM_LABEL_97\020a\022\021\n\rENUM_LABEL_98\020b\022\021\n\rENUM"
    "_LABEL_99\020c\022\022\n\016ENUM_LABEL_100\020d2\231\001\n\013Test"
    "Service\022D\n\003Foo\022\035.protobuf_unittest.FooRe"
    "quest\032\036.protobuf_unittest.FooResponse\022D\n"
    "\003Bar\022\035.protobuf_unittest.BarRequest\032\036.pr"
    "otobuf_unittest.BarResponse:F\n\030optional_"
    "int32_extension\022$.protobuf_unittest.Test"
    "AllExtensions\030\001 \001(\005:F\n\030optional_int64_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\002 \001(\003:G\n\031optional_uint32_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030\003"
    " \001(\r:G\n\031optional_uint64_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030\004 \001(\004:G\n"
    "\031optional_sint32_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\030\005 \001(\021:G\n\031option"
    "al_sint64_extension\022$.protobuf_unittest."
    "TestAllExtensions\030\006 \001(\022:H\n\032optional_fixe"
    "d32_extension\022$.protobuf_unittest.TestAl"
    "lExtensions\030\007 \001(\007:H\n\032optional_fixed64_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\030\010 \001(\006:I\n\033optional_sfixed32_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030\t \001(\017:I\n\033optional_sfixed64_extension\022$."
    "protobuf_unittest.TestAllExtensions\030\n \001("
    "\020:F\n\030optional_float_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030\013 \001(\002:G\n\031opt"
    "ional_double_extension\022$.protobuf_unitte"
    "st.TestAllExtensions\030\014 \001(\001:E\n\027optional_b"
    "ool_extension\022$.protobuf_unittest.TestAl"
    "lExtensions\030\r \001(\010:G\n\031optional_string_ext"
    "ension\022$.protobuf_unittest.TestAllExtens"
    "ions\030\016 \001(\t:F\n\030optional_bytes_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030\017 \001"
    "(\014:q\n\027optionalgroup_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030\020 \001(\n2*.prot"
    "obuf_unittest.OptionalGroup_extension:~\n"
    "!optional_nested_message_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030\022 \001(\0132-"
    ".protobuf_unittest.TestAllTypes.NestedMe"
    "ssage:s\n\"optional_foreign_message_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030\023 \001(\0132!.protobuf_unittest.ForeignMessa"
    "ge:x\n!optional_import_message_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030\024 "
    "\001(\0132\'.protobuf_unittest_import.ImportMes"
    "sage:x\n\036optional_nested_enum_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030\025 \001"
    "(\0162*.protobuf_unittest.TestAllTypes.Nest"
    "edEnum:m\n\037optional_foreign_enum_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "\026 \001(\0162\036.protobuf_unittest.ForeignEnum:r\n"
    "\036optional_import_enum_extension\022$.protob"
    "uf_unittest.TestAllExtensions\030\027 \001(\0162$.pr"
    "otobuf_unittest_import.ImportEnum:Q\n\037opt"
    "ional_string_piece_extension\022$.protobuf_"
    "unittest.TestAllExtensions\030\030 \001(\tB\002\010\002:I\n\027"
    "optional_cord_extension\022$.protobuf_unitt"
    "est.TestAllExtensions\030\031 \001(\tB\002\010\001:\205\001\n(opti"
    "onal_public_import_message_extension\022$.p"
    "rotobuf_unittest.TestAllExtensions\030\032 \001(\013"
    "2-.protobuf_unittest_import.PublicImport"
    "Message:\200\001\n\037optional_lazy_message_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030\033 \001(\0132-.protobuf_unittest.TestAllTypes"
    ".NestedMessageB\002(\001:\213\001\n*optional_unverifi"
    "ed_lazy_message_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030\034 \001(\0132-.protobuf"
    "_unittest.TestAllTypes.NestedMessageB\002x\001"
    ":F\n\030repeated_int32_extension\022$.protobuf_"
    "unittest.TestAllExtensions\030\037 \003(\005:F\n\030repe"
    "ated_int64_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030  \003(\003:G\n\031repeated_uin"
    "t32_extension\022$.protobuf_unittest.TestAl"
    "lExtensions\030! \003(\r:G\n\031repeated_uint64_ext"
    "ension\022$.protobuf_unittest.TestAllExtens"
    "ions\030\" \003(\004:G\n\031repeated_sint32_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030# "
    "\003(\021:G\n\031repeated_sint64_extension\022$.proto"
    "buf_unittest.TestAllExtensions\030$ \003(\022:H\n\032"
    "repeated_fixed32_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\030% \003(\007:H\n\032repeat"
    "ed_fixed64_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030& \003(\006:I\n\033repeated_sfi"
    "xed32_extension\022$.protobuf_unittest.Test"
    "AllExtensions\030\' \003(\017:I\n\033repeated_sfixed64"
    "_extension\022$.protobuf_unittest.TestAllEx"
    "tensions\030( \003(\020:F\n\030repeated_float_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030) \003(\002:G\n\031repeated_double_extension\022$.pr"
    "otobuf_unittest.TestAllExtensions\030* \003(\001:"
    "E\n\027repeated_bool_extension\022$.protobuf_un"
    "ittest.TestAllExtensions\030+ \003(\010:G\n\031repeat"
    "ed_string_extension\022$.protobuf_unittest."
    "TestAllExtensions\030, \003(\t:F\n\030repeated_byte"
    "s_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030- \003(\014:q\n\027repeatedgroup_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030. \003(\n2*.protobuf_unittest.RepeatedGroup"
    "_extension:~\n!repeated_nested_message_ex"
    "tension\022$.protobuf_unittest.TestAllExten"
    "sions\0300 \003(\0132-.protobuf_unittest.TestAllT"
    "ypes.NestedMessage:s\n\"repeated_foreign_m"
    "essage_extension\022$.protobuf_unittest.Tes"
    "tAllExtensions\0301 \003(\0132!.protobuf_unittest"
    ".ForeignMessage:x\n!repeated_import_messa"
    "ge_extension\022$.protobuf_unittest.TestAll"
    "Extensions\0302 \003(\0132\'.protobuf_unittest_imp"
    "ort.ImportMessage:x\n\036repeated_nested_enu"
    "m_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\0303 \003(\0162*.protobuf_unittest.Test"
    "AllTypes.NestedEnum:m\n\037repeated_foreign_"
    "enum_extension\022$.protobuf_unittest.TestA"
    "llExtensions\0304 \003(\0162\036.protobuf_unittest.F"
    "oreignEnum:r\n\036repeated_import_enum_exten"
    "sion\022$.protobuf_unittest.TestAllExtensio"
    "ns\0305 \003(\0162$.protobuf_unittest_import.Impo"
    "rtEnum:Q\n\037repeated_string_piece_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "6 \003(\tB\002\010\002:I\n\027repeated_cord_extension\022$.p"
    "rotobuf_unittest.TestAllExtensions\0307 \003(\t"
    "B\002\010\001:\200\001\n\037repeated_lazy_message_extension"
    "\022$.protobuf_unittest.TestAllExtensions\0309"
    " \003(\0132-.protobuf_unittest.TestAllTypes.Ne"
    "stedMessageB\002(\001:I\n\027default_int32_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030= \001(\005:\00241:I\n\027default_int64_extension\022$."
    "protobuf_unittest.TestAllExtensions\030> \001("
    "\003:\00242:J\n\030default_uint32_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030\? \001(\r:\0024"
    "3:J\n\030default_uint64_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030@ \001(\004:\00244:K\n"
    "\030default_sint32_extension\022$.protobuf_uni"
    "ttest.TestAllExtensions\030A \001(\021:\003-45:J\n\030de"
    "fault_sint64_extension\022$.protobuf_unitte"
    "st.TestAllExtensions\030B \001(\022:\00246:K\n\031defaul"
    "t_fixed32_extension\022$.protobuf_unittest."
    "TestAllExtensions\030C \001(\007:\00247:K\n\031default_f"
    "ixed64_extension\022$.protobuf_unittest.Tes"
    "tAllExtensions\030D \001(\006:\00248:L\n\032default_sfix"
    "ed32_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030E \001(\017:\00249:M\n\032default_sfixed"
    "64_extension\022$.protobuf_unittest.TestAll"
    "Extensions\030F \001(\020:\003-50:K\n\027default_float_e"
    "xtension\022$.protobuf_unittest.TestAllExte"
    "nsions\030G \001(\002:\00451.5:M\n\030default_double_ext"
    "ension\022$.protobuf_unittest.TestAllExtens"
    "ions\030H \001(\001:\00552000:J\n\026default_bool_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030I \001(\010:\004true:M\n\030default_string_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030"
    "J \001(\t:\005hello:L\n\027default_bytes_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030K "
    "\001(\014:\005world:|\n\035default_nested_enum_extens"
    "ion\022$.protobuf_unittest.TestAllExtension"
    "s\030Q \001(\0162*.protobuf_unittest.TestAllTypes"
    ".NestedEnum:\003BAR:y\n\036default_foreign_enum"
    "_extension\022$.protobuf_unittest.TestAllEx"
    "tensions\030R \001(\0162\036.protobuf_unittest.Forei"
    "gnEnum:\013FOREIGN_BAR:}\n\035default_import_en"
    "um_extension\022$.protobuf_unittest.TestAll"
    "Extensions\030S \001(\0162$.protobuf_unittest_imp"
    "ort.ImportEnum:\nIMPORT_BAR:U\n\036default_st"
    "ring_piece_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030T \001(\t:\003abcB\002\010\002:M\n\026def"
    "ault_cord_extension\022$.protobuf_unittest."
    "TestAllExtensions\030U \001(\t:\003123B\002\010\001:D\n\026oneo"
    "f_uint32_extension\022$.protobuf_unittest.T"
    "estAllExtensions\030o \001(\r:{\n\036oneof_nested_m"
    "essage_extension\022$.protobuf_unittest.Tes"
    "tAllExtensions\030p \001(\0132-.protobuf_unittest"
    ".TestAllTypes.NestedMessage:D\n\026oneof_str"
    "ing_extension\022$.protobuf_unittest.TestAl"
    "lExtensions\030q \001(\t:C\n\025oneof_bytes_extensi"
    "on\022$.protobuf_unittest.TestAllExtensions"
    "\030r \001(\014:B\n\023my_extension_string\022%.protobuf"
    "_unittest.TestFieldOrderings\0302 \001(\t:\?\n\020my"
    "_extension_int\022%.protobuf_unittest.TestF"
    "ieldOrderings\030\005 \001(\005:K\n\026packed_int32_exte"
    "nsion\022\'.protobuf_unittest.TestPackedExte"
    "nsions\030Z \003(\005B\002\020\001:K\n\026packed_int64_extensi"
    "on\022\'.protobuf_unittest.TestPackedExtensi"
    "ons\030[ \003(\003B\002\020\001:L\n\027packed_uint32_extension"
    "\022\'.protobuf_unittest.TestPackedExtension"
    "s\030\\ \003(\rB\002\020\001:L\n\027packed_uint64_extension\022\'"
    ".protobuf_unittest.TestPackedExtensions\030"
    "] \003(\004B\002\020\001:L\n\027packed_sint32_extension\022\'.p"
    "rotobuf_unittest.TestPackedExtensions\030^ "
    "\003(\021B\002\020\001:L\n\027packed_sint64_extension\022\'.pro"
    "tobuf_unittest.TestPackedExtensions\030_ \003("
    "\022B\002\020\001:M\n\030packed_fixed32_extension\022\'.prot"
    "obuf_unittest.TestPackedExtensions\030` \003(\007"
    "B\002\020\001:M\n\030packed_fixed64_extension\022\'.proto"
    "buf_unittest.TestPackedExtensions\030a \003(\006B"
    "\002\020\001:N\n\031packed_sfixed32_extension\022\'.proto"
    "buf_unittest.TestPackedExtensions\030b \003(\017B"
    "\002\020\001:N\n\031packed_sfixed64_extension\022\'.proto"
    "buf_unittest.TestPackedExtensions\030c \003(\020B"
    "\002\020\001:K\n\026packed_float_extension\022\'.protobuf"
    "_unittest.TestPackedExtensions\030d \003(\002B\002\020\001"
    ":L\n\027packed_double_extension\022\'.protobuf_u"
    "nittest.TestPackedExtensions\030e \003(\001B\002\020\001:J"
    "\n\025packed_bool_extension\022\'.protobuf_unitt"
    "est.TestPackedExtensions\030f \003(\010B\002\020\001:j\n\025pa"
    "cked_enum_extension\022\'.protobuf_unittest."
    "TestPackedExtensions\030g \003(\0162\036.protobuf_un"
    "ittest.ForeignEnumB\002\020\001:O\n\030unpacked_int32"
    "_extension\022).protobuf_unittest.TestUnpac"
    "kedExtensions\030Z \003(\005B\002\020\000:O\n\030unpacked_int6"
    "4_extension\022).protobuf_unittest.TestUnpa"
    "ckedExtensions\030[ \003(\003B\002\020\000:P\n\031unpacked_uin"
    "t32_extension\022).protobuf_unittest.TestUn"
    "packedExtensions\030\\ \003(\rB\002\020\000:P\n\031unpacked_u"
    "int64_extension\022).protobuf_unittest.Test"
    "UnpackedExtensions\030] \003(\004B\002\020\000:P\n\031unpacked"
    "_sint32_extension\022).protobuf_unittest.Te"
    "stUnpackedExtensions\030^ \003(\021B\002\020\000:P\n\031unpack"
    "ed_sint64_extension\022).protobuf_unittest."
    "TestUnpackedExtensions\030_ \003(\022B\002\020\000:Q\n\032unpa"
    "cked_fixed32_extension\022).protobuf_unitte"
    "st.TestUnpackedExtensions\030` \003(\007B\002\020\000:Q\n\032u"
    "npacked_fixed64_extension\022).protobuf_uni"
    "ttest.TestUnpackedExtensions\030a \003(\006B\002\020\000:R"
    "\n\033unpacked_sfixed32_extension\022).protobuf"
    "_unittest.TestUnpackedExtensions\030b \003(\017B\002"
    "\020\000:R\n\033unpacked_sfixed64_extension\022).prot"
    "obuf_unittest.TestUnpackedExtensions\030c \003"
    "(\020B\002\020\000:O\n\030unpacked_float_extension\022).pro"
    "tobuf_unittest.TestUnpackedExtensions\030d "
    "\003(\002B\002\020\000:P\n\031unpacked_double_extension\022).p"
    "rotobuf_unittest.TestUnpackedExtensions\030"
    "e \003(\001B\002\020\000:N\n\027unpacked_bool_extension\022).p"
    "rotobuf_unittest.TestUnpackedExtensions\030"
    "f \003(\010B\002\020\000:n\n\027unpacked_enum_extension\022).p"
    "rotobuf_unittest.TestUnpackedExtensions\030"
    "g \003(\0162\036.protobuf_unittest.ForeignEnumB\002\020"
    "\000:d\n\016test_all_types\022\'.protobuf_unittest."
    "TestHugeFieldNumbers\030\340\252\377\377\001 \001(\0132\037.protobu"
    "f_unittest.TestAllTypes:Z\n%test_extensio"
    "n_inside_table_extension\022+.protobuf_unit"
    "test.TestExtensionInsideTable\030\005 \001(\005:\242\001\n\005"
    "inner\022X.protobuf_unittest.TestNestedGrou"
    "pExtensionOuter.Layer1OptionalGroup.Laye"
    "r2RepeatedGroup\030\003 \001(\01329.protobuf_unittes"
    "t.TestNestedGroupExtensionInnerExtension"
    "B\035B\rUnittestProtoH\001\200\001\001\210\001\001\220\001\001\370\001\001"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2funittest_5fimport_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2funittest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_2eproto = {
    false,
    false,
    42671,
    descriptor_table_protodef_google_2fprotobuf_2funittest_2eproto,
    "google/protobuf/unittest.proto",
    &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
    descriptor_table_google_2fprotobuf_2funittest_2eproto_deps,
    1,
    141,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2funittest_2eproto::offsets,
    file_level_metadata_google_2fprotobuf_2funittest_2eproto,
    file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fprotobuf_2funittest_2eproto_getter() {
  return &descriptor_table_google_2fprotobuf_2funittest_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fprotobuf_2funittest_2eproto(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
namespace protobuf_unittest {
const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[0];
}
bool TestAllTypes_NestedEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestAllTypes_NestedEnum TestAllTypes::FOO;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAR;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAZ;
constexpr TestAllTypes_NestedEnum TestAllTypes::NEG;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MIN;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MAX;
constexpr int TestAllTypes::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TestOneof2_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[1];
}
bool TestOneof2_NestedEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestOneof2_NestedEnum TestOneof2::FOO;
constexpr TestOneof2_NestedEnum TestOneof2::BAR;
constexpr TestOneof2_NestedEnum TestOneof2::BAZ;
constexpr TestOneof2_NestedEnum TestOneof2::NestedEnum_MIN;
constexpr TestOneof2_NestedEnum TestOneof2::NestedEnum_MAX;
constexpr int TestOneof2::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TestDynamicExtensions_DynamicEnumType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[2];
}
bool TestDynamicExtensions_DynamicEnumType_IsValid(int value) {
  switch (value) {
    case 2200:
    case 2201:
    case 2202:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_FOO;
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAR;
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DYNAMIC_BAZ;
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MIN;
constexpr TestDynamicExtensions_DynamicEnumType TestDynamicExtensions::DynamicEnumType_MAX;
constexpr int TestDynamicExtensions::DynamicEnumType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EnumParseTester_SeqSmall0_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[3];
}
bool EnumParseTester_SeqSmall0_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EnumParseTester_SeqSmall0 EnumParseTester::SEQ_SMALL_0_DEFAULT;
constexpr EnumParseTester_SeqSmall0 EnumParseTester::SEQ_SMALL_0_1;
constexpr EnumParseTester_SeqSmall0 EnumParseTester::SEQ_SMALL_0_2;
constexpr EnumParseTester_SeqSmall0 EnumParseTester::SeqSmall0_MIN;
constexpr EnumParseTester_SeqSmall0 EnumParseTester::SeqSmall0_MAX;
constexpr int EnumParseTester::SeqSmall0_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EnumParseTester_SeqSmall1_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[4];
}
bool EnumParseTester_SeqSmall1_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EnumParseTester_SeqSmall1 EnumParseTester::SEQ_SMALL_1_DEFAULT;
constexpr EnumParseTester_SeqSmall1 EnumParseTester::SEQ_SMALL_1_2;
constexpr EnumParseTester_SeqSmall1 EnumParseTester::SEQ_SMALL_1_3;
constexpr EnumParseTester_SeqSmall1 EnumParseTester::SeqSmall1_MIN;
constexpr EnumParseTester_SeqSmall1 EnumParseTester::SeqSmall1_MAX;
constexpr int EnumParseTester::SeqSmall1_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EnumParseTester_SeqLarge_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[5];
}
bool EnumParseTester_SeqLarge_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_DEFAULT;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_0;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_1;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_2;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_3;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_4;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_5;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_6;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_7;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_8;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_9;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_10;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_11;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_12;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_13;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_14;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_15;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_16;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_17;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_18;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_19;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_20;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_21;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_22;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_23;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_24;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_25;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_26;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_27;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_28;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_29;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_30;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_31;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_32;
constexpr EnumParseTester_SeqLarge EnumParseTester::SEQ_LARGE_33;
constexpr EnumParseTester_SeqLarge EnumParseTester::SeqLarge_MIN;
constexpr EnumParseTester_SeqLarge EnumParseTester::SeqLarge_MAX;
constexpr int EnumParseTester::SeqLarge_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EnumParseTester_Arbitrary_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[6];
}
bool EnumParseTester_Arbitrary_IsValid(int value) {
  switch (value) {
    case -2147483648:
    case -123123:
    case -123:
    case 213:
    case 213213:
    case 2147483647:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_DEFAULT;
constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_1;
constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_2;
constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_3;
constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_MIN;
constexpr EnumParseTester_Arbitrary EnumParseTester::ARBITRARY_MAX;
constexpr EnumParseTester_Arbitrary EnumParseTester::Arbitrary_MIN;
constexpr EnumParseTester_Arbitrary EnumParseTester::Arbitrary_MAX;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TestPackedEnumSmallRange_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[7];
}
bool TestPackedEnumSmallRange_NestedEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::UNSPECIFIED;
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::FOO;
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::BAR;
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::BAZ;
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::NestedEnum_MIN;
constexpr TestPackedEnumSmallRange_NestedEnum TestPackedEnumSmallRange::NestedEnum_MAX;
constexpr int TestPackedEnumSmallRange::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[8];
}
bool ForeignEnum_IsValid(int value) {
  switch (value) {
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TestReservedEnumFields_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[9];
}
bool TestReservedEnumFields_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TestEnumWithDupValue_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[10];
}
bool TestEnumWithDupValue_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TestSparseEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[11];
}
bool TestSparseEnum_IsValid(int value) {
  switch (value) {
    case -53452:
    case -15:
    case 0:
    case 2:
    case 123:
    case 62374:
    case 12589234:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* VeryLargeEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_2eproto[12];
}
bool VeryLargeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class TestAllTypes_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypes_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_._has_bits_);
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}
TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(const TestAllTypes_NestedMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.NestedMessage)
}
inline void TestAllTypes_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bb_){0},
  };
}
TestAllTypes_NestedMessage::~TestAllTypes_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestAllTypes_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestAllTypes_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestAllTypes_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypes_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes_NestedMessage, _impl_.bb_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypes_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bb = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.NestedMessage)
  return target;
}

::size_t TestAllTypes_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 bb = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestAllTypes_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestAllTypes_NestedMessage::GetClassData() const { return &_class_data_; }


void TestAllTypes_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestAllTypes_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_bb(from._internal_bb());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes_NestedMessage::CopyFrom(const TestAllTypes_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes_NestedMessage::IsInitialized() const {
  return true;
}

void TestAllTypes_NestedMessage::InternalSwap(TestAllTypes_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestAllTypes_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[0]);
}
// ===================================================================

class TestAllTypes_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypes_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypes_OptionalGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}
TestAllTypes_OptionalGroup::TestAllTypes_OptionalGroup(const TestAllTypes_OptionalGroup& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.OptionalGroup)
}
inline void TestAllTypes_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
TestAllTypes_OptionalGroup::~TestAllTypes_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.OptionalGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestAllTypes_OptionalGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestAllTypes_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 2> TestAllTypes_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    17, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypes_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {388, 132}},
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes_OptionalGroup, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes_OptionalGroup, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypes_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.OptionalGroup)
  return target;
}

::size_t TestAllTypes_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 17;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes_OptionalGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestAllTypes_OptionalGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestAllTypes_OptionalGroup::GetClassData() const { return &_class_data_; }


void TestAllTypes_OptionalGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes_OptionalGroup*>(&to_msg);
  auto& from = static_cast<const TestAllTypes_OptionalGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes_OptionalGroup::CopyFrom(const TestAllTypes_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes_OptionalGroup::IsInitialized() const {
  return true;
}

void TestAllTypes_OptionalGroup::InternalSwap(TestAllTypes_OptionalGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestAllTypes_OptionalGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[1]);
}
// ===================================================================

class TestAllTypes_RepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypes_RepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}
TestAllTypes_RepeatedGroup::TestAllTypes_RepeatedGroup(const TestAllTypes_RepeatedGroup& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
}
inline void TestAllTypes_RepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
TestAllTypes_RepeatedGroup::~TestAllTypes_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes.RepeatedGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes_RepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestAllTypes_RepeatedGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestAllTypes_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes_RepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 7> TestAllTypes_RepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _impl_._has_bits_),
    0, // no _extensions_
    47, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypes_RepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {756, 372}},
    // optional int32 a = 47;
    {::_pbi::TcParser::FastV32S2,
     {760, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _impl_.a_)}},
  }}, {{
    47, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 a = 47;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes_RepeatedGroup, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypes_RepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 47;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        47, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes.RepeatedGroup)
  return target;
}

::size_t TestAllTypes_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 47;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes_RepeatedGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestAllTypes_RepeatedGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestAllTypes_RepeatedGroup::GetClassData() const { return &_class_data_; }


void TestAllTypes_RepeatedGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes_RepeatedGroup*>(&to_msg);
  auto& from = static_cast<const TestAllTypes_RepeatedGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes_RepeatedGroup::CopyFrom(const TestAllTypes_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes_RepeatedGroup::IsInitialized() const {
  return true;
}

void TestAllTypes_RepeatedGroup::InternalSwap(TestAllTypes_RepeatedGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestAllTypes_RepeatedGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[2]);
}
// ===================================================================

class TestAllTypes::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypes, _impl_._oneof_case_);
  static void set_has_optional_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_optional_int64(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_optional_uint32(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_optional_uint64(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_optional_sint32(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_optional_sint64(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_optional_fixed32(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_optional_fixed64(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_optional_sfixed32(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_optional_sfixed64(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_optional_float(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_optional_double(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_optional_bool(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_optional_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestAllTypes_OptionalGroup& optionalgroup(const TestAllTypes* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& optional_nested_message(const TestAllTypes* msg);
  static void set_has_optional_nested_message(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::protobuf_unittest::ForeignMessage& optional_foreign_message(const TestAllTypes* msg);
  static void set_has_optional_foreign_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::protobuf_unittest_import::ImportMessage& optional_import_message(const TestAllTypes* msg);
  static void set_has_optional_import_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_optional_nested_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_optional_foreign_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_optional_import_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_optional_string_piece(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_cord(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::protobuf_unittest_import::PublicImportMessage& optional_public_import_message(const TestAllTypes* msg);
  static void set_has_optional_public_import_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& optional_lazy_message(const TestAllTypes* msg);
  static void set_has_optional_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& optional_unverified_lazy_message(const TestAllTypes* msg);
  static void set_has_optional_unverified_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_int32(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_default_int64(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_default_uint32(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_default_uint64(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_default_sint32(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_default_sint64(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_default_fixed32(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_default_fixed64(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_default_sfixed32(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_default_sfixed64(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_default_float(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_default_double(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_default_bool(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_default_string(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_nested_enum(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_default_foreign_enum(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_default_import_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_default_string_piece(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_cord(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& oneof_nested_message(const TestAllTypes* msg);
};

const ::protobuf_unittest::TestAllTypes_OptionalGroup& TestAllTypes::_Internal::optionalgroup(const TestAllTypes* msg) {
  return *msg->_impl_.optionalgroup_;
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::optional_nested_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_nested_message_;
}
const ::protobuf_unittest::ForeignMessage& TestAllTypes::_Internal::optional_foreign_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_foreign_message_;
}
const ::protobuf_unittest_import::ImportMessage& TestAllTypes::_Internal::optional_import_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_import_message_;
}
const ::protobuf_unittest_import::PublicImportMessage& TestAllTypes::_Internal::optional_public_import_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_public_import_message_;
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::optional_lazy_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_lazy_message_;
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::optional_unverified_lazy_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_unverified_lazy_message_;
}
const ::protobuf_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::oneof_nested_message(const TestAllTypes* msg) {
  return *msg->_impl_.oneof_field_.oneof_nested_message_;
}
void TestAllTypes::clear_optional_import_message() {
  if (_impl_.optional_import_message_ != nullptr) _impl_.optional_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void TestAllTypes::clear_optional_public_import_message() {
  if (_impl_.optional_public_import_message_ != nullptr) _impl_.optional_public_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void TestAllTypes::clear_repeated_import_message() {
  _internal_mutable_repeated_import_message()->Clear();
}
/*static*/ const ::_pbi::LazyString TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_{
    {{"hello", 5}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_bytes_{
    {{"world", 5}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_{
    {{"abc", 3}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_cord_{
    {{"123", 3}},
    {nullptr},
};
void TestAllTypes::set_allocated_oneof_nested_message(::protobuf_unittest::TestAllTypes_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(oneof_nested_message);
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypes.oneof_nested_message)
}
TestAllTypes::TestAllTypes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypes)
}
TestAllTypes::TestAllTypes(const TestAllTypes& from) : ::google::protobuf::Message() {
  TestAllTypes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_){from._impl_.repeated_int32_},
      decltype(_impl_.repeated_int64_){from._impl_.repeated_int64_},
      decltype(_impl_.repeated_uint32_){from._impl_.repeated_uint32_},
      decltype(_impl_.repeated_uint64_){from._impl_.repeated_uint64_},
      decltype(_impl_.repeated_sint32_){from._impl_.repeated_sint32_},
      decltype(_impl_.repeated_sint64_){from._impl_.repeated_sint64_},
      decltype(_impl_.repeated_fixed32_){from._impl_.repeated_fixed32_},
      decltype(_impl_.repeated_fixed64_){from._impl_.repeated_fixed64_},
      decltype(_impl_.repeated_sfixed32_){from._impl_.repeated_sfixed32_},
      decltype(_impl_.repeated_sfixed64_){from._impl_.repeated_sfixed64_},
      decltype(_impl_.repeated_float_){from._impl_.repeated_float_},
      decltype(_impl_.repeated_double_){from._impl_.repeated_double_},
      decltype(_impl_.repeated_bool_){from._impl_.repeated_bool_},
      decltype(_impl_.repeated_string_){from._impl_.repeated_string_},
      decltype(_impl_.repeated_bytes_){from._impl_.repeated_bytes_},
      decltype(_impl_.repeatedgroup_){from._impl_.repeatedgroup_},
      decltype(_impl_.repeated_nested_message_){from._impl_.repeated_nested_message_},
      decltype(_impl_.repeated_foreign_message_){from._impl_.repeated_foreign_message_},
      decltype(_impl_.repeated_import_message_){from._impl_.repeated_import_message_},
      decltype(_impl_.repeated_nested_enum_){from._internal_repeated_nested_enum()},
      decltype(_impl_.repeated_foreign_enum_){from._internal_repeated_foreign_enum()},
      decltype(_impl_.repeated_import_enum_){from._internal_repeated_import_enum()},
      decltype(_impl_.repeated_string_piece_){from._impl_.repeated_string_piece_},
      decltype(_impl_.repeated_cord_){from._impl_.repeated_cord_},
      decltype(_impl_.repeated_lazy_message_){from._impl_.repeated_lazy_message_},
      decltype(_impl_.optional_string_){},
      decltype(_impl_.optional_bytes_){},
      decltype(_impl_.optional_string_piece_){},
      decltype(_impl_.optional_cord_){},
      decltype(_impl_.default_string_){},
      decltype(_impl_.default_bytes_){},
      decltype(_impl_.default_string_piece_){},
      decltype(_impl_.default_cord_){},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_nested_message_){nullptr},
      decltype(_impl_.optional_foreign_message_){nullptr},
      decltype(_impl_.optional_import_message_){nullptr},
      decltype(_impl_.optional_public_import_message_){nullptr},
      decltype(_impl_.optional_lazy_message_){nullptr},
      decltype(_impl_.optional_unverified_lazy_message_){nullptr},
      decltype(_impl_.optional_int64_){},
      decltype(_impl_.optional_int32_){},
      decltype(_impl_.optional_uint32_){},
      decltype(_impl_.optional_uint64_){},
      decltype(_impl_.optional_sint64_){},
      decltype(_impl_.optional_sint32_){},
      decltype(_impl_.optional_fixed32_){},
      decltype(_impl_.optional_fixed64_){},
      decltype(_impl_.optional_sfixed64_){},
      decltype(_impl_.optional_sfixed32_){},
      decltype(_impl_.optional_float_){},
      decltype(_impl_.optional_double_){},
      decltype(_impl_.optional_bool_){},
      decltype(_impl_.default_import_enum_){},
      decltype(_impl_.optional_nested_enum_){},
      decltype(_impl_.optional_foreign_enum_){},
      decltype(_impl_.optional_import_enum_){},
      decltype(_impl_.default_int32_){},
      decltype(_impl_.default_int64_){},
      decltype(_impl_.default_uint64_){},
      decltype(_impl_.default_uint32_){},
      decltype(_impl_.default_sint32_){},
      decltype(_impl_.default_sint64_){},
      decltype(_impl_.default_fixed64_){},
      decltype(_impl_.default_fixed32_){},
      decltype(_impl_.default_sfixed32_){},
      decltype(_impl_.default_sfixed64_){},
      decltype(_impl_.default_double_){},
      decltype(_impl_.default_float_){},
      decltype(_impl_.default_bool_){},
      decltype(_impl_.default_nested_enum_){},
      decltype(_impl_.default_foreign_enum_){},
      decltype(_impl_.oneof_field_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.optional_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_string_.Set(from._internal_optional_string(), _this->GetArenaForAllocation());
  }
  _impl_.optional_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_bytes_.Set(from._internal_optional_bytes(), _this->GetArenaForAllocation());
  }
  _impl_.optional_string_piece_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_piece_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_string_piece_.Set(from._internal_optional_string_piece(), _this->GetArenaForAllocation());
  }
  _impl_.optional_cord_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_cord_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.optional_cord_.Set(from._internal_optional_cord(), _this->GetArenaForAllocation());
  }
  _impl_.default_string_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.default_string_.Set(from._internal_default_string(), _this->GetArenaForAllocation());
  }
  _impl_.default_bytes_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.default_bytes_.Set(from._internal_default_bytes(), _this->GetArenaForAllocation());
  }
  _impl_.default_string_piece_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.default_string_piece_.Set(from._internal_default_string_piece(), _this->GetArenaForAllocation());
  }
  _impl_.default_cord_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.default_cord_.Set(from._internal_default_cord(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.optionalgroup_ = new ::protobuf_unittest::TestAllTypes_OptionalGroup(*from._impl_.optionalgroup_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000200u) != 0) {
    _this->_impl_.optional_nested_message_ = new ::protobuf_unittest::TestAllTypes_NestedMessage(*from._impl_.optional_nested_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000400u) != 0) {
    _this->_impl_.optional_foreign_message_ = new ::protobuf_unittest::ForeignMessage(*from._impl_.optional_foreign_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000800u) != 0) {
    _this->_impl_.optional_import_message_ = new ::protobuf_unittest_import::ImportMessage(*from._impl_.optional_import_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00001000u) != 0) {
    _this->_impl_.optional_public_import_message_ = new ::protobuf_unittest_import::PublicImportMessage(*from._impl_.optional_public_import_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00002000u) != 0) {
    _this->_impl_.optional_lazy_message_ = new ::protobuf_unittest::TestAllTypes_NestedMessage(*from._impl_.optional_lazy_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00004000u) != 0) {
    _this->_impl_.optional_unverified_lazy_message_ = new ::protobuf_unittest::TestAllTypes_NestedMessage(*from._impl_.optional_unverified_lazy_message_);
  }
  ::memcpy(&_impl_.optional_int64_, &from._impl_.optional_int64_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.default_foreign_enum_) -
    reinterpret_cast<char*>(&_impl_.optional_int64_)) + sizeof(_impl_.default_foreign_enum_));
  clear_has_oneof_field();
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      _this->_internal_mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_oneof_nested_message());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypes)
}
inline void TestAllTypes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_){arena},
      decltype(_impl_.repeated_int64_){arena},
      decltype(_impl_.repeated_uint32_){arena},
      decltype(_impl_.repeated_uint64_){arena},
      decltype(_impl_.repeated_sint32_){arena},
      decltype(_impl_.repeated_sint64_){arena},
      decltype(_impl_.repeated_fixed32_){arena},
      decltype(_impl_.repeated_fixed64_){arena},
      decltype(_impl_.repeated_sfixed32_){arena},
      decltype(_impl_.repeated_sfixed64_){arena},
      decltype(_impl_.repeated_float_){arena},
      decltype(_impl_.repeated_double_){arena},
      decltype(_impl_.repeated_bool_){arena},
      decltype(_impl_.repeated_string_){arena},
      decltype(_impl_.repeated_bytes_){arena},
      decltype(_impl_.repeatedgroup_){arena},
      decltype(_impl_.repeated_nested_message_){arena},
      decltype(_impl_.repeated_foreign_message_){arena},
      decltype(_impl_.repeated_import_message_){arena},
      decltype(_impl_.repeated_nested_enum_){arena},
      decltype(_impl_.repeated_foreign_enum_){arena},
      decltype(_impl_.repeated_import_enum_){arena},
      decltype(_impl_.repeated_string_piece_){arena},
      decltype(_impl_.repeated_cord_){arena},
      decltype(_impl_.repeated_lazy_message_){arena},
      decltype(_impl_.optional_string_){},
      decltype(_impl_.optional_bytes_){},
      decltype(_impl_.optional_string_piece_){},
      decltype(_impl_.optional_cord_){},
      decltype(_impl_.default_string_){},
      decltype(_impl_.default_bytes_){},
      decltype(_impl_.default_string_piece_){},
      decltype(_impl_.default_cord_){},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_nested_message_){nullptr},
      decltype(_impl_.optional_foreign_message_){nullptr},
      decltype(_impl_.optional_import_message_){nullptr},
      decltype(_impl_.optional_public_import_message_){nullptr},
      decltype(_impl_.optional_lazy_message_){nullptr},
      decltype(_impl_.optional_unverified_lazy_message_){nullptr},
      decltype(_impl_.optional_int64_){::int64_t{0}},
      decltype(_impl_.optional_int32_){0},
      decltype(_impl_.optional_uint32_){0u},
      decltype(_impl_.optional_uint64_){::uint64_t{0u}},
      decltype(_impl_.optional_sint64_){::int64_t{0}},
      decltype(_impl_.optional_sint32_){0},
      decltype(_impl_.optional_fixed32_){0u},
      decltype(_impl_.optional_fixed64_){::uint64_t{0u}},
      decltype(_impl_.optional_sfixed64_){::int64_t{0}},
      decltype(_impl_.optional_sfixed32_){0},
      decltype(_impl_.optional_float_){0},
      decltype(_impl_.optional_double_){0},
      decltype(_impl_.optional_bool_){false},
      decltype(_impl_.default_import_enum_){8},
      decltype(_impl_.optional_nested_enum_){1},
      decltype(_impl_.optional_foreign_enum_){4},
      decltype(_impl_.optional_import_enum_){7},
      decltype(_impl_.default_int32_){41},
      decltype(_impl_.default_int64_){::int64_t{42}},
      decltype(_impl_.default_uint64_){::uint64_t{44u}},
      decltype(_impl_.default_uint32_){43u},
      decltype(_impl_.default_sint32_){-45},
      decltype(_impl_.default_sint64_){::int64_t{46}},
      decltype(_impl_.default_fixed64_){::uint64_t{48u}},
      decltype(_impl_.default_fixed32_){47u},
      decltype(_impl_.default_sfixed32_){49},
      decltype(_impl_.default_sfixed64_){::int64_t{-50}},
      decltype(_impl_.default_double_){52000},
      decltype(_impl_.default_float_){51.5f},
      decltype(_impl_.default_bool_){true},
      decltype(_impl_.default_nested_enum_){2},
      decltype(_impl_.default_foreign_enum_){5},
      decltype(_impl_.oneof_field_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.optional_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_string_piece_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_piece_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_cord_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_cord_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.default_string_.InitDefault();
  _impl_.default_bytes_.InitDefault();
  _impl_.default_string_piece_.InitDefault();
  _impl_.default_cord_.InitDefault();
  clear_has_oneof_field();
}
TestAllTypes::~TestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_int32_.~RepeatedField();
  _impl_.repeated_int64_.~RepeatedField();
  _impl_.repeated_uint32_.~RepeatedField();
  _impl_.repeated_uint64_.~RepeatedField();
  _impl_.repeated_sint32_.~RepeatedField();
  _impl_.repeated_sint64_.~RepeatedField();
  _impl_.repeated_fixed32_.~RepeatedField();
  _impl_.repeated_fixed64_.~RepeatedField();
  _impl_.repeated_sfixed32_.~RepeatedField();
  _impl_.repeated_sfixed64_.~RepeatedField();
  _impl_.repeated_float_.~RepeatedField();
  _impl_.repeated_double_.~RepeatedField();
  _impl_.repeated_bool_.~RepeatedField();
  _internal_mutable_repeated_string()->~RepeatedPtrField();
  _internal_mutable_repeated_bytes()->~RepeatedPtrField();
  _impl_.repeatedgroup_.~RepeatedPtrField();
  _impl_.repeated_nested_message_.~RepeatedPtrField();
  _impl_.repeated_foreign_message_.~RepeatedPtrField();
  _impl_.repeated_import_message_.~RepeatedPtrField();
  _internal_mutable_repeated_nested_enum()->~RepeatedField();
  _internal_mutable_repeated_foreign_enum()->~RepeatedField();
  _internal_mutable_repeated_import_enum()->~RepeatedField();
  _internal_mutable_repeated_string_piece()->~RepeatedPtrField();
  _internal_mutable_repeated_cord()->~RepeatedPtrField();
  _impl_.repeated_lazy_message_.~RepeatedPtrField();
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  _impl_.optional_string_piece_.Destroy();
  _impl_.optional_cord_.Destroy();
  _impl_.default_string_.Destroy();
  _impl_.default_bytes_.Destroy();
  _impl_.default_string_piece_.Destroy();
  _impl_.default_cord_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optionalgroup_;
  if (this != internal_default_instance()) delete _impl_.optional_nested_message_;
  if (this != internal_default_instance()) delete _impl_.optional_foreign_message_;
  if (this != internal_default_instance()) delete _impl_.optional_import_message_;
  if (this != internal_default_instance()) delete _impl_.optional_public_import_message_;
  if (this != internal_default_instance()) delete _impl_.optional_lazy_message_;
  if (this != internal_default_instance()) delete _impl_.optional_unverified_lazy_message_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
}
void TestAllTypes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestAllTypes::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestAllTypes)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_int32()->Clear();
  _internal_mutable_repeated_int64()->Clear();
  _internal_mutable_repeated_uint32()->Clear();
  _internal_mutable_repeated_uint64()->Clear();
  _internal_mutable_repeated_sint32()->Clear();
  _internal_mutable_repeated_sint64()->Clear();
  _internal_mutable_repeated_fixed32()->Clear();
  _internal_mutable_repeated_fixed64()->Clear();
  _internal_mutable_repeated_sfixed32()->Clear();
  _internal_mutable_repeated_sfixed64()->Clear();
  _internal_mutable_repeated_float()->Clear();
  _internal_mutable_repeated_double()->Clear();
  _internal_mutable_repeated_bool()->Clear();
  _internal_mutable_repeated_string()->Clear();
  _internal_mutable_repeated_bytes()->Clear();
  _internal_mutable_repeatedgroup()->Clear();
  _internal_mutable_repeated_nested_message()->Clear();
  _internal_mutable_repeated_foreign_message()->Clear();
  _internal_mutable_repeated_import_message()->Clear();
  _internal_mutable_repeated_nested_enum()->Clear();
  _internal_mutable_repeated_foreign_enum()->Clear();
  _internal_mutable_repeated_import_enum()->Clear();
  _internal_mutable_repeated_string_piece()->Clear();
  _internal_mutable_repeated_cord()->Clear();
  _internal_mutable_repeated_lazy_message()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.optional_string_piece_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.optional_cord_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.default_string_.ClearToDefault(::protobuf_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.default_bytes_.ClearToDefault(::protobuf_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_bytes_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.default_string_piece_.ClearToDefault(::protobuf_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.default_cord_.ClearToDefault(::protobuf_unittest::TestAllTypes::Impl_::_i_give_permission_to_break_this_code_default_default_cord_, GetArenaForAllocation());
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.optional_foreign_message_ != nullptr);
      _impl_.optional_foreign_message_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.optional_import_message_ != nullptr);
      _impl_.optional_import_message_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.optional_public_import_message_ != nullptr);
      _impl_.optional_public_import_message_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.optional_lazy_message_ != nullptr);
      _impl_.optional_lazy_message_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.optional_unverified_lazy_message_ != nullptr);
      _impl_.optional_unverified_lazy_message_->Clear();
    }
  }
  _impl_.optional_int64_ = ::int64_t{0};
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.optional_int32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_sfixed64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_)) + sizeof(_impl_.optional_sfixed64_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.optional_sfixed32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_bool_) -
        reinterpret_cast<char*>(&_impl_.optional_sfixed32_)) + sizeof(_impl_.optional_bool_));
    _impl_.default_import_enum_ = 8;
    _impl_.optional_nested_enum_ = 1;
    _impl_.optional_foreign_enum_ = 4;
    _impl_.optional_import_enum_ = 7;
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    _impl_.default_int32_ = 41;
    _impl_.default_int64_ = ::int64_t{42};
    _impl_.default_uint64_ = ::uint64_t{44u};
    _impl_.default_uint32_ = 43u;
    _impl_.default_sint32_ = -45;
    _impl_.default_sint64_ = ::int64_t{46};
    _impl_.default_fixed64_ = ::uint64_t{48u};
    _impl_.default_fixed32_ = 47u;
  }
  if (cached_has_bits & 0x00007f00u) {
    _impl_.default_sfixed32_ = 49;
    _impl_.default_sfixed64_ = ::int64_t{-50};
    _impl_.default_double_ = 52000;
    _impl_.default_float_ = 51.5f;
    _impl_.default_bool_ = true;
    _impl_.default_nested_enum_ = 2;
    _impl_.default_foreign_enum_ = 5;
  }
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 76, 22, 267, 17> TestAllTypes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_),
    0, // no _extensions_
    114, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    805371904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    76,  // num_field_entries
    22,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestAllTypes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_int32_), 16>(),
     {8, 16, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_)}},
    // optional int64 optional_int64 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_int64_), 15>(),
     {16, 15, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_)}},
    // optional uint32 optional_uint32 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_uint32_), 17>(),
     {24, 17, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_)}},
    // optional uint64 optional_uint64 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_uint64_), 18>(),
     {32, 18, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_)}},
    // optional sint32 optional_sint32 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 20, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_)}},
    // optional sint64 optional_sint64 = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 19, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_)}},
    // optional fixed32 optional_fixed32 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 21, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_)}},
    // optional fixed64 optional_fixed64 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 22, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_)}},
    // optional sfixed32 optional_sfixed32 = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 24, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_)}},
    // optional sfixed64 optional_sfixed64 = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 23, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_)}},
    // optional float optional_float = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 25, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_)}},
    // optional double optional_double = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 26, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_)}},
    // optional bool optional_bool = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestAllTypes, _impl_.optional_bool_), 27>(),
     {104, 27, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_)}},
    // optional string optional_string = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_)}},
    // optional bytes optional_bytes = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_)}},
    // optional group OptionalGroup = 16 { ... };
    {::_pbi::TcParser::FastGtS2,
     {387, 8, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optionalgroup_)}},
    // repeated uint32 repeated_uint32 = 33;
    {::_pbi::TcParser::FastV32R2,
     {648, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_)}},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 9, 1, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_)}},
    // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 10, 2, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_)}},
    // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 11, 3, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_message_)}},
    // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {::_pbi::TcParser::FastEvS2,
     {424, 29, 4, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_)}},
    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    {::_pbi::TcParser::FastErS2,
     {432, 30, 5, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_)}},
    // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
    {::_pbi::TcParser::FastErS2,
     {440, 31, 6, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_enum_)}},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {::_pbi::TcParser::FastF64R2,
     {705, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_)}},
    // optional string optional_cord = 25 [ctype = CORD];
    {::_pbi::TcParser::FastScS2,
     {458, 3, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_)}},
    // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 12, 7, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_public_import_message_)}},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {474, 13, 8, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_)}},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {482, 14, 9, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_unverified_lazy_message_)}},
    // repeated bytes repeated_bytes = 45;
    {::_pbi::TcParser::FastBR2,
     {746, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_)}},
    // repeated group RepeatedGroup = 46 { ... };
    {::_pbi::TcParser::FastGtR2,
     {755, 63, 10, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeatedgroup_)}},
    // repeated int32 repeated_int32 = 31;
    {::_pbi::TcParser::FastV32R2,
     {504, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_)}},
  }}, {{
    33, 0, 6,
    16384, 29, 3712, 44, 63488, 56, 65504, 67, 16383, 72, 65532, 74,
    65535, 65535
  }}, {{
    // optional int32 optional_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 optional_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 optional_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 optional_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 optional_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 optional_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 optional_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 optional_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 optional_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 optional_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float optional_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double optional_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool optional_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string optional_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes optional_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional group OptionalGroup = 16 { ... };
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 9, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_), _Internal::kHasBitsOffset + 10, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_message_), _Internal::kHasBitsOffset + 11, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_), _Internal::kHasBitsOffset + 29, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_), _Internal::kHasBitsOffset + 30, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_import_enum_), _Internal::kHasBitsOffset + 31, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_piece_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string optional_cord = 25 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_public_import_message_), _Internal::kHasBitsOffset + 12, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_), _Internal::kHasBitsOffset + 13, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_unverified_lazy_message_), _Internal::kHasBitsOffset + 14, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 repeated_int32 = 31;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int64 repeated_int64 = 32;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated uint32 repeated_uint32 = 33;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint64 repeated_uint64 = 34;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // repeated sint32 repeated_sint32 = 35;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt32)},
    // repeated sint64 repeated_sint64 = 36;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt64)},
    // repeated fixed32 repeated_fixed32 = 37;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
    // repeated fixed64 repeated_fixed64 = 38;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed32)},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed64)},
    // repeated float repeated_float = 41;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_float_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated double repeated_double = 42;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_double_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated bool repeated_bool = 43;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bool_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated string repeated_string = 44;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes = 45;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated group RepeatedGroup = 46 { ... };
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeatedgroup_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_message_), -1, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_message_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_import_message_), -1, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_enum_), -1, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_enum_), -1, 15,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_import_enum_), -1, 16,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_piece_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string repeated_cord = 55 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_cord_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_lazy_message_), -1, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 default_int32 = 61 [default = 41];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_int32_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 default_int64 = 62 [default = 42];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_int64_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 default_uint32 = 63 [default = 43];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_uint32_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 default_uint64 = 64 [default = 44];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_uint64_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 default_sint32 = 65 [default = -45];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_sint32_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 default_sint64 = 66 [default = 46];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_sint64_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 default_fixed32 = 67 [default = 47];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_fixed32_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 default_fixed64 = 68 [default = 48];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_fixed64_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_sfixed32_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_sfixed64_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float default_float = 71 [default = 51.5];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_float_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double default_double = 72 [default = 52000];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_double_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool default_bool = 73 [default = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_bool_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string default_string = 74 [default = "hello"];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_string_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes default_bytes = 75 [default = "world"];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_bytes_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_nested_enum_), _Internal::kHasBitsOffset + 45, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_foreign_enum_), _Internal::kHasBitsOffset + 46, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_import_enum_), _Internal::kHasBitsOffset + 28, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_string_piece_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string default_cord = 85 [default = "123", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_cord_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // uint32 oneof_uint32 = 111;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_nested_message_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 113;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // bytes oneof_bytes = 114;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_OptionalGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessage>()},
    {::protobuf_unittest::TestAllTypes_NestedEnum_IsValid},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::PublicImportMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_RepeatedGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessage>()},
    {::protobuf_unittest::TestAllTypes_NestedEnum_IsValid},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::protobuf_unittest::TestAllTypes_NestedEnum_IsValid},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
  }}, {{
    "\36\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\25\15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\25\15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\16\0\0\0\0\24\14\0\0\14\0\0\0\0"
    "protobuf_unittest.TestAllTypes"
    "optional_string"
    "optional_string_piece"
    "optional_cord"
    "repeated_string"
    "repeated_string_piece"
    "repeated_cord"
    "default_string"
    "default_string_piece"
    "default_cord"
    "oneof_string"
  }},
};

::uint8_t* TestAllTypes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32 = 1;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32(), target);
  }

  // optional int64 optional_int64 = 2;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_optional_int64(), target);
  }

  // optional uint32 optional_uint32 = 3;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_optional_uint32(), target);
  }

  // optional uint64 optional_uint64 = 4;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_optional_uint64(), target);
  }

  // optional sint32 optional_sint32 = 5;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        5, this->_internal_optional_sint32(), target);
  }

  // optional sint64 optional_sint64 = 6;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        6, this->_internal_optional_sint64(), target);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        7, this->_internal_optional_fixed32(), target);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        8, this->_internal_optional_fixed64(), target);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        9, this->_internal_optional_sfixed32(), target);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        10, this->_internal_optional_sfixed64(), target);
  }

  // optional float optional_float = 11;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_optional_float(), target);
  }

  // optional double optional_double = 12;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_optional_double(), target);
  }

  // optional bool optional_bool = 13;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_optional_bool(), target);
  }

  // optional string optional_string = 14;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.optional_string");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional bytes optional_bytes = 15;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_bytes();
    target = stream->WriteBytesMaybeAliased(15, _s, target);
  }

  // optional group OptionalGroup = 16 { ... };
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        16, _Internal::optionalgroup(this), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::optional_nested_message(this),
        _Internal::optional_nested_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::optional_foreign_message(this),
        _Internal::optional_foreign_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::optional_import_message(this),
        _Internal::optional_import_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        21, this->_internal_optional_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_optional_foreign_enum(), target);
  }

  // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        23, this->_internal_optional_import_enum(), target);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_optional_string_piece();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.optional_string_piece");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_optional_cord();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.optional_cord");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(26, _Internal::optional_public_import_message(this),
        _Internal::optional_public_import_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::optional_lazy_message(this),
        _Internal::optional_lazy_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::optional_unverified_lazy_message(this),
        _Internal::optional_unverified_lazy_message(this).GetCachedSize(), target, stream);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        31, this->_internal_repeated_int32().Get(i), target);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0, n = this->_internal_repeated_int64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        32, this->_internal_repeated_int64().Get(i), target);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0, n = this->_internal_repeated_uint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        33, this->_internal_repeated_uint32().Get(i), target);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0, n = this->_internal_repeated_uint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        34, this->_internal_repeated_uint64().Get(i), target);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0, n = this->_internal_repeated_sint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        35, this->_internal_repeated_sint32().Get(i), target);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0, n = this->_internal_repeated_sint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        36, this->_internal_repeated_sint64().Get(i), target);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0, n = this->_internal_repeated_fixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        37, this->_internal_repeated_fixed32().Get(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0, n = this->_internal_repeated_fixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        38, this->_internal_repeated_fixed64().Get(i), target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0, n = this->_internal_repeated_sfixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        39, this->_internal_repeated_sfixed32().Get(i), target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0, n = this->_internal_repeated_sfixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        40, this->_internal_repeated_sfixed64().Get(i), target);
  }

  // repeated float repeated_float = 41;
  for (int i = 0, n = this->_internal_repeated_float_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        41, this->_internal_repeated_float().Get(i), target);
  }

  // repeated double repeated_double = 42;
  for (int i = 0, n = this->_internal_repeated_double_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        42, this->_internal_repeated_double().Get(i), target);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0, n = this->_internal_repeated_bool_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        43, this->_internal_repeated_bool().Get(i), target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->_internal_repeated_string_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.repeated_string");
    target = stream->WriteString(44, s, target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->_internal_repeated_bytes_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_bytes().Get(i);
    target = stream->WriteBytes(45, s, target);
  }

  // repeated group RepeatedGroup = 46 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(46, this->_internal_repeatedgroup().Get(i), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_nested_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_nested_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(48, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_foreign_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_foreign_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(49, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_import_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_import_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(50, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  for (int i = 0, n = this->_internal_repeated_nested_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        51, static_cast<::protobuf_unittest::TestAllTypes_NestedEnum>(this->_internal_repeated_nested_enum().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  for (int i = 0, n = this->_internal_repeated_foreign_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        52, static_cast<::protobuf_unittest::ForeignEnum>(this->_internal_repeated_foreign_enum().Get(i)),
        target);
  }

  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  for (int i = 0, n = this->_internal_repeated_import_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        53, static_cast<::protobuf_unittest_import::ImportEnum>(this->_internal_repeated_import_enum().Get(i)),
        target);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->_internal_repeated_string_piece_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_piece().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.repeated_string_piece");
    target = stream->WriteString(54, s, target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->_internal_repeated_cord_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_cord().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.repeated_cord");
    target = stream->WriteString(55, s, target);
  }

  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_lazy_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_lazy_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(57, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional int32 default_int32 = 61 [default = 41];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        61, this->_internal_default_int32(), target);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        62, this->_internal_default_int64(), target);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_default_uint32(), target);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        64, this->_internal_default_uint64(), target);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        65, this->_internal_default_sint32(), target);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        66, this->_internal_default_sint64(), target);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        67, this->_internal_default_fixed32(), target);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        68, this->_internal_default_fixed64(), target);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        69, this->_internal_default_sfixed32(), target);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        70, this->_internal_default_sfixed64(), target);
  }

  // optional float default_float = 71 [default = 51.5];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        71, this->_internal_default_float(), target);
  }

  // optional double default_double = 72 [default = 52000];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        72, this->_internal_default_double(), target);
  }

  // optional bool default_bool = 73 [default = true];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        73, this->_internal_default_bool(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string default_string = 74 [default = "hello"];
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_default_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.default_string");
    target = stream->WriteStringMaybeAliased(74, _s, target);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_default_bytes();
    target = stream->WriteBytesMaybeAliased(75, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        81, this->_internal_default_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        82, this->_internal_default_foreign_enum(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        83, this->_internal_default_import_enum(), target);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_default_string_piece();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.default_string_piece");
    target = stream->WriteStringMaybeAliased(84, _s, target);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_default_cord();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestAllTypes.default_cord");
    target = stream->WriteStringMaybeAliased(85, _s, target);
  }

  switch (oneof_field_case()) {
    case kOneofUint32: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          111, this->_internal_oneof_uint32(), target);
      break;
    }
    case kOneofNestedMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(112, _Internal::oneof_nested_message(this),
          _Internal::oneof_nested_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestAllTypes.oneof_string");
      target = stream->WriteStringMaybeAliased(113, _s, target);
      break;
    }
    case kOneofBytes: {
      const std::string& _s = this->_internal_oneof_bytes();
      target = stream->WriteBytesMaybeAliased(114, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypes)
  return target;
}

::size_t TestAllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 31;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64 = 32;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 repeated_uint32 = 33;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_repeated_uint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_uint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 repeated_uint64 = 34;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_repeated_uint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_uint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 repeated_sint32 = 35;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_repeated_sint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 repeated_sint64 = 36;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_repeated_sint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 repeated_fixed32 = 37;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 repeated_fixed64 = 38;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float repeated_float = 41;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated double repeated_double = 42;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_double_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_double_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool repeated_bool = 43;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated string repeated_string = 44;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string().size());
  for (int i = 0, n = _internal_repeated_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string().Get(i));
  }
  // repeated bytes repeated_bytes = 45;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_bytes().size());
  for (int i = 0, n = _internal_repeated_bytes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_repeated_bytes().Get(i));
  }
  // repeated group RepeatedGroup = 46 { ... };
  total_size += 4UL * this->_internal_repeatedgroup_size();
  for (const auto& msg : this->_internal_repeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  total_size += 2UL * this->_internal_repeated_nested_message_size();
  for (const auto& msg : this->_internal_repeated_nested_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.ForeignMessage repeated_foreign_message = 49;
  total_size += 2UL * this->_internal_repeated_foreign_message_size();
  for (const auto& msg : this->_internal_repeated_foreign_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest_import.ImportMessage repeated_import_message = 50;
  total_size += 2UL * this->_internal_repeated_import_message_size();
  for (const auto& msg : this->_internal_repeated_import_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_nested_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_nested_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.ForeignEnum repeated_foreign_enum = 52;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_foreign_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_foreign_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest_import.ImportEnum repeated_import_enum = 53;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_import_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_import_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_piece().size());
  for (int i = 0, n = _internal_repeated_string_piece().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_piece().Get(i));
  }
  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_cord().size());
  for (int i = 0, n = _internal_repeated_cord().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_cord().Get(i));
  }
  // repeated .protobuf_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  total_size += 2UL * this->_internal_repeated_lazy_message_size();
  for (const auto& msg : this->_internal_repeated_lazy_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string optional_string = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_optional_bytes());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_cord());
    }

    // optional string default_string = 74 [default = "hello"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_string());
    }

    // optional bytes default_bytes = 75 [default = "world"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_default_bytes());
    }

    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_string_piece());
    }

    // optional string default_cord = 85 [default = "123", ctype = CORD];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_cord());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional group OptionalGroup = 16 { ... };
    if (cached_has_bits & 0x00000100u) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.optionalgroup_);
    }

    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_nested_message_);
    }

    // optional .protobuf_unittest.ForeignMessage optional_foreign_message = 19;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_foreign_message_);
    }

    // optional .protobuf_unittest_import.ImportMessage optional_import_message = 20;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_import_message_);
    }

    // optional .protobuf_unittest_import.PublicImportMessage optional_public_import_message = 26;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_public_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_lazy_message = 27 [lazy = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_lazy_message_);
    }

    // optional .protobuf_unittest.TestAllTypes.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_unverified_lazy_message_);
    }

    // optional int64 optional_int64 = 2;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_optional_int64());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 optional_int32 = 1;
    if (cached_has_bits & 0x00010000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32());
    }

    // optional uint32 optional_uint32 = 3;
    if (cached_has_bits & 0x00020000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (cached_has_bits & 0x00040000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_optional_uint64());
    }

    // optional sint64 optional_sint64 = 6;
    if (cached_has_bits & 0x00080000u) {
      total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
          this->_internal_optional_sint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (cached_has_bits & 0x00100000u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_optional_sint32());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (cached_has_bits & 0x00200000u) {
      total_size += 5;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (cached_has_bits & 0x00400000u) {
      total_size += 9;
    }

    // optional sfixed64 optional_sfixed64 = 10;
    if (cached_has_bits & 0x00800000u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional sfixed32 optional_sfixed32 = 9;
    if (cached_has_bits & 0x01000000u) {
      total_size += 5;
    }

    // optional float optional_float = 11;
    if (cached_has_bits & 0x02000000u) {
      total_size += 5;
    }

    // optional double optional_double = 12;
    if (cached_has_bits & 0x04000000u) {
      total_size += 9;
    }

    // optional bool optional_bool = 13;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2;
    }

    // optional .protobuf_unittest_import.ImportEnum default_import_enum = 83 [default = IMPORT_BAR];
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_import_enum());
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_foreign_enum());
    }

    // optional .protobuf_unittest_import.ImportEnum optional_import_enum = 23;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_import_enum());
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 default_int32 = 61 [default = 41];
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_default_int32());
    }

    // optional int64 default_int64 = 62 [default = 42];
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_default_int64());
    }

    // optional uint64 default_uint64 = 64 [default = 44];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_default_uint64());
    }

    // optional uint32 default_uint32 = 63 [default = 43];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_default_uint32());
    }

    // optional sint32 default_sint32 = 65 [default = -45];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::SInt32Size(
                                      this->_internal_default_sint32());
    }

    // optional sint64 default_sint64 = 66 [default = 46];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::SInt64Size(
                                      this->_internal_default_sint64());
    }

    // optional fixed64 default_fixed64 = 68 [default = 48];
    if (cached_has_bits & 0x00000040u) {
      total_size += 10;
    }

    // optional fixed32 default_fixed32 = 67 [default = 47];
    if (cached_has_bits & 0x00000080u) {
      total_size += 6;
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    if (cached_has_bits & 0x00000100u) {
      total_size += 6;
    }

    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    if (cached_has_bits & 0x00000200u) {
      total_size += 10;
    }

    // optional double default_double = 72 [default = 52000];
    if (cached_has_bits & 0x00000400u) {
      total_size += 10;
    }

    // optional float default_float = 71 [default = 51.5];
    if (cached_has_bits & 0x00000800u) {
      total_size += 6;
    }

    // optional bool default_bool = 73 [default = true];
    if (cached_has_bits & 0x00001000u) {
      total_size += 3;
    }

    // optional .protobuf_unittest.TestAllTypes.NestedEnum default_nested_enum = 81 [default = BAR];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnum default_foreign_enum = 82 [default = FOREIGN_BAR];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_foreign_enum());
    }

  }
  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_oneof_uint32());
      break;
    }
    // .protobuf_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.oneof_field_.oneof_nested_message_);
      break;
    }
    // string oneof_string = 113;
    case kOneofString: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestAllTypes::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestAllTypes::GetClassData() const { return &_class_data_; }


void TestAllTypes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes*>(&to_msg);
  auto& from = static_cast<const TestAllTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_uint32()->MergeFrom(from._internal_repeated_uint32());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_mutable_repeated_sint32()->MergeFrom(from._internal_repeated_sint32());
  _this->_internal_mutable_repeated_sint64()->MergeFrom(from._internal_repeated_sint64());
  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_sfixed32()->MergeFrom(from._internal_repeated_sfixed32());
  _this->_internal_mutable_repeated_sfixed64()->MergeFrom(from._internal_repeated_sfixed64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_double()->MergeFrom(from._internal_repeated_double());
  _this->_internal_mutable_repeated_bool()->MergeFrom(from._internal_repeated_bool());
  _this->_internal_mutable_repeated_string()->MergeFrom(from._internal_repeated_string());
  _this->_internal_mutable_repeated_bytes()->MergeFrom(from._internal_repeated_bytes());
  _this->_internal_mutable_repeatedgroup()->MergeFrom(from._internal_repeatedgroup());
  _this->_internal_mutable_repeated_nested_message()->MergeFrom(from._internal_repeated_nested_message());
  _this->_internal_mutable_repeated_foreign_message()->MergeFrom(from._internal_repeated_foreign_message());
  _this->_internal_mutable_repeated_import_message()->MergeFrom(from._internal_repeated_import_message());
  _this->_internal_mutable_repeated_nested_enum()->MergeFrom(from._internal_repeated_nested_enum());
  _this->_internal_mutable_repeated_foreign_enum()->MergeFrom(from._internal_repeated_foreign_enum());
  _this->_internal_mutable_repeated_import_enum()->MergeFrom(from._internal_repeated_import_enum());
  _this->_internal_mutable_repeated_string_piece()->MergeFrom(from._internal_repeated_string_piece());
  _this->_internal_mutable_repeated_cord()->MergeFrom(from._internal_repeated_cord());
  _this->_internal_mutable_repeated_lazy_message()->MergeFrom(from._internal_repeated_lazy_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string(from._internal_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes(from._internal_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_optional_string_piece(from._internal_optional_string_piece());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_optional_cord(from._internal_optional_cord());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_default_string(from._internal_default_string());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_default_bytes(from._internal_default_bytes());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_default_string_piece(from._internal_default_string_piece());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_default_cord(from._internal_default_cord());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestAllTypes_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_optional_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_optional_nested_message());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_optional_foreign_message()->::protobuf_unittest::ForeignMessage::MergeFrom(
          from._internal_optional_foreign_message());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_optional_import_message()->::protobuf_unittest_import::ImportMessage::MergeFrom(
          from._internal_optional_import_message());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_optional_public_import_message()->::protobuf_unittest_import::PublicImportMessage::MergeFrom(
          from._internal_optional_public_import_message());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_optional_lazy_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_optional_lazy_message());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_optional_unverified_lazy_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_optional_unverified_lazy_message());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.optional_int64_ = from._impl_.optional_int64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.optional_uint32_ = from._impl_.optional_uint32_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.optional_uint64_ = from._impl_.optional_uint64_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.optional_sint64_ = from._impl_.optional_sint64_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.optional_sint32_ = from._impl_.optional_sint32_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.optional_fixed32_ = from._impl_.optional_fixed32_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.optional_fixed64_ = from._impl_.optional_fixed64_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.optional_sfixed64_ = from._impl_.optional_sfixed64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.optional_sfixed32_ = from._impl_.optional_sfixed32_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.optional_float_ = from._impl_.optional_float_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.optional_double_ = from._impl_.optional_double_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.optional_bool_ = from._impl_.optional_bool_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_import_enum_ = from._impl_.default_import_enum_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.optional_nested_enum_ = from._impl_.optional_nested_enum_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.optional_foreign_enum_ = from._impl_.optional_foreign_enum_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.optional_import_enum_ = from._impl_.optional_import_enum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.default_int32_ = from._impl_.default_int32_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.default_int64_ = from._impl_.default_int64_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default_uint64_ = from._impl_.default_uint64_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default_uint32_ = from._impl_.default_uint32_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.default_sint32_ = from._impl_.default_sint32_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.default_sint64_ = from._impl_.default_sint64_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_fixed64_ = from._impl_.default_fixed64_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_fixed32_ = from._impl_.default_fixed32_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_sfixed32_ = from._impl_.default_sfixed32_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_sfixed64_ = from._impl_.default_sfixed64_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default_double_ = from._impl_.default_double_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_float_ = from._impl_.default_float_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_bool_ = from._impl_.default_bool_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.default_nested_enum_ = from._impl_.default_nested_enum_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.default_foreign_enum_ = from._impl_.default_foreign_enum_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      _this->_internal_mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_oneof_nested_message());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes::CopyFrom(const TestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes::IsInitialized() const {
  return true;
}

void TestAllTypes::InternalSwap(TestAllTypes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_uint32_.InternalSwap(&other->_impl_.repeated_uint32_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
  _impl_.repeated_sint32_.InternalSwap(&other->_impl_.repeated_sint32_);
  _impl_.repeated_sint64_.InternalSwap(&other->_impl_.repeated_sint64_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_sfixed32_.InternalSwap(&other->_impl_.repeated_sfixed32_);
  _impl_.repeated_sfixed64_.InternalSwap(&other->_impl_.repeated_sfixed64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_double_.InternalSwap(&other->_impl_.repeated_double_);
  _impl_.repeated_bool_.InternalSwap(&other->_impl_.repeated_bool_);
  _impl_.repeated_string_.InternalSwap(&other->_impl_.repeated_string_);
  _impl_.repeated_bytes_.InternalSwap(&other->_impl_.repeated_bytes_);
  _impl_.repeatedgroup_.InternalSwap(&other->_impl_.repeatedgroup_);
  _impl_.repeated_nested_message_.InternalSwap(&other->_impl_.repeated_nested_message_);
  _impl_.repeated_foreign_message_.InternalSwap(&other->_impl_.repeated_foreign_message_);
  _impl_.repeated_import_message_.InternalSwap(&other->_impl_.repeated_import_message_);
  _impl_.repeated_nested_enum_.InternalSwap(&other->_impl_.repeated_nested_enum_);
  _impl_.repeated_foreign_enum_.InternalSwap(&other->_impl_.repeated_foreign_enum_);
  _impl_.repeated_import_enum_.InternalSwap(&other->_impl_.repeated_import_enum_);
  _impl_.repeated_string_piece_.InternalSwap(&other->_impl_.repeated_string_piece_);
  _impl_.repeated_cord_.InternalSwap(&other->_impl_.repeated_cord_);
  _impl_.repeated_lazy_message_.InternalSwap(&other->_impl_.repeated_lazy_message_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, lhs_arena,
                                       &other->_impl_.optional_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, lhs_arena,
                                       &other->_impl_.optional_bytes_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_piece_, lhs_arena,
                                       &other->_impl_.optional_string_piece_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_cord_, lhs_arena,
                                       &other->_impl_.optional_cord_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_string_, lhs_arena,
                                       &other->_impl_.default_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_bytes_, lhs_arena,
                                       &other->_impl_.default_bytes_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_string_piece_, lhs_arena,
                                       &other->_impl_.default_string_piece_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_cord_, lhs_arena,
                                       &other->_impl_.default_cord_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.default_foreign_enum_)
      + sizeof(TestAllTypes::_impl_.default_foreign_enum_)
      - PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optionalgroup_)>(
          reinterpret_cast<char*>(&_impl_.optionalgroup_),
          reinterpret_cast<char*>(&other->_impl_.optionalgroup_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestAllTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[3]);
}
// ===================================================================

class NestedTestAllTypes::_Internal {
 public:
  using HasBits = decltype(std::declval<NestedTestAllTypes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_._has_bits_);
  static const ::protobuf_unittest::NestedTestAllTypes& child(const NestedTestAllTypes* msg);
  static void set_has_child(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypes& payload(const NestedTestAllTypes* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::NestedTestAllTypes& lazy_child(const NestedTestAllTypes* msg);
  static void set_has_lazy_child(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestAllTypes& eager_child(const NestedTestAllTypes* msg);
  static void set_has_eager_child(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::protobuf_unittest::NestedTestAllTypes& NestedTestAllTypes::_Internal::child(const NestedTestAllTypes* msg) {
  return *msg->_impl_.child_;
}
const ::protobuf_unittest::TestAllTypes& NestedTestAllTypes::_Internal::payload(const NestedTestAllTypes* msg) {
  return *msg->_impl_.payload_;
}
const ::protobuf_unittest::NestedTestAllTypes& NestedTestAllTypes::_Internal::lazy_child(const NestedTestAllTypes* msg) {
  return *msg->_impl_.lazy_child_;
}
const ::protobuf_unittest::TestAllTypes& NestedTestAllTypes::_Internal::eager_child(const NestedTestAllTypes* msg) {
  return *msg->_impl_.eager_child_;
}
NestedTestAllTypes::NestedTestAllTypes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.NestedTestAllTypes)
}
NestedTestAllTypes::NestedTestAllTypes(const NestedTestAllTypes& from) : ::google::protobuf::Message() {
  NestedTestAllTypes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_child_){from._impl_.repeated_child_},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.lazy_child_){nullptr},
      decltype(_impl_.eager_child_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.child_ = new ::protobuf_unittest::NestedTestAllTypes(*from._impl_.child_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.payload_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.payload_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.lazy_child_ = new ::protobuf_unittest::NestedTestAllTypes(*from._impl_.lazy_child_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.eager_child_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.eager_child_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.NestedTestAllTypes)
}
inline void NestedTestAllTypes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_child_){arena},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.lazy_child_){nullptr},
      decltype(_impl_.eager_child_){nullptr},
  };
}
NestedTestAllTypes::~NestedTestAllTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.NestedTestAllTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NestedTestAllTypes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_child_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.child_;
  if (this != internal_default_instance()) delete _impl_.payload_;
  if (this != internal_default_instance()) delete _impl_.lazy_child_;
  if (this != internal_default_instance()) delete _impl_.eager_child_;
}
void NestedTestAllTypes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void NestedTestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.NestedTestAllTypes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_child()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.child_ != nullptr);
      _impl_.child_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.lazy_child_ != nullptr);
      _impl_.lazy_child_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.eager_child_ != nullptr);
      _impl_.eager_child_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NestedTestAllTypes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> NestedTestAllTypes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NestedTestAllTypes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.NestedTestAllTypes child = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_)}},
    // optional .protobuf_unittest.TestAllTypes payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.payload_)}},
    // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.repeated_child_)}},
    // optional .protobuf_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.lazy_child_)}},
    // optional .protobuf_unittest.TestAllTypes eager_child = 5 [lazy = false];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 4, PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.eager_child_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.NestedTestAllTypes child = 1;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes payload = 2;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.payload_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.repeated_child_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.lazy_child_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes eager_child = 5 [lazy = false];
    {PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.eager_child_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::NestedTestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::NestedTestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::NestedTestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* NestedTestAllTypes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.NestedTestAllTypes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.NestedTestAllTypes child = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::child(this),
        _Internal::child(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes payload = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_child_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_child().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::lazy_child(this),
        _Internal::lazy_child(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes eager_child = 5 [lazy = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::eager_child(this),
        _Internal::eager_child(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.NestedTestAllTypes)
  return target;
}

::size_t NestedTestAllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.NestedTestAllTypes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.NestedTestAllTypes repeated_child = 3;
  total_size += 1UL * this->_internal_repeated_child_size();
  for (const auto& msg : this->_internal_repeated_child()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .protobuf_unittest.NestedTestAllTypes child = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.child_);
    }

    // optional .protobuf_unittest.TestAllTypes payload = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.payload_);
    }

    // optional .protobuf_unittest.NestedTestAllTypes lazy_child = 4 [lazy = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.lazy_child_);
    }

    // optional .protobuf_unittest.TestAllTypes eager_child = 5 [lazy = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.eager_child_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NestedTestAllTypes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    NestedTestAllTypes::MergeImpl
};
const ::google::protobuf::Message::ClassData*NestedTestAllTypes::GetClassData() const { return &_class_data_; }


void NestedTestAllTypes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NestedTestAllTypes*>(&to_msg);
  auto& from = static_cast<const NestedTestAllTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.NestedTestAllTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_child()->MergeFrom(from._internal_repeated_child());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_child()->::protobuf_unittest::NestedTestAllTypes::MergeFrom(
          from._internal_child());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_payload()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_payload());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_lazy_child()->::protobuf_unittest::NestedTestAllTypes::MergeFrom(
          from._internal_lazy_child());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_eager_child()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_eager_child());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NestedTestAllTypes::CopyFrom(const NestedTestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.NestedTestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NestedTestAllTypes::IsInitialized() const {
  return true;
}

void NestedTestAllTypes::InternalSwap(NestedTestAllTypes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_child_.InternalSwap(&other->_impl_.repeated_child_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.eager_child_)
      + sizeof(NestedTestAllTypes::_impl_.eager_child_)
      - PROTOBUF_FIELD_OFFSET(NestedTestAllTypes, _impl_.child_)>(
          reinterpret_cast<char*>(&_impl_.child_),
          reinterpret_cast<char*>(&other->_impl_.child_));
}

::google::protobuf::Metadata NestedTestAllTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[4]);
}
// ===================================================================

class TestDeprecatedFields::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDeprecatedFields>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestDeprecatedFields, _impl_._oneof_case_);
  static void set_has_deprecated_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& deprecated_message(const TestDeprecatedFields* msg);
  static void set_has_deprecated_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestDeprecatedFields& nested(const TestDeprecatedFields* msg);
  static void set_has_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestAllTypes_NestedMessage& TestDeprecatedFields::_Internal::deprecated_message(const TestDeprecatedFields* msg) {
  return *msg->_impl_.deprecated_message_;
}
const ::protobuf_unittest::TestDeprecatedFields& TestDeprecatedFields::_Internal::nested(const TestDeprecatedFields* msg) {
  return *msg->_impl_.nested_;
}
TestDeprecatedFields::TestDeprecatedFields(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDeprecatedFields)
}
TestDeprecatedFields::TestDeprecatedFields(const TestDeprecatedFields& from) : ::google::protobuf::Message() {
  TestDeprecatedFields* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.deprecated_repeated_string_){from._impl_.deprecated_repeated_string_},
      decltype(_impl_.deprecated_message_){nullptr},
      decltype(_impl_.nested_){nullptr},
      decltype(_impl_.deprecated_int32_){},
      decltype(_impl_.oneof_fields_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.deprecated_message_ = new ::protobuf_unittest::TestAllTypes_NestedMessage(*from._impl_.deprecated_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.nested_ = new ::protobuf_unittest::TestDeprecatedFields(*from._impl_.nested_);
  }
  _this->_impl_.deprecated_int32_ = from._impl_.deprecated_int32_;
  clear_has_oneof_fields();
  switch (from.oneof_fields_case()) {
    case kDeprecatedInt32InOneof: {
      _this->_internal_set_deprecated_int32_in_oneof(from._internal_deprecated_int32_in_oneof());
      break;
    }
    case ONEOF_FIELDS_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedFields)
}
inline void TestDeprecatedFields::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.deprecated_repeated_string_){arena},
      decltype(_impl_.deprecated_message_){nullptr},
      decltype(_impl_.nested_){nullptr},
      decltype(_impl_.deprecated_int32_){0},
      decltype(_impl_.oneof_fields_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_oneof_fields();
}
TestDeprecatedFields::~TestDeprecatedFields() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDeprecatedFields)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDeprecatedFields::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_deprecated_repeated_string()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.deprecated_message_;
  if (this != internal_default_instance()) delete _impl_.nested_;
  if (has_oneof_fields()) {
    clear_oneof_fields();
  }
}
void TestDeprecatedFields::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestDeprecatedFields::clear_oneof_fields() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestDeprecatedFields)
  switch (oneof_fields_case()) {
    case kDeprecatedInt32InOneof: {
      // No need to clear
      break;
    }
    case ONEOF_FIELDS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELDS_NOT_SET;
}


PROTOBUF_NOINLINE void TestDeprecatedFields::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDeprecatedFields)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_deprecated_repeated_string()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.deprecated_message_ != nullptr);
      _impl_.deprecated_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.nested_ != nullptr);
      _impl_.nested_->Clear();
    }
  }
  _impl_.deprecated_int32_ = 0;
  clear_oneof_fields();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDeprecatedFields::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 73, 2> TestDeprecatedFields::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestDeprecatedFields_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 deprecated_int32 = 1 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDeprecatedFields, _impl_.deprecated_int32_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_int32_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_message_)}},
    // repeated string deprecated_repeated_string = 4 [deprecated = true];
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_repeated_string_)}},
    // optional .protobuf_unittest.TestDeprecatedFields nested = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.nested_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 deprecated_int32 = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_int32_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 deprecated_int32_in_oneof = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.oneof_fields_.deprecated_int32_in_oneof_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string deprecated_repeated_string = 4 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_repeated_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .protobuf_unittest.TestDeprecatedFields nested = 5;
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.nested_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDeprecatedFields>()},
  }}, {{
    "\46\0\0\0\32\0\0\0"
    "protobuf_unittest.TestDeprecatedFields"
    "deprecated_repeated_string"
  }},
};

::uint8_t* TestDeprecatedFields::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDeprecatedFields)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 deprecated_int32 = 1 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_deprecated_int32(), target);
  }

  // int32 deprecated_int32_in_oneof = 2 [deprecated = true];
  if (oneof_fields_case() == kDeprecatedInt32InOneof) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_deprecated_int32_in_oneof(), target);
  }

  // optional .protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::deprecated_message(this),
        _Internal::deprecated_message(this).GetCachedSize(), target, stream);
  }

  // repeated string deprecated_repeated_string = 4 [deprecated = true];
  for (int i = 0, n = this->_internal_deprecated_repeated_string_size(); i < n; ++i) {
    const auto& s = this->_internal_deprecated_repeated_string().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestDeprecatedFields.deprecated_repeated_string");
    target = stream->WriteString(4, s, target);
  }

  // optional .protobuf_unittest.TestDeprecatedFields nested = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::nested(this),
        _Internal::nested(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDeprecatedFields)
  return target;
}

::size_t TestDeprecatedFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDeprecatedFields)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string deprecated_repeated_string = 4 [deprecated = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_deprecated_repeated_string().size());
  for (int i = 0, n = _internal_deprecated_repeated_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_deprecated_repeated_string().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .protobuf_unittest.TestAllTypes.NestedMessage deprecated_message = 3 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.deprecated_message_);
    }

    // optional .protobuf_unittest.TestDeprecatedFields nested = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.nested_);
    }

    // optional int32 deprecated_int32 = 1 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_deprecated_int32());
    }

  }
  switch (oneof_fields_case()) {
    // int32 deprecated_int32_in_oneof = 2 [deprecated = true];
    case kDeprecatedInt32InOneof: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_deprecated_int32_in_oneof());
      break;
    }
    case ONEOF_FIELDS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDeprecatedFields::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDeprecatedFields::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDeprecatedFields::GetClassData() const { return &_class_data_; }


void TestDeprecatedFields::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDeprecatedFields*>(&to_msg);
  auto& from = static_cast<const TestDeprecatedFields&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDeprecatedFields)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_deprecated_repeated_string()->MergeFrom(from._internal_deprecated_repeated_string());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_deprecated_message()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_deprecated_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nested()->::protobuf_unittest::TestDeprecatedFields::MergeFrom(
          from._internal_nested());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.deprecated_int32_ = from._impl_.deprecated_int32_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.oneof_fields_case()) {
    case kDeprecatedInt32InOneof: {
      _this->_internal_set_deprecated_int32_in_oneof(from._internal_deprecated_int32_in_oneof());
      break;
    }
    case ONEOF_FIELDS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDeprecatedFields::CopyFrom(const TestDeprecatedFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDeprecatedFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDeprecatedFields::IsInitialized() const {
  return true;
}

void TestDeprecatedFields::InternalSwap(TestDeprecatedFields* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.deprecated_repeated_string_.InternalSwap(&other->_impl_.deprecated_repeated_string_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_int32_)
      + sizeof(TestDeprecatedFields::_impl_.deprecated_int32_)
      - PROTOBUF_FIELD_OFFSET(TestDeprecatedFields, _impl_.deprecated_message_)>(
          reinterpret_cast<char*>(&_impl_.deprecated_message_),
          reinterpret_cast<char*>(&other->_impl_.deprecated_message_));
  swap(_impl_.oneof_fields_, other->_impl_.oneof_fields_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestDeprecatedFields::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[5]);
}
// ===================================================================

class TestDeprecatedMessage::_Internal {
 public:
};

TestDeprecatedMessage::TestDeprecatedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDeprecatedMessage)
}
TestDeprecatedMessage::TestDeprecatedMessage(const TestDeprecatedMessage& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  TestDeprecatedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedMessage)
}




const ::google::protobuf::Message::ClassData TestDeprecatedMessage::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*TestDeprecatedMessage::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata TestDeprecatedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[6]);
}
// ===================================================================

class ForeignMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ForeignMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_._has_bits_);
  static void set_has_c(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_d(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ForeignMessage::ForeignMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.ForeignMessage)
}
ForeignMessage::ForeignMessage(const ForeignMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ForeignMessage)
}
inline void ForeignMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.c_){0},
      decltype(_impl_.d_){0},
  };
}
ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ForeignMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void ForeignMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ForeignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ForeignMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.c_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.d_) -
        reinterpret_cast<char*>(&_impl_.c_)) + sizeof(_impl_.d_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ForeignMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ForeignMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ForeignMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 d = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ForeignMessage, _impl_.d_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.d_)}},
    // optional int32 c = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ForeignMessage, _impl_.c_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 d = 2;
    {PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.d_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ForeignMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ForeignMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 c = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_c(), target);
  }

  // optional int32 d = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ForeignMessage)
  return target;
}

::size_t ForeignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ForeignMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 c = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_c());
    }

    // optional int32 d = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_d());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ForeignMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ForeignMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*ForeignMessage::GetClassData() const { return &_class_data_; }


void ForeignMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ForeignMessage*>(&to_msg);
  auto& from = static_cast<const ForeignMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ForeignMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.c_ = from._impl_.c_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.d_ = from._impl_.d_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ForeignMessage::IsInitialized() const {
  return true;
}

void ForeignMessage::InternalSwap(ForeignMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.d_)
      + sizeof(ForeignMessage::_impl_.d_)
      - PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_)>(
          reinterpret_cast<char*>(&_impl_.c_),
          reinterpret_cast<char*>(&other->_impl_.c_));
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[7]);
}
// ===================================================================

class TestReservedFields::_Internal {
 public:
};

TestReservedFields::TestReservedFields(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestReservedFields)
}
TestReservedFields::TestReservedFields(const TestReservedFields& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  TestReservedFields* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestReservedFields)
}




const ::google::protobuf::Message::ClassData TestReservedFields::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*TestReservedFields::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata TestReservedFields::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[8]);
}
// ===================================================================

class TestAllExtensions::_Internal {
 public:
};

TestAllExtensions::TestAllExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllExtensions)
}
TestAllExtensions::TestAllExtensions(const TestAllExtensions& from) : ::google::protobuf::Message() {
  TestAllExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllExtensions)
}
inline void TestAllExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestAllExtensions::~TestAllExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestAllExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestAllExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestAllExtensions::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestAllExtensions, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestAllExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllExtensions)
  return target;
}

::size_t TestAllExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllExtensions)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestAllExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestAllExtensions::GetClassData() const { return &_class_data_; }


void TestAllExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllExtensions*>(&to_msg);
  auto& from = static_cast<const TestAllExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllExtensions::CopyFrom(const TestAllExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllExtensions::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestAllExtensions::InternalSwap(TestAllExtensions* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[9]);
}
// ===================================================================

class OptionalGroup_extension::_Internal {
 public:
  using HasBits = decltype(std::declval<OptionalGroup_extension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OptionalGroup_extension, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OptionalGroup_extension::OptionalGroup_extension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OptionalGroup_extension)
}
OptionalGroup_extension::OptionalGroup_extension(const OptionalGroup_extension& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OptionalGroup_extension)
}
inline void OptionalGroup_extension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
OptionalGroup_extension::~OptionalGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OptionalGroup_extension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionalGroup_extension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void OptionalGroup_extension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionalGroup_extension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OptionalGroup_extension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionalGroup_extension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OptionalGroup_extension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptionalGroup_extension, _impl_._has_bits_),
    0, // no _extensions_
    17, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OptionalGroup_extension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(OptionalGroup_extension, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(OptionalGroup_extension, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OptionalGroup_extension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OptionalGroup_extension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OptionalGroup_extension)
  return target;
}

::size_t OptionalGroup_extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OptionalGroup_extension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 17;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionalGroup_extension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionalGroup_extension::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionalGroup_extension::GetClassData() const { return &_class_data_; }


void OptionalGroup_extension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionalGroup_extension*>(&to_msg);
  auto& from = static_cast<const OptionalGroup_extension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OptionalGroup_extension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionalGroup_extension::CopyFrom(const OptionalGroup_extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OptionalGroup_extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionalGroup_extension::IsInitialized() const {
  return true;
}

void OptionalGroup_extension::InternalSwap(OptionalGroup_extension* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata OptionalGroup_extension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[10]);
}
// ===================================================================

class RepeatedGroup_extension::_Internal {
 public:
  using HasBits = decltype(std::declval<RepeatedGroup_extension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RepeatedGroup_extension::RepeatedGroup_extension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RepeatedGroup_extension)
}
RepeatedGroup_extension::RepeatedGroup_extension(const RepeatedGroup_extension& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RepeatedGroup_extension)
}
inline void RepeatedGroup_extension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
RepeatedGroup_extension::~RepeatedGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedGroup_extension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepeatedGroup_extension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void RepeatedGroup_extension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RepeatedGroup_extension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RepeatedGroup_extension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepeatedGroup_extension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> RepeatedGroup_extension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension, _impl_._has_bits_),
    0, // no _extensions_
    47, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepeatedGroup_extension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 a = 47;
    {::_pbi::TcParser::FastV32S2,
     {760, 0, 0, PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension, _impl_.a_)}},
  }}, {{
    47, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 a = 47;
    {PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RepeatedGroup_extension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RepeatedGroup_extension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 47;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        47, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RepeatedGroup_extension)
  return target;
}

::size_t RepeatedGroup_extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RepeatedGroup_extension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 47;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepeatedGroup_extension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RepeatedGroup_extension::MergeImpl
};
const ::google::protobuf::Message::ClassData*RepeatedGroup_extension::GetClassData() const { return &_class_data_; }


void RepeatedGroup_extension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepeatedGroup_extension*>(&to_msg);
  auto& from = static_cast<const RepeatedGroup_extension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RepeatedGroup_extension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepeatedGroup_extension::CopyFrom(const RepeatedGroup_extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RepeatedGroup_extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepeatedGroup_extension::IsInitialized() const {
  return true;
}

void RepeatedGroup_extension::InternalSwap(RepeatedGroup_extension* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata RepeatedGroup_extension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[11]);
}
// ===================================================================

class TestMixedFieldsAndExtensions::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMixedFieldsAndExtensions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestMixedFieldsAndExtensions::TestMixedFieldsAndExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMixedFieldsAndExtensions)
}
TestMixedFieldsAndExtensions::TestMixedFieldsAndExtensions(const TestMixedFieldsAndExtensions& from) : ::google::protobuf::Message() {
  TestMixedFieldsAndExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){from._impl_.b_},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMixedFieldsAndExtensions)
}
inline void TestMixedFieldsAndExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){arena},
      decltype(_impl_.a_){0},
  };
}
TestMixedFieldsAndExtensions::~TestMixedFieldsAndExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMixedFieldsAndExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMixedFieldsAndExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.b_.~RepeatedField();
}
void TestMixedFieldsAndExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMixedFieldsAndExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMixedFieldsAndExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_b()->Clear();
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMixedFieldsAndExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> TestMixedFieldsAndExtensions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_._extensions_),
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestMixedFieldsAndExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMixedFieldsAndExtensions, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_.a_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated fixed32 b = 3;
    {::_pbi::TcParser::FastF32R1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_.b_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated fixed32 b = 3;
    {PROTOBUF_FIELD_OFFSET(TestMixedFieldsAndExtensions, _impl_.b_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestMixedFieldsAndExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMixedFieldsAndExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // Extension range [2, 3)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2, 3, target, stream);
  // repeated fixed32 b = 3;
  for (int i = 0, n = this->_internal_b_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this->_internal_b().Get(i), target);
  }

  // Extension range [4, 5)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 4, 5, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMixedFieldsAndExtensions)
  return target;
}

::size_t TestMixedFieldsAndExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMixedFieldsAndExtensions)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 b = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_b_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_b_size());
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 a = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMixedFieldsAndExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMixedFieldsAndExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMixedFieldsAndExtensions::GetClassData() const { return &_class_data_; }


void TestMixedFieldsAndExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMixedFieldsAndExtensions*>(&to_msg);
  auto& from = static_cast<const TestMixedFieldsAndExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMixedFieldsAndExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_b()->MergeFrom(from._internal_b());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMixedFieldsAndExtensions::CopyFrom(const TestMixedFieldsAndExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMixedFieldsAndExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMixedFieldsAndExtensions::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestMixedFieldsAndExtensions::InternalSwap(TestMixedFieldsAndExtensions* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.b_.InternalSwap(&other->_impl_.b_);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestMixedFieldsAndExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[12]);
}
// ===================================================================

class TestGroup_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestGroup_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_zz(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestGroup_OptionalGroup::TestGroup_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestGroup.OptionalGroup)
}
TestGroup_OptionalGroup::TestGroup_OptionalGroup(const TestGroup_OptionalGroup& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestGroup.OptionalGroup)
}
inline void TestGroup_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
      decltype(_impl_.zz_){0},
  };
}
TestGroup_OptionalGroup::~TestGroup_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestGroup.OptionalGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestGroup_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestGroup_OptionalGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestGroup_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestGroup.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.zz_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.zz_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestGroup_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 2, 0, 0, 7> TestGroup_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    89, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestGroup_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {388, 132}},
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.a_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 zz = 89;
    {::_pbi::TcParser::FastV32S2,
     {1480, 1, 0, PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.zz_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    89, 0, 1,
    65534, 1,
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 zz = 89;
    {PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.zz_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestGroup_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestGroup.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  // optional int32 zz = 89;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        89, this->_internal_zz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestGroup.OptionalGroup)
  return target;
}

::size_t TestGroup_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestGroup.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 a = 17;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_a());
    }

    // optional int32 zz = 89;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_zz());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestGroup_OptionalGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestGroup_OptionalGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestGroup_OptionalGroup::GetClassData() const { return &_class_data_; }


void TestGroup_OptionalGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestGroup_OptionalGroup*>(&to_msg);
  auto& from = static_cast<const TestGroup_OptionalGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestGroup.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.zz_ = from._impl_.zz_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestGroup_OptionalGroup::CopyFrom(const TestGroup_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestGroup.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestGroup_OptionalGroup::IsInitialized() const {
  return true;
}

void TestGroup_OptionalGroup::InternalSwap(TestGroup_OptionalGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.zz_)
      + sizeof(TestGroup_OptionalGroup::_impl_.zz_)
      - PROTOBUF_FIELD_OFFSET(TestGroup_OptionalGroup, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata TestGroup_OptionalGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[13]);
}
// ===================================================================

class TestGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestGroup_OptionalGroup& optionalgroup(const TestGroup* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_foreign_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestGroup_OptionalGroup& TestGroup::_Internal::optionalgroup(const TestGroup* msg) {
  return *msg->_impl_.optionalgroup_;
}
TestGroup::TestGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestGroup)
}
TestGroup::TestGroup(const TestGroup& from) : ::google::protobuf::Message() {
  TestGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_foreign_enum_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optionalgroup_ = new ::protobuf_unittest::TestGroup_OptionalGroup(*from._impl_.optionalgroup_);
  }
  _this->_impl_.optional_foreign_enum_ = from._impl_.optional_foreign_enum_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestGroup)
}
inline void TestGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_foreign_enum_){4},
  };
}
TestGroup::~TestGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.optionalgroup_;
}
void TestGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
    _impl_.optional_foreign_enum_ = 4;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> TestGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestGroup, _impl_._has_bits_),
    0, // no _extensions_
    22, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292837375,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional group OptionalGroup = 16 { ... };
    {::_pbi::TcParser::FastGtS2,
     {387, 0, 0, PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optionalgroup_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    {::_pbi::TcParser::FastErS2,
     {432, 1, 1, PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optional_foreign_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional group OptionalGroup = 16 { ... };
    {PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    {PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optional_foreign_enum_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestGroup_OptionalGroup>()},
    {4, 3},
  }}, {{
  }},
};

::uint8_t* TestGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional group OptionalGroup = 16 { ... };
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        16, _Internal::optionalgroup(this), target, stream);
  }

  // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_optional_foreign_enum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestGroup)
  return target;
}

::size_t TestGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional group OptionalGroup = 16 { ... };
    if (cached_has_bits & 0x00000001u) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.optionalgroup_);
    }

    // optional .protobuf_unittest.ForeignEnum optional_foreign_enum = 22;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_foreign_enum());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestGroup::GetClassData() const { return &_class_data_; }


void TestGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestGroup*>(&to_msg);
  auto& from = static_cast<const TestGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestGroup_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_foreign_enum_ = from._impl_.optional_foreign_enum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestGroup::CopyFrom(const TestGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestGroup::IsInitialized() const {
  return true;
}

void TestGroup::InternalSwap(TestGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optional_foreign_enum_)
      + sizeof(TestGroup::_impl_.optional_foreign_enum_)
      - PROTOBUF_FIELD_OFFSET(TestGroup, _impl_.optionalgroup_)>(
          reinterpret_cast<char*>(&_impl_.optionalgroup_),
          reinterpret_cast<char*>(&other->_impl_.optionalgroup_));
}

::google::protobuf::Metadata TestGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[14]);
}
// ===================================================================

class TestGroupExtension::_Internal {
 public:
};

TestGroupExtension::TestGroupExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestGroupExtension)
}
TestGroupExtension::TestGroupExtension(const TestGroupExtension& from) : ::google::protobuf::Message() {
  TestGroupExtension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestGroupExtension)
}
inline void TestGroupExtension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestGroupExtension::~TestGroupExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestGroupExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestGroupExtension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestGroupExtension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestGroupExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestGroupExtension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestGroupExtension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestGroupExtension::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestGroupExtension, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestGroupExtension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestGroupExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestGroupExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestGroupExtension)
  return target;
}

::size_t TestGroupExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestGroupExtension)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestGroupExtension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestGroupExtension::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestGroupExtension::GetClassData() const { return &_class_data_; }


void TestGroupExtension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestGroupExtension*>(&to_msg);
  auto& from = static_cast<const TestGroupExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestGroupExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestGroupExtension::CopyFrom(const TestGroupExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestGroupExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestGroupExtension::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestGroupExtension::InternalSwap(TestGroupExtension* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestGroupExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[15]);
}
// ===================================================================

class TestNestedExtension_OptionalGroup_extension::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedExtension_OptionalGroup_extension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedExtension_OptionalGroup_extension, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestNestedExtension_OptionalGroup_extension::TestNestedExtension_OptionalGroup_extension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
}
TestNestedExtension_OptionalGroup_extension::TestNestedExtension_OptionalGroup_extension(const TestNestedExtension_OptionalGroup_extension& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
}
inline void TestNestedExtension_OptionalGroup_extension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
TestNestedExtension_OptionalGroup_extension::~TestNestedExtension_OptionalGroup_extension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedExtension_OptionalGroup_extension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestNestedExtension_OptionalGroup_extension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedExtension_OptionalGroup_extension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedExtension_OptionalGroup_extension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestNestedExtension_OptionalGroup_extension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedExtension_OptionalGroup_extension, _impl_._has_bits_),
    0, // no _extensions_
    17, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedExtension_OptionalGroup_extension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedExtension_OptionalGroup_extension, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(TestNestedExtension_OptionalGroup_extension, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestNestedExtension_OptionalGroup_extension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  return target;
}

::size_t TestNestedExtension_OptionalGroup_extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 17;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedExtension_OptionalGroup_extension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedExtension_OptionalGroup_extension::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedExtension_OptionalGroup_extension::GetClassData() const { return &_class_data_; }


void TestNestedExtension_OptionalGroup_extension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedExtension_OptionalGroup_extension*>(&to_msg);
  auto& from = static_cast<const TestNestedExtension_OptionalGroup_extension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedExtension_OptionalGroup_extension::CopyFrom(const TestNestedExtension_OptionalGroup_extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedExtension.OptionalGroup_extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedExtension_OptionalGroup_extension::IsInitialized() const {
  return true;
}

void TestNestedExtension_OptionalGroup_extension::InternalSwap(TestNestedExtension_OptionalGroup_extension* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestNestedExtension_OptionalGroup_extension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[16]);
}
// ===================================================================

class TestNestedExtension::_Internal {
 public:
};

TestNestedExtension::TestNestedExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedExtension)
}
TestNestedExtension::TestNestedExtension(const TestNestedExtension& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  TestNestedExtension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedExtension)
}




const ::google::protobuf::Message::ClassData TestNestedExtension::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*TestNestedExtension::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata TestNestedExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[17]);
}
// ===================================================================

class TestChildExtension::_Internal {
 public:
  using HasBits = decltype(std::declval<TestChildExtension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestAllExtensions& optional_extension(const TestChildExtension* msg);
  static void set_has_optional_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::TestAllExtensions& TestChildExtension::_Internal::optional_extension(const TestChildExtension* msg) {
  return *msg->_impl_.optional_extension_;
}
TestChildExtension::TestChildExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestChildExtension)
}
TestChildExtension::TestChildExtension(const TestChildExtension& from) : ::google::protobuf::Message() {
  TestChildExtension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
      decltype(_impl_.b_){},
      decltype(_impl_.optional_extension_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.a_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.a_.Set(from._internal_a(), _this->GetArenaForAllocation());
  }
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.b_.Set(from._internal_b(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_extension_ = new ::protobuf_unittest::TestAllExtensions(*from._impl_.optional_extension_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestChildExtension)
}
inline void TestChildExtension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
      decltype(_impl_.b_){},
      decltype(_impl_.optional_extension_){nullptr},
  };
  _impl_.a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.a_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestChildExtension::~TestChildExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestChildExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestChildExtension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.a_.Destroy();
  _impl_.b_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optional_extension_;
}
void TestChildExtension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestChildExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestChildExtension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.a_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.b_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_extension_ != nullptr);
      _impl_.optional_extension_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestChildExtension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2> TestChildExtension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestChildExtension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string a = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.a_)}},
    // optional string b = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.b_)}},
    // optional .protobuf_unittest.TestAllExtensions optional_extension = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.optional_extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string a = 1;
    {PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string b = 2;
    {PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestAllExtensions optional_extension = 3;
    {PROTOBUF_FIELD_OFFSET(TestChildExtension, _impl_.optional_extension_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllExtensions>()},
  }}, {{
    "\44\1\1\0\0\0\0\0"
    "protobuf_unittest.TestChildExtension"
    "a"
    "b"
  }},
};

::uint8_t* TestChildExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestChildExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string a = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_a();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestChildExtension.a");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string b = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_b();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestChildExtension.b");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .protobuf_unittest.TestAllExtensions optional_extension = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::optional_extension(this),
        _Internal::optional_extension(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestChildExtension)
  return target;
}

::size_t TestChildExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestChildExtension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_a());
    }

    // optional string b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_b());
    }

    // optional .protobuf_unittest.TestAllExtensions optional_extension = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_extension_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestChildExtension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestChildExtension::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestChildExtension::GetClassData() const { return &_class_data_; }


void TestChildExtension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestChildExtension*>(&to_msg);
  auto& from = static_cast<const TestChildExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestChildExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_a(from._internal_a());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_extension()->::protobuf_unittest::TestAllExtensions::MergeFrom(
          from._internal_optional_extension());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestChildExtension::CopyFrom(const TestChildExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestChildExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestChildExtension::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.optional_extension_->IsInitialized()) return false;
  }
  return true;
}

void TestChildExtension::InternalSwap(TestChildExtension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.a_, lhs_arena,
                                       &other->_impl_.a_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, lhs_arena,
                                       &other->_impl_.b_, rhs_arena);
  swap(_impl_.optional_extension_, other->_impl_.optional_extension_);
}

::google::protobuf::Metadata TestChildExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[18]);
}
// ===================================================================

class TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_Internal {
 public:
  using HasBits = decltype(std::declval<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
}
TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
      decltype(_impl_.b_){0},
  };
}
TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::~TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.b_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 b = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.b_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.b_)}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 b = 2;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  return target;
}

::size_t TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

    // optional int32 b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_b());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::GetClassData() const { return &_class_data_; }


void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions*>(&to_msg);
  auto& from = static_cast<const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::CopyFrom(const TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::IsInitialized() const {
  return true;
}

void TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::InternalSwap(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.b_)
      + sizeof(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[19]);
}
// ===================================================================

class TestChildExtensionData_NestedTestAllExtensionsData::_Internal {
 public:
  using HasBits = decltype(std::declval<TestChildExtensionData_NestedTestAllExtensionsData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData, _impl_._has_bits_);
  static const ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& dynamic(const TestChildExtensionData_NestedTestAllExtensionsData* msg);
  static void set_has_dynamic(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions& TestChildExtensionData_NestedTestAllExtensionsData::_Internal::dynamic(const TestChildExtensionData_NestedTestAllExtensionsData* msg) {
  return *msg->_impl_.dynamic_;
}
TestChildExtensionData_NestedTestAllExtensionsData::TestChildExtensionData_NestedTestAllExtensionsData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
}
TestChildExtensionData_NestedTestAllExtensionsData::TestChildExtensionData_NestedTestAllExtensionsData(const TestChildExtensionData_NestedTestAllExtensionsData& from) : ::google::protobuf::Message() {
  TestChildExtensionData_NestedTestAllExtensionsData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dynamic_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.dynamic_ = new ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions(*from._impl_.dynamic_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
}
inline void TestChildExtensionData_NestedTestAllExtensionsData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dynamic_){nullptr},
  };
}
TestChildExtensionData_NestedTestAllExtensionsData::~TestChildExtensionData_NestedTestAllExtensionsData() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestChildExtensionData_NestedTestAllExtensionsData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dynamic_;
}
void TestChildExtensionData_NestedTestAllExtensionsData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestChildExtensionData_NestedTestAllExtensionsData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.dynamic_ != nullptr);
    _impl_.dynamic_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestChildExtensionData_NestedTestAllExtensionsData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 7> TestChildExtensionData_NestedTestAllExtensionsData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData, _impl_._has_bits_),
    0, // no _extensions_
    409707008, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestChildExtensionData_NestedTestAllExtensionsData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    41472, 6251, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData_NestedTestAllExtensionsData, _impl_.dynamic_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions>()},
  }}, {{
  }},
};

::uint8_t* TestChildExtensionData_NestedTestAllExtensionsData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(409707008, _Internal::dynamic(this),
        _Internal::dynamic(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  return target;
}

::size_t TestChildExtensionData_NestedTestAllExtensionsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions dynamic = 409707008;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.dynamic_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestChildExtensionData_NestedTestAllExtensionsData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestChildExtensionData_NestedTestAllExtensionsData::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestChildExtensionData_NestedTestAllExtensionsData::GetClassData() const { return &_class_data_; }


void TestChildExtensionData_NestedTestAllExtensionsData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestChildExtensionData_NestedTestAllExtensionsData*>(&to_msg);
  auto& from = static_cast<const TestChildExtensionData_NestedTestAllExtensionsData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_dynamic()->::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData_NestedDynamicExtensions::MergeFrom(
        from._internal_dynamic());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestChildExtensionData_NestedTestAllExtensionsData::CopyFrom(const TestChildExtensionData_NestedTestAllExtensionsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestChildExtensionData_NestedTestAllExtensionsData::IsInitialized() const {
  return true;
}

void TestChildExtensionData_NestedTestAllExtensionsData::InternalSwap(TestChildExtensionData_NestedTestAllExtensionsData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.dynamic_, other->_impl_.dynamic_);
}

::google::protobuf::Metadata TestChildExtensionData_NestedTestAllExtensionsData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[20]);
}
// ===================================================================

class TestChildExtensionData::_Internal {
 public:
  using HasBits = decltype(std::declval<TestChildExtensionData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData& optional_extension(const TestChildExtensionData* msg);
  static void set_has_optional_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData& TestChildExtensionData::_Internal::optional_extension(const TestChildExtensionData* msg) {
  return *msg->_impl_.optional_extension_;
}
TestChildExtensionData::TestChildExtensionData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestChildExtensionData)
}
TestChildExtensionData::TestChildExtensionData(const TestChildExtensionData& from) : ::google::protobuf::Message() {
  TestChildExtensionData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
      decltype(_impl_.b_){},
      decltype(_impl_.optional_extension_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.a_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.a_.Set(from._internal_a(), _this->GetArenaForAllocation());
  }
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.b_.Set(from._internal_b(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_extension_ = new ::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData(*from._impl_.optional_extension_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestChildExtensionData)
}
inline void TestChildExtensionData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
      decltype(_impl_.b_){},
      decltype(_impl_.optional_extension_){nullptr},
  };
  _impl_.a_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.a_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestChildExtensionData::~TestChildExtensionData() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestChildExtensionData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestChildExtensionData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.a_.Destroy();
  _impl_.b_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optional_extension_;
}
void TestChildExtensionData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestChildExtensionData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestChildExtensionData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.a_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.b_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_extension_ != nullptr);
      _impl_.optional_extension_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestChildExtensionData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 51, 2> TestChildExtensionData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestChildExtensionData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string a = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.a_)}},
    // optional string b = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.b_)}},
    // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.optional_extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string a = 1;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string b = 2;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
    {PROTOBUF_FIELD_OFFSET(TestChildExtensionData, _impl_.optional_extension_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData>()},
  }}, {{
    "\50\1\1\0\0\0\0\0"
    "protobuf_unittest.TestChildExtensionData"
    "a"
    "b"
  }},
};

::uint8_t* TestChildExtensionData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestChildExtensionData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string a = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_a();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestChildExtensionData.a");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string b = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_b();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestChildExtensionData.b");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::optional_extension(this),
        _Internal::optional_extension(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestChildExtensionData)
  return target;
}

::size_t TestChildExtensionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestChildExtensionData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_a());
    }

    // optional string b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_b());
    }

    // optional .protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData optional_extension = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_extension_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestChildExtensionData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestChildExtensionData::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestChildExtensionData::GetClassData() const { return &_class_data_; }


void TestChildExtensionData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestChildExtensionData*>(&to_msg);
  auto& from = static_cast<const TestChildExtensionData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestChildExtensionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_a(from._internal_a());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_extension()->::protobuf_unittest::TestChildExtensionData_NestedTestAllExtensionsData::MergeFrom(
          from._internal_optional_extension());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestChildExtensionData::CopyFrom(const TestChildExtensionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestChildExtensionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestChildExtensionData::IsInitialized() const {
  return true;
}

void TestChildExtensionData::InternalSwap(TestChildExtensionData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.a_, lhs_arena,
                                       &other->_impl_.a_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, lhs_arena,
                                       &other->_impl_.b_, rhs_arena);
  swap(_impl_.optional_extension_, other->_impl_.optional_extension_);
}

::google::protobuf::Metadata TestChildExtensionData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[21]);
}
// ===================================================================

class TestNestedChildExtension::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedChildExtension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestChildExtension& child(const TestNestedChildExtension* msg);
  static void set_has_child(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestChildExtension& TestNestedChildExtension::_Internal::child(const TestNestedChildExtension* msg) {
  return *msg->_impl_.child_;
}
TestNestedChildExtension::TestNestedChildExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedChildExtension)
}
TestNestedChildExtension::TestNestedChildExtension(const TestNestedChildExtension& from) : ::google::protobuf::Message() {
  TestNestedChildExtension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.child_ = new ::protobuf_unittest::TestChildExtension(*from._impl_.child_);
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedChildExtension)
}
inline void TestNestedChildExtension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.a_){0},
  };
}
TestNestedChildExtension::~TestNestedChildExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedChildExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedChildExtension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.child_;
}
void TestNestedChildExtension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedChildExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedChildExtension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.child_ != nullptr);
    _impl_.child_->Clear();
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedChildExtension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TestNestedChildExtension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedChildExtension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestChildExtension child = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.child_)}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestNestedChildExtension, _impl_.a_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestChildExtension child = 2;
    {PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.child_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestChildExtension>()},
  }}, {{
  }},
};

::uint8_t* TestNestedChildExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedChildExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional .protobuf_unittest.TestChildExtension child = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::child(this),
        _Internal::child(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedChildExtension)
  return target;
}

::size_t TestNestedChildExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedChildExtension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestChildExtension child = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.child_);
    }

    // optional int32 a = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedChildExtension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedChildExtension::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedChildExtension::GetClassData() const { return &_class_data_; }


void TestNestedChildExtension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedChildExtension*>(&to_msg);
  auto& from = static_cast<const TestNestedChildExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedChildExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_child()->::protobuf_unittest::TestChildExtension::MergeFrom(
          from._internal_child());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedChildExtension::CopyFrom(const TestNestedChildExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedChildExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedChildExtension::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.child_->IsInitialized()) return false;
  }
  return true;
}

void TestNestedChildExtension::InternalSwap(TestNestedChildExtension* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.a_)
      + sizeof(TestNestedChildExtension::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(TestNestedChildExtension, _impl_.child_)>(
          reinterpret_cast<char*>(&_impl_.child_),
          reinterpret_cast<char*>(&other->_impl_.child_));
}

::google::protobuf::Metadata TestNestedChildExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[22]);
}
// ===================================================================

class TestNestedChildExtensionData::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedChildExtensionData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestChildExtensionData& child(const TestNestedChildExtensionData* msg);
  static void set_has_child(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestChildExtensionData& TestNestedChildExtensionData::_Internal::child(const TestNestedChildExtensionData* msg) {
  return *msg->_impl_.child_;
}
TestNestedChildExtensionData::TestNestedChildExtensionData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedChildExtensionData)
}
TestNestedChildExtensionData::TestNestedChildExtensionData(const TestNestedChildExtensionData& from) : ::google::protobuf::Message() {
  TestNestedChildExtensionData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.child_ = new ::protobuf_unittest::TestChildExtensionData(*from._impl_.child_);
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedChildExtensionData)
}
inline void TestNestedChildExtensionData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.a_){0},
  };
}
TestNestedChildExtensionData::~TestNestedChildExtensionData() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedChildExtensionData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedChildExtensionData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.child_;
}
void TestNestedChildExtensionData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedChildExtensionData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedChildExtensionData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.child_ != nullptr);
    _impl_.child_->Clear();
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedChildExtensionData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TestNestedChildExtensionData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedChildExtensionData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestChildExtensionData child = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.child_)}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestNestedChildExtensionData, _impl_.a_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestChildExtensionData child = 2;
    {PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.child_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestChildExtensionData>()},
  }}, {{
  }},
};

::uint8_t* TestNestedChildExtensionData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedChildExtensionData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional .protobuf_unittest.TestChildExtensionData child = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::child(this),
        _Internal::child(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedChildExtensionData)
  return target;
}

::size_t TestNestedChildExtensionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedChildExtensionData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestChildExtensionData child = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.child_);
    }

    // optional int32 a = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedChildExtensionData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedChildExtensionData::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedChildExtensionData::GetClassData() const { return &_class_data_; }


void TestNestedChildExtensionData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedChildExtensionData*>(&to_msg);
  auto& from = static_cast<const TestNestedChildExtensionData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedChildExtensionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_child()->::protobuf_unittest::TestChildExtensionData::MergeFrom(
          from._internal_child());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedChildExtensionData::CopyFrom(const TestNestedChildExtensionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedChildExtensionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedChildExtensionData::IsInitialized() const {
  return true;
}

void TestNestedChildExtensionData::InternalSwap(TestNestedChildExtensionData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.a_)
      + sizeof(TestNestedChildExtensionData::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(TestNestedChildExtensionData, _impl_.child_)>(
          reinterpret_cast<char*>(&_impl_.child_),
          reinterpret_cast<char*>(&other->_impl_.child_));
}

::google::protobuf::Metadata TestNestedChildExtensionData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[23]);
}
// ===================================================================

class TestRequired::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRequired>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRequired, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dummy2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dummy4(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_dummy5(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_dummy6(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_dummy7(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_dummy8(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_dummy9(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_dummy10(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_dummy11(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_dummy12(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_dummy13(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_dummy14(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_dummy15(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_dummy16(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_dummy17(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_dummy18(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_dummy19(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_dummy20(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_dummy21(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_dummy22(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_dummy23(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_dummy24(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_dummy25(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_dummy26(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_dummy27(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_dummy28(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_dummy29(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_dummy30(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_dummy31(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_dummy32(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_c(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::protobuf_unittest::ForeignMessage& optional_foreign(const TestRequired* msg);
  static void set_has_optional_foreign(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return (((has_bits[0] & 0x0000000a) ^ 0x0000000a)
       | ((has_bits[1] & 0x00000002) ^ 0x00000002)) != 0;
  }
};

const ::protobuf_unittest::ForeignMessage& TestRequired::_Internal::optional_foreign(const TestRequired* msg) {
  return *msg->_impl_.optional_foreign_;
}
TestRequired::TestRequired(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequired)
}
TestRequired::TestRequired(const TestRequired& from) : ::google::protobuf::Message() {
  TestRequired* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_foreign_){nullptr},
      decltype(_impl_.a_){},
      decltype(_impl_.dummy2_){},
      decltype(_impl_.b_){},
      decltype(_impl_.dummy4_){},
      decltype(_impl_.dummy5_){},
      decltype(_impl_.dummy6_){},
      decltype(_impl_.dummy7_){},
      decltype(_impl_.dummy8_){},
      decltype(_impl_.dummy9_){},
      decltype(_impl_.dummy10_){},
      decltype(_impl_.dummy11_){},
      decltype(_impl_.dummy12_){},
      decltype(_impl_.dummy13_){},
      decltype(_impl_.dummy14_){},
      decltype(_impl_.dummy15_){},
      decltype(_impl_.dummy16_){},
      decltype(_impl_.dummy17_){},
      decltype(_impl_.dummy18_){},
      decltype(_impl_.dummy19_){},
      decltype(_impl_.dummy20_){},
      decltype(_impl_.dummy21_){},
      decltype(_impl_.dummy22_){},
      decltype(_impl_.dummy23_){},
      decltype(_impl_.dummy24_){},
      decltype(_impl_.dummy25_){},
      decltype(_impl_.dummy26_){},
      decltype(_impl_.dummy27_){},
      decltype(_impl_.dummy28_){},
      decltype(_impl_.dummy29_){},
      decltype(_impl_.dummy30_){},
      decltype(_impl_.dummy31_){},
      decltype(_impl_.dummy32_){},
      decltype(_impl_.c_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_foreign_ = new ::protobuf_unittest::ForeignMessage(*from._impl_.optional_foreign_);
  }
  ::memcpy(&_impl_.a_, &from._impl_.a_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.c_) -
    reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.c_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequired)
}
inline void TestRequired::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_foreign_){nullptr},
      decltype(_impl_.a_){0},
      decltype(_impl_.dummy2_){0},
      decltype(_impl_.b_){0},
      decltype(_impl_.dummy4_){0},
      decltype(_impl_.dummy5_){0},
      decltype(_impl_.dummy6_){0},
      decltype(_impl_.dummy7_){0},
      decltype(_impl_.dummy8_){0},
      decltype(_impl_.dummy9_){0},
      decltype(_impl_.dummy10_){0},
      decltype(_impl_.dummy11_){0},
      decltype(_impl_.dummy12_){0},
      decltype(_impl_.dummy13_){0},
      decltype(_impl_.dummy14_){0},
      decltype(_impl_.dummy15_){0},
      decltype(_impl_.dummy16_){0},
      decltype(_impl_.dummy17_){0},
      decltype(_impl_.dummy18_){0},
      decltype(_impl_.dummy19_){0},
      decltype(_impl_.dummy20_){0},
      decltype(_impl_.dummy21_){0},
      decltype(_impl_.dummy22_){0},
      decltype(_impl_.dummy23_){0},
      decltype(_impl_.dummy24_){0},
      decltype(_impl_.dummy25_){0},
      decltype(_impl_.dummy26_){0},
      decltype(_impl_.dummy27_){0},
      decltype(_impl_.dummy28_){0},
      decltype(_impl_.dummy29_){0},
      decltype(_impl_.dummy30_){0},
      decltype(_impl_.dummy31_){0},
      decltype(_impl_.dummy32_){0},
      decltype(_impl_.c_){0},
  };
}
TestRequired::~TestRequired() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequired)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRequired::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.optional_foreign_;
}
void TestRequired::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequired::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequired)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_foreign_ != nullptr);
    _impl_.optional_foreign_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dummy7_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.dummy7_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.dummy8_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dummy15_) -
        reinterpret_cast<char*>(&_impl_.dummy8_)) + sizeof(_impl_.dummy15_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.dummy16_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dummy23_) -
        reinterpret_cast<char*>(&_impl_.dummy16_)) + sizeof(_impl_.dummy23_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.dummy24_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dummy31_) -
        reinterpret_cast<char*>(&_impl_.dummy24_)) + sizeof(_impl_.dummy31_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.dummy32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.c_) -
        reinterpret_cast<char*>(&_impl_.dummy32_)) + sizeof(_impl_.c_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRequired::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 34, 1, 0, 7> TestRequired::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRequired, _impl_._has_bits_),
    0, // no _extensions_
    34, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    34,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRequired_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.a_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.a_)}},
    // optional int32 dummy2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy2_)}},
    // required int32 b = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.b_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.b_)}},
    // optional int32 dummy4 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy4_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy4_)}},
    // optional int32 dummy5 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy5_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy5_)}},
    // optional int32 dummy6 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy6_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy6_)}},
    // optional int32 dummy7 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy7_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy7_)}},
    // optional int32 dummy8 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy8_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy8_)}},
    // optional int32 dummy9 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy9_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy9_)}},
    // optional int32 dummy10 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy10_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy10_)}},
    // optional int32 dummy11 = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy11_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy11_)}},
    // optional int32 dummy12 = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy12_), 12>(),
     {96, 12, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy12_)}},
    // optional int32 dummy13 = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy13_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy13_)}},
    // optional int32 dummy14 = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy14_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy14_)}},
    // optional int32 dummy15 = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequired, _impl_.dummy15_), 15>(),
     {120, 15, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy15_)}},
    // optional int32 dummy16 = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 16, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy16_)}},
    // optional int32 dummy17 = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 17, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy17_)}},
    // optional int32 dummy18 = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 18, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy18_)}},
    // optional int32 dummy19 = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 19, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy19_)}},
    // optional int32 dummy20 = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 20, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy20_)}},
    // optional int32 dummy21 = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 21, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy21_)}},
    // optional int32 dummy22 = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 22, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy22_)}},
    // optional int32 dummy23 = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 23, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy23_)}},
    // optional int32 dummy24 = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 24, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy24_)}},
    // optional int32 dummy25 = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 25, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy25_)}},
    // optional int32 dummy26 = 26;
    {::_pbi::TcParser::FastV32S2,
     {464, 26, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy26_)}},
    // optional int32 dummy27 = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 27, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy27_)}},
    // optional int32 dummy28 = 28;
    {::_pbi::TcParser::FastV32S2,
     {480, 28, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy28_)}},
    // optional int32 dummy29 = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 29, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy29_)}},
    // optional int32 dummy30 = 30;
    {::_pbi::TcParser::FastV32S2,
     {496, 30, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy30_)}},
    // optional int32 dummy31 = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 31, 0, PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy31_)}},
  }}, {{
    33, 0, 1,
    65532, 32,
    65535, 65535
  }}, {{
    // required int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 b = 3;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.b_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy5 = 5;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy5_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy6 = 6;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy6_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy7 = 7;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy7_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy8 = 8;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy8_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy9 = 9;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy9_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy10 = 10;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy10_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy11 = 11;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy11_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy12 = 12;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy12_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy13 = 13;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy13_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy14 = 14;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy14_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy15 = 15;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy15_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy16 = 16;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy16_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy17 = 17;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy17_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy18 = 18;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy18_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy19 = 19;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy19_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy20 = 20;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy20_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy21 = 21;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy21_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy22 = 22;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy22_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy23 = 23;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy23_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy24 = 24;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy24_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy25 = 25;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy25_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy26 = 26;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy26_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy27 = 27;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy27_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy28 = 28;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy28_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy29 = 29;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy29_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy30 = 30;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy30_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy31 = 31;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy31_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dummy32 = 32;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.dummy32_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 c = 33;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.c_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.ForeignMessage optional_foreign = 34;
    {PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.optional_foreign_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
  }}, {{
  }},
};

::uint8_t* TestRequired::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequired)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional int32 dummy2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dummy2(), target);
  }

  // required int32 b = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_b(), target);
  }

  // optional int32 dummy4 = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_dummy4(), target);
  }

  // optional int32 dummy5 = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_dummy5(), target);
  }

  // optional int32 dummy6 = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_dummy6(), target);
  }

  // optional int32 dummy7 = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_dummy7(), target);
  }

  // optional int32 dummy8 = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_dummy8(), target);
  }

  // optional int32 dummy9 = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_dummy9(), target);
  }

  // optional int32 dummy10 = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_dummy10(), target);
  }

  // optional int32 dummy11 = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_dummy11(), target);
  }

  // optional int32 dummy12 = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_dummy12(), target);
  }

  // optional int32 dummy13 = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_dummy13(), target);
  }

  // optional int32 dummy14 = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_dummy14(), target);
  }

  // optional int32 dummy15 = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<15>(
            stream, this->_internal_dummy15(), target);
  }

  // optional int32 dummy16 = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_dummy16(), target);
  }

  // optional int32 dummy17 = 17;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_dummy17(), target);
  }

  // optional int32 dummy18 = 18;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this->_internal_dummy18(), target);
  }

  // optional int32 dummy19 = 19;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        19, this->_internal_dummy19(), target);
  }

  // optional int32 dummy20 = 20;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        20, this->_internal_dummy20(), target);
  }

  // optional int32 dummy21 = 21;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        21, this->_internal_dummy21(), target);
  }

  // optional int32 dummy22 = 22;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        22, this->_internal_dummy22(), target);
  }

  // optional int32 dummy23 = 23;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        23, this->_internal_dummy23(), target);
  }

  // optional int32 dummy24 = 24;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        24, this->_internal_dummy24(), target);
  }

  // optional int32 dummy25 = 25;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        25, this->_internal_dummy25(), target);
  }

  // optional int32 dummy26 = 26;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        26, this->_internal_dummy26(), target);
  }

  // optional int32 dummy27 = 27;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        27, this->_internal_dummy27(), target);
  }

  // optional int32 dummy28 = 28;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        28, this->_internal_dummy28(), target);
  }

  // optional int32 dummy29 = 29;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        29, this->_internal_dummy29(), target);
  }

  // optional int32 dummy30 = 30;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        30, this->_internal_dummy30(), target);
  }

  // optional int32 dummy31 = 31;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        31, this->_internal_dummy31(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional int32 dummy32 = 32;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        32, this->_internal_dummy32(), target);
  }

  // required int32 c = 33;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        33, this->_internal_c(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.ForeignMessage optional_foreign = 34;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(34, _Internal::optional_foreign(this),
        _Internal::optional_foreign(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequired)
  return target;
}

::size_t TestRequired::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequired)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.ForeignMessage optional_foreign = 34;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.optional_foreign_);
  }

  // required int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a());
  }

  // optional int32 dummy2 = 2;
  if (cached_has_bits & 0x00000004u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dummy2());
  }

  // required int32 b = 3;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_b());
  }

  if (cached_has_bits & 0x000000f0u) {
    // optional int32 dummy4 = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy4());
    }

    // optional int32 dummy5 = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy5());
    }

    // optional int32 dummy6 = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy6());
    }

    // optional int32 dummy7 = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy7());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 dummy8 = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy8());
    }

    // optional int32 dummy9 = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy9());
    }

    // optional int32 dummy10 = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy10());
    }

    // optional int32 dummy11 = 11;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy11());
    }

    // optional int32 dummy12 = 12;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy12());
    }

    // optional int32 dummy13 = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy13());
    }

    // optional int32 dummy14 = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy14());
    }

    // optional int32 dummy15 = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy15());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 dummy16 = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy16());
    }

    // optional int32 dummy17 = 17;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy17());
    }

    // optional int32 dummy18 = 18;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy18());
    }

    // optional int32 dummy19 = 19;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy19());
    }

    // optional int32 dummy20 = 20;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy20());
    }

    // optional int32 dummy21 = 21;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy21());
    }

    // optional int32 dummy22 = 22;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy22());
    }

    // optional int32 dummy23 = 23;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy23());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional int32 dummy24 = 24;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy24());
    }

    // optional int32 dummy25 = 25;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy25());
    }

    // optional int32 dummy26 = 26;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy26());
    }

    // optional int32 dummy27 = 27;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy27());
    }

    // optional int32 dummy28 = 28;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy28());
    }

    // optional int32 dummy29 = 29;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy29());
    }

    // optional int32 dummy30 = 30;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy30());
    }

    // optional int32 dummy31 = 31;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_dummy31());
    }

  }
  // optional int32 dummy32 = 32;
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dummy32());
  }

  // required int32 c = 33;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRequired::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRequired::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRequired::GetClassData() const { return &_class_data_; }


void TestRequired::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRequired*>(&to_msg);
  auto& from = static_cast<const TestRequired&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequired)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_foreign()->::protobuf_unittest::ForeignMessage::MergeFrom(
          from._internal_optional_foreign());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dummy2_ = from._impl_.dummy2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dummy4_ = from._impl_.dummy4_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.dummy5_ = from._impl_.dummy5_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.dummy6_ = from._impl_.dummy6_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.dummy7_ = from._impl_.dummy7_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.dummy8_ = from._impl_.dummy8_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.dummy9_ = from._impl_.dummy9_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.dummy10_ = from._impl_.dummy10_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.dummy11_ = from._impl_.dummy11_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.dummy12_ = from._impl_.dummy12_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.dummy13_ = from._impl_.dummy13_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.dummy14_ = from._impl_.dummy14_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.dummy15_ = from._impl_.dummy15_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.dummy16_ = from._impl_.dummy16_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.dummy17_ = from._impl_.dummy17_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.dummy18_ = from._impl_.dummy18_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.dummy19_ = from._impl_.dummy19_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.dummy20_ = from._impl_.dummy20_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.dummy21_ = from._impl_.dummy21_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.dummy22_ = from._impl_.dummy22_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.dummy23_ = from._impl_.dummy23_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.dummy24_ = from._impl_.dummy24_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.dummy25_ = from._impl_.dummy25_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.dummy26_ = from._impl_.dummy26_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.dummy27_ = from._impl_.dummy27_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.dummy28_ = from._impl_.dummy28_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.dummy29_ = from._impl_.dummy29_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.dummy30_ = from._impl_.dummy30_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.dummy31_ = from._impl_.dummy31_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.dummy32_ = from._impl_.dummy32_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.c_ = from._impl_.c_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequired::CopyFrom(const TestRequired& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequired)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequired::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TestRequired::InternalSwap(TestRequired* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.c_)
      + sizeof(TestRequired::_impl_.c_)
      - PROTOBUF_FIELD_OFFSET(TestRequired, _impl_.optional_foreign_)>(
          reinterpret_cast<char*>(&_impl_.optional_foreign_),
          reinterpret_cast<char*>(&other->_impl_.optional_foreign_));
}

::google::protobuf::Metadata TestRequired::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[24]);
}
// ===================================================================

class TestRequiredForeign::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRequiredForeign>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_._has_bits_);
  static const ::protobuf_unittest::TestRequired& optional_message(const TestRequiredForeign* msg);
  static void set_has_optional_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dummy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::NestedTestAllTypes& optional_lazy_message(const TestRequiredForeign* msg);
  static void set_has_optional_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestRequired& TestRequiredForeign::_Internal::optional_message(const TestRequiredForeign* msg) {
  return *msg->_impl_.optional_message_;
}
const ::protobuf_unittest::NestedTestAllTypes& TestRequiredForeign::_Internal::optional_lazy_message(const TestRequiredForeign* msg) {
  return *msg->_impl_.optional_lazy_message_;
}
TestRequiredForeign::TestRequiredForeign(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredForeign)
}
TestRequiredForeign::TestRequiredForeign(const TestRequiredForeign& from) : ::google::protobuf::Message() {
  TestRequiredForeign* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_message_){from._impl_.repeated_message_},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.optional_lazy_message_){nullptr},
      decltype(_impl_.dummy_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_message_ = new ::protobuf_unittest::TestRequired(*from._impl_.optional_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_lazy_message_ = new ::protobuf_unittest::NestedTestAllTypes(*from._impl_.optional_lazy_message_);
  }
  _this->_impl_.dummy_ = from._impl_.dummy_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredForeign)
}
inline void TestRequiredForeign::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_message_){arena},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.optional_lazy_message_){nullptr},
      decltype(_impl_.dummy_){0},
  };
}
TestRequiredForeign::~TestRequiredForeign() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredForeign)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRequiredForeign::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_message_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_message_;
  if (this != internal_default_instance()) delete _impl_.optional_lazy_message_;
}
void TestRequiredForeign::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequiredForeign::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredForeign)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_message()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optional_message_ != nullptr);
      _impl_.optional_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_lazy_message_ != nullptr);
      _impl_.optional_lazy_message_->Clear();
    }
  }
  _impl_.dummy_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRequiredForeign::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> TestRequiredForeign::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRequiredForeign_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.optional_lazy_message_)}},
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.optional_message_)}},
    // repeated .protobuf_unittest.TestRequired repeated_message = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.repeated_message_)}},
    // optional int32 dummy = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRequiredForeign, _impl_.dummy_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.dummy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.optional_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestRequired repeated_message = 2;
    {PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.repeated_message_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 dummy = 3;
    {PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.dummy_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.optional_lazy_message_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::NestedTestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestRequiredForeign::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredForeign)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::optional_message(this),
        _Internal::optional_message(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 dummy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_dummy(), target);
  }

  // optional .protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::optional_lazy_message(this),
        _Internal::optional_lazy_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredForeign)
  return target;
}

::size_t TestRequiredForeign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredForeign)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  total_size += 1UL * this->_internal_repeated_message_size();
  for (const auto& msg : this->_internal_repeated_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_message_);
    }

    // optional .protobuf_unittest.NestedTestAllTypes optional_lazy_message = 4 [lazy = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_lazy_message_);
    }

    // optional int32 dummy = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRequiredForeign::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRequiredForeign::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRequiredForeign::GetClassData() const { return &_class_data_; }


void TestRequiredForeign::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRequiredForeign*>(&to_msg);
  auto& from = static_cast<const TestRequiredForeign&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredForeign)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_message()->MergeFrom(from._internal_repeated_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_message()->::protobuf_unittest::TestRequired::MergeFrom(
          from._internal_optional_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional_lazy_message()->::protobuf_unittest::NestedTestAllTypes::MergeFrom(
          from._internal_optional_lazy_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dummy_ = from._impl_.dummy_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequiredForeign::CopyFrom(const TestRequiredForeign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredForeign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredForeign::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_repeated_message()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.optional_message_->IsInitialized()) return false;
  }
  return true;
}

void TestRequiredForeign::InternalSwap(TestRequiredForeign* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_message_.InternalSwap(&other->_impl_.repeated_message_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.dummy_)
      + sizeof(TestRequiredForeign::_impl_.dummy_)
      - PROTOBUF_FIELD_OFFSET(TestRequiredForeign, _impl_.optional_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_message_));
}

::google::protobuf::Metadata TestRequiredForeign::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[25]);
}
// ===================================================================

class TestRequiredMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRequiredMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestRequired& optional_message(const TestRequiredMessage* msg);
  static void set_has_optional_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestRequired& required_message(const TestRequiredMessage* msg);
  static void set_has_required_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::protobuf_unittest::TestRequired& TestRequiredMessage::_Internal::optional_message(const TestRequiredMessage* msg) {
  return *msg->_impl_.optional_message_;
}
const ::protobuf_unittest::TestRequired& TestRequiredMessage::_Internal::required_message(const TestRequiredMessage* msg) {
  return *msg->_impl_.required_message_;
}
TestRequiredMessage::TestRequiredMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredMessage)
}
TestRequiredMessage::TestRequiredMessage(const TestRequiredMessage& from) : ::google::protobuf::Message() {
  TestRequiredMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_message_){from._impl_.repeated_message_},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.required_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_message_ = new ::protobuf_unittest::TestRequired(*from._impl_.optional_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.required_message_ = new ::protobuf_unittest::TestRequired(*from._impl_.required_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredMessage)
}
inline void TestRequiredMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_message_){arena},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.required_message_){nullptr},
  };
}
TestRequiredMessage::~TestRequiredMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRequiredMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_message_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_message_;
  if (this != internal_default_instance()) delete _impl_.required_message_;
}
void TestRequiredMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequiredMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_message()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optional_message_ != nullptr);
      _impl_.optional_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.required_message_ != nullptr);
      _impl_.required_message_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRequiredMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> TestRequiredMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRequiredMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.optional_message_)}},
    // repeated .protobuf_unittest.TestRequired repeated_message = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.repeated_message_)}},
    // required .protobuf_unittest.TestRequired required_message = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.required_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestRequired optional_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.optional_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestRequired repeated_message = 2;
    {PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.repeated_message_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .protobuf_unittest.TestRequired required_message = 3;
    {PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.required_message_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
  }}, {{
  }},
};

::uint8_t* TestRequiredMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::optional_message(this),
        _Internal::optional_message(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // required .protobuf_unittest.TestRequired required_message = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::required_message(this),
        _Internal::required_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredMessage)
  return target;
}

::size_t TestRequiredMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestRequired repeated_message = 2;
  total_size += 1UL * this->_internal_repeated_message_size();
  for (const auto& msg : this->_internal_repeated_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .protobuf_unittest.TestRequired optional_message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.optional_message_);
  }

  // required .protobuf_unittest.TestRequired required_message = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.required_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRequiredMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRequiredMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRequiredMessage::GetClassData() const { return &_class_data_; }


void TestRequiredMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRequiredMessage*>(&to_msg);
  auto& from = static_cast<const TestRequiredMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_message()->MergeFrom(from._internal_repeated_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_message()->::protobuf_unittest::TestRequired::MergeFrom(
          from._internal_optional_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_required_message()->::protobuf_unittest::TestRequired::MergeFrom(
          from._internal_required_message());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequiredMessage::CopyFrom(const TestRequiredMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredMessage::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_repeated_message()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.optional_message_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.required_message_->IsInitialized()) return false;
  }
  return true;
}

void TestRequiredMessage::InternalSwap(TestRequiredMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_message_.InternalSwap(&other->_impl_.repeated_message_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.required_message_)
      + sizeof(TestRequiredMessage::_impl_.required_message_)
      - PROTOBUF_FIELD_OFFSET(TestRequiredMessage, _impl_.optional_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_message_));
}

::google::protobuf::Metadata TestRequiredMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[26]);
}
// ===================================================================

class TestNestedRequiredForeign::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedRequiredForeign>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_._has_bits_);
  static const ::protobuf_unittest::TestNestedRequiredForeign& child(const TestNestedRequiredForeign* msg);
  static void set_has_child(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestRequiredForeign& payload(const TestNestedRequiredForeign* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dummy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::TestNestedRequiredForeign& TestNestedRequiredForeign::_Internal::child(const TestNestedRequiredForeign* msg) {
  return *msg->_impl_.child_;
}
const ::protobuf_unittest::TestRequiredForeign& TestNestedRequiredForeign::_Internal::payload(const TestNestedRequiredForeign* msg) {
  return *msg->_impl_.payload_;
}
TestNestedRequiredForeign::TestNestedRequiredForeign(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedRequiredForeign)
}
TestNestedRequiredForeign::TestNestedRequiredForeign(const TestNestedRequiredForeign& from) : ::google::protobuf::Message() {
  TestNestedRequiredForeign* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.dummy_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.child_ = new ::protobuf_unittest::TestNestedRequiredForeign(*from._impl_.child_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.payload_ = new ::protobuf_unittest::TestRequiredForeign(*from._impl_.payload_);
  }
  _this->_impl_.dummy_ = from._impl_.dummy_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedRequiredForeign)
}
inline void TestNestedRequiredForeign::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.child_){nullptr},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.dummy_){0},
  };
}
TestNestedRequiredForeign::~TestNestedRequiredForeign() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedRequiredForeign)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedRequiredForeign::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.child_;
  if (this != internal_default_instance()) delete _impl_.payload_;
}
void TestNestedRequiredForeign::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedRequiredForeign::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedRequiredForeign)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.child_ != nullptr);
      _impl_.child_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
  }
  _impl_.dummy_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedRequiredForeign::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> TestNestedRequiredForeign::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedRequiredForeign_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestNestedRequiredForeign child = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.child_)}},
    // optional .protobuf_unittest.TestRequiredForeign payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.payload_)}},
    // optional int32 dummy = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestNestedRequiredForeign, _impl_.dummy_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.dummy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestNestedRequiredForeign child = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.child_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestRequiredForeign payload = 2;
    {PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.payload_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 dummy = 3;
    {PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.dummy_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedRequiredForeign>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequiredForeign>()},
  }}, {{
  }},
};

::uint8_t* TestNestedRequiredForeign::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedRequiredForeign)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestNestedRequiredForeign child = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::child(this),
        _Internal::child(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestRequiredForeign payload = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  // optional int32 dummy = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_dummy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedRequiredForeign)
  return target;
}

::size_t TestNestedRequiredForeign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedRequiredForeign)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .protobuf_unittest.TestNestedRequiredForeign child = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.child_);
    }

    // optional .protobuf_unittest.TestRequiredForeign payload = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.payload_);
    }

    // optional int32 dummy = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_dummy());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedRequiredForeign::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedRequiredForeign::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedRequiredForeign::GetClassData() const { return &_class_data_; }


void TestNestedRequiredForeign::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedRequiredForeign*>(&to_msg);
  auto& from = static_cast<const TestNestedRequiredForeign&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedRequiredForeign)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_child()->::protobuf_unittest::TestNestedRequiredForeign::MergeFrom(
          from._internal_child());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_payload()->::protobuf_unittest::TestRequiredForeign::MergeFrom(
          from._internal_payload());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dummy_ = from._impl_.dummy_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedRequiredForeign::CopyFrom(const TestNestedRequiredForeign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedRequiredForeign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedRequiredForeign::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.child_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.payload_->IsInitialized()) return false;
  }
  return true;
}

void TestNestedRequiredForeign::InternalSwap(TestNestedRequiredForeign* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.dummy_)
      + sizeof(TestNestedRequiredForeign::_impl_.dummy_)
      - PROTOBUF_FIELD_OFFSET(TestNestedRequiredForeign, _impl_.child_)>(
          reinterpret_cast<char*>(&_impl_.child_),
          reinterpret_cast<char*>(&other->_impl_.child_));
}

::google::protobuf::Metadata TestNestedRequiredForeign::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[27]);
}
// ===================================================================

class TestForeignNested::_Internal {
 public:
  using HasBits = decltype(std::declval<TestForeignNested>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestForeignNested, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes_NestedMessage& foreign_nested(const TestForeignNested* msg);
  static void set_has_foreign_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes_NestedMessage& TestForeignNested::_Internal::foreign_nested(const TestForeignNested* msg) {
  return *msg->_impl_.foreign_nested_;
}
TestForeignNested::TestForeignNested(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestForeignNested)
}
TestForeignNested::TestForeignNested(const TestForeignNested& from) : ::google::protobuf::Message() {
  TestForeignNested* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foreign_nested_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.foreign_nested_ = new ::protobuf_unittest::TestAllTypes_NestedMessage(*from._impl_.foreign_nested_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestForeignNested)
}
inline void TestForeignNested::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foreign_nested_){nullptr},
  };
}
TestForeignNested::~TestForeignNested() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestForeignNested)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestForeignNested::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.foreign_nested_;
}
void TestForeignNested::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestForeignNested::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestForeignNested)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.foreign_nested_ != nullptr);
    _impl_.foreign_nested_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestForeignNested::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestForeignNested::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestForeignNested, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestForeignNested_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestForeignNested, _impl_.foreign_nested_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
    {PROTOBUF_FIELD_OFFSET(TestForeignNested, _impl_.foreign_nested_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes_NestedMessage>()},
  }}, {{
  }},
};

::uint8_t* TestForeignNested::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestForeignNested)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::foreign_nested(this),
        _Internal::foreign_nested(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestForeignNested)
  return target;
}

::size_t TestForeignNested::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestForeignNested)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes.NestedMessage foreign_nested = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.foreign_nested_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestForeignNested::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestForeignNested::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestForeignNested::GetClassData() const { return &_class_data_; }


void TestForeignNested::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestForeignNested*>(&to_msg);
  auto& from = static_cast<const TestForeignNested&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestForeignNested)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_foreign_nested()->::protobuf_unittest::TestAllTypes_NestedMessage::MergeFrom(
        from._internal_foreign_nested());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestForeignNested::CopyFrom(const TestForeignNested& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestForeignNested)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestForeignNested::IsInitialized() const {
  return true;
}

void TestForeignNested::InternalSwap(TestForeignNested* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.foreign_nested_, other->_impl_.foreign_nested_);
}

::google::protobuf::Metadata TestForeignNested::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[28]);
}
// ===================================================================

class TestEmptyMessage::_Internal {
 public:
};

TestEmptyMessage::TestEmptyMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessage)
}
TestEmptyMessage::TestEmptyMessage(const TestEmptyMessage& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  TestEmptyMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessage)
}




const ::google::protobuf::Message::ClassData TestEmptyMessage::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*TestEmptyMessage::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata TestEmptyMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[29]);
}
// ===================================================================

class TestEmptyMessageWithExtensions::_Internal {
 public:
};

TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}
TestEmptyMessageWithExtensions::TestEmptyMessageWithExtensions(const TestEmptyMessageWithExtensions& from) : ::google::protobuf::Message() {
  TestEmptyMessageWithExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageWithExtensions)
}
inline void TestEmptyMessageWithExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestEmptyMessageWithExtensions::~TestEmptyMessageWithExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageWithExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestEmptyMessageWithExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestEmptyMessageWithExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEmptyMessageWithExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestEmptyMessageWithExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestEmptyMessageWithExtensions::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestEmptyMessageWithExtensions, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestEmptyMessageWithExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestEmptyMessageWithExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessageWithExtensions)
  return target;
}

::size_t TestEmptyMessageWithExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestEmptyMessageWithExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestEmptyMessageWithExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestEmptyMessageWithExtensions::GetClassData() const { return &_class_data_; }


void TestEmptyMessageWithExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestEmptyMessageWithExtensions*>(&to_msg);
  auto& from = static_cast<const TestEmptyMessageWithExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestEmptyMessageWithExtensions::CopyFrom(const TestEmptyMessageWithExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageWithExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEmptyMessageWithExtensions::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestEmptyMessageWithExtensions::InternalSwap(TestEmptyMessageWithExtensions* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestEmptyMessageWithExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[30]);
}
// ===================================================================

class TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestPickleNestedMessage_NestedMessage_NestedNestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_._has_bits_);
  static void set_has_cc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
}
TestPickleNestedMessage_NestedMessage_NestedNestedMessage::TestPickleNestedMessage_NestedMessage_NestedNestedMessage(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cc_){0},
  };
}
TestPickleNestedMessage_NestedMessage_NestedNestedMessage::~TestPickleNestedMessage_NestedMessage_NestedNestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cc_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestPickleNestedMessage_NestedMessage_NestedNestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 cc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 cc = 1;
    {PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage_NestedNestedMessage, _impl_.cc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 cc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_cc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  return target;
}

::size_t TestPickleNestedMessage_NestedMessage_NestedNestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 cc = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestPickleNestedMessage_NestedMessage_NestedNestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestPickleNestedMessage_NestedMessage_NestedNestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestPickleNestedMessage_NestedMessage_NestedNestedMessage::GetClassData() const { return &_class_data_; }


void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestPickleNestedMessage_NestedMessage_NestedNestedMessage*>(&to_msg);
  auto& from = static_cast<const TestPickleNestedMessage_NestedMessage_NestedNestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_cc(from._internal_cc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::CopyFrom(const TestPickleNestedMessage_NestedMessage_NestedNestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage.NestedNestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPickleNestedMessage_NestedMessage_NestedNestedMessage::IsInitialized() const {
  return true;
}

void TestPickleNestedMessage_NestedMessage_NestedNestedMessage::InternalSwap(TestPickleNestedMessage_NestedMessage_NestedNestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.cc_, other->_impl_.cc_);
}

::google::protobuf::Metadata TestPickleNestedMessage_NestedMessage_NestedNestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[31]);
}
// ===================================================================

class TestPickleNestedMessage_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestPickleNestedMessage_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_._has_bits_);
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
}
TestPickleNestedMessage_NestedMessage::TestPickleNestedMessage_NestedMessage(const TestPickleNestedMessage_NestedMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
}
inline void TestPickleNestedMessage_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bb_){0},
  };
}
TestPickleNestedMessage_NestedMessage::~TestPickleNestedMessage_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPickleNestedMessage_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestPickleNestedMessage_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestPickleNestedMessage_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestPickleNestedMessage_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestPickleNestedMessage_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestPickleNestedMessage_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPickleNestedMessage_NestedMessage, _impl_.bb_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestPickleNestedMessage_NestedMessage, _impl_.bb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestPickleNestedMessage_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bb = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  return target;
}

::size_t TestPickleNestedMessage_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 bb = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestPickleNestedMessage_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestPickleNestedMessage_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestPickleNestedMessage_NestedMessage::GetClassData() const { return &_class_data_; }


void TestPickleNestedMessage_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestPickleNestedMessage_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestPickleNestedMessage_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_bb(from._internal_bb());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPickleNestedMessage_NestedMessage::CopyFrom(const TestPickleNestedMessage_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPickleNestedMessage.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPickleNestedMessage_NestedMessage::IsInitialized() const {
  return true;
}

void TestPickleNestedMessage_NestedMessage::InternalSwap(TestPickleNestedMessage_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestPickleNestedMessage_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[32]);
}
// ===================================================================

class TestPickleNestedMessage::_Internal {
 public:
};

TestPickleNestedMessage::TestPickleNestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPickleNestedMessage)
}
TestPickleNestedMessage::TestPickleNestedMessage(const TestPickleNestedMessage& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  TestPickleNestedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPickleNestedMessage)
}




const ::google::protobuf::Message::ClassData TestPickleNestedMessage::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*TestPickleNestedMessage::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata TestPickleNestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[33]);
}
// ===================================================================

class TestMultipleExtensionRanges::_Internal {
 public:
};

TestMultipleExtensionRanges::TestMultipleExtensionRanges(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMultipleExtensionRanges)
}
TestMultipleExtensionRanges::TestMultipleExtensionRanges(const TestMultipleExtensionRanges& from) : ::google::protobuf::Message() {
  TestMultipleExtensionRanges* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMultipleExtensionRanges)
}
inline void TestMultipleExtensionRanges::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestMultipleExtensionRanges::~TestMultipleExtensionRanges() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMultipleExtensionRanges)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMultipleExtensionRanges::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestMultipleExtensionRanges::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMultipleExtensionRanges::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMultipleExtensionRanges)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMultipleExtensionRanges::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestMultipleExtensionRanges::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestMultipleExtensionRanges, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestMultipleExtensionRanges_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestMultipleExtensionRanges::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMultipleExtensionRanges)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [42, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 42, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMultipleExtensionRanges)
  return target;
}

::size_t TestMultipleExtensionRanges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMultipleExtensionRanges)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMultipleExtensionRanges::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMultipleExtensionRanges::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMultipleExtensionRanges::GetClassData() const { return &_class_data_; }


void TestMultipleExtensionRanges::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMultipleExtensionRanges*>(&to_msg);
  auto& from = static_cast<const TestMultipleExtensionRanges&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMultipleExtensionRanges::CopyFrom(const TestMultipleExtensionRanges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMultipleExtensionRanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMultipleExtensionRanges::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestMultipleExtensionRanges::InternalSwap(TestMultipleExtensionRanges* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestMultipleExtensionRanges::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[34]);
}
// ===================================================================

class TestReallyLargeTagNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestReallyLargeTagNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestReallyLargeTagNumber::TestReallyLargeTagNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestReallyLargeTagNumber)
}
TestReallyLargeTagNumber::TestReallyLargeTagNumber(const TestReallyLargeTagNumber& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestReallyLargeTagNumber)
}
inline void TestReallyLargeTagNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
      decltype(_impl_.bb_){0},
  };
}
TestReallyLargeTagNumber::~TestReallyLargeTagNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestReallyLargeTagNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestReallyLargeTagNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestReallyLargeTagNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestReallyLargeTagNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestReallyLargeTagNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bb_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.bb_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestReallyLargeTagNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 0, 7> TestReallyLargeTagNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_._has_bits_),
    0, // no _extensions_
    268435455, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestReallyLargeTagNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestReallyLargeTagNumber, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_.a_)}},
  }}, {{
    65535, 4095, 1,
    65534, 1,
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 bb = 268435455;
    {PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_.bb_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestReallyLargeTagNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestReallyLargeTagNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional int32 bb = 268435455;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        268435455, this->_internal_bb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestReallyLargeTagNumber)
  return target;
}

::size_t TestReallyLargeTagNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestReallyLargeTagNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

    // optional int32 bb = 268435455;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_bb());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestReallyLargeTagNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestReallyLargeTagNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestReallyLargeTagNumber::GetClassData() const { return &_class_data_; }


void TestReallyLargeTagNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestReallyLargeTagNumber*>(&to_msg);
  auto& from = static_cast<const TestReallyLargeTagNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bb_ = from._impl_.bb_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestReallyLargeTagNumber::CopyFrom(const TestReallyLargeTagNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestReallyLargeTagNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestReallyLargeTagNumber::IsInitialized() const {
  return true;
}

void TestReallyLargeTagNumber::InternalSwap(TestReallyLargeTagNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_.bb_)
      + sizeof(TestReallyLargeTagNumber::_impl_.bb_)
      - PROTOBUF_FIELD_OFFSET(TestReallyLargeTagNumber, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata TestReallyLargeTagNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[35]);
}
// ===================================================================

class TestRecursiveMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRecursiveMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestRecursiveMessage& a(const TestRecursiveMessage* msg);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_i(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestRecursiveMessage& TestRecursiveMessage::_Internal::a(const TestRecursiveMessage* msg) {
  return *msg->_impl_.a_;
}
TestRecursiveMessage::TestRecursiveMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRecursiveMessage)
}
TestRecursiveMessage::TestRecursiveMessage(const TestRecursiveMessage& from) : ::google::protobuf::Message() {
  TestRecursiveMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){nullptr},
      decltype(_impl_.i_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.a_ = new ::protobuf_unittest::TestRecursiveMessage(*from._impl_.a_);
  }
  _this->_impl_.i_ = from._impl_.i_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRecursiveMessage)
}
inline void TestRecursiveMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){nullptr},
      decltype(_impl_.i_){0},
  };
}
TestRecursiveMessage::~TestRecursiveMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRecursiveMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRecursiveMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.a_;
}
void TestRecursiveMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRecursiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRecursiveMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.a_ != nullptr);
    _impl_.a_->Clear();
  }
  _impl_.i_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRecursiveMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TestRecursiveMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRecursiveMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 i = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestRecursiveMessage, _impl_.i_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.i_)}},
    // optional .protobuf_unittest.TestRecursiveMessage a = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestRecursiveMessage a = 1;
    {PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 i = 2;
    {PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.i_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRecursiveMessage>()},
  }}, {{
  }},
};

::uint8_t* TestRecursiveMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRecursiveMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestRecursiveMessage a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // optional int32 i = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_i(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRecursiveMessage)
  return target;
}

::size_t TestRecursiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRecursiveMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestRecursiveMessage a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.a_);
    }

    // optional int32 i = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_i());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRecursiveMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRecursiveMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRecursiveMessage::GetClassData() const { return &_class_data_; }


void TestRecursiveMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRecursiveMessage*>(&to_msg);
  auto& from = static_cast<const TestRecursiveMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRecursiveMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_a()->::protobuf_unittest::TestRecursiveMessage::MergeFrom(
          from._internal_a());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.i_ = from._impl_.i_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRecursiveMessage::CopyFrom(const TestRecursiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRecursiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRecursiveMessage::IsInitialized() const {
  return true;
}

void TestRecursiveMessage::InternalSwap(TestRecursiveMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.i_)
      + sizeof(TestRecursiveMessage::_impl_.i_)
      - PROTOBUF_FIELD_OFFSET(TestRecursiveMessage, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata TestRecursiveMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[36]);
}
// ===================================================================

class TestMutualRecursionA_SubMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMutualRecursionA_SubMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestMutualRecursionB& b(const TestMutualRecursionA_SubMessage* msg);
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestMutualRecursionB& TestMutualRecursionA_SubMessage::_Internal::b(const TestMutualRecursionA_SubMessage* msg) {
  return *msg->_impl_.b_;
}
TestMutualRecursionA_SubMessage::TestMutualRecursionA_SubMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionA.SubMessage)
}
TestMutualRecursionA_SubMessage::TestMutualRecursionA_SubMessage(const TestMutualRecursionA_SubMessage& from) : ::google::protobuf::Message() {
  TestMutualRecursionA_SubMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.b_ = new ::protobuf_unittest::TestMutualRecursionB(*from._impl_.b_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA.SubMessage)
}
inline void TestMutualRecursionA_SubMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){nullptr},
  };
}
TestMutualRecursionA_SubMessage::~TestMutualRecursionA_SubMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA.SubMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMutualRecursionA_SubMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.b_;
}
void TestMutualRecursionA_SubMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMutualRecursionA_SubMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionA.SubMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.b_ != nullptr);
    _impl_.b_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMutualRecursionA_SubMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestMutualRecursionA_SubMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMutualRecursionA_SubMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestMutualRecursionB b = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubMessage, _impl_.b_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestMutualRecursionB b = 1;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubMessage, _impl_.b_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionB>()},
  }}, {{
  }},
};

::uint8_t* TestMutualRecursionA_SubMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA.SubMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestMutualRecursionB b = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::b(this),
        _Internal::b(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA.SubMessage)
  return target;
}

::size_t TestMutualRecursionA_SubMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionA.SubMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestMutualRecursionB b = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.b_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMutualRecursionA_SubMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMutualRecursionA_SubMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMutualRecursionA_SubMessage::GetClassData() const { return &_class_data_; }


void TestMutualRecursionA_SubMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMutualRecursionA_SubMessage*>(&to_msg);
  auto& from = static_cast<const TestMutualRecursionA_SubMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionA.SubMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_b()->::protobuf_unittest::TestMutualRecursionB::MergeFrom(
        from._internal_b());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMutualRecursionA_SubMessage::CopyFrom(const TestMutualRecursionA_SubMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionA.SubMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMutualRecursionA_SubMessage::IsInitialized() const {
  return true;
}

void TestMutualRecursionA_SubMessage::InternalSwap(TestMutualRecursionA_SubMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.b_, other->_impl_.b_);
}

::google::protobuf::Metadata TestMutualRecursionA_SubMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[37]);
}
// ===================================================================

class TestMutualRecursionA_SubGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMutualRecursionA_SubGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestMutualRecursionA_SubMessage& sub_message(const TestMutualRecursionA_SubGroup* msg);
  static void set_has_sub_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypes& not_in_this_scc(const TestMutualRecursionA_SubGroup* msg);
  static void set_has_not_in_this_scc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestMutualRecursionA_SubMessage& TestMutualRecursionA_SubGroup::_Internal::sub_message(const TestMutualRecursionA_SubGroup* msg) {
  return *msg->_impl_.sub_message_;
}
const ::protobuf_unittest::TestAllTypes& TestMutualRecursionA_SubGroup::_Internal::not_in_this_scc(const TestMutualRecursionA_SubGroup* msg) {
  return *msg->_impl_.not_in_this_scc_;
}
TestMutualRecursionA_SubGroup::TestMutualRecursionA_SubGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionA.SubGroup)
}
TestMutualRecursionA_SubGroup::TestMutualRecursionA_SubGroup(const TestMutualRecursionA_SubGroup& from) : ::google::protobuf::Message() {
  TestMutualRecursionA_SubGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
      decltype(_impl_.not_in_this_scc_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.sub_message_ = new ::protobuf_unittest::TestMutualRecursionA_SubMessage(*from._impl_.sub_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.not_in_this_scc_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.not_in_this_scc_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA.SubGroup)
}
inline void TestMutualRecursionA_SubGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
      decltype(_impl_.not_in_this_scc_){nullptr},
  };
}
TestMutualRecursionA_SubGroup::~TestMutualRecursionA_SubGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA.SubGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMutualRecursionA_SubGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.sub_message_;
  if (this != internal_default_instance()) delete _impl_.not_in_this_scc_;
}
void TestMutualRecursionA_SubGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMutualRecursionA_SubGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionA.SubGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.sub_message_ != nullptr);
      _impl_.sub_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.not_in_this_scc_ != nullptr);
      _impl_.not_in_this_scc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMutualRecursionA_SubGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> TestMutualRecursionA_SubGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMutualRecursionA_SubGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllTypes not_in_this_scc = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.not_in_this_scc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::FastEndG1, {20, 20}},
    // optional .protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.sub_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.sub_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes not_in_this_scc = 4;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.not_in_this_scc_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionA_SubMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestMutualRecursionA_SubGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA.SubGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::sub_message(this),
        _Internal::sub_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes not_in_this_scc = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::not_in_this_scc(this),
        _Internal::not_in_this_scc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA.SubGroup)
  return target;
}

::size_t TestMutualRecursionA_SubGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionA.SubGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestMutualRecursionA.SubMessage sub_message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.sub_message_);
    }

    // optional .protobuf_unittest.TestAllTypes not_in_this_scc = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.not_in_this_scc_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMutualRecursionA_SubGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMutualRecursionA_SubGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMutualRecursionA_SubGroup::GetClassData() const { return &_class_data_; }


void TestMutualRecursionA_SubGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMutualRecursionA_SubGroup*>(&to_msg);
  auto& from = static_cast<const TestMutualRecursionA_SubGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionA.SubGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_sub_message()->::protobuf_unittest::TestMutualRecursionA_SubMessage::MergeFrom(
          from._internal_sub_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_not_in_this_scc()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_not_in_this_scc());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMutualRecursionA_SubGroup::CopyFrom(const TestMutualRecursionA_SubGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionA.SubGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMutualRecursionA_SubGroup::IsInitialized() const {
  return true;
}

void TestMutualRecursionA_SubGroup::InternalSwap(TestMutualRecursionA_SubGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.not_in_this_scc_)
      + sizeof(TestMutualRecursionA_SubGroup::_impl_.not_in_this_scc_)
      - PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroup, _impl_.sub_message_)>(
          reinterpret_cast<char*>(&_impl_.sub_message_),
          reinterpret_cast<char*>(&other->_impl_.sub_message_));
}

::google::protobuf::Metadata TestMutualRecursionA_SubGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[38]);
}
// ===================================================================

class TestMutualRecursionA_SubGroupR::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMutualRecursionA_SubGroupR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroupR, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& payload(const TestMutualRecursionA_SubGroupR* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestMutualRecursionA_SubGroupR::_Internal::payload(const TestMutualRecursionA_SubGroupR* msg) {
  return *msg->_impl_.payload_;
}
TestMutualRecursionA_SubGroupR::TestMutualRecursionA_SubGroupR(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionA.SubGroupR)
}
TestMutualRecursionA_SubGroupR::TestMutualRecursionA_SubGroupR(const TestMutualRecursionA_SubGroupR& from) : ::google::protobuf::Message() {
  TestMutualRecursionA_SubGroupR* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.payload_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.payload_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA.SubGroupR)
}
inline void TestMutualRecursionA_SubGroupR::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
  };
}
TestMutualRecursionA_SubGroupR::~TestMutualRecursionA_SubGroupR() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMutualRecursionA_SubGroupR::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.payload_;
}
void TestMutualRecursionA_SubGroupR::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMutualRecursionA_SubGroupR::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.payload_ != nullptr);
    _impl_.payload_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMutualRecursionA_SubGroupR::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestMutualRecursionA_SubGroupR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroupR, _impl_._has_bits_),
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967263,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMutualRecursionA_SubGroupR_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllTypes payload = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroupR, _impl_.payload_)}},
    {::_pbi::TcParser::FastEndG1, {44, 44}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes payload = 6;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA_SubGroupR, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestMutualRecursionA_SubGroupR::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes payload = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  return target;
}

::size_t TestMutualRecursionA_SubGroupR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes payload = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.payload_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMutualRecursionA_SubGroupR::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMutualRecursionA_SubGroupR::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMutualRecursionA_SubGroupR::GetClassData() const { return &_class_data_; }


void TestMutualRecursionA_SubGroupR::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMutualRecursionA_SubGroupR*>(&to_msg);
  auto& from = static_cast<const TestMutualRecursionA_SubGroupR&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_payload()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMutualRecursionA_SubGroupR::CopyFrom(const TestMutualRecursionA_SubGroupR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionA.SubGroupR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMutualRecursionA_SubGroupR::IsInitialized() const {
  return true;
}

void TestMutualRecursionA_SubGroupR::InternalSwap(TestMutualRecursionA_SubGroupR* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.payload_, other->_impl_.payload_);
}

::google::protobuf::Metadata TestMutualRecursionA_SubGroupR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[39]);
}
// ===================================================================

class TestMutualRecursionA::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMutualRecursionA>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_._has_bits_);
  static const ::protobuf_unittest::TestMutualRecursionB& bb(const TestMutualRecursionA* msg);
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestMutualRecursionA_SubGroup& subgroup(const TestMutualRecursionA* msg);
  static void set_has_subgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestMutualRecursionB& TestMutualRecursionA::_Internal::bb(const TestMutualRecursionA* msg) {
  return *msg->_impl_.bb_;
}
const ::protobuf_unittest::TestMutualRecursionA_SubGroup& TestMutualRecursionA::_Internal::subgroup(const TestMutualRecursionA* msg) {
  return *msg->_impl_.subgroup_;
}
TestMutualRecursionA::TestMutualRecursionA(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionA)
}
TestMutualRecursionA::TestMutualRecursionA(const TestMutualRecursionA& from) : ::google::protobuf::Message() {
  TestMutualRecursionA* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.subgroupr_){from._impl_.subgroupr_},
      decltype(_impl_.bb_){nullptr},
      decltype(_impl_.subgroup_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bb_ = new ::protobuf_unittest::TestMutualRecursionB(*from._impl_.bb_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.subgroup_ = new ::protobuf_unittest::TestMutualRecursionA_SubGroup(*from._impl_.subgroup_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionA)
}
inline void TestMutualRecursionA::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.subgroupr_){arena},
      decltype(_impl_.bb_){nullptr},
      decltype(_impl_.subgroup_){nullptr},
  };
}
TestMutualRecursionA::~TestMutualRecursionA() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionA)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMutualRecursionA::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subgroupr_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.bb_;
  if (this != internal_default_instance()) delete _impl_.subgroup_;
}
void TestMutualRecursionA::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMutualRecursionA::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionA)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_subgroupr()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.bb_ != nullptr);
      _impl_.bb_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.subgroup_ != nullptr);
      _impl_.subgroup_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMutualRecursionA::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 3, 0, 2> TestMutualRecursionA::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_._has_bits_),
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967276,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMutualRecursionA_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional group SubGroup = 2 { ... };
    {::_pbi::TcParser::FastGtS1,
     {19, 1, 1, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.subgroup_)}},
    // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.bb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group SubGroup = 2 { ... };
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.subgroup_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group SubGroupR = 5 { ... };
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.subgroupr_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionB>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionA_SubGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionA_SubGroupR>()},
  }}, {{
  }},
};

::uint8_t* TestMutualRecursionA::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionA)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bb(this),
        _Internal::bb(this).GetCachedSize(), target, stream);
  }

  // optional group SubGroup = 2 { ... };
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        2, _Internal::subgroup(this), target, stream);
  }

  // repeated group SubGroupR = 5 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subgroupr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(5, this->_internal_subgroupr().Get(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionA)
  return target;
}

::size_t TestMutualRecursionA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionA)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated group SubGroupR = 5 { ... };
  total_size += 2UL * this->_internal_subgroupr_size();
  for (const auto& msg : this->_internal_subgroupr()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestMutualRecursionB bb = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.bb_);
    }

    // optional group SubGroup = 2 { ... };
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.subgroup_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMutualRecursionA::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMutualRecursionA::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMutualRecursionA::GetClassData() const { return &_class_data_; }


void TestMutualRecursionA::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMutualRecursionA*>(&to_msg);
  auto& from = static_cast<const TestMutualRecursionA&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionA)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subgroupr()->MergeFrom(from._internal_subgroupr());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_bb()->::protobuf_unittest::TestMutualRecursionB::MergeFrom(
          from._internal_bb());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_subgroup()->::protobuf_unittest::TestMutualRecursionA_SubGroup::MergeFrom(
          from._internal_subgroup());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMutualRecursionA::CopyFrom(const TestMutualRecursionA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMutualRecursionA::IsInitialized() const {
  return true;
}

void TestMutualRecursionA::InternalSwap(TestMutualRecursionA* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.subgroupr_.InternalSwap(&other->_impl_.subgroupr_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.subgroup_)
      + sizeof(TestMutualRecursionA::_impl_.subgroup_)
      - PROTOBUF_FIELD_OFFSET(TestMutualRecursionA, _impl_.bb_)>(
          reinterpret_cast<char*>(&_impl_.bb_),
          reinterpret_cast<char*>(&other->_impl_.bb_));
}

::google::protobuf::Metadata TestMutualRecursionA::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[40]);
}
// ===================================================================

class TestMutualRecursionB::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMutualRecursionB>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_._has_bits_);
  static const ::protobuf_unittest::TestMutualRecursionA& a(const TestMutualRecursionB* msg);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestMutualRecursionA& TestMutualRecursionB::_Internal::a(const TestMutualRecursionB* msg) {
  return *msg->_impl_.a_;
}
TestMutualRecursionB::TestMutualRecursionB(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMutualRecursionB)
}
TestMutualRecursionB::TestMutualRecursionB(const TestMutualRecursionB& from) : ::google::protobuf::Message() {
  TestMutualRecursionB* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){nullptr},
      decltype(_impl_.optional_int32_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.a_ = new ::protobuf_unittest::TestMutualRecursionA(*from._impl_.a_);
  }
  _this->_impl_.optional_int32_ = from._impl_.optional_int32_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMutualRecursionB)
}
inline void TestMutualRecursionB::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){nullptr},
      decltype(_impl_.optional_int32_){0},
  };
}
TestMutualRecursionB::~TestMutualRecursionB() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMutualRecursionB)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMutualRecursionB::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.a_;
}
void TestMutualRecursionB::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMutualRecursionB::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMutualRecursionB)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.a_ != nullptr);
    _impl_.a_->Clear();
  }
  _impl_.optional_int32_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMutualRecursionB::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TestMutualRecursionB::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMutualRecursionB_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMutualRecursionB, _impl_.optional_int32_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.optional_int32_)}},
    // optional .protobuf_unittest.TestMutualRecursionA a = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestMutualRecursionA a = 1;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 optional_int32 = 2;
    {PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.optional_int32_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestMutualRecursionA>()},
  }}, {{
  }},
};

::uint8_t* TestMutualRecursionB::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMutualRecursionB)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestMutualRecursionA a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::a(this),
        _Internal::a(this).GetCachedSize(), target, stream);
  }

  // optional int32 optional_int32 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMutualRecursionB)
  return target;
}

::size_t TestMutualRecursionB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMutualRecursionB)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .protobuf_unittest.TestMutualRecursionA a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.a_);
    }

    // optional int32 optional_int32 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMutualRecursionB::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMutualRecursionB::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMutualRecursionB::GetClassData() const { return &_class_data_; }


void TestMutualRecursionB::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMutualRecursionB*>(&to_msg);
  auto& from = static_cast<const TestMutualRecursionB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMutualRecursionB)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_a()->::protobuf_unittest::TestMutualRecursionA::MergeFrom(
          from._internal_a());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMutualRecursionB::CopyFrom(const TestMutualRecursionB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMutualRecursionB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMutualRecursionB::IsInitialized() const {
  return true;
}

void TestMutualRecursionB::InternalSwap(TestMutualRecursionB* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.optional_int32_)
      + sizeof(TestMutualRecursionB::_impl_.optional_int32_)
      - PROTOBUF_FIELD_OFFSET(TestMutualRecursionB, _impl_.a_)>(
          reinterpret_cast<char*>(&_impl_.a_),
          reinterpret_cast<char*>(&other->_impl_.a_));
}

::google::protobuf::Metadata TestMutualRecursionB::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[41]);
}
// ===================================================================

class TestIsInitialized_SubMessage_SubGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestIsInitialized_SubMessage_SubGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage_SubGroup, _impl_._has_bits_);
  static void set_has_i(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TestIsInitialized_SubMessage_SubGroup::TestIsInitialized_SubMessage_SubGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
}
TestIsInitialized_SubMessage_SubGroup::TestIsInitialized_SubMessage_SubGroup(const TestIsInitialized_SubMessage_SubGroup& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
}
inline void TestIsInitialized_SubMessage_SubGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.i_){0},
  };
}
TestIsInitialized_SubMessage_SubGroup::~TestIsInitialized_SubMessage_SubGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestIsInitialized_SubMessage_SubGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestIsInitialized_SubMessage_SubGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestIsInitialized_SubMessage_SubGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.i_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestIsInitialized_SubMessage_SubGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 2> TestIsInitialized_SubMessage_SubGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage_SubGroup, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestIsInitialized_SubMessage_SubGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int32 i = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestIsInitialized_SubMessage_SubGroup, _impl_.i_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage_SubGroup, _impl_.i_)}},
    {::_pbi::TcParser::FastEndG1, {12, 12}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 i = 2;
    {PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage_SubGroup, _impl_.i_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestIsInitialized_SubMessage_SubGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 i = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_i(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  return target;
}

::size_t TestIsInitialized_SubMessage_SubGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 i = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_i());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestIsInitialized_SubMessage_SubGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestIsInitialized_SubMessage_SubGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestIsInitialized_SubMessage_SubGroup::GetClassData() const { return &_class_data_; }


void TestIsInitialized_SubMessage_SubGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestIsInitialized_SubMessage_SubGroup*>(&to_msg);
  auto& from = static_cast<const TestIsInitialized_SubMessage_SubGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_i(from._internal_i());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestIsInitialized_SubMessage_SubGroup::CopyFrom(const TestIsInitialized_SubMessage_SubGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestIsInitialized.SubMessage.SubGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestIsInitialized_SubMessage_SubGroup::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TestIsInitialized_SubMessage_SubGroup::InternalSwap(TestIsInitialized_SubMessage_SubGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.i_, other->_impl_.i_);
}

::google::protobuf::Metadata TestIsInitialized_SubMessage_SubGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[42]);
}
// ===================================================================

class TestIsInitialized_SubMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestIsInitialized_SubMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup& subgroup(const TestIsInitialized_SubMessage* msg);
  static void set_has_subgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup& TestIsInitialized_SubMessage::_Internal::subgroup(const TestIsInitialized_SubMessage* msg) {
  return *msg->_impl_.subgroup_;
}
TestIsInitialized_SubMessage::TestIsInitialized_SubMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestIsInitialized.SubMessage)
}
TestIsInitialized_SubMessage::TestIsInitialized_SubMessage(const TestIsInitialized_SubMessage& from) : ::google::protobuf::Message() {
  TestIsInitialized_SubMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.subgroup_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.subgroup_ = new ::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup(*from._impl_.subgroup_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestIsInitialized.SubMessage)
}
inline void TestIsInitialized_SubMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.subgroup_){nullptr},
  };
}
TestIsInitialized_SubMessage::~TestIsInitialized_SubMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestIsInitialized.SubMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestIsInitialized_SubMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.subgroup_;
}
void TestIsInitialized_SubMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestIsInitialized_SubMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestIsInitialized.SubMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subgroup_ != nullptr);
    _impl_.subgroup_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestIsInitialized_SubMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestIsInitialized_SubMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestIsInitialized_SubMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional group SubGroup = 1 { ... };
    {::_pbi::TcParser::FastGtS1,
     {11, 0, 0, PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage, _impl_.subgroup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional group SubGroup = 1 { ... };
    {PROTOBUF_FIELD_OFFSET(TestIsInitialized_SubMessage, _impl_.subgroup_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup>()},
  }}, {{
  }},
};

::uint8_t* TestIsInitialized_SubMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestIsInitialized.SubMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional group SubGroup = 1 { ... };
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        1, _Internal::subgroup(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestIsInitialized.SubMessage)
  return target;
}

::size_t TestIsInitialized_SubMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestIsInitialized.SubMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional group SubGroup = 1 { ... };
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::GroupSize(
        *_impl_.subgroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestIsInitialized_SubMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestIsInitialized_SubMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestIsInitialized_SubMessage::GetClassData() const { return &_class_data_; }


void TestIsInitialized_SubMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestIsInitialized_SubMessage*>(&to_msg);
  auto& from = static_cast<const TestIsInitialized_SubMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestIsInitialized.SubMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subgroup()->::protobuf_unittest::TestIsInitialized_SubMessage_SubGroup::MergeFrom(
        from._internal_subgroup());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestIsInitialized_SubMessage::CopyFrom(const TestIsInitialized_SubMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestIsInitialized.SubMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestIsInitialized_SubMessage::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.subgroup_->IsInitialized()) return false;
  }
  return true;
}

void TestIsInitialized_SubMessage::InternalSwap(TestIsInitialized_SubMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.subgroup_, other->_impl_.subgroup_);
}

::google::protobuf::Metadata TestIsInitialized_SubMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[43]);
}
// ===================================================================

class TestIsInitialized::_Internal {
 public:
  using HasBits = decltype(std::declval<TestIsInitialized>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestIsInitialized, _impl_._has_bits_);
  static const ::protobuf_unittest::TestIsInitialized_SubMessage& sub_message(const TestIsInitialized* msg);
  static void set_has_sub_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestIsInitialized_SubMessage& TestIsInitialized::_Internal::sub_message(const TestIsInitialized* msg) {
  return *msg->_impl_.sub_message_;
}
TestIsInitialized::TestIsInitialized(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestIsInitialized)
}
TestIsInitialized::TestIsInitialized(const TestIsInitialized& from) : ::google::protobuf::Message() {
  TestIsInitialized* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.sub_message_ = new ::protobuf_unittest::TestIsInitialized_SubMessage(*from._impl_.sub_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestIsInitialized)
}
inline void TestIsInitialized::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
}
TestIsInitialized::~TestIsInitialized() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestIsInitialized)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestIsInitialized::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.sub_message_;
}
void TestIsInitialized::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestIsInitialized::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestIsInitialized)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sub_message_ != nullptr);
    _impl_.sub_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestIsInitialized::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestIsInitialized::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestIsInitialized, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestIsInitialized_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestIsInitialized, _impl_.sub_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestIsInitialized, _impl_.sub_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestIsInitialized_SubMessage>()},
  }}, {{
  }},
};

::uint8_t* TestIsInitialized::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestIsInitialized)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::sub_message(this),
        _Internal::sub_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestIsInitialized)
  return target;
}

::size_t TestIsInitialized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestIsInitialized)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestIsInitialized.SubMessage sub_message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.sub_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestIsInitialized::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestIsInitialized::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestIsInitialized::GetClassData() const { return &_class_data_; }


void TestIsInitialized::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestIsInitialized*>(&to_msg);
  auto& from = static_cast<const TestIsInitialized&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestIsInitialized)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_sub_message()->::protobuf_unittest::TestIsInitialized_SubMessage::MergeFrom(
        from._internal_sub_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestIsInitialized::CopyFrom(const TestIsInitialized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestIsInitialized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestIsInitialized::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.sub_message_->IsInitialized()) return false;
  }
  return true;
}

void TestIsInitialized::InternalSwap(TestIsInitialized* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sub_message_, other->_impl_.sub_message_);
}

::google::protobuf::Metadata TestIsInitialized::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[44]);
}
// ===================================================================

class TestDupFieldNumber_Foo::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDupFieldNumber_Foo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Foo, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}
TestDupFieldNumber_Foo::TestDupFieldNumber_Foo(const TestDupFieldNumber_Foo& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Foo)
}
inline void TestDupFieldNumber_Foo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
TestDupFieldNumber_Foo::~TestDupFieldNumber_Foo() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Foo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDupFieldNumber_Foo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestDupFieldNumber_Foo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestDupFieldNumber_Foo::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber.Foo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDupFieldNumber_Foo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 2> TestDupFieldNumber_Foo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Foo, _impl_._has_bits_),
    0, // no _extensions_
    1, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestDupFieldNumber_Foo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {20, 20}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDupFieldNumber_Foo, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Foo, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Foo, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestDupFieldNumber_Foo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Foo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Foo)
  return target;
}

::size_t TestDupFieldNumber_Foo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber.Foo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDupFieldNumber_Foo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDupFieldNumber_Foo::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDupFieldNumber_Foo::GetClassData() const { return &_class_data_; }


void TestDupFieldNumber_Foo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDupFieldNumber_Foo*>(&to_msg);
  auto& from = static_cast<const TestDupFieldNumber_Foo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDupFieldNumber_Foo::CopyFrom(const TestDupFieldNumber_Foo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber.Foo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDupFieldNumber_Foo::IsInitialized() const {
  return true;
}

void TestDupFieldNumber_Foo::InternalSwap(TestDupFieldNumber_Foo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestDupFieldNumber_Foo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[45]);
}
// ===================================================================

class TestDupFieldNumber_Bar::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDupFieldNumber_Bar>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Bar, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}
TestDupFieldNumber_Bar::TestDupFieldNumber_Bar(const TestDupFieldNumber_Bar& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber.Bar)
}
inline void TestDupFieldNumber_Bar::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){0},
  };
}
TestDupFieldNumber_Bar::~TestDupFieldNumber_Bar() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber.Bar)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDupFieldNumber_Bar::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestDupFieldNumber_Bar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestDupFieldNumber_Bar::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber.Bar)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDupFieldNumber_Bar::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 1, 0, 0, 2> TestDupFieldNumber_Bar::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Bar, _impl_._has_bits_),
    0, // no _extensions_
    1, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestDupFieldNumber_Bar_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDupFieldNumber_Bar, _impl_.a_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Bar, _impl_.a_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::FastEndG1, {28, 28}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestDupFieldNumber_Bar, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestDupFieldNumber_Bar::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber.Bar)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber.Bar)
  return target;
}

::size_t TestDupFieldNumber_Bar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber.Bar)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDupFieldNumber_Bar::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDupFieldNumber_Bar::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDupFieldNumber_Bar::GetClassData() const { return &_class_data_; }


void TestDupFieldNumber_Bar::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDupFieldNumber_Bar*>(&to_msg);
  auto& from = static_cast<const TestDupFieldNumber_Bar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDupFieldNumber_Bar::CopyFrom(const TestDupFieldNumber_Bar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber.Bar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDupFieldNumber_Bar::IsInitialized() const {
  return true;
}

void TestDupFieldNumber_Bar::InternalSwap(TestDupFieldNumber_Bar* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestDupFieldNumber_Bar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[46]);
}
// ===================================================================

class TestDupFieldNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDupFieldNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestDupFieldNumber_Foo& foo(const TestDupFieldNumber* msg);
  static void set_has_foo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestDupFieldNumber_Bar& bar(const TestDupFieldNumber* msg);
  static void set_has_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestDupFieldNumber_Foo& TestDupFieldNumber::_Internal::foo(const TestDupFieldNumber* msg) {
  return *msg->_impl_.foo_;
}
const ::protobuf_unittest::TestDupFieldNumber_Bar& TestDupFieldNumber::_Internal::bar(const TestDupFieldNumber* msg) {
  return *msg->_impl_.bar_;
}
TestDupFieldNumber::TestDupFieldNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDupFieldNumber)
}
TestDupFieldNumber::TestDupFieldNumber(const TestDupFieldNumber& from) : ::google::protobuf::Message() {
  TestDupFieldNumber* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_){nullptr},
      decltype(_impl_.bar_){nullptr},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.foo_ = new ::protobuf_unittest::TestDupFieldNumber_Foo(*from._impl_.foo_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.bar_ = new ::protobuf_unittest::TestDupFieldNumber_Bar(*from._impl_.bar_);
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDupFieldNumber)
}
inline void TestDupFieldNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_){nullptr},
      decltype(_impl_.bar_){nullptr},
      decltype(_impl_.a_){0},
  };
}
TestDupFieldNumber::~TestDupFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDupFieldNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDupFieldNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.foo_;
  if (this != internal_default_instance()) delete _impl_.bar_;
}
void TestDupFieldNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestDupFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDupFieldNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.foo_ != nullptr);
      _impl_.foo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.bar_ != nullptr);
      _impl_.bar_->Clear();
    }
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDupFieldNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> TestDupFieldNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestDupFieldNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDupFieldNumber, _impl_.a_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.a_)}},
    // optional group Foo = 2 { ... };
    {::_pbi::TcParser::FastGtS1,
     {19, 0, 0, PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.foo_)}},
    // optional group Bar = 3 { ... };
    {::_pbi::TcParser::FastGtS1,
     {27, 1, 1, PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.bar_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.a_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional group Foo = 2 { ... };
    {PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.foo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // optional group Bar = 3 { ... };
    {PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.bar_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDupFieldNumber_Foo>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDupFieldNumber_Bar>()},
  }}, {{
  }},
};

::uint8_t* TestDupFieldNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDupFieldNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  // optional group Foo = 2 { ... };
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        2, _Internal::foo(this), target, stream);
  }

  // optional group Bar = 3 { ... };
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        3, _Internal::bar(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDupFieldNumber)
  return target;
}

::size_t TestDupFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDupFieldNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional group Foo = 2 { ... };
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.foo_);
    }

    // optional group Bar = 3 { ... };
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.bar_);
    }

    // optional int32 a = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDupFieldNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDupFieldNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDupFieldNumber::GetClassData() const { return &_class_data_; }


void TestDupFieldNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDupFieldNumber*>(&to_msg);
  auto& from = static_cast<const TestDupFieldNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDupFieldNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_foo()->::protobuf_unittest::TestDupFieldNumber_Foo::MergeFrom(
          from._internal_foo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_bar()->::protobuf_unittest::TestDupFieldNumber_Bar::MergeFrom(
          from._internal_bar());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDupFieldNumber::CopyFrom(const TestDupFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDupFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDupFieldNumber::IsInitialized() const {
  return true;
}

void TestDupFieldNumber::InternalSwap(TestDupFieldNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.a_)
      + sizeof(TestDupFieldNumber::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(TestDupFieldNumber, _impl_.foo_)>(
          reinterpret_cast<char*>(&_impl_.foo_),
          reinterpret_cast<char*>(&other->_impl_.foo_));
}

::google::protobuf::Metadata TestDupFieldNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[47]);
}
// ===================================================================

class TestEagerMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestEagerMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestEagerMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& sub_message(const TestEagerMessage* msg);
  static void set_has_sub_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestEagerMessage::_Internal::sub_message(const TestEagerMessage* msg) {
  return *msg->_impl_.sub_message_;
}
TestEagerMessage::TestEagerMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEagerMessage)
}
TestEagerMessage::TestEagerMessage(const TestEagerMessage& from) : ::google::protobuf::Message() {
  TestEagerMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.sub_message_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.sub_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEagerMessage)
}
inline void TestEagerMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
}
TestEagerMessage::~TestEagerMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEagerMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestEagerMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.sub_message_;
}
void TestEagerMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEagerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEagerMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sub_message_ != nullptr);
    _impl_.sub_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestEagerMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestEagerMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestEagerMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestEagerMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestEagerMessage, _impl_.sub_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
    {PROTOBUF_FIELD_OFFSET(TestEagerMessage, _impl_.sub_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestEagerMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEagerMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::sub_message(this),
        _Internal::sub_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEagerMessage)
  return target;
}

::size_t TestEagerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEagerMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.sub_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestEagerMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestEagerMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestEagerMessage::GetClassData() const { return &_class_data_; }


void TestEagerMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestEagerMessage*>(&to_msg);
  auto& from = static_cast<const TestEagerMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEagerMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_sub_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestEagerMessage::CopyFrom(const TestEagerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEagerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEagerMessage::IsInitialized() const {
  return true;
}

void TestEagerMessage::InternalSwap(TestEagerMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sub_message_, other->_impl_.sub_message_);
}

::google::protobuf::Metadata TestEagerMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[48]);
}
// ===================================================================

class TestLazyMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestLazyMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestLazyMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& sub_message(const TestLazyMessage* msg);
  static void set_has_sub_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestLazyMessage::_Internal::sub_message(const TestLazyMessage* msg) {
  return *msg->_impl_.sub_message_;
}
TestLazyMessage::TestLazyMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestLazyMessage)
}
TestLazyMessage::TestLazyMessage(const TestLazyMessage& from) : ::google::protobuf::Message() {
  TestLazyMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.sub_message_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.sub_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestLazyMessage)
}
inline void TestLazyMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sub_message_){nullptr},
  };
}
TestLazyMessage::~TestLazyMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestLazyMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestLazyMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.sub_message_;
}
void TestLazyMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestLazyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestLazyMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sub_message_ != nullptr);
    _impl_.sub_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestLazyMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestLazyMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestLazyMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestLazyMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestLazyMessage, _impl_.sub_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestLazyMessage, _impl_.sub_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestLazyMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestLazyMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::sub_message(this),
        _Internal::sub_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestLazyMessage)
  return target;
}

::size_t TestLazyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestLazyMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes sub_message = 1 [lazy = true];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.sub_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestLazyMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestLazyMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestLazyMessage::GetClassData() const { return &_class_data_; }


void TestLazyMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestLazyMessage*>(&to_msg);
  auto& from = static_cast<const TestLazyMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestLazyMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_sub_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_sub_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestLazyMessage::CopyFrom(const TestLazyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestLazyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestLazyMessage::IsInitialized() const {
  return true;
}

void TestLazyMessage::InternalSwap(TestLazyMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sub_message_, other->_impl_.sub_message_);
}

::google::protobuf::Metadata TestLazyMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[49]);
}
// ===================================================================

class TestLazyMessageRepeated::_Internal {
 public:
};

TestLazyMessageRepeated::TestLazyMessageRepeated(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestLazyMessageRepeated)
}
TestLazyMessageRepeated::TestLazyMessageRepeated(const TestLazyMessageRepeated& from) : ::google::protobuf::Message() {
  TestLazyMessageRepeated* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_message_){from._impl_.repeated_message_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestLazyMessageRepeated)
}
inline void TestLazyMessageRepeated::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_message_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestLazyMessageRepeated::~TestLazyMessageRepeated() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestLazyMessageRepeated)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestLazyMessageRepeated::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_message_.~RepeatedPtrField();
}
void TestLazyMessageRepeated::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestLazyMessageRepeated::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestLazyMessageRepeated)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_message()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestLazyMessageRepeated::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestLazyMessageRepeated::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestLazyMessageRepeated_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf_unittest.TestLazyMessage repeated_message = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestLazyMessageRepeated, _impl_.repeated_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .protobuf_unittest.TestLazyMessage repeated_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestLazyMessageRepeated, _impl_.repeated_message_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestLazyMessage>()},
  }}, {{
  }},
};

::uint8_t* TestLazyMessageRepeated::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestLazyMessageRepeated)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protobuf_unittest.TestLazyMessage repeated_message = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestLazyMessageRepeated)
  return target;
}

::size_t TestLazyMessageRepeated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestLazyMessageRepeated)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestLazyMessage repeated_message = 1;
  total_size += 1UL * this->_internal_repeated_message_size();
  for (const auto& msg : this->_internal_repeated_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestLazyMessageRepeated::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestLazyMessageRepeated::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestLazyMessageRepeated::GetClassData() const { return &_class_data_; }


void TestLazyMessageRepeated::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestLazyMessageRepeated*>(&to_msg);
  auto& from = static_cast<const TestLazyMessageRepeated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestLazyMessageRepeated)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_message()->MergeFrom(from._internal_repeated_message());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestLazyMessageRepeated::CopyFrom(const TestLazyMessageRepeated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestLazyMessageRepeated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestLazyMessageRepeated::IsInitialized() const {
  return true;
}

void TestLazyMessageRepeated::InternalSwap(TestLazyMessageRepeated* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_message_.InternalSwap(&other->_impl_.repeated_message_);
}

::google::protobuf::Metadata TestLazyMessageRepeated::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[50]);
}
// ===================================================================

class TestEagerMaybeLazy_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestEagerMaybeLazy_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy_NestedMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::TestPackedTypes& packed(const TestEagerMaybeLazy_NestedMessage* msg);
  static void set_has_packed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestPackedTypes& TestEagerMaybeLazy_NestedMessage::_Internal::packed(const TestEagerMaybeLazy_NestedMessage* msg) {
  return *msg->_impl_.packed_;
}
TestEagerMaybeLazy_NestedMessage::TestEagerMaybeLazy_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
}
TestEagerMaybeLazy_NestedMessage::TestEagerMaybeLazy_NestedMessage(const TestEagerMaybeLazy_NestedMessage& from) : ::google::protobuf::Message() {
  TestEagerMaybeLazy_NestedMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.packed_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.packed_ = new ::protobuf_unittest::TestPackedTypes(*from._impl_.packed_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
}
inline void TestEagerMaybeLazy_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.packed_){nullptr},
  };
}
TestEagerMaybeLazy_NestedMessage::~TestEagerMaybeLazy_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestEagerMaybeLazy_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.packed_;
}
void TestEagerMaybeLazy_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEagerMaybeLazy_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.packed_ != nullptr);
    _impl_.packed_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestEagerMaybeLazy_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestEagerMaybeLazy_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestEagerMaybeLazy_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestPackedTypes packed = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy_NestedMessage, _impl_.packed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestPackedTypes packed = 1;
    {PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy_NestedMessage, _impl_.packed_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestPackedTypes>()},
  }}, {{
  }},
};

::uint8_t* TestEagerMaybeLazy_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestPackedTypes packed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::packed(this),
        _Internal::packed(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  return target;
}

::size_t TestEagerMaybeLazy_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestPackedTypes packed = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.packed_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestEagerMaybeLazy_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestEagerMaybeLazy_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestEagerMaybeLazy_NestedMessage::GetClassData() const { return &_class_data_; }


void TestEagerMaybeLazy_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestEagerMaybeLazy_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestEagerMaybeLazy_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_packed()->::protobuf_unittest::TestPackedTypes::MergeFrom(
        from._internal_packed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestEagerMaybeLazy_NestedMessage::CopyFrom(const TestEagerMaybeLazy_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEagerMaybeLazy.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEagerMaybeLazy_NestedMessage::IsInitialized() const {
  return true;
}

void TestEagerMaybeLazy_NestedMessage::InternalSwap(TestEagerMaybeLazy_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.packed_, other->_impl_.packed_);
}

::google::protobuf::Metadata TestEagerMaybeLazy_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[51]);
}
// ===================================================================

class TestEagerMaybeLazy::_Internal {
 public:
  using HasBits = decltype(std::declval<TestEagerMaybeLazy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& message_foo(const TestEagerMaybeLazy* msg);
  static void set_has_message_foo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypes& message_bar(const TestEagerMaybeLazy* msg);
  static void set_has_message_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestEagerMaybeLazy_NestedMessage& message_baz(const TestEagerMaybeLazy* msg);
  static void set_has_message_baz(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestEagerMaybeLazy::_Internal::message_foo(const TestEagerMaybeLazy* msg) {
  return *msg->_impl_.message_foo_;
}
const ::protobuf_unittest::TestAllTypes& TestEagerMaybeLazy::_Internal::message_bar(const TestEagerMaybeLazy* msg) {
  return *msg->_impl_.message_bar_;
}
const ::protobuf_unittest::TestEagerMaybeLazy_NestedMessage& TestEagerMaybeLazy::_Internal::message_baz(const TestEagerMaybeLazy* msg) {
  return *msg->_impl_.message_baz_;
}
TestEagerMaybeLazy::TestEagerMaybeLazy(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEagerMaybeLazy)
}
TestEagerMaybeLazy::TestEagerMaybeLazy(const TestEagerMaybeLazy& from) : ::google::protobuf::Message() {
  TestEagerMaybeLazy* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_foo_){nullptr},
      decltype(_impl_.message_bar_){nullptr},
      decltype(_impl_.message_baz_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_foo_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.message_foo_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.message_bar_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.message_bar_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.message_baz_ = new ::protobuf_unittest::TestEagerMaybeLazy_NestedMessage(*from._impl_.message_baz_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEagerMaybeLazy)
}
inline void TestEagerMaybeLazy::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_foo_){nullptr},
      decltype(_impl_.message_bar_){nullptr},
      decltype(_impl_.message_baz_){nullptr},
  };
}
TestEagerMaybeLazy::~TestEagerMaybeLazy() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEagerMaybeLazy)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestEagerMaybeLazy::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.message_foo_;
  if (this != internal_default_instance()) delete _impl_.message_bar_;
  if (this != internal_default_instance()) delete _impl_.message_baz_;
}
void TestEagerMaybeLazy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestEagerMaybeLazy::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEagerMaybeLazy)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_foo_ != nullptr);
      _impl_.message_foo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.message_bar_ != nullptr);
      _impl_.message_bar_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.message_baz_ != nullptr);
      _impl_.message_baz_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestEagerMaybeLazy::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> TestEagerMaybeLazy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestEagerMaybeLazy_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestAllTypes message_foo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_foo_)}},
    // optional .protobuf_unittest.TestAllTypes message_bar = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_bar_)}},
    // optional .protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_baz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes message_foo = 1;
    {PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_foo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes message_bar = 2;
    {PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_bar_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
    {PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_baz_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestEagerMaybeLazy_NestedMessage>()},
  }}, {{
  }},
};

::uint8_t* TestEagerMaybeLazy::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEagerMaybeLazy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes message_foo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::message_foo(this),
        _Internal::message_foo(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes message_bar = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::message_bar(this),
        _Internal::message_bar(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::message_baz(this),
        _Internal::message_baz(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEagerMaybeLazy)
  return target;
}

::size_t TestEagerMaybeLazy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEagerMaybeLazy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .protobuf_unittest.TestAllTypes message_foo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.message_foo_);
    }

    // optional .protobuf_unittest.TestAllTypes message_bar = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.message_bar_);
    }

    // optional .protobuf_unittest.TestEagerMaybeLazy.NestedMessage message_baz = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.message_baz_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestEagerMaybeLazy::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestEagerMaybeLazy::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestEagerMaybeLazy::GetClassData() const { return &_class_data_; }


void TestEagerMaybeLazy::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestEagerMaybeLazy*>(&to_msg);
  auto& from = static_cast<const TestEagerMaybeLazy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEagerMaybeLazy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_message_foo()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_message_foo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_message_bar()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_message_bar());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_message_baz()->::protobuf_unittest::TestEagerMaybeLazy_NestedMessage::MergeFrom(
          from._internal_message_baz());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestEagerMaybeLazy::CopyFrom(const TestEagerMaybeLazy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEagerMaybeLazy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEagerMaybeLazy::IsInitialized() const {
  return true;
}

void TestEagerMaybeLazy::InternalSwap(TestEagerMaybeLazy* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_baz_)
      + sizeof(TestEagerMaybeLazy::_impl_.message_baz_)
      - PROTOBUF_FIELD_OFFSET(TestEagerMaybeLazy, _impl_.message_foo_)>(
          reinterpret_cast<char*>(&_impl_.message_foo_),
          reinterpret_cast<char*>(&other->_impl_.message_foo_));
}

::google::protobuf::Metadata TestEagerMaybeLazy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[52]);
}
// ===================================================================

class TestNestedMessageHasBits_NestedMessage::_Internal {
 public:
};

TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}
TestNestedMessageHasBits_NestedMessage::TestNestedMessageHasBits_NestedMessage(const TestNestedMessageHasBits_NestedMessage& from) : ::google::protobuf::Message() {
  TestNestedMessageHasBits_NestedMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nestedmessage_repeated_int32_){from._impl_.nestedmessage_repeated_int32_},
      decltype(_impl_.nestedmessage_repeated_foreignmessage_){from._impl_.nestedmessage_repeated_foreignmessage_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
}
inline void TestNestedMessageHasBits_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.nestedmessage_repeated_int32_){arena},
      decltype(_impl_.nestedmessage_repeated_foreignmessage_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestNestedMessageHasBits_NestedMessage::~TestNestedMessageHasBits_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedMessageHasBits_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nestedmessage_repeated_int32_.~RepeatedField();
  _impl_.nestedmessage_repeated_foreignmessage_.~RepeatedPtrField();
}
void TestNestedMessageHasBits_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedMessageHasBits_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_nestedmessage_repeated_int32()->Clear();
  _internal_mutable_nestedmessage_repeated_foreignmessage()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedMessageHasBits_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TestNestedMessageHasBits_NestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedMessageHasBits_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_foreignmessage_)}},
    // repeated int32 nestedmessage_repeated_int32 = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_int32_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 nestedmessage_repeated_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
    {PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits_NestedMessage, _impl_.nestedmessage_repeated_foreignmessage_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
  }}, {{
  }},
};

::uint8_t* TestNestedMessageHasBits_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 nestedmessage_repeated_int32 = 1;
  for (int i = 0, n = this->_internal_nestedmessage_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_nestedmessage_repeated_int32().Get(i), target);
  }

  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nestedmessage_repeated_foreignmessage_size()); i < n; i++) {
    const auto& repfield = this->_internal_nestedmessage_repeated_foreignmessage().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  return target;
}

::size_t TestNestedMessageHasBits_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 nestedmessage_repeated_int32 = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_nestedmessage_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_nestedmessage_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated .protobuf_unittest.ForeignMessage nestedmessage_repeated_foreignmessage = 2;
  total_size += 1UL * this->_internal_nestedmessage_repeated_foreignmessage_size();
  for (const auto& msg : this->_internal_nestedmessage_repeated_foreignmessage()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedMessageHasBits_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedMessageHasBits_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedMessageHasBits_NestedMessage::GetClassData() const { return &_class_data_; }


void TestNestedMessageHasBits_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedMessageHasBits_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestNestedMessageHasBits_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nestedmessage_repeated_int32()->MergeFrom(from._internal_nestedmessage_repeated_int32());
  _this->_internal_mutable_nestedmessage_repeated_foreignmessage()->MergeFrom(from._internal_nestedmessage_repeated_foreignmessage());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedMessageHasBits_NestedMessage::CopyFrom(const TestNestedMessageHasBits_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedMessageHasBits.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedMessageHasBits_NestedMessage::IsInitialized() const {
  return true;
}

void TestNestedMessageHasBits_NestedMessage::InternalSwap(TestNestedMessageHasBits_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nestedmessage_repeated_int32_.InternalSwap(&other->_impl_.nestedmessage_repeated_int32_);
  _impl_.nestedmessage_repeated_foreignmessage_.InternalSwap(&other->_impl_.nestedmessage_repeated_foreignmessage_);
}

::google::protobuf::Metadata TestNestedMessageHasBits_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[53]);
}
// ===================================================================

class TestNestedMessageHasBits::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedMessageHasBits>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits, _impl_._has_bits_);
  static const ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage& optional_nested_message(const TestNestedMessageHasBits* msg);
  static void set_has_optional_nested_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage& TestNestedMessageHasBits::_Internal::optional_nested_message(const TestNestedMessageHasBits* msg) {
  return *msg->_impl_.optional_nested_message_;
}
TestNestedMessageHasBits::TestNestedMessageHasBits(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedMessageHasBits)
}
TestNestedMessageHasBits::TestNestedMessageHasBits(const TestNestedMessageHasBits& from) : ::google::protobuf::Message() {
  TestNestedMessageHasBits* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_nested_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_nested_message_ = new ::protobuf_unittest::TestNestedMessageHasBits_NestedMessage(*from._impl_.optional_nested_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageHasBits)
}
inline void TestNestedMessageHasBits::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_nested_message_){nullptr},
  };
}
TestNestedMessageHasBits::~TestNestedMessageHasBits() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageHasBits)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedMessageHasBits::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.optional_nested_message_;
}
void TestNestedMessageHasBits::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedMessageHasBits::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedMessageHasBits)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
    _impl_.optional_nested_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedMessageHasBits::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestNestedMessageHasBits::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedMessageHasBits_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits, _impl_.optional_nested_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedMessageHasBits, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedMessageHasBits_NestedMessage>()},
  }}, {{
  }},
};

::uint8_t* TestNestedMessageHasBits::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageHasBits)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::optional_nested_message(this),
        _Internal::optional_nested_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageHasBits)
  return target;
}

::size_t TestNestedMessageHasBits::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedMessageHasBits)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestNestedMessageHasBits.NestedMessage optional_nested_message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.optional_nested_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedMessageHasBits::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedMessageHasBits::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedMessageHasBits::GetClassData() const { return &_class_data_; }


void TestNestedMessageHasBits::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedMessageHasBits*>(&to_msg);
  auto& from = static_cast<const TestNestedMessageHasBits&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedMessageHasBits)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_optional_nested_message()->::protobuf_unittest::TestNestedMessageHasBits_NestedMessage::MergeFrom(
        from._internal_optional_nested_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedMessageHasBits::CopyFrom(const TestNestedMessageHasBits& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedMessageHasBits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedMessageHasBits::IsInitialized() const {
  return true;
}

void TestNestedMessageHasBits::InternalSwap(TestNestedMessageHasBits* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.optional_nested_message_, other->_impl_.optional_nested_message_);
}

::google::protobuf::Metadata TestNestedMessageHasBits::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[54]);
}
// ===================================================================

class TestCamelCaseFieldNames::_Internal {
 public:
  using HasBits = decltype(std::declval<TestCamelCaseFieldNames>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_._has_bits_);
  static void set_has_primitivefield(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_stringfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_enumfield(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::protobuf_unittest::ForeignMessage& messagefield(const TestCamelCaseFieldNames* msg);
  static void set_has_messagefield(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stringpiecefield(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cordfield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::ForeignMessage& TestCamelCaseFieldNames::_Internal::messagefield(const TestCamelCaseFieldNames* msg) {
  return *msg->_impl_.messagefield_;
}
TestCamelCaseFieldNames::TestCamelCaseFieldNames(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestCamelCaseFieldNames)
}
TestCamelCaseFieldNames::TestCamelCaseFieldNames(const TestCamelCaseFieldNames& from) : ::google::protobuf::Message() {
  TestCamelCaseFieldNames* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeatedprimitivefield_){from._impl_.repeatedprimitivefield_},
      decltype(_impl_.repeatedstringfield_){from._impl_.repeatedstringfield_},
      decltype(_impl_.repeatedenumfield_){from._internal_repeatedenumfield()},
      decltype(_impl_.repeatedmessagefield_){from._impl_.repeatedmessagefield_},
      decltype(_impl_.repeatedstringpiecefield_){from._impl_.repeatedstringpiecefield_},
      decltype(_impl_.repeatedcordfield_){from._impl_.repeatedcordfield_},
      decltype(_impl_.stringfield_){},
      decltype(_impl_.stringpiecefield_){},
      decltype(_impl_.cordfield_){},
      decltype(_impl_.messagefield_){nullptr},
      decltype(_impl_.primitivefield_){},
      decltype(_impl_.enumfield_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.stringfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stringfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.stringfield_.Set(from._internal_stringfield(), _this->GetArenaForAllocation());
  }
  _impl_.stringpiecefield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stringpiecefield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.stringpiecefield_.Set(from._internal_stringpiecefield(), _this->GetArenaForAllocation());
  }
  _impl_.cordfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cordfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.cordfield_.Set(from._internal_cordfield(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.messagefield_ = new ::protobuf_unittest::ForeignMessage(*from._impl_.messagefield_);
  }
  ::memcpy(&_impl_.primitivefield_, &from._impl_.primitivefield_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.enumfield_) -
    reinterpret_cast<char*>(&_impl_.primitivefield_)) + sizeof(_impl_.enumfield_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCamelCaseFieldNames)
}
inline void TestCamelCaseFieldNames::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeatedprimitivefield_){arena},
      decltype(_impl_.repeatedstringfield_){arena},
      decltype(_impl_.repeatedenumfield_){arena},
      decltype(_impl_.repeatedmessagefield_){arena},
      decltype(_impl_.repeatedstringpiecefield_){arena},
      decltype(_impl_.repeatedcordfield_){arena},
      decltype(_impl_.stringfield_){},
      decltype(_impl_.stringpiecefield_){},
      decltype(_impl_.cordfield_){},
      decltype(_impl_.messagefield_){nullptr},
      decltype(_impl_.primitivefield_){0},
      decltype(_impl_.enumfield_){4},
  };
  _impl_.stringfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stringfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stringpiecefield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.stringpiecefield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cordfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cordfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestCamelCaseFieldNames::~TestCamelCaseFieldNames() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCamelCaseFieldNames)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestCamelCaseFieldNames::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeatedprimitivefield_.~RepeatedField();
  _internal_mutable_repeatedstringfield()->~RepeatedPtrField();
  _internal_mutable_repeatedenumfield()->~RepeatedField();
  _impl_.repeatedmessagefield_.~RepeatedPtrField();
  _internal_mutable_repeatedstringpiecefield()->~RepeatedPtrField();
  _internal_mutable_repeatedcordfield()->~RepeatedPtrField();
  _impl_.stringfield_.Destroy();
  _impl_.stringpiecefield_.Destroy();
  _impl_.cordfield_.Destroy();
  if (this != internal_default_instance()) delete _impl_.messagefield_;
}
void TestCamelCaseFieldNames::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestCamelCaseFieldNames::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestCamelCaseFieldNames)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeatedprimitivefield()->Clear();
  _internal_mutable_repeatedstringfield()->Clear();
  _internal_mutable_repeatedenumfield()->Clear();
  _internal_mutable_repeatedmessagefield()->Clear();
  _internal_mutable_repeatedstringpiecefield()->Clear();
  _internal_mutable_repeatedcordfield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.stringfield_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.stringpiecefield_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.cordfield_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.messagefield_ != nullptr);
      _impl_.messagefield_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    _impl_.primitivefield_ = 0;
    _impl_.enumfield_ = 4;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestCamelCaseFieldNames::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 4, 154, 2> TestCamelCaseFieldNames::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestCamelCaseFieldNames_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 PrimitiveField = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestCamelCaseFieldNames, _impl_.primitivefield_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.primitivefield_)}},
    // optional string StringField = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.stringfield_)}},
    // optional .protobuf_unittest.ForeignEnum EnumField = 3;
    {::_pbi::TcParser::FastErS1,
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.enumfield_)}},
    // optional .protobuf_unittest.ForeignMessage MessageField = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.messagefield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string CordField = 6 [ctype = CORD];
    {::_pbi::TcParser::FastScS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.cordfield_)}},
    // repeated int32 RepeatedPrimitiveField = 7;
    {::_pbi::TcParser::FastV32R1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedprimitivefield_)}},
    // repeated string RepeatedStringField = 8;
    {::_pbi::TcParser::FastSR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedstringfield_)}},
    // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
    {::_pbi::TcParser::FastErR1,
     {72, 63, 2, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedenumfield_)}},
    // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 3, PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedmessagefield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 PrimitiveField = 1;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.primitivefield_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string StringField = 2;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.stringfield_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.ForeignEnum EnumField = 3;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.enumfield_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest.ForeignMessage MessageField = 4;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.messagefield_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string StringPieceField = 5 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.stringpiecefield_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string CordField = 6 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.cordfield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated int32 RepeatedPrimitiveField = 7;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedprimitivefield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated string RepeatedStringField = 8;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedstringfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedenumfield_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedmessagefield_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedstringpiecefield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string RepeatedCordField = 12 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.repeatedcordfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {4, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
    {4, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
  }}, {{
    "\51\0\13\0\0\20\11\0\23\0\0\30\21\0\0\0"
    "protobuf_unittest.TestCamelCaseFieldNames"
    "StringField"
    "StringPieceField"
    "CordField"
    "RepeatedStringField"
    "RepeatedStringPieceField"
    "RepeatedCordField"
  }},
};

::uint8_t* TestCamelCaseFieldNames::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCamelCaseFieldNames)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 PrimitiveField = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_primitivefield(), target);
  }

  // optional string StringField = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_stringfield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.StringField");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .protobuf_unittest.ForeignEnum EnumField = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_enumfield(), target);
  }

  // optional .protobuf_unittest.ForeignMessage MessageField = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::messagefield(this),
        _Internal::messagefield(this).GetCachedSize(), target, stream);
  }

  // optional string StringPieceField = 5 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_stringpiecefield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.StringPieceField");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string CordField = 6 [ctype = CORD];
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_cordfield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.CordField");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // repeated int32 RepeatedPrimitiveField = 7;
  for (int i = 0, n = this->_internal_repeatedprimitivefield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        7, this->_internal_repeatedprimitivefield().Get(i), target);
  }

  // repeated string RepeatedStringField = 8;
  for (int i = 0, n = this->_internal_repeatedstringfield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeatedstringfield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringField");
    target = stream->WriteString(8, s, target);
  }

  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  for (int i = 0, n = this->_internal_repeatedenumfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, static_cast<::protobuf_unittest::ForeignEnum>(this->_internal_repeatedenumfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeatedmessagefield_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeatedmessagefield().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  for (int i = 0, n = this->_internal_repeatedstringpiecefield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeatedstringpiecefield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.RepeatedStringPieceField");
    target = stream->WriteString(11, s, target);
  }

  // repeated string RepeatedCordField = 12 [ctype = CORD];
  for (int i = 0, n = this->_internal_repeatedcordfield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeatedcordfield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCamelCaseFieldNames.RepeatedCordField");
    target = stream->WriteString(12, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCamelCaseFieldNames)
  return target;
}

::size_t TestCamelCaseFieldNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestCamelCaseFieldNames)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 RepeatedPrimitiveField = 7;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeatedprimitivefield())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeatedprimitivefield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated string RepeatedStringField = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeatedstringfield().size());
  for (int i = 0, n = _internal_repeatedstringfield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeatedstringfield().Get(i));
  }
  // repeated .protobuf_unittest.ForeignEnum RepeatedEnumField = 9;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeatedenumfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeatedenumfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .protobuf_unittest.ForeignMessage RepeatedMessageField = 10;
  total_size += 1UL * this->_internal_repeatedmessagefield_size();
  for (const auto& msg : this->_internal_repeatedmessagefield()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string RepeatedStringPieceField = 11 [ctype = STRING_PIECE];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeatedstringpiecefield().size());
  for (int i = 0, n = _internal_repeatedstringpiecefield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeatedstringpiecefield().Get(i));
  }
  // repeated string RepeatedCordField = 12 [ctype = CORD];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeatedcordfield().size());
  for (int i = 0, n = _internal_repeatedcordfield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeatedcordfield().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string StringField = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stringfield());
    }

    // optional string StringPieceField = 5 [ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stringpiecefield());
    }

    // optional string CordField = 6 [ctype = CORD];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cordfield());
    }

    // optional .protobuf_unittest.ForeignMessage MessageField = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.messagefield_);
    }

    // optional int32 PrimitiveField = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_primitivefield());
    }

    // optional .protobuf_unittest.ForeignEnum EnumField = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_enumfield());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestCamelCaseFieldNames::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestCamelCaseFieldNames::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestCamelCaseFieldNames::GetClassData() const { return &_class_data_; }


void TestCamelCaseFieldNames::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestCamelCaseFieldNames*>(&to_msg);
  auto& from = static_cast<const TestCamelCaseFieldNames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeatedprimitivefield()->MergeFrom(from._internal_repeatedprimitivefield());
  _this->_internal_mutable_repeatedstringfield()->MergeFrom(from._internal_repeatedstringfield());
  _this->_internal_mutable_repeatedenumfield()->MergeFrom(from._internal_repeatedenumfield());
  _this->_internal_mutable_repeatedmessagefield()->MergeFrom(from._internal_repeatedmessagefield());
  _this->_internal_mutable_repeatedstringpiecefield()->MergeFrom(from._internal_repeatedstringpiecefield());
  _this->_internal_mutable_repeatedcordfield()->MergeFrom(from._internal_repeatedcordfield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_stringfield(from._internal_stringfield());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_stringpiecefield(from._internal_stringpiecefield());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_cordfield(from._internal_cordfield());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_messagefield()->::protobuf_unittest::ForeignMessage::MergeFrom(
          from._internal_messagefield());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.primitivefield_ = from._impl_.primitivefield_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.enumfield_ = from._impl_.enumfield_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestCamelCaseFieldNames::CopyFrom(const TestCamelCaseFieldNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestCamelCaseFieldNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestCamelCaseFieldNames::IsInitialized() const {
  return true;
}

void TestCamelCaseFieldNames::InternalSwap(TestCamelCaseFieldNames* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeatedprimitivefield_.InternalSwap(&other->_impl_.repeatedprimitivefield_);
  _impl_.repeatedstringfield_.InternalSwap(&other->_impl_.repeatedstringfield_);
  _impl_.repeatedenumfield_.InternalSwap(&other->_impl_.repeatedenumfield_);
  _impl_.repeatedmessagefield_.InternalSwap(&other->_impl_.repeatedmessagefield_);
  _impl_.repeatedstringpiecefield_.InternalSwap(&other->_impl_.repeatedstringpiecefield_);
  _impl_.repeatedcordfield_.InternalSwap(&other->_impl_.repeatedcordfield_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stringfield_, lhs_arena,
                                       &other->_impl_.stringfield_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stringpiecefield_, lhs_arena,
                                       &other->_impl_.stringpiecefield_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cordfield_, lhs_arena,
                                       &other->_impl_.cordfield_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.enumfield_)
      + sizeof(TestCamelCaseFieldNames::_impl_.enumfield_)
      - PROTOBUF_FIELD_OFFSET(TestCamelCaseFieldNames, _impl_.messagefield_)>(
          reinterpret_cast<char*>(&_impl_.messagefield_),
          reinterpret_cast<char*>(&other->_impl_.messagefield_));
}

::google::protobuf::Metadata TestCamelCaseFieldNames::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[55]);
}
// ===================================================================

class TestFieldOrderings_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestFieldOrderings_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_._has_bits_);
  static void set_has_oo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
}
TestFieldOrderings_NestedMessage::TestFieldOrderings_NestedMessage(const TestFieldOrderings_NestedMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
}
inline void TestFieldOrderings_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.oo_){::int64_t{0}},
      decltype(_impl_.bb_){0},
  };
}
TestFieldOrderings_NestedMessage::~TestFieldOrderings_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestFieldOrderings.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestFieldOrderings_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestFieldOrderings_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestFieldOrderings_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.oo_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bb_) -
        reinterpret_cast<char*>(&_impl_.oo_)) + sizeof(_impl_.bb_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestFieldOrderings_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TestFieldOrderings_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestFieldOrderings_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int64 oo = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestFieldOrderings_NestedMessage, _impl_.oo_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.oo_)}},
    // optional int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestFieldOrderings_NestedMessage, _impl_.bb_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.bb_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 oo = 2;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.oo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestFieldOrderings_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bb = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bb(), target);
  }

  // optional int64 oo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_oo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestFieldOrderings.NestedMessage)
  return target;
}

::size_t TestFieldOrderings_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 oo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_oo());
    }

    // optional int32 bb = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bb());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestFieldOrderings_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestFieldOrderings_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestFieldOrderings_NestedMessage::GetClassData() const { return &_class_data_; }


void TestFieldOrderings_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestFieldOrderings_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestFieldOrderings_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.oo_ = from._impl_.oo_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bb_ = from._impl_.bb_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestFieldOrderings_NestedMessage::CopyFrom(const TestFieldOrderings_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestFieldOrderings.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestFieldOrderings_NestedMessage::IsInitialized() const {
  return true;
}

void TestFieldOrderings_NestedMessage::InternalSwap(TestFieldOrderings_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.bb_)
      + sizeof(TestFieldOrderings_NestedMessage::_impl_.bb_)
      - PROTOBUF_FIELD_OFFSET(TestFieldOrderings_NestedMessage, _impl_.oo_)>(
          reinterpret_cast<char*>(&_impl_.oo_),
          reinterpret_cast<char*>(&other->_impl_.oo_));
}

::google::protobuf::Metadata TestFieldOrderings_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[56]);
}
// ===================================================================

class TestFieldOrderings::_Internal {
 public:
  using HasBits = decltype(std::declval<TestFieldOrderings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_._has_bits_);
  static void set_has_my_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_my_int(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_my_float(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::protobuf_unittest::TestFieldOrderings_NestedMessage& optional_nested_message(const TestFieldOrderings* msg);
  static void set_has_optional_nested_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::TestFieldOrderings_NestedMessage& TestFieldOrderings::_Internal::optional_nested_message(const TestFieldOrderings* msg) {
  return *msg->_impl_.optional_nested_message_;
}
TestFieldOrderings::TestFieldOrderings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestFieldOrderings)
}
TestFieldOrderings::TestFieldOrderings(const TestFieldOrderings& from) : ::google::protobuf::Message() {
  TestFieldOrderings* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
      decltype(_impl_.optional_nested_message_){nullptr},
      decltype(_impl_.my_int_){},
      decltype(_impl_.my_float_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.my_string_.Set(from._internal_my_string(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_nested_message_ = new ::protobuf_unittest::TestFieldOrderings_NestedMessage(*from._impl_.optional_nested_message_);
  }
  ::memcpy(&_impl_.my_int_, &from._impl_.my_int_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.my_float_) -
    reinterpret_cast<char*>(&_impl_.my_int_)) + sizeof(_impl_.my_float_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestFieldOrderings)
}
inline void TestFieldOrderings::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
      decltype(_impl_.optional_nested_message_){nullptr},
      decltype(_impl_.my_int_){::int64_t{0}},
      decltype(_impl_.my_float_){0},
  };
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestFieldOrderings::~TestFieldOrderings() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestFieldOrderings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestFieldOrderings::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.my_string_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optional_nested_message_;
}
void TestFieldOrderings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestFieldOrderings::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestFieldOrderings)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.my_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.my_int_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.my_float_) -
        reinterpret_cast<char*>(&_impl_.my_int_)) + sizeof(_impl_.my_float_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestFieldOrderings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 54, 12> TestFieldOrderings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_._extensions_),
    200, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestFieldOrderings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
    {::_pbi::TcParser::FastMtS2,
     {3266, 1, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.optional_nested_message_)}},
    // optional int64 my_int = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestFieldOrderings, _impl_.my_int_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_int_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string my_string = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_string_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float my_float = 101;
    {::_pbi::TcParser::FastF32S2,
     {1709, 3, 0, PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_float_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    101, 0, 1,
    65534, 2,200, 0, 1,
     65534, 3,
    65535, 65535
  }}, {{
    // optional int64 my_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_int_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string my_string = 11;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float my_float = 101;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_float_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
    {PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestFieldOrderings_NestedMessage>()},
  }}, {{
    "\44\0\11\0\0\0\0\0"
    "protobuf_unittest.TestFieldOrderings"
    "my_string"
  }},
};

::uint8_t* TestFieldOrderings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestFieldOrderings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 my_int = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_my_int(), target);
  }

  // Extension range [2, 11)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2, 11, target, stream);
  // optional string my_string = 11;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_my_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestFieldOrderings.my_string");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // Extension range [12, 101)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 12, 101, target, stream);
  // optional float my_float = 101;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        101, this->_internal_my_float(), target);
  }

  // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(200, _Internal::optional_nested_message(this),
        _Internal::optional_nested_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestFieldOrderings)
  return target;
}

::size_t TestFieldOrderings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestFieldOrderings)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string my_string = 11;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_my_string());
    }

    // optional .protobuf_unittest.TestFieldOrderings.NestedMessage optional_nested_message = 200;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_nested_message_);
    }

    // optional int64 my_int = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_my_int());
    }

    // optional float my_float = 101;
    if (cached_has_bits & 0x00000008u) {
      total_size += 6;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestFieldOrderings::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestFieldOrderings::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestFieldOrderings::GetClassData() const { return &_class_data_; }


void TestFieldOrderings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestFieldOrderings*>(&to_msg);
  auto& from = static_cast<const TestFieldOrderings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestFieldOrderings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_my_string(from._internal_my_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional_nested_message()->::protobuf_unittest::TestFieldOrderings_NestedMessage::MergeFrom(
          from._internal_optional_nested_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.my_int_ = from._impl_.my_int_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.my_float_ = from._impl_.my_float_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestFieldOrderings::CopyFrom(const TestFieldOrderings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestFieldOrderings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestFieldOrderings::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestFieldOrderings::InternalSwap(TestFieldOrderings* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_string_, lhs_arena,
                                       &other->_impl_.my_string_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.my_float_)
      + sizeof(TestFieldOrderings::_impl_.my_float_)
      - PROTOBUF_FIELD_OFFSET(TestFieldOrderings, _impl_.optional_nested_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_nested_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_nested_message_));
}

::google::protobuf::Metadata TestFieldOrderings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[57]);
}
// ===================================================================

class TestExtensionOrderings1::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtensionOrderings1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtensionOrderings1, _impl_._has_bits_);
  static void set_has_my_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestExtensionOrderings1::TestExtensionOrderings1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtensionOrderings1)
}
TestExtensionOrderings1::TestExtensionOrderings1(const TestExtensionOrderings1& from) : ::google::protobuf::Message() {
  TestExtensionOrderings1* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.my_string_.Set(from._internal_my_string(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtensionOrderings1)
}
inline void TestExtensionOrderings1::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestExtensionOrderings1::~TestExtensionOrderings1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtensionOrderings1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtensionOrderings1::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_string_.Destroy();
}
void TestExtensionOrderings1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtensionOrderings1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtensionOrderings1)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.my_string_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtensionOrderings1::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> TestExtensionOrderings1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtensionOrderings1, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtensionOrderings1_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string my_string = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtensionOrderings1, _impl_.my_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string my_string = 1;
    {PROTOBUF_FIELD_OFFSET(TestExtensionOrderings1, _impl_.my_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\11\0\0\0\0\0\0"
    "protobuf_unittest.TestExtensionOrderings1"
    "my_string"
  }},
};

::uint8_t* TestExtensionOrderings1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtensionOrderings1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string my_string = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_my_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtensionOrderings1.my_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtensionOrderings1)
  return target;
}

::size_t TestExtensionOrderings1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtensionOrderings1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string my_string = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtensionOrderings1::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtensionOrderings1::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtensionOrderings1::GetClassData() const { return &_class_data_; }


void TestExtensionOrderings1::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtensionOrderings1*>(&to_msg);
  auto& from = static_cast<const TestExtensionOrderings1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtensionOrderings1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_my_string(from._internal_my_string());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtensionOrderings1::CopyFrom(const TestExtensionOrderings1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtensionOrderings1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtensionOrderings1::IsInitialized() const {
  return true;
}

void TestExtensionOrderings1::InternalSwap(TestExtensionOrderings1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_string_, lhs_arena,
                                       &other->_impl_.my_string_, rhs_arena);
}

::google::protobuf::Metadata TestExtensionOrderings1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[58]);
}
// ===================================================================

class TestExtensionOrderings2_TestExtensionOrderings3::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtensionOrderings2_TestExtensionOrderings3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2_TestExtensionOrderings3, _impl_._has_bits_);
  static void set_has_my_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestExtensionOrderings2_TestExtensionOrderings3::TestExtensionOrderings2_TestExtensionOrderings3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
}
TestExtensionOrderings2_TestExtensionOrderings3::TestExtensionOrderings2_TestExtensionOrderings3(const TestExtensionOrderings2_TestExtensionOrderings3& from) : ::google::protobuf::Message() {
  TestExtensionOrderings2_TestExtensionOrderings3* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.my_string_.Set(from._internal_my_string(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
}
inline void TestExtensionOrderings2_TestExtensionOrderings3::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestExtensionOrderings2_TestExtensionOrderings3::~TestExtensionOrderings2_TestExtensionOrderings3() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtensionOrderings2_TestExtensionOrderings3::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_string_.Destroy();
}
void TestExtensionOrderings2_TestExtensionOrderings3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtensionOrderings2_TestExtensionOrderings3::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.my_string_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtensionOrderings2_TestExtensionOrderings3::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 83, 2> TestExtensionOrderings2_TestExtensionOrderings3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2_TestExtensionOrderings3, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtensionOrderings2_TestExtensionOrderings3_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string my_string = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2_TestExtensionOrderings3, _impl_.my_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string my_string = 1;
    {PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2_TestExtensionOrderings3, _impl_.my_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\11\0\0\0\0\0\0"
    "protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3"
    "my_string"
  }},
};

::uint8_t* TestExtensionOrderings2_TestExtensionOrderings3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string my_string = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_my_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3.my_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  return target;
}

::size_t TestExtensionOrderings2_TestExtensionOrderings3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string my_string = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtensionOrderings2_TestExtensionOrderings3::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtensionOrderings2_TestExtensionOrderings3::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtensionOrderings2_TestExtensionOrderings3::GetClassData() const { return &_class_data_; }


void TestExtensionOrderings2_TestExtensionOrderings3::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtensionOrderings2_TestExtensionOrderings3*>(&to_msg);
  auto& from = static_cast<const TestExtensionOrderings2_TestExtensionOrderings3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_my_string(from._internal_my_string());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtensionOrderings2_TestExtensionOrderings3::CopyFrom(const TestExtensionOrderings2_TestExtensionOrderings3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtensionOrderings2_TestExtensionOrderings3::IsInitialized() const {
  return true;
}

void TestExtensionOrderings2_TestExtensionOrderings3::InternalSwap(TestExtensionOrderings2_TestExtensionOrderings3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_string_, lhs_arena,
                                       &other->_impl_.my_string_, rhs_arena);
}

::google::protobuf::Metadata TestExtensionOrderings2_TestExtensionOrderings3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[59]);
}
// ===================================================================

class TestExtensionOrderings2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtensionOrderings2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2, _impl_._has_bits_);
  static void set_has_my_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestExtensionOrderings2::TestExtensionOrderings2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtensionOrderings2)
}
TestExtensionOrderings2::TestExtensionOrderings2(const TestExtensionOrderings2& from) : ::google::protobuf::Message() {
  TestExtensionOrderings2* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.my_string_.Set(from._internal_my_string(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtensionOrderings2)
}
inline void TestExtensionOrderings2::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.my_string_){},
  };
  _impl_.my_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.my_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestExtensionOrderings2::~TestExtensionOrderings2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtensionOrderings2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtensionOrderings2::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.my_string_.Destroy();
}
void TestExtensionOrderings2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtensionOrderings2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtensionOrderings2)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.my_string_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtensionOrderings2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> TestExtensionOrderings2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtensionOrderings2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string my_string = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2, _impl_.my_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string my_string = 1;
    {PROTOBUF_FIELD_OFFSET(TestExtensionOrderings2, _impl_.my_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\11\0\0\0\0\0\0"
    "protobuf_unittest.TestExtensionOrderings2"
    "my_string"
  }},
};

::uint8_t* TestExtensionOrderings2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtensionOrderings2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string my_string = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_my_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtensionOrderings2.my_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtensionOrderings2)
  return target;
}

::size_t TestExtensionOrderings2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtensionOrderings2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string my_string = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_my_string());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtensionOrderings2::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtensionOrderings2::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtensionOrderings2::GetClassData() const { return &_class_data_; }


void TestExtensionOrderings2::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtensionOrderings2*>(&to_msg);
  auto& from = static_cast<const TestExtensionOrderings2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtensionOrderings2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_my_string(from._internal_my_string());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtensionOrderings2::CopyFrom(const TestExtensionOrderings2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtensionOrderings2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtensionOrderings2::IsInitialized() const {
  return true;
}

void TestExtensionOrderings2::InternalSwap(TestExtensionOrderings2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.my_string_, lhs_arena,
                                       &other->_impl_.my_string_, rhs_arena);
}

::google::protobuf::Metadata TestExtensionOrderings2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[60]);
}
// ===================================================================

class TestExtremeDefaultValues::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtremeDefaultValues>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_._has_bits_);
  static void set_has_escaped_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_large_uint32(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_large_uint64(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_small_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_small_int64(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_really_small_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_really_small_int64(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_utf8_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_zero_float(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_one_float(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_small_float(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_negative_one_float(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_negative_float(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_large_float(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_small_negative_float(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_inf_double(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_neg_inf_double(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_nan_double(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_inf_float(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_neg_inf_float(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_nan_float(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_cpp_trigraph(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_string_with_zero(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_bytes_with_zero(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_string_piece_with_zero(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cord_with_zero(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_replacement_string(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_escaped_bytes_{
    {{"\000\001\007\010\014\n\r\t\013\\\'\"\376", 13}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_utf8_string_{
    {{"\341\210\264", 3}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cpp_trigraph_{
    {{"\? \? \?\? \?\? \?\?\? \?\?/ \?\?-", 21}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_with_zero_{
    {{"hel\000lo", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_bytes_with_zero_{
    {{"wor\000ld", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_piece_with_zero_{
    {{"ab\000c", 4}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cord_with_zero_{
    {{"12\0003", 4}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_replacement_string_{
    {{"${unknown}", 10}},
    {nullptr},
};
TestExtremeDefaultValues::TestExtremeDefaultValues(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtremeDefaultValues)
}
TestExtremeDefaultValues::TestExtremeDefaultValues(const TestExtremeDefaultValues& from) : ::google::protobuf::Message() {
  TestExtremeDefaultValues* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.escaped_bytes_){},
      decltype(_impl_.utf8_string_){},
      decltype(_impl_.cpp_trigraph_){},
      decltype(_impl_.string_with_zero_){},
      decltype(_impl_.bytes_with_zero_){},
      decltype(_impl_.string_piece_with_zero_){},
      decltype(_impl_.cord_with_zero_){},
      decltype(_impl_.replacement_string_){},
      decltype(_impl_.zero_float_){},
      decltype(_impl_.large_uint64_){},
      decltype(_impl_.large_uint32_){},
      decltype(_impl_.small_int32_){},
      decltype(_impl_.small_int64_){},
      decltype(_impl_.one_float_){},
      decltype(_impl_.small_float_){},
      decltype(_impl_.negative_one_float_){},
      decltype(_impl_.negative_float_){},
      decltype(_impl_.large_float_){},
      decltype(_impl_.small_negative_float_){},
      decltype(_impl_.inf_double_){},
      decltype(_impl_.neg_inf_double_){},
      decltype(_impl_.nan_double_){},
      decltype(_impl_.inf_float_){},
      decltype(_impl_.neg_inf_float_){},
      decltype(_impl_.nan_float_){},
      decltype(_impl_.really_small_int32_){},
      decltype(_impl_.really_small_int64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.escaped_bytes_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.escaped_bytes_.Set(from._internal_escaped_bytes(), _this->GetArenaForAllocation());
  }
  _impl_.utf8_string_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.utf8_string_.Set(from._internal_utf8_string(), _this->GetArenaForAllocation());
  }
  _impl_.cpp_trigraph_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.cpp_trigraph_.Set(from._internal_cpp_trigraph(), _this->GetArenaForAllocation());
  }
  _impl_.string_with_zero_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.string_with_zero_.Set(from._internal_string_with_zero(), _this->GetArenaForAllocation());
  }
  _impl_.bytes_with_zero_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.bytes_with_zero_.Set(from._internal_bytes_with_zero(), _this->GetArenaForAllocation());
  }
  _impl_.string_piece_with_zero_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.string_piece_with_zero_.Set(from._internal_string_piece_with_zero(), _this->GetArenaForAllocation());
  }
  _impl_.cord_with_zero_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.cord_with_zero_.Set(from._internal_cord_with_zero(), _this->GetArenaForAllocation());
  }
  _impl_.replacement_string_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.replacement_string_.Set(from._internal_replacement_string(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.zero_float_, &from._impl_.zero_float_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.really_small_int64_) -
    reinterpret_cast<char*>(&_impl_.zero_float_)) + sizeof(_impl_.really_small_int64_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtremeDefaultValues)
}
inline void TestExtremeDefaultValues::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.escaped_bytes_){},
      decltype(_impl_.utf8_string_){},
      decltype(_impl_.cpp_trigraph_){},
      decltype(_impl_.string_with_zero_){},
      decltype(_impl_.bytes_with_zero_){},
      decltype(_impl_.string_piece_with_zero_){},
      decltype(_impl_.cord_with_zero_){},
      decltype(_impl_.replacement_string_){},
      decltype(_impl_.zero_float_){0},
      decltype(_impl_.large_uint64_){::uint64_t{18446744073709551615u}},
      decltype(_impl_.large_uint32_){4294967295u},
      decltype(_impl_.small_int32_){-2147483647},
      decltype(_impl_.small_int64_){::int64_t{-9223372036854775807}},
      decltype(_impl_.one_float_){1},
      decltype(_impl_.small_float_){1.5f},
      decltype(_impl_.negative_one_float_){-1},
      decltype(_impl_.negative_float_){-1.5f},
      decltype(_impl_.large_float_){2e+08f},
      decltype(_impl_.small_negative_float_){-8e-28f},
      decltype(_impl_.inf_double_){std::numeric_limits<double>::infinity()},
      decltype(_impl_.neg_inf_double_){-std::numeric_limits<double>::infinity()},
      decltype(_impl_.nan_double_){std::numeric_limits<double>::quiet_NaN()},
      decltype(_impl_.inf_float_){std::numeric_limits<float>::infinity()},
      decltype(_impl_.neg_inf_float_){-std::numeric_limits<float>::infinity()},
      decltype(_impl_.nan_float_){std::numeric_limits<float>::quiet_NaN()},
      decltype(_impl_.really_small_int32_){-2147483647 - 1},
      decltype(_impl_.really_small_int64_){::int64_t{-9223372036854775807} - 1},
  };
  _impl_.escaped_bytes_.InitDefault();
  _impl_.utf8_string_.InitDefault();
  _impl_.cpp_trigraph_.InitDefault();
  _impl_.string_with_zero_.InitDefault();
  _impl_.bytes_with_zero_.InitDefault();
  _impl_.string_piece_with_zero_.InitDefault();
  _impl_.cord_with_zero_.InitDefault();
  _impl_.replacement_string_.InitDefault();
}
TestExtremeDefaultValues::~TestExtremeDefaultValues() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtremeDefaultValues)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtremeDefaultValues::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.escaped_bytes_.Destroy();
  _impl_.utf8_string_.Destroy();
  _impl_.cpp_trigraph_.Destroy();
  _impl_.string_with_zero_.Destroy();
  _impl_.bytes_with_zero_.Destroy();
  _impl_.string_piece_with_zero_.Destroy();
  _impl_.cord_with_zero_.Destroy();
  _impl_.replacement_string_.Destroy();
}
void TestExtremeDefaultValues::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtremeDefaultValues::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtremeDefaultValues)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.escaped_bytes_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_escaped_bytes_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.utf8_string_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_utf8_string_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.cpp_trigraph_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cpp_trigraph_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.string_with_zero_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_with_zero_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.bytes_with_zero_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_bytes_with_zero_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.string_piece_with_zero_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_string_piece_with_zero_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.cord_with_zero_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_cord_with_zero_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.replacement_string_.ClearToDefault(::protobuf_unittest::TestExtremeDefaultValues::Impl_::_i_give_permission_to_break_this_code_default_replacement_string_, GetArenaForAllocation());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    _impl_.zero_float_ = 0;
    _impl_.large_uint64_ = ::uint64_t{18446744073709551615u};
    _impl_.large_uint32_ = 4294967295u;
    _impl_.small_int32_ = -2147483647;
    _impl_.small_int64_ = ::int64_t{-9223372036854775807};
    _impl_.one_float_ = 1;
    _impl_.small_float_ = 1.5f;
    _impl_.negative_one_float_ = -1;
  }
  if (cached_has_bits & 0x00ff0000u) {
    _impl_.negative_float_ = -1.5f;
    _impl_.large_float_ = 2e+08f;
    _impl_.small_negative_float_ = -8e-28f;
    _impl_.inf_double_ = std::numeric_limits<double>::infinity();
    _impl_.neg_inf_double_ = -std::numeric_limits<double>::infinity();
    _impl_.nan_double_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.inf_float_ = std::numeric_limits<float>::infinity();
    _impl_.neg_inf_float_ = -std::numeric_limits<float>::infinity();
  }
  if (cached_has_bits & 0x07000000u) {
    _impl_.nan_float_ = std::numeric_limits<float>::quiet_NaN();
    _impl_.really_small_int32_ = -2147483647 - 1;
    _impl_.really_small_int64_ = ::int64_t{-9223372036854775807} - 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtremeDefaultValues::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 0, 168, 2> TestExtremeDefaultValues::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_._has_bits_),
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtremeDefaultValues_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.escaped_bytes_)}},
    // optional uint32 large_uint32 = 2 [default = 4294967295];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtremeDefaultValues, _impl_.large_uint32_), 10>(),
     {16, 10, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_uint32_)}},
    // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestExtremeDefaultValues, _impl_.large_uint64_), 9>(),
     {24, 9, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_uint64_)}},
    // optional int32 small_int32 = 4 [default = -2147483647];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtremeDefaultValues, _impl_.small_int32_), 11>(),
     {32, 11, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_int32_)}},
    // optional int64 small_int64 = 5 [default = -9223372036854775807];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestExtremeDefaultValues, _impl_.small_int64_), 12>(),
     {40, 12, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_int64_)}},
    // optional string utf8_string = 6 [default = "\341\210\264"];
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.utf8_string_)}},
    // optional float zero_float = 7 [default = 0];
    {::_pbi::TcParser::FastF32S1,
     {61, 8, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.zero_float_)}},
    // optional float one_float = 8 [default = 1];
    {::_pbi::TcParser::FastF32S1,
     {69, 13, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.one_float_)}},
    // optional float small_float = 9 [default = 1.5];
    {::_pbi::TcParser::FastF32S1,
     {77, 14, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_float_)}},
    // optional float negative_one_float = 10 [default = -1];
    {::_pbi::TcParser::FastF32S1,
     {85, 15, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.negative_one_float_)}},
    // optional float negative_float = 11 [default = -1.5];
    {::_pbi::TcParser::FastF32S1,
     {93, 16, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.negative_float_)}},
    // optional float large_float = 12 [default = 2e+08];
    {::_pbi::TcParser::FastF32S1,
     {101, 17, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_float_)}},
    // optional float small_negative_float = 13 [default = -8e-28];
    {::_pbi::TcParser::FastF32S1,
     {109, 18, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_negative_float_)}},
    // optional double inf_double = 14 [default = inf];
    {::_pbi::TcParser::FastF64S1,
     {113, 19, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.inf_double_)}},
    // optional double neg_inf_double = 15 [default = -inf];
    {::_pbi::TcParser::FastF64S1,
     {121, 20, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.neg_inf_double_)}},
    // optional double nan_double = 16 [default = nan];
    {::_pbi::TcParser::FastF64S2,
     {385, 21, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.nan_double_)}},
    // optional float inf_float = 17 [default = inf];
    {::_pbi::TcParser::FastF32S2,
     {397, 22, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.inf_float_)}},
    // optional float neg_inf_float = 18 [default = -inf];
    {::_pbi::TcParser::FastF32S2,
     {405, 23, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.neg_inf_float_)}},
    // optional float nan_float = 19 [default = nan];
    {::_pbi::TcParser::FastF32S2,
     {413, 24, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.nan_float_)}},
    // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
    {::_pbi::TcParser::FastSS2,
     {418, 2, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.cpp_trigraph_)}},
    // optional int32 really_small_int32 = 21 [default = -2147483648];
    {::_pbi::TcParser::FastV32S2,
     {424, 25, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.really_small_int32_)}},
    // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
    {::_pbi::TcParser::FastV64S2,
     {432, 26, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.really_small_int64_)}},
    // optional string string_with_zero = 23 [default = "hel\000lo"];
    {::_pbi::TcParser::FastSS2,
     {442, 3, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.string_with_zero_)}},
    // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
    {::_pbi::TcParser::FastBS2,
     {450, 4, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.bytes_with_zero_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
    {::_pbi::TcParser::FastScS2,
     {466, 6, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.cord_with_zero_)}},
    // optional string replacement_string = 27 [default = "${unknown}"];
    {::_pbi::TcParser::FastSS2,
     {474, 7, 0, PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.replacement_string_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.escaped_bytes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 large_uint32 = 2 [default = 4294967295];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_uint32_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_uint64_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 small_int32 = 4 [default = -2147483647];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_int32_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 small_int64 = 5 [default = -9223372036854775807];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_int64_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string utf8_string = 6 [default = "\341\210\264"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.utf8_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float zero_float = 7 [default = 0];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.zero_float_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float one_float = 8 [default = 1];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.one_float_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float small_float = 9 [default = 1.5];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_float_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float negative_one_float = 10 [default = -1];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.negative_one_float_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float negative_float = 11 [default = -1.5];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.negative_float_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float large_float = 12 [default = 2e+08];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.large_float_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float small_negative_float = 13 [default = -8e-28];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.small_negative_float_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double inf_double = 14 [default = inf];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.inf_double_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double neg_inf_double = 15 [default = -inf];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.neg_inf_double_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double nan_double = 16 [default = nan];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.nan_double_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional float inf_float = 17 [default = inf];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.inf_float_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float neg_inf_float = 18 [default = -inf];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.neg_inf_float_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float nan_float = 19 [default = nan];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.nan_float_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.cpp_trigraph_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 really_small_int32 = 21 [default = -2147483648];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.really_small_int32_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.really_small_int64_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string string_with_zero = 23 [default = "hel\000lo"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.string_with_zero_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.bytes_with_zero_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.string_piece_with_zero_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.cord_with_zero_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string replacement_string = 27 [default = "${unknown}"];
    {PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.replacement_string_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\0\0\0\0\13\0\0\0\0\0\0\0\0\0\0\0\0\0\14\0\0\20\0\26\16\22\0\0\0\0"
    "protobuf_unittest.TestExtremeDefaultValues"
    "utf8_string"
    "cpp_trigraph"
    "string_with_zero"
    "string_piece_with_zero"
    "cord_with_zero"
    "replacement_string"
  }},
};

::uint8_t* TestExtremeDefaultValues::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtremeDefaultValues)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_escaped_bytes();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional uint32 large_uint32 = 2 [default = 4294967295];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_large_uint32(), target);
  }

  // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_large_uint64(), target);
  }

  // optional int32 small_int32 = 4 [default = -2147483647];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_small_int32(), target);
  }

  // optional int64 small_int64 = 5 [default = -9223372036854775807];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_small_int64(), target);
  }

  // optional string utf8_string = 6 [default = "\341\210\264"];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_utf8_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.utf8_string");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional float zero_float = 7 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_zero_float(), target);
  }

  // optional float one_float = 8 [default = 1];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_one_float(), target);
  }

  // optional float small_float = 9 [default = 1.5];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_small_float(), target);
  }

  // optional float negative_one_float = 10 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_negative_one_float(), target);
  }

  // optional float negative_float = 11 [default = -1.5];
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_negative_float(), target);
  }

  // optional float large_float = 12 [default = 2e+08];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        12, this->_internal_large_float(), target);
  }

  // optional float small_negative_float = 13 [default = -8e-28];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_small_negative_float(), target);
  }

  // optional double inf_double = 14 [default = inf];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        14, this->_internal_inf_double(), target);
  }

  // optional double neg_inf_double = 15 [default = -inf];
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        15, this->_internal_neg_inf_double(), target);
  }

  // optional double nan_double = 16 [default = nan];
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        16, this->_internal_nan_double(), target);
  }

  // optional float inf_float = 17 [default = inf];
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        17, this->_internal_inf_float(), target);
  }

  // optional float neg_inf_float = 18 [default = -inf];
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        18, this->_internal_neg_inf_float(), target);
  }

  // optional float nan_float = 19 [default = nan];
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        19, this->_internal_nan_float(), target);
  }

  // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_cpp_trigraph();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.cpp_trigraph");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // optional int32 really_small_int32 = 21 [default = -2147483648];
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        21, this->_internal_really_small_int32(), target);
  }

  // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        22, this->_internal_really_small_int64(), target);
  }

  // optional string string_with_zero = 23 [default = "hel\000lo"];
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_string_with_zero();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.string_with_zero");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_bytes_with_zero();
    target = stream->WriteBytesMaybeAliased(24, _s, target);
  }

  // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_string_piece_with_zero();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.string_piece_with_zero");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_cord_with_zero();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.cord_with_zero");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  // optional string replacement_string = 27 [default = "${unknown}"];
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_replacement_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestExtremeDefaultValues.replacement_string");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtremeDefaultValues)
  return target;
}

::size_t TestExtremeDefaultValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtremeDefaultValues)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes escaped_bytes = 1 [default = "\000\001\007\010\014\n\r\t\013\\\'\"\376"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_escaped_bytes());
    }

    // optional string utf8_string = 6 [default = "\341\210\264"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_utf8_string());
    }

    // optional string cpp_trigraph = 20 [default = "? ? ?? ?? ??? ??/ ??-"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cpp_trigraph());
    }

    // optional string string_with_zero = 23 [default = "hel\000lo"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_string_with_zero());
    }

    // optional bytes bytes_with_zero = 24 [default = "wor\000ld"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bytes_with_zero());
    }

    // optional string string_piece_with_zero = 25 [default = "ab\000c", ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_string_piece_with_zero());
    }

    // optional string cord_with_zero = 26 [default = "12\0003", ctype = CORD];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cord_with_zero());
    }

    // optional string replacement_string = 27 [default = "${unknown}"];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_replacement_string());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional float zero_float = 7 [default = 0];
    if (cached_has_bits & 0x00000100u) {
      total_size += 5;
    }

    // optional uint64 large_uint64 = 3 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_large_uint64());
    }

    // optional uint32 large_uint32 = 2 [default = 4294967295];
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_large_uint32());
    }

    // optional int32 small_int32 = 4 [default = -2147483647];
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_small_int32());
    }

    // optional int64 small_int64 = 5 [default = -9223372036854775807];
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_small_int64());
    }

    // optional float one_float = 8 [default = 1];
    if (cached_has_bits & 0x00002000u) {
      total_size += 5;
    }

    // optional float small_float = 9 [default = 1.5];
    if (cached_has_bits & 0x00004000u) {
      total_size += 5;
    }

    // optional float negative_one_float = 10 [default = -1];
    if (cached_has_bits & 0x00008000u) {
      total_size += 5;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional float negative_float = 11 [default = -1.5];
    if (cached_has_bits & 0x00010000u) {
      total_size += 5;
    }

    // optional float large_float = 12 [default = 2e+08];
    if (cached_has_bits & 0x00020000u) {
      total_size += 5;
    }

    // optional float small_negative_float = 13 [default = -8e-28];
    if (cached_has_bits & 0x00040000u) {
      total_size += 5;
    }

    // optional double inf_double = 14 [default = inf];
    if (cached_has_bits & 0x00080000u) {
      total_size += 9;
    }

    // optional double neg_inf_double = 15 [default = -inf];
    if (cached_has_bits & 0x00100000u) {
      total_size += 9;
    }

    // optional double nan_double = 16 [default = nan];
    if (cached_has_bits & 0x00200000u) {
      total_size += 10;
    }

    // optional float inf_float = 17 [default = inf];
    if (cached_has_bits & 0x00400000u) {
      total_size += 6;
    }

    // optional float neg_inf_float = 18 [default = -inf];
    if (cached_has_bits & 0x00800000u) {
      total_size += 6;
    }

  }
  if (cached_has_bits & 0x07000000u) {
    // optional float nan_float = 19 [default = nan];
    if (cached_has_bits & 0x01000000u) {
      total_size += 6;
    }

    // optional int32 really_small_int32 = 21 [default = -2147483648];
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_really_small_int32());
    }

    // optional int64 really_small_int64 = 22 [default = -9223372036854775808];
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_really_small_int64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtremeDefaultValues::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtremeDefaultValues::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtremeDefaultValues::GetClassData() const { return &_class_data_; }


void TestExtremeDefaultValues::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtremeDefaultValues*>(&to_msg);
  auto& from = static_cast<const TestExtremeDefaultValues&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtremeDefaultValues)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_escaped_bytes(from._internal_escaped_bytes());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_utf8_string(from._internal_utf8_string());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_cpp_trigraph(from._internal_cpp_trigraph());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_string_with_zero(from._internal_string_with_zero());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_bytes_with_zero(from._internal_bytes_with_zero());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_string_piece_with_zero(from._internal_string_piece_with_zero());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_cord_with_zero(from._internal_cord_with_zero());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_replacement_string(from._internal_replacement_string());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.zero_float_ = from._impl_.zero_float_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.large_uint64_ = from._impl_.large_uint64_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.large_uint32_ = from._impl_.large_uint32_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.small_int32_ = from._impl_.small_int32_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.small_int64_ = from._impl_.small_int64_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.one_float_ = from._impl_.one_float_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.small_float_ = from._impl_.small_float_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.negative_one_float_ = from._impl_.negative_one_float_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.negative_float_ = from._impl_.negative_float_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.large_float_ = from._impl_.large_float_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.small_negative_float_ = from._impl_.small_negative_float_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.inf_double_ = from._impl_.inf_double_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.neg_inf_double_ = from._impl_.neg_inf_double_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.nan_double_ = from._impl_.nan_double_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.inf_float_ = from._impl_.inf_float_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.neg_inf_float_ = from._impl_.neg_inf_float_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x07000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.nan_float_ = from._impl_.nan_float_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.really_small_int32_ = from._impl_.really_small_int32_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.really_small_int64_ = from._impl_.really_small_int64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtremeDefaultValues::CopyFrom(const TestExtremeDefaultValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtremeDefaultValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtremeDefaultValues::IsInitialized() const {
  return true;
}

void TestExtremeDefaultValues::InternalSwap(TestExtremeDefaultValues* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escaped_bytes_, lhs_arena,
                                       &other->_impl_.escaped_bytes_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.utf8_string_, lhs_arena,
                                       &other->_impl_.utf8_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cpp_trigraph_, lhs_arena,
                                       &other->_impl_.cpp_trigraph_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_with_zero_, lhs_arena,
                                       &other->_impl_.string_with_zero_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bytes_with_zero_, lhs_arena,
                                       &other->_impl_.bytes_with_zero_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_piece_with_zero_, lhs_arena,
                                       &other->_impl_.string_piece_with_zero_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cord_with_zero_, lhs_arena,
                                       &other->_impl_.cord_with_zero_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.replacement_string_, lhs_arena,
                                       &other->_impl_.replacement_string_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.really_small_int64_)
      + sizeof(TestExtremeDefaultValues::_impl_.really_small_int64_)
      - PROTOBUF_FIELD_OFFSET(TestExtremeDefaultValues, _impl_.zero_float_)>(
          reinterpret_cast<char*>(&_impl_.zero_float_),
          reinterpret_cast<char*>(&other->_impl_.zero_float_));
}

::google::protobuf::Metadata TestExtremeDefaultValues::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[61]);
}
// ===================================================================

class SparseEnumMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<SparseEnumMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SparseEnumMessage, _impl_._has_bits_);
  static void set_has_sparse_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SparseEnumMessage::SparseEnumMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.SparseEnumMessage)
}
SparseEnumMessage::SparseEnumMessage(const SparseEnumMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.SparseEnumMessage)
}
inline void SparseEnumMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.sparse_enum_){123},
  };
}
SparseEnumMessage::~SparseEnumMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.SparseEnumMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SparseEnumMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SparseEnumMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SparseEnumMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.SparseEnumMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sparse_enum_ = 123;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SparseEnumMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SparseEnumMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SparseEnumMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SparseEnumMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SparseEnumMessage, _impl_.sparse_enum_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
    {PROTOBUF_FIELD_OFFSET(SparseEnumMessage, _impl_.sparse_enum_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::protobuf_unittest::TestSparseEnum_IsValid},
  }}, {{
  }},
};

::uint8_t* SparseEnumMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.SparseEnumMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_sparse_enum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.SparseEnumMessage)
  return target;
}

::size_t SparseEnumMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.SparseEnumMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestSparseEnum sparse_enum = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_sparse_enum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SparseEnumMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SparseEnumMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*SparseEnumMessage::GetClassData() const { return &_class_data_; }


void SparseEnumMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SparseEnumMessage*>(&to_msg);
  auto& from = static_cast<const SparseEnumMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.SparseEnumMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_sparse_enum(from._internal_sparse_enum());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SparseEnumMessage::CopyFrom(const SparseEnumMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.SparseEnumMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SparseEnumMessage::IsInitialized() const {
  return true;
}

void SparseEnumMessage::InternalSwap(SparseEnumMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sparse_enum_, other->_impl_.sparse_enum_);
}

::google::protobuf::Metadata SparseEnumMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[62]);
}
// ===================================================================

class OneString::_Internal {
 public:
  using HasBits = decltype(std::declval<OneString>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OneString, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OneString::OneString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OneString)
}
OneString::OneString(const OneString& from) : ::google::protobuf::Message() {
  OneString* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneString)
}
inline void OneString::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OneString::~OneString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OneString::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void OneString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OneString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OneString)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OneString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> OneString::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OneString, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OneString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string data = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OneString, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string data = 1;
    {PROTOBUF_FIELD_OFFSET(OneString, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "protobuf_unittest.OneString"
    "data"
  }},
};

::uint8_t* OneString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.OneString.data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneString)
  return target;
}

::size_t OneString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OneString)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OneString::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OneString::MergeImpl
};
const ::google::protobuf::Message::ClassData*OneString::GetClassData() const { return &_class_data_; }


void OneString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OneString*>(&to_msg);
  auto& from = static_cast<const OneString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OneString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OneString::CopyFrom(const OneString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OneString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OneString::IsInitialized() const {
  return true;
}

void OneString::InternalSwap(OneString* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata OneString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[63]);
}
// ===================================================================

class MoreString::_Internal {
 public:
};

MoreString::MoreString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MoreString)
}
MoreString::MoreString(const MoreString& from) : ::google::protobuf::Message() {
  MoreString* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreString)
}
inline void MoreString::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoreString::~MoreString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoreString::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_data()->~RepeatedPtrField();
}
void MoreString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoreString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MoreString)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_data()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoreString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> MoreString::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoreString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string data = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoreString, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string data = 1;
    {PROTOBUF_FIELD_OFFSET(MoreString, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\34\4\0\0\0\0\0\0"
    "protobuf_unittest.MoreString"
    "data"
  }},
};

::uint8_t* MoreString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.MoreString.data");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreString)
  return target;
}

::size_t MoreString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MoreString)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoreString::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoreString::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoreString::GetClassData() const { return &_class_data_; }


void MoreString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoreString*>(&to_msg);
  auto& from = static_cast<const MoreString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MoreString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoreString::CopyFrom(const MoreString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MoreString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoreString::IsInitialized() const {
  return true;
}

void MoreString::InternalSwap(MoreString* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata MoreString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[64]);
}
// ===================================================================

class OneBytes::_Internal {
 public:
  using HasBits = decltype(std::declval<OneBytes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OneBytes, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OneBytes::OneBytes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OneBytes)
}
OneBytes::OneBytes(const OneBytes& from) : ::google::protobuf::Message() {
  OneBytes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.OneBytes)
}
inline void OneBytes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OneBytes::~OneBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OneBytes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OneBytes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void OneBytes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OneBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OneBytes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OneBytes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OneBytes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OneBytes, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OneBytes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OneBytes, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(OneBytes, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OneBytes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OneBytes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OneBytes)
  return target;
}

::size_t OneBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OneBytes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OneBytes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OneBytes::MergeImpl
};
const ::google::protobuf::Message::ClassData*OneBytes::GetClassData() const { return &_class_data_; }


void OneBytes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OneBytes*>(&to_msg);
  auto& from = static_cast<const OneBytes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OneBytes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OneBytes::CopyFrom(const OneBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OneBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OneBytes::IsInitialized() const {
  return true;
}

void OneBytes::InternalSwap(OneBytes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
}

::google::protobuf::Metadata OneBytes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[65]);
}
// ===================================================================

class MoreBytes::_Internal {
 public:
};

MoreBytes::MoreBytes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.MoreBytes)
}
MoreBytes::MoreBytes(const MoreBytes& from) : ::google::protobuf::Message() {
  MoreBytes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.MoreBytes)
}
inline void MoreBytes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MoreBytes::~MoreBytes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.MoreBytes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoreBytes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_data()->~RepeatedPtrField();
}
void MoreBytes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MoreBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.MoreBytes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_data()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoreBytes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MoreBytes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoreBytes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes data = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoreBytes, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(MoreBytes, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MoreBytes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.MoreBytes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.MoreBytes)
  return target;
}

::size_t MoreBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.MoreBytes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoreBytes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MoreBytes::MergeImpl
};
const ::google::protobuf::Message::ClassData*MoreBytes::GetClassData() const { return &_class_data_; }


void MoreBytes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoreBytes*>(&to_msg);
  auto& from = static_cast<const MoreBytes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.MoreBytes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoreBytes::CopyFrom(const MoreBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.MoreBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoreBytes::IsInitialized() const {
  return true;
}

void MoreBytes::InternalSwap(MoreBytes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata MoreBytes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[66]);
}
// ===================================================================

class ManyOptionalString::_Internal {
 public:
  using HasBits = decltype(std::declval<ManyOptionalString>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_._has_bits_);
  static void set_has_str1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_str2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_str3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_str4(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_str5(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_str6(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_str7(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_str8(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_str9(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_str10(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_str11(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_str12(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_str13(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_str14(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_str15(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_str16(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_str17(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_str18(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_str19(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_str20(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_str21(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_str22(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_str23(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_str24(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_str25(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_str26(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_str27(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_str28(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_str29(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_str30(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_str31(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_str32(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
};

ManyOptionalString::ManyOptionalString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.ManyOptionalString)
}
ManyOptionalString::ManyOptionalString(const ManyOptionalString& from) : ::google::protobuf::Message() {
  ManyOptionalString* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str1_){},
      decltype(_impl_.str2_){},
      decltype(_impl_.str3_){},
      decltype(_impl_.str4_){},
      decltype(_impl_.str5_){},
      decltype(_impl_.str6_){},
      decltype(_impl_.str7_){},
      decltype(_impl_.str8_){},
      decltype(_impl_.str9_){},
      decltype(_impl_.str10_){},
      decltype(_impl_.str11_){},
      decltype(_impl_.str12_){},
      decltype(_impl_.str13_){},
      decltype(_impl_.str14_){},
      decltype(_impl_.str15_){},
      decltype(_impl_.str16_){},
      decltype(_impl_.str17_){},
      decltype(_impl_.str18_){},
      decltype(_impl_.str19_){},
      decltype(_impl_.str20_){},
      decltype(_impl_.str21_){},
      decltype(_impl_.str22_){},
      decltype(_impl_.str23_){},
      decltype(_impl_.str24_){},
      decltype(_impl_.str25_){},
      decltype(_impl_.str26_){},
      decltype(_impl_.str27_){},
      decltype(_impl_.str28_){},
      decltype(_impl_.str29_){},
      decltype(_impl_.str30_){},
      decltype(_impl_.str31_){},
      decltype(_impl_.str32_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.str1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.str1_.Set(from._internal_str1(), _this->GetArenaForAllocation());
  }
  _impl_.str2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.str2_.Set(from._internal_str2(), _this->GetArenaForAllocation());
  }
  _impl_.str3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.str3_.Set(from._internal_str3(), _this->GetArenaForAllocation());
  }
  _impl_.str4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.str4_.Set(from._internal_str4(), _this->GetArenaForAllocation());
  }
  _impl_.str5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.str5_.Set(from._internal_str5(), _this->GetArenaForAllocation());
  }
  _impl_.str6_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str6_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000020u) != 0) {
    _this->_impl_.str6_.Set(from._internal_str6(), _this->GetArenaForAllocation());
  }
  _impl_.str7_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str7_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000040u) != 0) {
    _this->_impl_.str7_.Set(from._internal_str7(), _this->GetArenaForAllocation());
  }
  _impl_.str8_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str8_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000080u) != 0) {
    _this->_impl_.str8_.Set(from._internal_str8(), _this->GetArenaForAllocation());
  }
  _impl_.str9_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str9_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000100u) != 0) {
    _this->_impl_.str9_.Set(from._internal_str9(), _this->GetArenaForAllocation());
  }
  _impl_.str10_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str10_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000200u) != 0) {
    _this->_impl_.str10_.Set(from._internal_str10(), _this->GetArenaForAllocation());
  }
  _impl_.str11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str11_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000400u) != 0) {
    _this->_impl_.str11_.Set(from._internal_str11(), _this->GetArenaForAllocation());
  }
  _impl_.str12_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str12_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000800u) != 0) {
    _this->_impl_.str12_.Set(from._internal_str12(), _this->GetArenaForAllocation());
  }
  _impl_.str13_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str13_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00001000u) != 0) {
    _this->_impl_.str13_.Set(from._internal_str13(), _this->GetArenaForAllocation());
  }
  _impl_.str14_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str14_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00002000u) != 0) {
    _this->_impl_.str14_.Set(from._internal_str14(), _this->GetArenaForAllocation());
  }
  _impl_.str15_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str15_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00004000u) != 0) {
    _this->_impl_.str15_.Set(from._internal_str15(), _this->GetArenaForAllocation());
  }
  _impl_.str16_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str16_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00008000u) != 0) {
    _this->_impl_.str16_.Set(from._internal_str16(), _this->GetArenaForAllocation());
  }
  _impl_.str17_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str17_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00010000u) != 0) {
    _this->_impl_.str17_.Set(from._internal_str17(), _this->GetArenaForAllocation());
  }
  _impl_.str18_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str18_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00020000u) != 0) {
    _this->_impl_.str18_.Set(from._internal_str18(), _this->GetArenaForAllocation());
  }
  _impl_.str19_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str19_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00040000u) != 0) {
    _this->_impl_.str19_.Set(from._internal_str19(), _this->GetArenaForAllocation());
  }
  _impl_.str20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00080000u) != 0) {
    _this->_impl_.str20_.Set(from._internal_str20(), _this->GetArenaForAllocation());
  }
  _impl_.str21_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str21_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00100000u) != 0) {
    _this->_impl_.str21_.Set(from._internal_str21(), _this->GetArenaForAllocation());
  }
  _impl_.str22_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str22_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00200000u) != 0) {
    _this->_impl_.str22_.Set(from._internal_str22(), _this->GetArenaForAllocation());
  }
  _impl_.str23_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str23_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00400000u) != 0) {
    _this->_impl_.str23_.Set(from._internal_str23(), _this->GetArenaForAllocation());
  }
  _impl_.str24_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str24_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00800000u) != 0) {
    _this->_impl_.str24_.Set(from._internal_str24(), _this->GetArenaForAllocation());
  }
  _impl_.str25_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str25_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x01000000u) != 0) {
    _this->_impl_.str25_.Set(from._internal_str25(), _this->GetArenaForAllocation());
  }
  _impl_.str26_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str26_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x02000000u) != 0) {
    _this->_impl_.str26_.Set(from._internal_str26(), _this->GetArenaForAllocation());
  }
  _impl_.str27_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str27_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x04000000u) != 0) {
    _this->_impl_.str27_.Set(from._internal_str27(), _this->GetArenaForAllocation());
  }
  _impl_.str28_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str28_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x08000000u) != 0) {
    _this->_impl_.str28_.Set(from._internal_str28(), _this->GetArenaForAllocation());
  }
  _impl_.str29_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str29_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x10000000u) != 0) {
    _this->_impl_.str29_.Set(from._internal_str29(), _this->GetArenaForAllocation());
  }
  _impl_.str30_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str30_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x20000000u) != 0) {
    _this->_impl_.str30_.Set(from._internal_str30(), _this->GetArenaForAllocation());
  }
  _impl_.str31_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str31_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x40000000u) != 0) {
    _this->_impl_.str31_.Set(from._internal_str31(), _this->GetArenaForAllocation());
  }
  _impl_.str32_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str32_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x80000000u) != 0) {
    _this->_impl_.str32_.Set(from._internal_str32(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.ManyOptionalString)
}
inline void ManyOptionalString::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str1_){},
      decltype(_impl_.str2_){},
      decltype(_impl_.str3_){},
      decltype(_impl_.str4_){},
      decltype(_impl_.str5_){},
      decltype(_impl_.str6_){},
      decltype(_impl_.str7_){},
      decltype(_impl_.str8_){},
      decltype(_impl_.str9_){},
      decltype(_impl_.str10_){},
      decltype(_impl_.str11_){},
      decltype(_impl_.str12_){},
      decltype(_impl_.str13_){},
      decltype(_impl_.str14_){},
      decltype(_impl_.str15_){},
      decltype(_impl_.str16_){},
      decltype(_impl_.str17_){},
      decltype(_impl_.str18_){},
      decltype(_impl_.str19_){},
      decltype(_impl_.str20_){},
      decltype(_impl_.str21_){},
      decltype(_impl_.str22_){},
      decltype(_impl_.str23_){},
      decltype(_impl_.str24_){},
      decltype(_impl_.str25_){},
      decltype(_impl_.str26_){},
      decltype(_impl_.str27_){},
      decltype(_impl_.str28_){},
      decltype(_impl_.str29_){},
      decltype(_impl_.str30_){},
      decltype(_impl_.str31_){},
      decltype(_impl_.str32_){},
  };
  _impl_.str1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str6_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str6_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str7_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str7_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str8_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str8_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str9_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str9_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str10_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str10_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str11_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str11_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str12_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str12_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str13_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str13_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str14_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str14_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str15_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str15_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str16_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str16_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str17_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str17_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str18_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str18_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str19_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str19_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str20_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str20_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str21_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str21_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str22_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str22_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str23_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str23_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str24_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str24_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str25_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str25_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str26_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str26_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str27_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str27_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str28_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str28_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str29_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str29_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str30_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str30_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str31_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str31_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str32_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str32_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ManyOptionalString::~ManyOptionalString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ManyOptionalString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ManyOptionalString::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str1_.Destroy();
  _impl_.str2_.Destroy();
  _impl_.str3_.Destroy();
  _impl_.str4_.Destroy();
  _impl_.str5_.Destroy();
  _impl_.str6_.Destroy();
  _impl_.str7_.Destroy();
  _impl_.str8_.Destroy();
  _impl_.str9_.Destroy();
  _impl_.str10_.Destroy();
  _impl_.str11_.Destroy();
  _impl_.str12_.Destroy();
  _impl_.str13_.Destroy();
  _impl_.str14_.Destroy();
  _impl_.str15_.Destroy();
  _impl_.str16_.Destroy();
  _impl_.str17_.Destroy();
  _impl_.str18_.Destroy();
  _impl_.str19_.Destroy();
  _impl_.str20_.Destroy();
  _impl_.str21_.Destroy();
  _impl_.str22_.Destroy();
  _impl_.str23_.Destroy();
  _impl_.str24_.Destroy();
  _impl_.str25_.Destroy();
  _impl_.str26_.Destroy();
  _impl_.str27_.Destroy();
  _impl_.str28_.Destroy();
  _impl_.str29_.Destroy();
  _impl_.str30_.Destroy();
  _impl_.str31_.Destroy();
  _impl_.str32_.Destroy();
}
void ManyOptionalString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ManyOptionalString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ManyOptionalString)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.str1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.str2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.str3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.str4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.str5_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.str6_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.str7_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.str8_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _impl_.str9_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000200u) {
      _impl_.str10_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000400u) {
      _impl_.str11_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000800u) {
      _impl_.str12_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00001000u) {
      _impl_.str13_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00002000u) {
      _impl_.str14_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00004000u) {
      _impl_.str15_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00008000u) {
      _impl_.str16_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _impl_.str17_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00020000u) {
      _impl_.str18_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00040000u) {
      _impl_.str19_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00080000u) {
      _impl_.str20_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00100000u) {
      _impl_.str21_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00200000u) {
      _impl_.str22_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00400000u) {
      _impl_.str23_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00800000u) {
      _impl_.str24_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _impl_.str25_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x02000000u) {
      _impl_.str26_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x04000000u) {
      _impl_.str27_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x08000000u) {
      _impl_.str28_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x10000000u) {
      _impl_.str29_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x20000000u) {
      _impl_.str30_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x40000000u) {
      _impl_.str31_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x80000000u) {
      _impl_.str32_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ManyOptionalString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 32, 0, 228, 2> ManyOptionalString::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_._has_bits_),
    0, // no _extensions_
    32, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    32,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ManyOptionalString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string str1 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str1_)}},
    // optional string str2 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str2_)}},
    // optional string str3 = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str3_)}},
    // optional string str4 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str4_)}},
    // optional string str5 = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str5_)}},
    // optional string str6 = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str6_)}},
    // optional string str7 = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 6, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str7_)}},
    // optional string str8 = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 7, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str8_)}},
    // optional string str9 = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 8, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str9_)}},
    // optional string str10 = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 9, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str10_)}},
    // optional string str11 = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 10, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str11_)}},
    // optional string str12 = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 11, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str12_)}},
    // optional string str13 = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 12, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str13_)}},
    // optional string str14 = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 13, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str14_)}},
    // optional string str15 = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 14, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str15_)}},
    // optional string str16 = 16;
    {::_pbi::TcParser::FastSS2,
     {386, 15, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str16_)}},
    // optional string str17 = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 16, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str17_)}},
    // optional string str18 = 18;
    {::_pbi::TcParser::FastSS2,
     {402, 17, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str18_)}},
    // optional string str19 = 19;
    {::_pbi::TcParser::FastSS2,
     {410, 18, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str19_)}},
    // optional string str20 = 20;
    {::_pbi::TcParser::FastSS2,
     {418, 19, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str20_)}},
    // optional string str21 = 21;
    {::_pbi::TcParser::FastSS2,
     {426, 20, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str21_)}},
    // optional string str22 = 22;
    {::_pbi::TcParser::FastSS2,
     {434, 21, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str22_)}},
    // optional string str23 = 23;
    {::_pbi::TcParser::FastSS2,
     {442, 22, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str23_)}},
    // optional string str24 = 24;
    {::_pbi::TcParser::FastSS2,
     {450, 23, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str24_)}},
    // optional string str25 = 25;
    {::_pbi::TcParser::FastSS2,
     {458, 24, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str25_)}},
    // optional string str26 = 26;
    {::_pbi::TcParser::FastSS2,
     {466, 25, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str26_)}},
    // optional string str27 = 27;
    {::_pbi::TcParser::FastSS2,
     {474, 26, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str27_)}},
    // optional string str28 = 28;
    {::_pbi::TcParser::FastSS2,
     {482, 27, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str28_)}},
    // optional string str29 = 29;
    {::_pbi::TcParser::FastSS2,
     {490, 28, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str29_)}},
    // optional string str30 = 30;
    {::_pbi::TcParser::FastSS2,
     {498, 29, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str30_)}},
    // optional string str31 = 31;
    {::_pbi::TcParser::FastSS2,
     {506, 30, 0, PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str31_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string str1 = 1;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str2 = 2;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str3 = 3;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str4 = 4;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str4_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str5 = 5;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str5_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str6 = 6;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str6_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str7 = 7;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str7_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str8 = 8;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str8_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str9 = 9;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str9_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str10 = 10;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str10_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str11 = 11;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str11_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str12 = 12;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str12_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str13 = 13;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str13_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str14 = 14;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str14_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str15 = 15;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str15_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str16 = 16;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str16_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str17 = 17;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str17_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str18 = 18;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str18_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str19 = 19;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str19_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str20 = 20;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str20_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str21 = 21;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str21_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str22 = 22;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str22_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str23 = 23;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str23_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str24 = 24;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str24_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str25 = 25;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str25_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str26 = 26;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str26_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str27 = 27;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str27_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str28 = 28;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str28_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str29 = 29;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str29_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str30 = 30;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str30_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str31 = 31;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str31_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string str32 = 32;
    {PROTOBUF_FIELD_OFFSET(ManyOptionalString, _impl_.str32_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\4\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\0\0\0\0\0\0\0"
    "protobuf_unittest.ManyOptionalString"
    "str1"
    "str2"
    "str3"
    "str4"
    "str5"
    "str6"
    "str7"
    "str8"
    "str9"
    "str10"
    "str11"
    "str12"
    "str13"
    "str14"
    "str15"
    "str16"
    "str17"
    "str18"
    "str19"
    "str20"
    "str21"
    "str22"
    "str23"
    "str24"
    "str25"
    "str26"
    "str27"
    "str28"
    "str29"
    "str30"
    "str31"
    "str32"
  }},
};

::uint8_t* ManyOptionalString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ManyOptionalString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string str1 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_str1();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str1");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string str2 = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_str2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str2");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string str3 = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_str3();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str3");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string str4 = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_str4();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str4");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string str5 = 5;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_str5();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str5");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string str6 = 6;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_str6();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str6");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string str7 = 7;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_str7();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str7");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string str8 = 8;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_str8();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str8");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string str9 = 9;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_str9();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str9");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string str10 = 10;
  if (cached_has_bits & 0x00000200u) {
    const std::string& _s = this->_internal_str10();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str10");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string str11 = 11;
  if (cached_has_bits & 0x00000400u) {
    const std::string& _s = this->_internal_str11();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str11");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional string str12 = 12;
  if (cached_has_bits & 0x00000800u) {
    const std::string& _s = this->_internal_str12();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str12");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional string str13 = 13;
  if (cached_has_bits & 0x00001000u) {
    const std::string& _s = this->_internal_str13();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str13");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional string str14 = 14;
  if (cached_has_bits & 0x00002000u) {
    const std::string& _s = this->_internal_str14();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str14");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional string str15 = 15;
  if (cached_has_bits & 0x00004000u) {
    const std::string& _s = this->_internal_str15();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str15");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional string str16 = 16;
  if (cached_has_bits & 0x00008000u) {
    const std::string& _s = this->_internal_str16();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str16");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // optional string str17 = 17;
  if (cached_has_bits & 0x00010000u) {
    const std::string& _s = this->_internal_str17();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str17");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional string str18 = 18;
  if (cached_has_bits & 0x00020000u) {
    const std::string& _s = this->_internal_str18();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str18");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // optional string str19 = 19;
  if (cached_has_bits & 0x00040000u) {
    const std::string& _s = this->_internal_str19();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str19");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // optional string str20 = 20;
  if (cached_has_bits & 0x00080000u) {
    const std::string& _s = this->_internal_str20();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str20");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // optional string str21 = 21;
  if (cached_has_bits & 0x00100000u) {
    const std::string& _s = this->_internal_str21();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str21");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // optional string str22 = 22;
  if (cached_has_bits & 0x00200000u) {
    const std::string& _s = this->_internal_str22();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str22");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // optional string str23 = 23;
  if (cached_has_bits & 0x00400000u) {
    const std::string& _s = this->_internal_str23();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str23");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // optional string str24 = 24;
  if (cached_has_bits & 0x00800000u) {
    const std::string& _s = this->_internal_str24();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str24");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // optional string str25 = 25;
  if (cached_has_bits & 0x01000000u) {
    const std::string& _s = this->_internal_str25();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str25");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional string str26 = 26;
  if (cached_has_bits & 0x02000000u) {
    const std::string& _s = this->_internal_str26();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str26");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  // optional string str27 = 27;
  if (cached_has_bits & 0x04000000u) {
    const std::string& _s = this->_internal_str27();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str27");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  // optional string str28 = 28;
  if (cached_has_bits & 0x08000000u) {
    const std::string& _s = this->_internal_str28();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str28");
    target = stream->WriteStringMaybeAliased(28, _s, target);
  }

  // optional string str29 = 29;
  if (cached_has_bits & 0x10000000u) {
    const std::string& _s = this->_internal_str29();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str29");
    target = stream->WriteStringMaybeAliased(29, _s, target);
  }

  // optional string str30 = 30;
  if (cached_has_bits & 0x20000000u) {
    const std::string& _s = this->_internal_str30();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str30");
    target = stream->WriteStringMaybeAliased(30, _s, target);
  }

  // optional string str31 = 31;
  if (cached_has_bits & 0x40000000u) {
    const std::string& _s = this->_internal_str31();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str31");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  // optional string str32 = 32;
  if (cached_has_bits & 0x80000000u) {
    const std::string& _s = this->_internal_str32();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.ManyOptionalString.str32");
    target = stream->WriteStringMaybeAliased(32, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ManyOptionalString)
  return target;
}

::size_t ManyOptionalString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ManyOptionalString)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string str1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str1());
    }

    // optional string str2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str2());
    }

    // optional string str3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str3());
    }

    // optional string str4 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str4());
    }

    // optional string str5 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str5());
    }

    // optional string str6 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str6());
    }

    // optional string str7 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str7());
    }

    // optional string str8 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str8());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional string str9 = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str9());
    }

    // optional string str10 = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str10());
    }

    // optional string str11 = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str11());
    }

    // optional string str12 = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str12());
    }

    // optional string str13 = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str13());
    }

    // optional string str14 = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str14());
    }

    // optional string str15 = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str15());
    }

    // optional string str16 = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str16());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional string str17 = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str17());
    }

    // optional string str18 = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str18());
    }

    // optional string str19 = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str19());
    }

    // optional string str20 = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str20());
    }

    // optional string str21 = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str21());
    }

    // optional string str22 = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str22());
    }

    // optional string str23 = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str23());
    }

    // optional string str24 = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str24());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional string str25 = 25;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str25());
    }

    // optional string str26 = 26;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str26());
    }

    // optional string str27 = 27;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str27());
    }

    // optional string str28 = 28;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str28());
    }

    // optional string str29 = 29;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str29());
    }

    // optional string str30 = 30;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str30());
    }

    // optional string str31 = 31;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str31());
    }

    // optional string str32 = 32;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str32());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ManyOptionalString::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ManyOptionalString::MergeImpl
};
const ::google::protobuf::Message::ClassData*ManyOptionalString::GetClassData() const { return &_class_data_; }


void ManyOptionalString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ManyOptionalString*>(&to_msg);
  auto& from = static_cast<const ManyOptionalString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ManyOptionalString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_str1(from._internal_str1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_str2(from._internal_str2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_str3(from._internal_str3());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_str4(from._internal_str4());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_str5(from._internal_str5());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_str6(from._internal_str6());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_str7(from._internal_str7());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_str8(from._internal_str8());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_str9(from._internal_str9());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_set_str10(from._internal_str10());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_set_str11(from._internal_str11());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_set_str12(from._internal_str12());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_set_str13(from._internal_str13());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_set_str14(from._internal_str14());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_set_str15(from._internal_str15());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_set_str16(from._internal_str16());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_set_str17(from._internal_str17());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_set_str18(from._internal_str18());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_set_str19(from._internal_str19());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_set_str20(from._internal_str20());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_set_str21(from._internal_str21());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_set_str22(from._internal_str22());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_set_str23(from._internal_str23());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_set_str24(from._internal_str24());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_set_str25(from._internal_str25());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_set_str26(from._internal_str26());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_set_str27(from._internal_str27());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_set_str28(from._internal_str28());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_set_str29(from._internal_str29());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_set_str30(from._internal_str30());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_set_str31(from._internal_str31());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_set_str32(from._internal_str32());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ManyOptionalString::CopyFrom(const ManyOptionalString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ManyOptionalString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ManyOptionalString::IsInitialized() const {
  return true;
}

void ManyOptionalString::InternalSwap(ManyOptionalString* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str1_, lhs_arena,
                                       &other->_impl_.str1_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str2_, lhs_arena,
                                       &other->_impl_.str2_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str3_, lhs_arena,
                                       &other->_impl_.str3_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str4_, lhs_arena,
                                       &other->_impl_.str4_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str5_, lhs_arena,
                                       &other->_impl_.str5_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str6_, lhs_arena,
                                       &other->_impl_.str6_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str7_, lhs_arena,
                                       &other->_impl_.str7_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str8_, lhs_arena,
                                       &other->_impl_.str8_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str9_, lhs_arena,
                                       &other->_impl_.str9_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str10_, lhs_arena,
                                       &other->_impl_.str10_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str11_, lhs_arena,
                                       &other->_impl_.str11_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str12_, lhs_arena,
                                       &other->_impl_.str12_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str13_, lhs_arena,
                                       &other->_impl_.str13_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str14_, lhs_arena,
                                       &other->_impl_.str14_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str15_, lhs_arena,
                                       &other->_impl_.str15_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str16_, lhs_arena,
                                       &other->_impl_.str16_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str17_, lhs_arena,
                                       &other->_impl_.str17_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str18_, lhs_arena,
                                       &other->_impl_.str18_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str19_, lhs_arena,
                                       &other->_impl_.str19_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str20_, lhs_arena,
                                       &other->_impl_.str20_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str21_, lhs_arena,
                                       &other->_impl_.str21_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str22_, lhs_arena,
                                       &other->_impl_.str22_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str23_, lhs_arena,
                                       &other->_impl_.str23_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str24_, lhs_arena,
                                       &other->_impl_.str24_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str25_, lhs_arena,
                                       &other->_impl_.str25_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str26_, lhs_arena,
                                       &other->_impl_.str26_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str27_, lhs_arena,
                                       &other->_impl_.str27_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str28_, lhs_arena,
                                       &other->_impl_.str28_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str29_, lhs_arena,
                                       &other->_impl_.str29_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str30_, lhs_arena,
                                       &other->_impl_.str30_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str31_, lhs_arena,
                                       &other->_impl_.str31_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str32_, lhs_arena,
                                       &other->_impl_.str32_, rhs_arena);
}

::google::protobuf::Metadata ManyOptionalString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[67]);
}
// ===================================================================

class Int32Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Int32Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Int32Message, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Int32Message::Int32Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int32Message)
}
Int32Message::Int32Message(const Int32Message& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int32Message)
}
inline void Int32Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){0},
  };
}
Int32Message::~Int32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int32Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int32Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Int32Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int32Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int32Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int32Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Int32Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int32Message, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int32Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 data = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32Message, _impl_.data_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Int32Message, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 data = 1;
    {PROTOBUF_FIELD_OFFSET(Int32Message, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Int32Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int32Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int32Message)
  return target;
}

::size_t Int32Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int32Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int32Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int32Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int32Message::GetClassData() const { return &_class_data_; }


void Int32Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int32Message*>(&to_msg);
  auto& from = static_cast<const Int32Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int32Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int32Message::CopyFrom(const Int32Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int32Message::IsInitialized() const {
  return true;
}

void Int32Message::InternalSwap(Int32Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata Int32Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[68]);
}
// ===================================================================

class Uint32Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Uint32Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Uint32Message, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Uint32Message::Uint32Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Uint32Message)
}
Uint32Message::Uint32Message(const Uint32Message& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint32Message)
}
inline void Uint32Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){0u},
  };
}
Uint32Message::~Uint32Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint32Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Uint32Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Uint32Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Uint32Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Uint32Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Uint32Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Uint32Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Uint32Message, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Uint32Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 data = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Uint32Message, _impl_.data_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Uint32Message, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 data = 1;
    {PROTOBUF_FIELD_OFFSET(Uint32Message, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Uint32Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint32Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint32Message)
  return target;
}

::size_t Uint32Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Uint32Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Uint32Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Uint32Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Uint32Message::GetClassData() const { return &_class_data_; }


void Uint32Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Uint32Message*>(&to_msg);
  auto& from = static_cast<const Uint32Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Uint32Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Uint32Message::CopyFrom(const Uint32Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Uint32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Uint32Message::IsInitialized() const {
  return true;
}

void Uint32Message::InternalSwap(Uint32Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata Uint32Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[69]);
}
// ===================================================================

class Int64Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Int64Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Int64Message, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Int64Message::Int64Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int64Message)
}
Int64Message::Int64Message(const Int64Message& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int64Message)
}
inline void Int64Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){::int64_t{0}},
  };
}
Int64Message::~Int64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int64Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int64Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Int64Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int64Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int64Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int64Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Int64Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64Message, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int64Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int64 data = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64Message, _impl_.data_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Int64Message, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 data = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Message, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Int64Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int64Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int64Message)
  return target;
}

::size_t Int64Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int64Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int64Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int64Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int64Message::GetClassData() const { return &_class_data_; }


void Int64Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int64Message*>(&to_msg);
  auto& from = static_cast<const Int64Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int64Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Message::CopyFrom(const Int64Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int64Message::IsInitialized() const {
  return true;
}

void Int64Message::InternalSwap(Int64Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata Int64Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[70]);
}
// ===================================================================

class Uint64Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Uint64Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Uint64Message, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Uint64Message::Uint64Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Uint64Message)
}
Uint64Message::Uint64Message(const Uint64Message& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Uint64Message)
}
inline void Uint64Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){::uint64_t{0u}},
  };
}
Uint64Message::~Uint64Message() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Uint64Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Uint64Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Uint64Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Uint64Message::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Uint64Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Uint64Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Uint64Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Uint64Message, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Uint64Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 data = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Uint64Message, _impl_.data_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Uint64Message, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 data = 1;
    {PROTOBUF_FIELD_OFFSET(Uint64Message, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Uint64Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Uint64Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Uint64Message)
  return target;
}

::size_t Uint64Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Uint64Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Uint64Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Uint64Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Uint64Message::GetClassData() const { return &_class_data_; }


void Uint64Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Uint64Message*>(&to_msg);
  auto& from = static_cast<const Uint64Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Uint64Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Uint64Message::CopyFrom(const Uint64Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Uint64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Uint64Message::IsInitialized() const {
  return true;
}

void Uint64Message::InternalSwap(Uint64Message* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata Uint64Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[71]);
}
// ===================================================================

class BoolMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<BoolMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BoolMessage, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BoolMessage::BoolMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BoolMessage)
}
BoolMessage::BoolMessage(const BoolMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BoolMessage)
}
inline void BoolMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.data_){false},
  };
}
BoolMessage::~BoolMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BoolMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void BoolMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BoolMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BoolMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BoolMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BoolMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool data = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BoolMessage, _impl_.data_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BoolMessage, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool data = 1;
    {PROTOBUF_FIELD_OFFSET(BoolMessage, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BoolMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BoolMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BoolMessage)
  return target;
}

::size_t BoolMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BoolMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BoolMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*BoolMessage::GetClassData() const { return &_class_data_; }


void BoolMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolMessage*>(&to_msg);
  auto& from = static_cast<const BoolMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BoolMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolMessage::CopyFrom(const BoolMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BoolMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolMessage::IsInitialized() const {
  return true;
}

void BoolMessage::InternalSwap(BoolMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata BoolMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[72]);
}
// ===================================================================

class TestOneof_FooGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneof_FooGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestOneof_FooGroup::TestOneof_FooGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof.FooGroup)
}
TestOneof_FooGroup::TestOneof_FooGroup(const TestOneof_FooGroup& from) : ::google::protobuf::Message() {
  TestOneof_FooGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.b_.Set(from._internal_b(), _this->GetArenaForAllocation());
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof.FooGroup)
}
inline void TestOneof_FooGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){0},
  };
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestOneof_FooGroup::~TestOneof_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof.FooGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneof_FooGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.b_.Destroy();
}
void TestOneof_FooGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestOneof_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof.FooGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.b_.ClearNonDefaultToEmpty();
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneof_FooGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 46, 2> TestOneof_FooGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967247,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestOneof_FooGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {36, 36}},
    // optional int32 a = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestOneof_FooGroup, _impl_.a_), 1>(),
     {40, 1, 0, PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_.a_)}},
    // optional string b = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_.b_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 5;
    {PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string b = 6;
    {PROTOBUF_FIELD_OFFSET(TestOneof_FooGroup, _impl_.b_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\1\0\0\0\0\0"
    "protobuf_unittest.TestOneof.FooGroup"
    "b"
  }},
};

::uint8_t* TestOneof_FooGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof.FooGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_a(), target);
  }

  // optional string b = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_b();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestOneof.FooGroup.b");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof.FooGroup)
  return target;
}

::size_t TestOneof_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof.FooGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string b = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_b());
    }

    // optional int32 a = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneof_FooGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneof_FooGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneof_FooGroup::GetClassData() const { return &_class_data_; }


void TestOneof_FooGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneof_FooGroup*>(&to_msg);
  auto& from = static_cast<const TestOneof_FooGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof.FooGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneof_FooGroup::CopyFrom(const TestOneof_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneof_FooGroup::IsInitialized() const {
  return true;
}

void TestOneof_FooGroup::InternalSwap(TestOneof_FooGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, lhs_arena,
                                       &other->_impl_.b_, rhs_arena);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestOneof_FooGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[73]);
}
// ===================================================================

class TestOneof::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof, _impl_._oneof_case_);
  static const ::protobuf_unittest::TestAllTypes& foo_message(const TestOneof* msg);
  static const ::protobuf_unittest::TestOneof_FooGroup& foogroup(const TestOneof* msg);
};

const ::protobuf_unittest::TestAllTypes& TestOneof::_Internal::foo_message(const TestOneof* msg) {
  return *msg->_impl_.foo_.foo_message_;
}
const ::protobuf_unittest::TestOneof_FooGroup& TestOneof::_Internal::foogroup(const TestOneof* msg) {
  return *msg->_impl_.foo_.foogroup_;
}
void TestOneof::set_allocated_foo_message(::protobuf_unittest::TestAllTypes* foo_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foo_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foo_message);
    if (message_arena != submessage_arena) {
      foo_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foo_message, submessage_arena);
    }
    set_has_foo_message();
    _impl_.foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.foo_message)
}
void TestOneof::set_allocated_foogroup(::protobuf_unittest::TestOneof_FooGroup* foogroup) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foogroup) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foogroup);
    if (message_arena != submessage_arena) {
      foogroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foogroup, submessage_arena);
    }
    set_has_foogroup();
    _impl_.foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof.foogroup)
}
TestOneof::TestOneof(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof)
}
TestOneof::TestOneof(const TestOneof& from) : ::google::protobuf::Message() {
  TestOneof* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.foo_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  clear_has_foo();
  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFoogroup: {
      _this->_internal_mutable_foogroup()->::protobuf_unittest::TestOneof_FooGroup::MergeFrom(
          from._internal_foogroup());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof)
}
inline void TestOneof::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.foo_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_foo();
}
TestOneof::~TestOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneof::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_foo()) {
    clear_foo();
  }
}
void TestOneof::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestOneof::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      _impl_.foo_.foo_string_.Destroy();
      break;
    }
    case kFooMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_message_;
      }
      break;
    }
    case kFoogroup: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foogroup_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}


PROTOBUF_NOINLINE void TestOneof::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foo();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneof::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 2, 46, 2> TestOneof::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestOneof_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 foo_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestOneof, _impl_.foo_.foo_int_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // string foo_string = 2;
    {PROTOBUF_FIELD_OFFSET(TestOneof, _impl_.foo_.foo_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // .protobuf_unittest.TestAllTypes foo_message = 3;
    {PROTOBUF_FIELD_OFFSET(TestOneof, _impl_.foo_.foo_message_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // group FooGroup = 4 { ... };
    {PROTOBUF_FIELD_OFFSET(TestOneof, _impl_.foo_.foogroup_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOneof_FooGroup>()},
  }}, {{
    "\33\0\12\0\0\0\0\0"
    "protobuf_unittest.TestOneof"
    "foo_string"
  }},
};

::uint8_t* TestOneof::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (foo_case()) {
    case kFooInt: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<1>(
              stream, this->_internal_foo_int(), target);
      break;
    }
    case kFooString: {
      const std::string& _s = this->_internal_foo_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof.foo_string");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    case kFooMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::foo_message(this),
          _Internal::foo_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kFoogroup: {
      target = stream->EnsureSpace(target);
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteGroup(
          4, _Internal::foogroup(this), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof)
  return target;
}

::size_t TestOneof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foo_case()) {
    // int32 foo_int = 1;
    case kFooInt: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_int());
      break;
    }
    // string foo_string = 2;
    case kFooString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_string());
      break;
    }
    // .protobuf_unittest.TestAllTypes foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_.foo_message_);
      break;
    }
    // group FooGroup = 4 { ... };
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.foo_.foogroup_);
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneof::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneof::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneof::GetClassData() const { return &_class_data_; }


void TestOneof::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneof*>(&to_msg);
  auto& from = static_cast<const TestOneof&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFoogroup: {
      _this->_internal_mutable_foogroup()->::protobuf_unittest::TestOneof_FooGroup::MergeFrom(
          from._internal_foogroup());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneof::CopyFrom(const TestOneof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneof::IsInitialized() const {
  return true;
}

void TestOneof::InternalSwap(TestOneof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.foo_, other->_impl_.foo_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestOneof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[74]);
}
// ===================================================================

class TestOneofBackwardsCompatible_FooGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneofBackwardsCompatible_FooGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}
TestOneofBackwardsCompatible_FooGroup::TestOneofBackwardsCompatible_FooGroup(const TestOneofBackwardsCompatible_FooGroup& from) : ::google::protobuf::Message() {
  TestOneofBackwardsCompatible_FooGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.b_.Set(from._internal_b(), _this->GetArenaForAllocation());
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
}
inline void TestOneofBackwardsCompatible_FooGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){0},
  };
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestOneofBackwardsCompatible_FooGroup::~TestOneofBackwardsCompatible_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneofBackwardsCompatible_FooGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.b_.Destroy();
}
void TestOneofBackwardsCompatible_FooGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestOneofBackwardsCompatible_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.b_.ClearNonDefaultToEmpty();
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneofBackwardsCompatible_FooGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 65, 2> TestOneofBackwardsCompatible_FooGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967247,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestOneofBackwardsCompatible_FooGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {36, 36}},
    // optional int32 a = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestOneofBackwardsCompatible_FooGroup, _impl_.a_), 1>(),
     {40, 1, 0, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_.a_)}},
    // optional string b = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_.b_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 5;
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string b = 6;
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible_FooGroup, _impl_.b_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\0\1\0\0\0\0\0"
    "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup"
    "b"
  }},
};

::uint8_t* TestOneofBackwardsCompatible_FooGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_a(), target);
  }

  // optional string b = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_b();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestOneofBackwardsCompatible.FooGroup.b");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  return target;
}

::size_t TestOneofBackwardsCompatible_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string b = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_b());
    }

    // optional int32 a = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneofBackwardsCompatible_FooGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneofBackwardsCompatible_FooGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneofBackwardsCompatible_FooGroup::GetClassData() const { return &_class_data_; }


void TestOneofBackwardsCompatible_FooGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneofBackwardsCompatible_FooGroup*>(&to_msg);
  auto& from = static_cast<const TestOneofBackwardsCompatible_FooGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneofBackwardsCompatible_FooGroup::CopyFrom(const TestOneofBackwardsCompatible_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneofBackwardsCompatible_FooGroup::IsInitialized() const {
  return true;
}

void TestOneofBackwardsCompatible_FooGroup::InternalSwap(TestOneofBackwardsCompatible_FooGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, lhs_arena,
                                       &other->_impl_.b_, rhs_arena);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestOneofBackwardsCompatible_FooGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[75]);
}
// ===================================================================

class TestOneofBackwardsCompatible::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneofBackwardsCompatible>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_._has_bits_);
  static void set_has_foo_int(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_foo_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypes& foo_message(const TestOneofBackwardsCompatible* msg);
  static void set_has_foo_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup& foogroup(const TestOneofBackwardsCompatible* msg);
  static void set_has_foogroup(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestOneofBackwardsCompatible::_Internal::foo_message(const TestOneofBackwardsCompatible* msg) {
  return *msg->_impl_.foo_message_;
}
const ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup& TestOneofBackwardsCompatible::_Internal::foogroup(const TestOneofBackwardsCompatible* msg) {
  return *msg->_impl_.foogroup_;
}
TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}
TestOneofBackwardsCompatible::TestOneofBackwardsCompatible(const TestOneofBackwardsCompatible& from) : ::google::protobuf::Message() {
  TestOneofBackwardsCompatible* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_string_){},
      decltype(_impl_.foo_message_){nullptr},
      decltype(_impl_.foogroup_){nullptr},
      decltype(_impl_.foo_int_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.foo_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.foo_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.foo_string_.Set(from._internal_foo_string(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.foo_message_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.foo_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.foogroup_ = new ::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup(*from._impl_.foogroup_);
  }
  _this->_impl_.foo_int_ = from._impl_.foo_int_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofBackwardsCompatible)
}
inline void TestOneofBackwardsCompatible::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_string_){},
      decltype(_impl_.foo_message_){nullptr},
      decltype(_impl_.foogroup_){nullptr},
      decltype(_impl_.foo_int_){0},
  };
  _impl_.foo_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.foo_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestOneofBackwardsCompatible::~TestOneofBackwardsCompatible() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofBackwardsCompatible)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneofBackwardsCompatible::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.foo_string_.Destroy();
  if (this != internal_default_instance()) delete _impl_.foo_message_;
  if (this != internal_default_instance()) delete _impl_.foogroup_;
}
void TestOneofBackwardsCompatible::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestOneofBackwardsCompatible::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneofBackwardsCompatible)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.foo_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.foo_message_ != nullptr);
      _impl_.foo_message_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.foogroup_ != nullptr);
      _impl_.foogroup_->Clear();
    }
  }
  _impl_.foo_int_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneofBackwardsCompatible::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2> TestOneofBackwardsCompatible::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestOneofBackwardsCompatible_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional group FooGroup = 4 { ... };
    {::_pbi::TcParser::FastGtS1,
     {35, 2, 1, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foogroup_)}},
    // optional int32 foo_int = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestOneofBackwardsCompatible, _impl_.foo_int_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_int_)}},
    // optional string foo_string = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_string_)}},
    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 foo_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_int_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string foo_string = 2;
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group FooGroup = 4 { ... };
    {PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foogroup_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup>()},
  }}, {{
    "\56\0\12\0\0\0\0\0"
    "protobuf_unittest.TestOneofBackwardsCompatible"
    "foo_string"
  }},
};

::uint8_t* TestOneofBackwardsCompatible::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofBackwardsCompatible)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 foo_int = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_foo_int(), target);
  }

  // optional string foo_string = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_foo_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestOneofBackwardsCompatible.foo_string");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .protobuf_unittest.TestAllTypes foo_message = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::foo_message(this),
        _Internal::foo_message(this).GetCachedSize(), target, stream);
  }

  // optional group FooGroup = 4 { ... };
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        4, _Internal::foogroup(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofBackwardsCompatible)
  return target;
}

::size_t TestOneofBackwardsCompatible::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneofBackwardsCompatible)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string foo_string = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_string());
    }

    // optional .protobuf_unittest.TestAllTypes foo_message = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_message_);
    }

    // optional group FooGroup = 4 { ... };
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.foogroup_);
    }

    // optional int32 foo_int = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_int());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneofBackwardsCompatible::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneofBackwardsCompatible::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneofBackwardsCompatible::GetClassData() const { return &_class_data_; }


void TestOneofBackwardsCompatible::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneofBackwardsCompatible*>(&to_msg);
  auto& from = static_cast<const TestOneofBackwardsCompatible&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_foo_string(from._internal_foo_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_foo_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_foogroup()->::protobuf_unittest::TestOneofBackwardsCompatible_FooGroup::MergeFrom(
          from._internal_foogroup());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.foo_int_ = from._impl_.foo_int_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneofBackwardsCompatible::CopyFrom(const TestOneofBackwardsCompatible& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneofBackwardsCompatible)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneofBackwardsCompatible::IsInitialized() const {
  return true;
}

void TestOneofBackwardsCompatible::InternalSwap(TestOneofBackwardsCompatible* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.foo_string_, lhs_arena,
                                       &other->_impl_.foo_string_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_int_)
      + sizeof(TestOneofBackwardsCompatible::_impl_.foo_int_)
      - PROTOBUF_FIELD_OFFSET(TestOneofBackwardsCompatible, _impl_.foo_message_)>(
          reinterpret_cast<char*>(&_impl_.foo_message_),
          reinterpret_cast<char*>(&other->_impl_.foo_message_));
}

::google::protobuf::Metadata TestOneofBackwardsCompatible::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[76]);
}
// ===================================================================

class TestOneof2_FooGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneof2_FooGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestOneof2_FooGroup::TestOneof2_FooGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2.FooGroup)
}
TestOneof2_FooGroup::TestOneof2_FooGroup(const TestOneof2_FooGroup& from) : ::google::protobuf::Message() {
  TestOneof2_FooGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.b_.Set(from._internal_b(), _this->GetArenaForAllocation());
  }
  _this->_impl_.a_ = from._impl_.a_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.FooGroup)
}
inline void TestOneof2_FooGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.b_){},
      decltype(_impl_.a_){0},
  };
  _impl_.b_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.b_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestOneof2_FooGroup::~TestOneof2_FooGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.FooGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneof2_FooGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.b_.Destroy();
}
void TestOneof2_FooGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestOneof2_FooGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2.FooGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.b_.ClearNonDefaultToEmpty();
  }
  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneof2_FooGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 47, 2> TestOneof2_FooGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_._has_bits_),
    0, // no _extensions_
    10, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966527,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestOneof2_FooGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {68, 68}},
    // optional int32 a = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestOneof2_FooGroup, _impl_.a_), 1>(),
     {72, 1, 0, PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_.a_)}},
    // optional string b = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_.b_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 9;
    {PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_.a_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string b = 10;
    {PROTOBUF_FIELD_OFFSET(TestOneof2_FooGroup, _impl_.b_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\1\0\0\0\0\0"
    "protobuf_unittest.TestOneof2.FooGroup"
    "b"
  }},
};

::uint8_t* TestOneof2_FooGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.FooGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_a(), target);
  }

  // optional string b = 10;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_b();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestOneof2.FooGroup.b");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.FooGroup)
  return target;
}

::size_t TestOneof2_FooGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2.FooGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string b = 10;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_b());
    }

    // optional int32 a = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneof2_FooGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneof2_FooGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneof2_FooGroup::GetClassData() const { return &_class_data_; }


void TestOneof2_FooGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneof2_FooGroup*>(&to_msg);
  auto& from = static_cast<const TestOneof2_FooGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2.FooGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_b(from._internal_b());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneof2_FooGroup::CopyFrom(const TestOneof2_FooGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2.FooGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneof2_FooGroup::IsInitialized() const {
  return true;
}

void TestOneof2_FooGroup::InternalSwap(TestOneof2_FooGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.b_, lhs_arena,
                                       &other->_impl_.b_, rhs_arena);
        swap(_impl_.a_, other->_impl_.a_);
}

::google::protobuf::Metadata TestOneof2_FooGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[77]);
}
// ===================================================================

class TestOneof2_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneof2_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_._has_bits_);
  static void set_has_moo_int(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestOneof2_NestedMessage::TestOneof2_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2.NestedMessage)
}
TestOneof2_NestedMessage::TestOneof2_NestedMessage(const TestOneof2_NestedMessage& from) : ::google::protobuf::Message() {
  TestOneof2_NestedMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.corge_int_){from._impl_.corge_int_},
      decltype(_impl_.moo_int_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.moo_int_ = from._impl_.moo_int_;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2.NestedMessage)
}
inline void TestOneof2_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.corge_int_){arena},
      decltype(_impl_.moo_int_){::int64_t{0}},
  };
}
TestOneof2_NestedMessage::~TestOneof2_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneof2_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.corge_int_.~RepeatedField();
}
void TestOneof2_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestOneof2_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_corge_int()->Clear();
  _impl_.moo_int_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneof2_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TestOneof2_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestOneof2_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 corge_int = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_.corge_int_)}},
    // optional int64 moo_int = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestOneof2_NestedMessage, _impl_.moo_int_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_.moo_int_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 moo_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_.moo_int_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int32 corge_int = 2;
    {PROTOBUF_FIELD_OFFSET(TestOneof2_NestedMessage, _impl_.corge_int_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestOneof2_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 moo_int = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_moo_int(), target);
  }

  // repeated int32 corge_int = 2;
  for (int i = 0, n = this->_internal_corge_int_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_corge_int().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2.NestedMessage)
  return target;
}

::size_t TestOneof2_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 corge_int = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_corge_int())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_corge_int_size());
    ;
    total_size += tag_size + data_size;
  }
  // optional int64 moo_int = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_moo_int());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneof2_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneof2_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneof2_NestedMessage::GetClassData() const { return &_class_data_; }


void TestOneof2_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneof2_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestOneof2_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_corge_int()->MergeFrom(from._internal_corge_int());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_moo_int(from._internal_moo_int());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneof2_NestedMessage::CopyFrom(const TestOneof2_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneof2_NestedMessage::IsInitialized() const {
  return true;
}

void TestOneof2_NestedMessage::InternalSwap(TestOneof2_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.corge_int_.InternalSwap(&other->_impl_.corge_int_);
        swap(_impl_.moo_int_, other->_impl_.moo_int_);
}

::google::protobuf::Metadata TestOneof2_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[78]);
}
// ===================================================================

class TestOneof2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestOneof2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneof2, _impl_._oneof_case_);
  static const ::protobuf_unittest::TestOneof2_NestedMessage& foo_message(const TestOneof2* msg);
  static const ::protobuf_unittest::TestOneof2_FooGroup& foogroup(const TestOneof2* msg);
  static const ::protobuf_unittest::TestOneof2_NestedMessage& foo_lazy_message(const TestOneof2* msg);
  static void set_has_baz_int(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_baz_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestOneof2_NestedMessage& TestOneof2::_Internal::foo_message(const TestOneof2* msg) {
  return *msg->_impl_.foo_.foo_message_;
}
const ::protobuf_unittest::TestOneof2_FooGroup& TestOneof2::_Internal::foogroup(const TestOneof2* msg) {
  return *msg->_impl_.foo_.foogroup_;
}
const ::protobuf_unittest::TestOneof2_NestedMessage& TestOneof2::_Internal::foo_lazy_message(const TestOneof2* msg) {
  return *msg->_impl_.foo_.foo_lazy_message_;
}
void TestOneof2::set_allocated_foo_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foo_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foo_message);
    if (message_arena != submessage_arena) {
      foo_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foo_message, submessage_arena);
    }
    set_has_foo_message();
    _impl_.foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_message)
}
void TestOneof2::set_allocated_foogroup(::protobuf_unittest::TestOneof2_FooGroup* foogroup) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foogroup) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foogroup);
    if (message_arena != submessage_arena) {
      foogroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foogroup, submessage_arena);
    }
    set_has_foogroup();
    _impl_.foo_.foogroup_ = foogroup;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foogroup)
}
void TestOneof2::set_allocated_foo_lazy_message(::protobuf_unittest::TestOneof2_NestedMessage* foo_lazy_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foo_lazy_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foo_lazy_message);
    if (message_arena != submessage_arena) {
      foo_lazy_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foo_lazy_message, submessage_arena);
    }
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ = foo_lazy_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneof2.foo_lazy_message)
}
/*static*/ const ::_pbi::LazyString TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_string_{
    {{"STRING", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_cord_{
    {{"CORD", 4}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_string_piece_{
    {{"SPIECE", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_bar_bytes_{
    {{"BYTES", 5}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_baz_string_{
    {{"BAZ", 3}},
    {nullptr},
};
TestOneof2::TestOneof2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneof2)
}
TestOneof2::TestOneof2(const TestOneof2& from) : ::google::protobuf::Message() {
  TestOneof2* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.baz_string_){},
      decltype(_impl_.baz_int_){},
      decltype(_impl_.foo_){},
      decltype(_impl_.bar_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.baz_string_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.baz_string_.Set(from._internal_baz_string(), _this->GetArenaForAllocation());
  }
  _this->_impl_.baz_int_ = from._impl_.baz_int_;
  clear_has_foo();
  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooCord: {
      _this->_internal_set_foo_cord(from._internal_foo_cord());
      break;
    }
    case kFooStringPiece: {
      _this->_internal_set_foo_string_piece(from._internal_foo_string_piece());
      break;
    }
    case kFooBytes: {
      _this->_internal_set_foo_bytes(from._internal_foo_bytes());
      break;
    }
    case kFooEnum: {
      _this->_internal_set_foo_enum(from._internal_foo_enum());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFoogroup: {
      _this->_internal_mutable_foogroup()->::protobuf_unittest::TestOneof2_FooGroup::MergeFrom(
          from._internal_foogroup());
      break;
    }
    case kFooLazyMessage: {
      _this->_internal_mutable_foo_lazy_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(
          from._internal_foo_lazy_message());
      break;
    }
    case kFooBytesCord: {
      _this->_internal_set_foo_bytes_cord(from._internal_foo_bytes_cord());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  clear_has_bar();
  switch (from.bar_case()) {
    case kBarInt: {
      _this->_internal_set_bar_int(from._internal_bar_int());
      break;
    }
    case kBarString: {
      _this->_internal_set_bar_string(from._internal_bar_string());
      break;
    }
    case kBarCord: {
      _this->_internal_set_bar_cord(from._internal_bar_cord());
      break;
    }
    case kBarStringPiece: {
      _this->_internal_set_bar_string_piece(from._internal_bar_string_piece());
      break;
    }
    case kBarBytes: {
      _this->_internal_set_bar_bytes(from._internal_bar_bytes());
      break;
    }
    case kBarEnum: {
      _this->_internal_set_bar_enum(from._internal_bar_enum());
      break;
    }
    case kBarStringWithEmptyDefault: {
      _this->_internal_set_bar_string_with_empty_default(from._internal_bar_string_with_empty_default());
      break;
    }
    case kBarCordWithEmptyDefault: {
      _this->_internal_set_bar_cord_with_empty_default(from._internal_bar_cord_with_empty_default());
      break;
    }
    case kBarStringPieceWithEmptyDefault: {
      _this->_internal_set_bar_string_piece_with_empty_default(from._internal_bar_string_piece_with_empty_default());
      break;
    }
    case kBarBytesWithEmptyDefault: {
      _this->_internal_set_bar_bytes_with_empty_default(from._internal_bar_bytes_with_empty_default());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneof2)
}
inline void TestOneof2::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.baz_string_){},
      decltype(_impl_.baz_int_){0},
      decltype(_impl_.foo_){},
      decltype(_impl_.bar_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.baz_string_.InitDefault();
  clear_has_foo();
  clear_has_bar();
}
TestOneof2::~TestOneof2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneof2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestOneof2::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.baz_string_.Destroy();
  if (has_foo()) {
    clear_foo();
  }
  if (has_bar()) {
    clear_bar();
  }
}
void TestOneof2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestOneof2::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof2)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      _impl_.foo_.foo_string_.Destroy();
      break;
    }
    case kFooCord: {
      _impl_.foo_.foo_cord_.Destroy();
      break;
    }
    case kFooStringPiece: {
      _impl_.foo_.foo_string_piece_.Destroy();
      break;
    }
    case kFooBytes: {
      _impl_.foo_.foo_bytes_.Destroy();
      break;
    }
    case kFooEnum: {
      // No need to clear
      break;
    }
    case kFooMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_message_;
      }
      break;
    }
    case kFoogroup: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foogroup_;
      }
      break;
    }
    case kFooLazyMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_lazy_message_;
      }
      break;
    }
    case kFooBytesCord: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_bytes_cord_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}

void TestOneof2::clear_bar() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneof2)
  switch (bar_case()) {
    case kBarInt: {
      // No need to clear
      break;
    }
    case kBarString: {
      _impl_.bar_.bar_string_.Destroy();
      break;
    }
    case kBarCord: {
      _impl_.bar_.bar_cord_.Destroy();
      break;
    }
    case kBarStringPiece: {
      _impl_.bar_.bar_string_piece_.Destroy();
      break;
    }
    case kBarBytes: {
      _impl_.bar_.bar_bytes_.Destroy();
      break;
    }
    case kBarEnum: {
      // No need to clear
      break;
    }
    case kBarStringWithEmptyDefault: {
      _impl_.bar_.bar_string_with_empty_default_.Destroy();
      break;
    }
    case kBarCordWithEmptyDefault: {
      _impl_.bar_.bar_cord_with_empty_default_.Destroy();
      break;
    }
    case kBarStringPieceWithEmptyDefault: {
      _impl_.bar_.bar_string_piece_with_empty_default_.Destroy();
      break;
    }
    case kBarBytesWithEmptyDefault: {
      _impl_.bar_.bar_bytes_with_empty_default_.Destroy();
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = BAR_NOT_SET;
}


PROTOBUF_NOINLINE void TestOneof2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneof2)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.baz_string_.ClearToDefault(::protobuf_unittest::TestOneof2::Impl_::_i_give_permission_to_break_this_code_default_baz_string_, GetArenaForAllocation());
  }
  _impl_.baz_int_ = 0;
  clear_foo();
  clear_bar();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestOneof2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 22, 5, 222, 2> TestOneof2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_._has_bits_),
    0, // no _extensions_
    30, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3749708544,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestOneof2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 baz_int = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 1, 0, PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.baz_int_)}},
    // optional string baz_string = 19 [default = "BAZ"];
    {::_pbi::TcParser::FastSS2,
     {410, 0, 0, PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.baz_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 foo_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_int_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // string foo_string = 2;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string foo_cord = 3 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_cord_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string foo_string_piece = 4 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_string_piece_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // bytes foo_bytes = 5;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_enum_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kEnumRange)},
    // .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_message_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // group FooGroup = 8 { ... };
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foogroup_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_lazy_message_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 bar_int = 12 [default = 5];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_int_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // string bar_string = 13 [default = "STRING"];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_string_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string bar_cord = 14 [default = "CORD", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_cord_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_string_piece_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // bytes bar_bytes = 16 [default = "BYTES"];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_bytes_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_enum_), _Internal::kOneofCaseOffset + 4, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kEnumRange)},
    // optional int32 baz_int = 18;
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.baz_int_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string baz_string = 19 [default = "BAZ"];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.baz_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // string bar_string_with_empty_default = 20 [default = ""];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_string_with_empty_default_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string bar_cord_with_empty_default = 21 [default = "", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_cord_with_empty_default_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // string bar_string_piece_with_empty_default = 22 [default = "", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_string_piece_with_empty_default_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // bytes bar_bytes_with_empty_default = 23 [default = ""];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.bar_.bar_bytes_with_empty_default_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes foo_bytes_cord = 30 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneof2, _impl_.foo_.foo_bytes_cord_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepCord)},
  }}, {{
    {1, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOneof2_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOneof2_FooGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestOneof2_NestedMessage>()},
    {1, 3},
  }}, {{
    "\34\0\12\10\20\0\0\0\0\0\0\12\10\20\0\0\0\12\35\33\43\0\0\0"
    "protobuf_unittest.TestOneof2"
    "foo_string"
    "foo_cord"
    "foo_string_piece"
    "bar_string"
    "bar_cord"
    "bar_string_piece"
    "baz_string"
    "bar_string_with_empty_default"
    "bar_cord_with_empty_default"
    "bar_string_piece_with_empty_default"
  }},
};

::uint8_t* TestOneof2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneof2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (foo_case()) {
    case kFooInt: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<1>(
              stream, this->_internal_foo_int(), target);
      break;
    }
    case kFooString: {
      const std::string& _s = this->_internal_foo_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.foo_string");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    case kFooCord: {
      const std::string& _s = this->_internal_foo_cord();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.foo_cord");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    case kFooStringPiece: {
      const std::string& _s = this->_internal_foo_string_piece();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.foo_string_piece");
      target = stream->WriteStringMaybeAliased(4, _s, target);
      break;
    }
    case kFooBytes: {
      const std::string& _s = this->_internal_foo_bytes();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
      break;
    }
    case kFooEnum: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this->_internal_foo_enum(), target);
      break;
    }
    case kFooMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, _Internal::foo_message(this),
          _Internal::foo_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kFoogroup: {
      target = stream->EnsureSpace(target);
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteGroup(
          8, _Internal::foogroup(this), target, stream);
      break;
    }
    case kFooLazyMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, _Internal::foo_lazy_message(this),
          _Internal::foo_lazy_message(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  switch (bar_case()) {
    case kBarInt: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<12>(
              stream, this->_internal_bar_int(), target);
      break;
    }
    case kBarString: {
      const std::string& _s = this->_internal_bar_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_string");
      target = stream->WriteStringMaybeAliased(13, _s, target);
      break;
    }
    case kBarCord: {
      const std::string& _s = this->_internal_bar_cord();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_cord");
      target = stream->WriteStringMaybeAliased(14, _s, target);
      break;
    }
    case kBarStringPiece: {
      const std::string& _s = this->_internal_bar_string_piece();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_string_piece");
      target = stream->WriteStringMaybeAliased(15, _s, target);
      break;
    }
    case kBarBytes: {
      const std::string& _s = this->_internal_bar_bytes();
      target = stream->WriteBytesMaybeAliased(16, _s, target);
      break;
    }
    case kBarEnum: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          17, this->_internal_bar_enum(), target);
      break;
    }
    default:
      break;
  }
  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 baz_int = 18;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this->_internal_baz_int(), target);
  }

  // optional string baz_string = 19 [default = "BAZ"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_baz_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestOneof2.baz_string");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  switch (bar_case()) {
    case kBarStringWithEmptyDefault: {
      const std::string& _s = this->_internal_bar_string_with_empty_default();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_string_with_empty_default");
      target = stream->WriteStringMaybeAliased(20, _s, target);
      break;
    }
    case kBarCordWithEmptyDefault: {
      const std::string& _s = this->_internal_bar_cord_with_empty_default();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_cord_with_empty_default");
      target = stream->WriteStringMaybeAliased(21, _s, target);
      break;
    }
    case kBarStringPieceWithEmptyDefault: {
      const std::string& _s = this->_internal_bar_string_piece_with_empty_default();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestOneof2.bar_string_piece_with_empty_default");
      target = stream->WriteStringMaybeAliased(22, _s, target);
      break;
    }
    case kBarBytesWithEmptyDefault: {
      const std::string& _s = this->_internal_bar_bytes_with_empty_default();
      target = stream->WriteBytesMaybeAliased(23, _s, target);
      break;
    }
    default:
      break;
  }
  // bytes foo_bytes_cord = 30 [ctype = CORD];
  if (foo_case() == kFooBytesCord) {
    target = stream->WriteBytes(30, this->_internal_foo_bytes_cord(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneof2)
  return target;
}

::size_t TestOneof2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneof2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string baz_string = 19 [default = "BAZ"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_baz_string());
    }

    // optional int32 baz_int = 18;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_baz_int());
    }

  }
  switch (foo_case()) {
    // int32 foo_int = 1;
    case kFooInt: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_int());
      break;
    }
    // string foo_string = 2;
    case kFooString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_string());
      break;
    }
    // string foo_cord = 3 [ctype = CORD];
    case kFooCord: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_cord());
      break;
    }
    // string foo_string_piece = 4 [ctype = STRING_PIECE];
    case kFooStringPiece: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_string_piece());
      break;
    }
    // bytes foo_bytes = 5;
    case kFooBytes: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_foo_bytes());
      break;
    }
    // .protobuf_unittest.TestOneof2.NestedEnum foo_enum = 6;
    case kFooEnum: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_foo_enum());
      break;
    }
    // .protobuf_unittest.TestOneof2.NestedMessage foo_message = 7;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_.foo_message_);
      break;
    }
    // group FooGroup = 8 { ... };
    case kFoogroup: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.foo_.foogroup_);
      break;
    }
    // .protobuf_unittest.TestOneof2.NestedMessage foo_lazy_message = 11 [lazy = true];
    case kFooLazyMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_.foo_lazy_message_);
      break;
    }
    // bytes foo_bytes_cord = 30 [ctype = CORD];
    case kFooBytesCord: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->_internal_foo_bytes_cord());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (bar_case()) {
    // int32 bar_int = 12 [default = 5];
    case kBarInt: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bar_int());
      break;
    }
    // string bar_string = 13 [default = "STRING"];
    case kBarString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_string());
      break;
    }
    // string bar_cord = 14 [default = "CORD", ctype = CORD];
    case kBarCord: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_cord());
      break;
    }
    // string bar_string_piece = 15 [default = "SPIECE", ctype = STRING_PIECE];
    case kBarStringPiece: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_string_piece());
      break;
    }
    // bytes bar_bytes = 16 [default = "BYTES"];
    case kBarBytes: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bar_bytes());
      break;
    }
    // .protobuf_unittest.TestOneof2.NestedEnum bar_enum = 17 [default = BAR];
    case kBarEnum: {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_bar_enum());
      break;
    }
    // string bar_string_with_empty_default = 20 [default = ""];
    case kBarStringWithEmptyDefault: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_string_with_empty_default());
      break;
    }
    // string bar_cord_with_empty_default = 21 [default = "", ctype = CORD];
    case kBarCordWithEmptyDefault: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_cord_with_empty_default());
      break;
    }
    // string bar_string_piece_with_empty_default = 22 [default = "", ctype = STRING_PIECE];
    case kBarStringPieceWithEmptyDefault: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bar_string_piece_with_empty_default());
      break;
    }
    // bytes bar_bytes_with_empty_default = 23 [default = ""];
    case kBarBytesWithEmptyDefault: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bar_bytes_with_empty_default());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestOneof2::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestOneof2::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestOneof2::GetClassData() const { return &_class_data_; }


void TestOneof2::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestOneof2*>(&to_msg);
  auto& from = static_cast<const TestOneof2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneof2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_baz_string(from._internal_baz_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.baz_int_ = from._impl_.baz_int_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooCord: {
      _this->_internal_set_foo_cord(from._internal_foo_cord());
      break;
    }
    case kFooStringPiece: {
      _this->_internal_set_foo_string_piece(from._internal_foo_string_piece());
      break;
    }
    case kFooBytes: {
      _this->_internal_set_foo_bytes(from._internal_foo_bytes());
      break;
    }
    case kFooEnum: {
      _this->_internal_set_foo_enum(from._internal_foo_enum());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFoogroup: {
      _this->_internal_mutable_foogroup()->::protobuf_unittest::TestOneof2_FooGroup::MergeFrom(
          from._internal_foogroup());
      break;
    }
    case kFooLazyMessage: {
      _this->_internal_mutable_foo_lazy_message()->::protobuf_unittest::TestOneof2_NestedMessage::MergeFrom(
          from._internal_foo_lazy_message());
      break;
    }
    case kFooBytesCord: {
      _this->_internal_set_foo_bytes_cord(from._internal_foo_bytes_cord());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  switch (from.bar_case()) {
    case kBarInt: {
      _this->_internal_set_bar_int(from._internal_bar_int());
      break;
    }
    case kBarString: {
      _this->_internal_set_bar_string(from._internal_bar_string());
      break;
    }
    case kBarCord: {
      _this->_internal_set_bar_cord(from._internal_bar_cord());
      break;
    }
    case kBarStringPiece: {
      _this->_internal_set_bar_string_piece(from._internal_bar_string_piece());
      break;
    }
    case kBarBytes: {
      _this->_internal_set_bar_bytes(from._internal_bar_bytes());
      break;
    }
    case kBarEnum: {
      _this->_internal_set_bar_enum(from._internal_bar_enum());
      break;
    }
    case kBarStringWithEmptyDefault: {
      _this->_internal_set_bar_string_with_empty_default(from._internal_bar_string_with_empty_default());
      break;
    }
    case kBarCordWithEmptyDefault: {
      _this->_internal_set_bar_cord_with_empty_default(from._internal_bar_cord_with_empty_default());
      break;
    }
    case kBarStringPieceWithEmptyDefault: {
      _this->_internal_set_bar_string_piece_with_empty_default(from._internal_bar_string_piece_with_empty_default());
      break;
    }
    case kBarBytesWithEmptyDefault: {
      _this->_internal_set_bar_bytes_with_empty_default(from._internal_bar_bytes_with_empty_default());
      break;
    }
    case BAR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestOneof2::CopyFrom(const TestOneof2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneof2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneof2::IsInitialized() const {
  return true;
}

void TestOneof2::InternalSwap(TestOneof2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.baz_string_, lhs_arena,
                                       &other->_impl_.baz_string_, rhs_arena);
        swap(_impl_.baz_int_, other->_impl_.baz_int_);
  swap(_impl_.foo_, other->_impl_.foo_);
  swap(_impl_.bar_, other->_impl_.bar_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata TestOneof2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[79]);
}
// ===================================================================

class TestRequiredOneof_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestRequiredOneof_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _impl_._has_bits_);
  static void set_has_required_double(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}
TestRequiredOneof_NestedMessage::TestRequiredOneof_NestedMessage(const TestRequiredOneof_NestedMessage& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
}
inline void TestRequiredOneof_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.required_double_){0},
  };
}
TestRequiredOneof_NestedMessage::~TestRequiredOneof_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRequiredOneof_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestRequiredOneof_NestedMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRequiredOneof_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.required_double_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRequiredOneof_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestRequiredOneof_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestRequiredOneof_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required double required_double = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _impl_.required_double_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required double required_double = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredOneof_NestedMessage, _impl_.required_double_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestRequiredOneof_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required double required_double = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_required_double(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof.NestedMessage)
  return target;
}

::size_t TestRequiredOneof_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required double required_double = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRequiredOneof_NestedMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRequiredOneof_NestedMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRequiredOneof_NestedMessage::GetClassData() const { return &_class_data_; }


void TestRequiredOneof_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRequiredOneof_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestRequiredOneof_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_required_double(from._internal_required_double());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequiredOneof_NestedMessage::CopyFrom(const TestRequiredOneof_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredOneof.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredOneof_NestedMessage::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TestRequiredOneof_NestedMessage::InternalSwap(TestRequiredOneof_NestedMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.required_double_, other->_impl_.required_double_);
}

::google::protobuf::Metadata TestRequiredOneof_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[80]);
}
// ===================================================================

class TestRequiredOneof::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestRequiredOneof, _impl_._oneof_case_);
  static const ::protobuf_unittest::TestRequiredOneof_NestedMessage& foo_message(const TestRequiredOneof* msg);
  static const ::protobuf_unittest::TestRequiredOneof_NestedMessage& foo_lazy_message(const TestRequiredOneof* msg);
};

const ::protobuf_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::_Internal::foo_message(const TestRequiredOneof* msg) {
  return *msg->_impl_.foo_.foo_message_;
}
const ::protobuf_unittest::TestRequiredOneof_NestedMessage& TestRequiredOneof::_Internal::foo_lazy_message(const TestRequiredOneof* msg) {
  return *msg->_impl_.foo_.foo_lazy_message_;
}
void TestRequiredOneof::set_allocated_foo_message(::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foo_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foo_message);
    if (message_arena != submessage_arena) {
      foo_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foo_message, submessage_arena);
    }
    set_has_foo_message();
    _impl_.foo_.foo_message_ = foo_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRequiredOneof.foo_message)
}
void TestRequiredOneof::set_allocated_foo_lazy_message(::protobuf_unittest::TestRequiredOneof_NestedMessage* foo_lazy_message) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_foo();
  if (foo_lazy_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(foo_lazy_message);
    if (message_arena != submessage_arena) {
      foo_lazy_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, foo_lazy_message, submessage_arena);
    }
    set_has_foo_lazy_message();
    _impl_.foo_.foo_lazy_message_ = foo_lazy_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestRequiredOneof.foo_lazy_message)
}
TestRequiredOneof::TestRequiredOneof(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRequiredOneof)
}
TestRequiredOneof::TestRequiredOneof(const TestRequiredOneof& from) : ::google::protobuf::Message() {
  TestRequiredOneof* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.foo_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  clear_has_foo();
  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFooLazyMessage: {
      _this->_internal_mutable_foo_lazy_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(
          from._internal_foo_lazy_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRequiredOneof)
}
inline void TestRequiredOneof::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.foo_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_foo();
}
TestRequiredOneof::~TestRequiredOneof() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRequiredOneof)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRequiredOneof::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_foo()) {
    clear_foo();
  }
}
void TestRequiredOneof::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestRequiredOneof::clear_foo() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestRequiredOneof)
  switch (foo_case()) {
    case kFooInt: {
      // No need to clear
      break;
    }
    case kFooString: {
      _impl_.foo_.foo_string_.Destroy();
      break;
    }
    case kFooMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_message_;
      }
      break;
    }
    case kFooLazyMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.foo_.foo_lazy_message_;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FOO_NOT_SET;
}


PROTOBUF_NOINLINE void TestRequiredOneof::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRequiredOneof)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foo();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRequiredOneof::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 2, 54, 2> TestRequiredOneof::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestRequiredOneof_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 foo_int = 1;
    {PROTOBUF_FIELD_OFFSET(TestRequiredOneof, _impl_.foo_.foo_int_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // string foo_string = 2;
    {PROTOBUF_FIELD_OFFSET(TestRequiredOneof, _impl_.foo_.foo_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
    {PROTOBUF_FIELD_OFFSET(TestRequiredOneof, _impl_.foo_.foo_message_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .protobuf_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestRequiredOneof, _impl_.foo_.foo_lazy_message_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequiredOneof_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequiredOneof_NestedMessage>()},
  }}, {{
    "\43\0\12\0\0\0\0\0"
    "protobuf_unittest.TestRequiredOneof"
    "foo_string"
  }},
};

::uint8_t* TestRequiredOneof::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRequiredOneof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (foo_case()) {
    case kFooInt: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<1>(
              stream, this->_internal_foo_int(), target);
      break;
    }
    case kFooString: {
      const std::string& _s = this->_internal_foo_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestRequiredOneof.foo_string");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    case kFooMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::foo_message(this),
          _Internal::foo_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kFooLazyMessage: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, _Internal::foo_lazy_message(this),
          _Internal::foo_lazy_message(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRequiredOneof)
  return target;
}

::size_t TestRequiredOneof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRequiredOneof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foo_case()) {
    // int32 foo_int = 1;
    case kFooInt: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_int());
      break;
    }
    // string foo_string = 2;
    case kFooString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_foo_string());
      break;
    }
    // .protobuf_unittest.TestRequiredOneof.NestedMessage foo_message = 3;
    case kFooMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_.foo_message_);
      break;
    }
    // .protobuf_unittest.TestRequiredOneof.NestedMessage foo_lazy_message = 4 [lazy = true];
    case kFooLazyMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.foo_.foo_lazy_message_);
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRequiredOneof::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRequiredOneof::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRequiredOneof::GetClassData() const { return &_class_data_; }


void TestRequiredOneof::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRequiredOneof*>(&to_msg);
  auto& from = static_cast<const TestRequiredOneof&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRequiredOneof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foo_case()) {
    case kFooInt: {
      _this->_internal_set_foo_int(from._internal_foo_int());
      break;
    }
    case kFooString: {
      _this->_internal_set_foo_string(from._internal_foo_string());
      break;
    }
    case kFooMessage: {
      _this->_internal_mutable_foo_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(
          from._internal_foo_message());
      break;
    }
    case kFooLazyMessage: {
      _this->_internal_mutable_foo_lazy_message()->::protobuf_unittest::TestRequiredOneof_NestedMessage::MergeFrom(
          from._internal_foo_lazy_message());
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRequiredOneof::CopyFrom(const TestRequiredOneof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRequiredOneof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRequiredOneof::IsInitialized() const {
  switch (foo_case()) {
    case kFooInt: {
      break;
    }
    case kFooString: {
      break;
    }
    case kFooMessage: {
      if (foo_case() == kFooMessage) {
        if (!_impl_.foo_.foo_message_->IsInitialized()) return false;
      }
      break;
    }
    case kFooLazyMessage: {
      if (foo_case() == kFooLazyMessage) {
        if (!_impl_.foo_.foo_lazy_message_->IsInitialized()) return false;
      }
      break;
    }
    case FOO_NOT_SET: {
      break;
    }
  }
  return true;
}

void TestRequiredOneof::InternalSwap(TestRequiredOneof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.foo_, other->_impl_.foo_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestRequiredOneof::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[81]);
}
// ===================================================================

class TestPackedTypes::_Internal {
 public:
};

TestPackedTypes::TestPackedTypes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedTypes)
}
TestPackedTypes::TestPackedTypes(const TestPackedTypes& from) : ::google::protobuf::Message() {
  TestPackedTypes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.packed_int32_){from._impl_.packed_int32_},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_int64_){from._impl_.packed_int64_},
      /* _impl_._packed_int64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_uint32_){from._impl_.packed_uint32_},
      /* _impl_._packed_uint32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_uint64_){from._impl_.packed_uint64_},
      /* _impl_._packed_uint64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_sint32_){from._impl_.packed_sint32_},
      /* _impl_._packed_sint32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_sint64_){from._impl_.packed_sint64_},
      /* _impl_._packed_sint64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_fixed32_){from._impl_.packed_fixed32_},
      decltype(_impl_.packed_fixed64_){from._impl_.packed_fixed64_},
      decltype(_impl_.packed_sfixed32_){from._impl_.packed_sfixed32_},
      decltype(_impl_.packed_sfixed64_){from._impl_.packed_sfixed64_},
      decltype(_impl_.packed_float_){from._impl_.packed_float_},
      decltype(_impl_.packed_double_){from._impl_.packed_double_},
      decltype(_impl_.packed_bool_){from._impl_.packed_bool_},
      decltype(_impl_.packed_enum_){from._internal_packed_enum()},
      /*decltype(_impl_._packed_enum_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedTypes)
}
inline void TestPackedTypes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.packed_int32_){arena},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_int64_){arena},
      /* _impl_._packed_int64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_uint32_){arena},
      /* _impl_._packed_uint32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_uint64_){arena},
      /* _impl_._packed_uint64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_sint32_){arena},
      /* _impl_._packed_sint32_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_sint64_){arena},
      /* _impl_._packed_sint64_cached_byte_size_ = */ {0},
      decltype(_impl_.packed_fixed32_){arena},
      decltype(_impl_.packed_fixed64_){arena},
      decltype(_impl_.packed_sfixed32_){arena},
      decltype(_impl_.packed_sfixed64_){arena},
      decltype(_impl_.packed_float_){arena},
      decltype(_impl_.packed_double_){arena},
      decltype(_impl_.packed_bool_){arena},
      decltype(_impl_.packed_enum_){arena},
      /*decltype(_impl_._packed_enum_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestPackedTypes::~TestPackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPackedTypes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.packed_int32_.~RepeatedField();
  _impl_.packed_int64_.~RepeatedField();
  _impl_.packed_uint32_.~RepeatedField();
  _impl_.packed_uint64_.~RepeatedField();
  _impl_.packed_sint32_.~RepeatedField();
  _impl_.packed_sint64_.~RepeatedField();
  _impl_.packed_fixed32_.~RepeatedField();
  _impl_.packed_fixed64_.~RepeatedField();
  _impl_.packed_sfixed32_.~RepeatedField();
  _impl_.packed_sfixed64_.~RepeatedField();
  _impl_.packed_float_.~RepeatedField();
  _impl_.packed_double_.~RepeatedField();
  _impl_.packed_bool_.~RepeatedField();
  _internal_mutable_packed_enum()->~RepeatedField();
}
void TestPackedTypes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestPackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedTypes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_packed_int32()->Clear();
  _internal_mutable_packed_int64()->Clear();
  _internal_mutable_packed_uint32()->Clear();
  _internal_mutable_packed_uint64()->Clear();
  _internal_mutable_packed_sint32()->Clear();
  _internal_mutable_packed_sint64()->Clear();
  _internal_mutable_packed_fixed32()->Clear();
  _internal_mutable_packed_fixed64()->Clear();
  _internal_mutable_packed_sfixed32()->Clear();
  _internal_mutable_packed_sfixed64()->Clear();
  _internal_mutable_packed_float()->Clear();
  _internal_mutable_packed_double()->Clear();
  _internal_mutable_packed_bool()->Clear();
  _internal_mutable_packed_enum()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestPackedTypes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 0, 7> TestPackedTypes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    103, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestPackedTypes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1666, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed32_)}},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1674, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed64_)}},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1682, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed32_)}},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1690, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed64_)}},
    // repeated float packed_float = 100 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1698, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_float_)}},
    // repeated double packed_double = 101 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1706, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_double_)}},
    // repeated bool packed_bool = 102 [packed = true];
    {::_pbi::TcParser::FastV8P2,
     {1714, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_bool_)}},
    // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
    {::_pbi::TcParser::FastErP2,
     {1722, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 packed_int32 = 90 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1490, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int32_)}},
    // repeated int64 packed_int64 = 91 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1498, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int64_)}},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1506, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint32_)}},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1514, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint64_)}},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {::_pbi::TcParser::FastZ32P2,
     {1522, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint32_)}},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {::_pbi::TcParser::FastZ64P2,
     {1530, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint64_)}},
  }}, {{
    90, 0, 1,
    49152, 0,
    65535, 65535
  }}, {{
    // repeated int32 packed_int32 = 90 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 packed_int64 = 91 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed32)},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_sfixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed64)},
    // repeated float packed_float = 100 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double packed_double = 101 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_double_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool packed_bool = 102 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_bool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypes, _impl_.packed_enum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
  }}, {{
    {4, 3},
  }}, {{
  }},
};

::uint8_t* TestPackedTypes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedTypes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    int byte_size = _impl_._packed_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(90, _internal_packed_int32(),
                                                 byte_size, target);
    }
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  {
    int byte_size = _impl_._packed_int64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(91, _internal_packed_int64(),
                                                 byte_size, target);
    }
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    int byte_size = _impl_._packed_uint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(92, _internal_packed_uint32(),
                                                 byte_size, target);
    }
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    int byte_size = _impl_._packed_uint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(93, _internal_packed_uint64(),
                                                 byte_size, target);
    }
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    int byte_size = _impl_._packed_sint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(94, _internal_packed_sint32(),
                                                 byte_size, target);
    }
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    int byte_size = _impl_._packed_sint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt64Packed(95, _internal_packed_sint64(),
                                                 byte_size, target);
    }
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->_internal_packed_fixed32_size() > 0) {
    target = stream->WriteFixedPacked(96, _internal_packed_fixed32(), target);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->_internal_packed_fixed64_size() > 0) {
    target = stream->WriteFixedPacked(97, _internal_packed_fixed64(), target);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->_internal_packed_sfixed32_size() > 0) {
    target = stream->WriteFixedPacked(98, _internal_packed_sfixed32(), target);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->_internal_packed_sfixed64_size() > 0) {
    target = stream->WriteFixedPacked(99, _internal_packed_sfixed64(), target);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->_internal_packed_float_size() > 0) {
    target = stream->WriteFixedPacked(100, _internal_packed_float(), target);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->_internal_packed_double_size() > 0) {
    target = stream->WriteFixedPacked(101, _internal_packed_double(), target);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->_internal_packed_bool_size() > 0) {
    target = stream->WriteFixedPacked(102, _internal_packed_bool(), target);
  }

  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  {
    int byte_size = _impl_._packed_enum_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(103, _internal_packed_enum(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedTypes)
  return target;
}

::size_t TestPackedTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedTypes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32())
    ;
    _impl_._packed_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 packed_int64 = 91 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_packed_int64())
    ;
    _impl_._packed_int64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_packed_uint32())
    ;
    _impl_._packed_uint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_packed_uint64())
    ;
    _impl_._packed_uint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_packed_sint32())
    ;
    _impl_._packed_sint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_packed_sint64())
    ;
    _impl_._packed_sint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_fixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_fixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_sfixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_sfixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float packed_float = 100 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_float_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double packed_double = 101 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_double_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool packed_bool = 102 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_packed_bool_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .protobuf_unittest.ForeignEnum packed_enum = 103 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_enum_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestPackedTypes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestPackedTypes::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestPackedTypes::GetClassData() const { return &_class_data_; }


void TestPackedTypes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestPackedTypes*>(&to_msg);
  auto& from = static_cast<const TestPackedTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packed_int32()->MergeFrom(from._internal_packed_int32());
  _this->_internal_mutable_packed_int64()->MergeFrom(from._internal_packed_int64());
  _this->_internal_mutable_packed_uint32()->MergeFrom(from._internal_packed_uint32());
  _this->_internal_mutable_packed_uint64()->MergeFrom(from._internal_packed_uint64());
  _this->_internal_mutable_packed_sint32()->MergeFrom(from._internal_packed_sint32());
  _this->_internal_mutable_packed_sint64()->MergeFrom(from._internal_packed_sint64());
  _this->_internal_mutable_packed_fixed32()->MergeFrom(from._internal_packed_fixed32());
  _this->_internal_mutable_packed_fixed64()->MergeFrom(from._internal_packed_fixed64());
  _this->_internal_mutable_packed_sfixed32()->MergeFrom(from._internal_packed_sfixed32());
  _this->_internal_mutable_packed_sfixed64()->MergeFrom(from._internal_packed_sfixed64());
  _this->_internal_mutable_packed_float()->MergeFrom(from._internal_packed_float());
  _this->_internal_mutable_packed_double()->MergeFrom(from._internal_packed_double());
  _this->_internal_mutable_packed_bool()->MergeFrom(from._internal_packed_bool());
  _this->_internal_mutable_packed_enum()->MergeFrom(from._internal_packed_enum());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPackedTypes::CopyFrom(const TestPackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPackedTypes::IsInitialized() const {
  return true;
}

void TestPackedTypes::InternalSwap(TestPackedTypes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packed_int32_.InternalSwap(&other->_impl_.packed_int32_);
  _impl_.packed_int64_.InternalSwap(&other->_impl_.packed_int64_);
  _impl_.packed_uint32_.InternalSwap(&other->_impl_.packed_uint32_);
  _impl_.packed_uint64_.InternalSwap(&other->_impl_.packed_uint64_);
  _impl_.packed_sint32_.InternalSwap(&other->_impl_.packed_sint32_);
  _impl_.packed_sint64_.InternalSwap(&other->_impl_.packed_sint64_);
  _impl_.packed_fixed32_.InternalSwap(&other->_impl_.packed_fixed32_);
  _impl_.packed_fixed64_.InternalSwap(&other->_impl_.packed_fixed64_);
  _impl_.packed_sfixed32_.InternalSwap(&other->_impl_.packed_sfixed32_);
  _impl_.packed_sfixed64_.InternalSwap(&other->_impl_.packed_sfixed64_);
  _impl_.packed_float_.InternalSwap(&other->_impl_.packed_float_);
  _impl_.packed_double_.InternalSwap(&other->_impl_.packed_double_);
  _impl_.packed_bool_.InternalSwap(&other->_impl_.packed_bool_);
  _impl_.packed_enum_.InternalSwap(&other->_impl_.packed_enum_);
}

::google::protobuf::Metadata TestPackedTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[82]);
}
// ===================================================================

class TestUnpackedTypes::_Internal {
 public:
};

TestUnpackedTypes::TestUnpackedTypes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestUnpackedTypes)
}
TestUnpackedTypes::TestUnpackedTypes(const TestUnpackedTypes& from) : ::google::protobuf::Message() {
  TestUnpackedTypes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unpacked_int32_){from._impl_.unpacked_int32_},
      decltype(_impl_.unpacked_int64_){from._impl_.unpacked_int64_},
      decltype(_impl_.unpacked_uint32_){from._impl_.unpacked_uint32_},
      decltype(_impl_.unpacked_uint64_){from._impl_.unpacked_uint64_},
      decltype(_impl_.unpacked_sint32_){from._impl_.unpacked_sint32_},
      decltype(_impl_.unpacked_sint64_){from._impl_.unpacked_sint64_},
      decltype(_impl_.unpacked_fixed32_){from._impl_.unpacked_fixed32_},
      decltype(_impl_.unpacked_fixed64_){from._impl_.unpacked_fixed64_},
      decltype(_impl_.unpacked_sfixed32_){from._impl_.unpacked_sfixed32_},
      decltype(_impl_.unpacked_sfixed64_){from._impl_.unpacked_sfixed64_},
      decltype(_impl_.unpacked_float_){from._impl_.unpacked_float_},
      decltype(_impl_.unpacked_double_){from._impl_.unpacked_double_},
      decltype(_impl_.unpacked_bool_){from._impl_.unpacked_bool_},
      decltype(_impl_.unpacked_enum_){from._internal_unpacked_enum()},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedTypes)
}
inline void TestUnpackedTypes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.unpacked_int32_){arena},
      decltype(_impl_.unpacked_int64_){arena},
      decltype(_impl_.unpacked_uint32_){arena},
      decltype(_impl_.unpacked_uint64_){arena},
      decltype(_impl_.unpacked_sint32_){arena},
      decltype(_impl_.unpacked_sint64_){arena},
      decltype(_impl_.unpacked_fixed32_){arena},
      decltype(_impl_.unpacked_fixed64_){arena},
      decltype(_impl_.unpacked_sfixed32_){arena},
      decltype(_impl_.unpacked_sfixed64_){arena},
      decltype(_impl_.unpacked_float_){arena},
      decltype(_impl_.unpacked_double_){arena},
      decltype(_impl_.unpacked_bool_){arena},
      decltype(_impl_.unpacked_enum_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestUnpackedTypes::~TestUnpackedTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestUnpackedTypes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unpacked_int32_.~RepeatedField();
  _impl_.unpacked_int64_.~RepeatedField();
  _impl_.unpacked_uint32_.~RepeatedField();
  _impl_.unpacked_uint64_.~RepeatedField();
  _impl_.unpacked_sint32_.~RepeatedField();
  _impl_.unpacked_sint64_.~RepeatedField();
  _impl_.unpacked_fixed32_.~RepeatedField();
  _impl_.unpacked_fixed64_.~RepeatedField();
  _impl_.unpacked_sfixed32_.~RepeatedField();
  _impl_.unpacked_sfixed64_.~RepeatedField();
  _impl_.unpacked_float_.~RepeatedField();
  _impl_.unpacked_double_.~RepeatedField();
  _impl_.unpacked_bool_.~RepeatedField();
  _internal_mutable_unpacked_enum()->~RepeatedField();
}
void TestUnpackedTypes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestUnpackedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestUnpackedTypes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_unpacked_int32()->Clear();
  _internal_mutable_unpacked_int64()->Clear();
  _internal_mutable_unpacked_uint32()->Clear();
  _internal_mutable_unpacked_uint64()->Clear();
  _internal_mutable_unpacked_sint32()->Clear();
  _internal_mutable_unpacked_sint64()->Clear();
  _internal_mutable_unpacked_fixed32()->Clear();
  _internal_mutable_unpacked_fixed64()->Clear();
  _internal_mutable_unpacked_sfixed32()->Clear();
  _internal_mutable_unpacked_sfixed64()->Clear();
  _internal_mutable_unpacked_float()->Clear();
  _internal_mutable_unpacked_double()->Clear();
  _internal_mutable_unpacked_bool()->Clear();
  _internal_mutable_unpacked_enum()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestUnpackedTypes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 0, 7> TestUnpackedTypes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    103, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestUnpackedTypes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
    {::_pbi::TcParser::FastF32R2,
     {1669, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_fixed32_)}},
    // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
    {::_pbi::TcParser::FastF64R2,
     {1673, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_fixed64_)}},
    // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
    {::_pbi::TcParser::FastF32R2,
     {1685, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sfixed32_)}},
    // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
    {::_pbi::TcParser::FastF64R2,
     {1689, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sfixed64_)}},
    // repeated float unpacked_float = 100 [packed = false];
    {::_pbi::TcParser::FastF32R2,
     {1701, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_float_)}},
    // repeated double unpacked_double = 101 [packed = false];
    {::_pbi::TcParser::FastF64R2,
     {1705, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_double_)}},
    // repeated bool unpacked_bool = 102 [packed = false];
    {::_pbi::TcParser::FastV8R2,
     {1712, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_bool_)}},
    // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
    {::_pbi::TcParser::FastErR2,
     {1720, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 unpacked_int32 = 90 [packed = false];
    {::_pbi::TcParser::FastV32R2,
     {1488, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_int32_)}},
    // repeated int64 unpacked_int64 = 91 [packed = false];
    {::_pbi::TcParser::FastV64R2,
     {1496, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_int64_)}},
    // repeated uint32 unpacked_uint32 = 92 [packed = false];
    {::_pbi::TcParser::FastV32R2,
     {1504, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_uint32_)}},
    // repeated uint64 unpacked_uint64 = 93 [packed = false];
    {::_pbi::TcParser::FastV64R2,
     {1512, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_uint64_)}},
    // repeated sint32 unpacked_sint32 = 94 [packed = false];
    {::_pbi::TcParser::FastZ32R2,
     {1520, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sint32_)}},
    // repeated sint64 unpacked_sint64 = 95 [packed = false];
    {::_pbi::TcParser::FastZ64R2,
     {1528, 63, 0, PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sint64_)}},
  }}, {{
    90, 0, 1,
    49152, 0,
    65535, 65535
  }}, {{
    // repeated int32 unpacked_int32 = 90 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int64 unpacked_int64 = 91 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated uint32 unpacked_uint32 = 92 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_uint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint64 unpacked_uint64 = 93 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // repeated sint32 unpacked_sint32 = 94 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt32)},
    // repeated sint64 unpacked_sint64 = 95 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt64)},
    // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
    // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
    // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sfixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed32)},
    // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_sfixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed64)},
    // repeated float unpacked_float = 100 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated double unpacked_double = 101 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_double_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated bool unpacked_bool = 102 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_bool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestUnpackedTypes, _impl_.unpacked_enum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
  }}, {{
    {4, 3},
  }}, {{
  }},
};

::uint8_t* TestUnpackedTypes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedTypes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 unpacked_int32 = 90 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        90, this->_internal_unpacked_int32().Get(i), target);
  }

  // repeated int64 unpacked_int64 = 91 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_int64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        91, this->_internal_unpacked_int64().Get(i), target);
  }

  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_uint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        92, this->_internal_unpacked_uint32().Get(i), target);
  }

  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_uint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        93, this->_internal_unpacked_uint64().Get(i), target);
  }

  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_sint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        94, this->_internal_unpacked_sint32().Get(i), target);
  }

  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_sint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        95, this->_internal_unpacked_sint64().Get(i), target);
  }

  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_fixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        96, this->_internal_unpacked_fixed32().Get(i), target);
  }

  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_fixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        97, this->_internal_unpacked_fixed64().Get(i), target);
  }

  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_sfixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        98, this->_internal_unpacked_sfixed32().Get(i), target);
  }

  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_sfixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        99, this->_internal_unpacked_sfixed64().Get(i), target);
  }

  // repeated float unpacked_float = 100 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_float_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        100, this->_internal_unpacked_float().Get(i), target);
  }

  // repeated double unpacked_double = 101 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_double_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        101, this->_internal_unpacked_double().Get(i), target);
  }

  // repeated bool unpacked_bool = 102 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_bool_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        102, this->_internal_unpacked_bool().Get(i), target);
  }

  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  for (int i = 0, n = this->_internal_unpacked_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        103, static_cast<::protobuf_unittest::ForeignEnum>(this->_internal_unpacked_enum().Get(i)),
        target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedTypes)
  return target;
}

::size_t TestUnpackedTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestUnpackedTypes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 unpacked_int32 = 90 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_unpacked_int32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 unpacked_int64 = 91 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_unpacked_int64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_int64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 unpacked_uint32 = 92 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_unpacked_uint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_uint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 unpacked_uint64 = 93 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_unpacked_uint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_uint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 unpacked_sint32 = 94 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_unpacked_sint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 unpacked_sint64 = 95 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_unpacked_sint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 unpacked_fixed32 = 96 [packed = false];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_unpacked_fixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_fixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 unpacked_fixed64 = 97 [packed = false];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_unpacked_fixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_fixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 unpacked_sfixed32 = 98 [packed = false];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sfixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sfixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 unpacked_sfixed64 = 99 [packed = false];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sfixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_sfixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float unpacked_float = 100 [packed = false];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_unpacked_float_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_float_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated double unpacked_double = 101 [packed = false];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_unpacked_double_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_double_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool unpacked_bool = 102 [packed = false];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_unpacked_bool_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_unpacked_bool_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated .protobuf_unittest.ForeignEnum unpacked_enum = 103 [packed = false];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_unpacked_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_unpacked_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestUnpackedTypes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestUnpackedTypes::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestUnpackedTypes::GetClassData() const { return &_class_data_; }


void TestUnpackedTypes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestUnpackedTypes*>(&to_msg);
  auto& from = static_cast<const TestUnpackedTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestUnpackedTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_unpacked_int32()->MergeFrom(from._internal_unpacked_int32());
  _this->_internal_mutable_unpacked_int64()->MergeFrom(from._internal_unpacked_int64());
  _this->_internal_mutable_unpacked_uint32()->MergeFrom(from._internal_unpacked_uint32());
  _this->_internal_mutable_unpacked_uint64()->MergeFrom(from._internal_unpacked_uint64());
  _this->_internal_mutable_unpacked_sint32()->MergeFrom(from._internal_unpacked_sint32());
  _this->_internal_mutable_unpacked_sint64()->MergeFrom(from._internal_unpacked_sint64());
  _this->_internal_mutable_unpacked_fixed32()->MergeFrom(from._internal_unpacked_fixed32());
  _this->_internal_mutable_unpacked_fixed64()->MergeFrom(from._internal_unpacked_fixed64());
  _this->_internal_mutable_unpacked_sfixed32()->MergeFrom(from._internal_unpacked_sfixed32());
  _this->_internal_mutable_unpacked_sfixed64()->MergeFrom(from._internal_unpacked_sfixed64());
  _this->_internal_mutable_unpacked_float()->MergeFrom(from._internal_unpacked_float());
  _this->_internal_mutable_unpacked_double()->MergeFrom(from._internal_unpacked_double());
  _this->_internal_mutable_unpacked_bool()->MergeFrom(from._internal_unpacked_bool());
  _this->_internal_mutable_unpacked_enum()->MergeFrom(from._internal_unpacked_enum());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestUnpackedTypes::CopyFrom(const TestUnpackedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestUnpackedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestUnpackedTypes::IsInitialized() const {
  return true;
}

void TestUnpackedTypes::InternalSwap(TestUnpackedTypes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unpacked_int32_.InternalSwap(&other->_impl_.unpacked_int32_);
  _impl_.unpacked_int64_.InternalSwap(&other->_impl_.unpacked_int64_);
  _impl_.unpacked_uint32_.InternalSwap(&other->_impl_.unpacked_uint32_);
  _impl_.unpacked_uint64_.InternalSwap(&other->_impl_.unpacked_uint64_);
  _impl_.unpacked_sint32_.InternalSwap(&other->_impl_.unpacked_sint32_);
  _impl_.unpacked_sint64_.InternalSwap(&other->_impl_.unpacked_sint64_);
  _impl_.unpacked_fixed32_.InternalSwap(&other->_impl_.unpacked_fixed32_);
  _impl_.unpacked_fixed64_.InternalSwap(&other->_impl_.unpacked_fixed64_);
  _impl_.unpacked_sfixed32_.InternalSwap(&other->_impl_.unpacked_sfixed32_);
  _impl_.unpacked_sfixed64_.InternalSwap(&other->_impl_.unpacked_sfixed64_);
  _impl_.unpacked_float_.InternalSwap(&other->_impl_.unpacked_float_);
  _impl_.unpacked_double_.InternalSwap(&other->_impl_.unpacked_double_);
  _impl_.unpacked_bool_.InternalSwap(&other->_impl_.unpacked_bool_);
  _impl_.unpacked_enum_.InternalSwap(&other->_impl_.unpacked_enum_);
}

::google::protobuf::Metadata TestUnpackedTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[83]);
}
// ===================================================================

class TestPackedExtensions::_Internal {
 public:
};

TestPackedExtensions::TestPackedExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedExtensions)
}
TestPackedExtensions::TestPackedExtensions(const TestPackedExtensions& from) : ::google::protobuf::Message() {
  TestPackedExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedExtensions)
}
inline void TestPackedExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestPackedExtensions::~TestPackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPackedExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestPackedExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestPackedExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestPackedExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestPackedExtensions::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestPackedExtensions, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestPackedExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestPackedExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedExtensions)
  return target;
}

::size_t TestPackedExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedExtensions)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestPackedExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestPackedExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestPackedExtensions::GetClassData() const { return &_class_data_; }


void TestPackedExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestPackedExtensions*>(&to_msg);
  auto& from = static_cast<const TestPackedExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPackedExtensions::CopyFrom(const TestPackedExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPackedExtensions::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestPackedExtensions::InternalSwap(TestPackedExtensions* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestPackedExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[84]);
}
// ===================================================================

class TestUnpackedExtensions::_Internal {
 public:
};

TestUnpackedExtensions::TestUnpackedExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestUnpackedExtensions)
}
TestUnpackedExtensions::TestUnpackedExtensions(const TestUnpackedExtensions& from) : ::google::protobuf::Message() {
  TestUnpackedExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestUnpackedExtensions)
}
inline void TestUnpackedExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestUnpackedExtensions::~TestUnpackedExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestUnpackedExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestUnpackedExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestUnpackedExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestUnpackedExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestUnpackedExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestUnpackedExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestUnpackedExtensions::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestUnpackedExtensions, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestUnpackedExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestUnpackedExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestUnpackedExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestUnpackedExtensions)
  return target;
}

::size_t TestUnpackedExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestUnpackedExtensions)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestUnpackedExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestUnpackedExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestUnpackedExtensions::GetClassData() const { return &_class_data_; }


void TestUnpackedExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestUnpackedExtensions*>(&to_msg);
  auto& from = static_cast<const TestUnpackedExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestUnpackedExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestUnpackedExtensions::CopyFrom(const TestUnpackedExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestUnpackedExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestUnpackedExtensions::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestUnpackedExtensions::InternalSwap(TestUnpackedExtensions* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestUnpackedExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[85]);
}
// ===================================================================

class TestDynamicExtensions_DynamicMessageType::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDynamicExtensions_DynamicMessageType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _impl_._has_bits_);
  static void set_has_dynamic_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}
TestDynamicExtensions_DynamicMessageType::TestDynamicExtensions_DynamicMessageType(const TestDynamicExtensions_DynamicMessageType& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
}
inline void TestDynamicExtensions_DynamicMessageType::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.dynamic_field_){0},
  };
}
TestDynamicExtensions_DynamicMessageType::~TestDynamicExtensions_DynamicMessageType() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDynamicExtensions_DynamicMessageType::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestDynamicExtensions_DynamicMessageType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestDynamicExtensions_DynamicMessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dynamic_field_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDynamicExtensions_DynamicMessageType::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> TestDynamicExtensions_DynamicMessageType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _impl_._has_bits_),
    0, // no _extensions_
    2100, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestDynamicExtensions_DynamicMessageType_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2100, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 dynamic_field = 2100;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions_DynamicMessageType, _impl_.dynamic_field_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestDynamicExtensions_DynamicMessageType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 dynamic_field = 2100;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2100, this->_internal_dynamic_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  return target;
}

::size_t TestDynamicExtensions_DynamicMessageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 dynamic_field = 2100;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 3 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_dynamic_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDynamicExtensions_DynamicMessageType::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDynamicExtensions_DynamicMessageType::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDynamicExtensions_DynamicMessageType::GetClassData() const { return &_class_data_; }


void TestDynamicExtensions_DynamicMessageType::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDynamicExtensions_DynamicMessageType*>(&to_msg);
  auto& from = static_cast<const TestDynamicExtensions_DynamicMessageType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_dynamic_field(from._internal_dynamic_field());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDynamicExtensions_DynamicMessageType::CopyFrom(const TestDynamicExtensions_DynamicMessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDynamicExtensions.DynamicMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDynamicExtensions_DynamicMessageType::IsInitialized() const {
  return true;
}

void TestDynamicExtensions_DynamicMessageType::InternalSwap(TestDynamicExtensions_DynamicMessageType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.dynamic_field_, other->_impl_.dynamic_field_);
}

::google::protobuf::Metadata TestDynamicExtensions_DynamicMessageType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[86]);
}
// ===================================================================

class TestDynamicExtensions::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDynamicExtensions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_._has_bits_);
  static void set_has_scalar_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_enum_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dynamic_enum_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::ForeignMessage& message_extension(const TestDynamicExtensions* msg);
  static void set_has_message_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType& dynamic_message_extension(const TestDynamicExtensions* msg);
  static void set_has_dynamic_message_extension(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::protobuf_unittest::ForeignMessage& TestDynamicExtensions::_Internal::message_extension(const TestDynamicExtensions* msg) {
  return *msg->_impl_.message_extension_;
}
const ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType& TestDynamicExtensions::_Internal::dynamic_message_extension(const TestDynamicExtensions* msg) {
  return *msg->_impl_.dynamic_message_extension_;
}
TestDynamicExtensions::TestDynamicExtensions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDynamicExtensions)
}
TestDynamicExtensions::TestDynamicExtensions(const TestDynamicExtensions& from) : ::google::protobuf::Message() {
  TestDynamicExtensions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_extension_){from._impl_.repeated_extension_},
      decltype(_impl_.packed_extension_){from._impl_.packed_extension_},
      /* _impl_._packed_extension_cached_byte_size_ = */ {0},
      decltype(_impl_.message_extension_){nullptr},
      decltype(_impl_.dynamic_message_extension_){nullptr},
      decltype(_impl_.scalar_extension_){},
      decltype(_impl_.enum_extension_){},
      decltype(_impl_.dynamic_enum_extension_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_extension_ = new ::protobuf_unittest::ForeignMessage(*from._impl_.message_extension_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.dynamic_message_extension_ = new ::protobuf_unittest::TestDynamicExtensions_DynamicMessageType(*from._impl_.dynamic_message_extension_);
  }
  ::memcpy(&_impl_.scalar_extension_, &from._impl_.scalar_extension_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.dynamic_enum_extension_) -
    reinterpret_cast<char*>(&_impl_.scalar_extension_)) + sizeof(_impl_.dynamic_enum_extension_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDynamicExtensions)
}
inline void TestDynamicExtensions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_extension_){arena},
      decltype(_impl_.packed_extension_){arena},
      /* _impl_._packed_extension_cached_byte_size_ = */ {0},
      decltype(_impl_.message_extension_){nullptr},
      decltype(_impl_.dynamic_message_extension_){nullptr},
      decltype(_impl_.scalar_extension_){0u},
      decltype(_impl_.enum_extension_){4},
      decltype(_impl_.dynamic_enum_extension_){2200},
  };
}
TestDynamicExtensions::~TestDynamicExtensions() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDynamicExtensions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestDynamicExtensions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_repeated_extension()->~RepeatedPtrField();
  _impl_.packed_extension_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.message_extension_;
  if (this != internal_default_instance()) delete _impl_.dynamic_message_extension_;
}
void TestDynamicExtensions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestDynamicExtensions::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDynamicExtensions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_extension()->Clear();
  _internal_mutable_packed_extension()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_extension_ != nullptr);
      _impl_.message_extension_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dynamic_message_extension_ != nullptr);
      _impl_.dynamic_message_extension_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    _impl_.scalar_extension_ = 0u;
    _impl_.enum_extension_ = 4;
    _impl_.dynamic_enum_extension_ = 2200;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestDynamicExtensions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 66, 7> TestDynamicExtensions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_._has_bits_),
    0, // no _extensions_
    2006, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestDynamicExtensions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional fixed32 scalar_extension = 2000;
    {::_pbi::TcParser::FastF32S2,
     {32133, 2, 0, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.scalar_extension_)}},
    // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
    {::_pbi::TcParser::FastErS2,
     {32136, 3, 0, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.enum_extension_)}},
    // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
    {::_pbi::TcParser::FastErS2,
     {32144, 4, 1, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.dynamic_enum_extension_)}},
    // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
    {::_pbi::TcParser::FastMtS2,
     {32154, 0, 2, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.message_extension_)}},
    // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
    {::_pbi::TcParser::FastMtS2,
     {32162, 1, 3, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.dynamic_message_extension_)}},
    // repeated string repeated_extension = 2005;
    {::_pbi::TcParser::FastSR2,
     {32170, 63, 0, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.repeated_extension_)}},
    // repeated sint32 packed_extension = 2006 [packed = true];
    {::_pbi::TcParser::FastZ32P2,
     {32178, 63, 0, PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.packed_extension_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2000, 0, 1,
    65408, 0,
    65535, 65535
  }}, {{
    // optional fixed32 scalar_extension = 2000;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.scalar_extension_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.enum_extension_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.dynamic_enum_extension_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.message_extension_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.dynamic_message_extension_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string repeated_extension = 2005;
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.repeated_extension_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated sint32 packed_extension = 2006 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.packed_extension_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
  }}, {{
    {4, 3},
    {2200, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDynamicExtensions_DynamicMessageType>()},
  }}, {{
    "\47\0\0\0\0\0\22\0"
    "protobuf_unittest.TestDynamicExtensions"
    "repeated_extension"
  }},
};

::uint8_t* TestDynamicExtensions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDynamicExtensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed32 scalar_extension = 2000;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        2000, this->_internal_scalar_extension(), target);
  }

  // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2001, this->_internal_enum_extension(), target);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2002, this->_internal_dynamic_enum_extension(), target);
  }

  // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2003, _Internal::message_extension(this),
        _Internal::message_extension(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2004, _Internal::dynamic_message_extension(this),
        _Internal::dynamic_message_extension(this).GetCachedSize(), target, stream);
  }

  // repeated string repeated_extension = 2005;
  for (int i = 0, n = this->_internal_repeated_extension_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_extension().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestDynamicExtensions.repeated_extension");
    target = stream->WriteString(2005, s, target);
  }

  // repeated sint32 packed_extension = 2006 [packed = true];
  {
    int byte_size = _impl_._packed_extension_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(2006, _internal_packed_extension(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDynamicExtensions)
  return target;
}

::size_t TestDynamicExtensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDynamicExtensions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repeated_extension = 2005;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_extension().size());
  for (int i = 0, n = _internal_repeated_extension().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_extension().Get(i));
  }
  // repeated sint32 packed_extension = 2006 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_packed_extension())
    ;
    _impl_._packed_extension_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .protobuf_unittest.ForeignMessage message_extension = 2003;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.message_extension_);
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicMessageType dynamic_message_extension = 2004;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.dynamic_message_extension_);
    }

    // optional fixed32 scalar_extension = 2000;
    if (cached_has_bits & 0x00000004u) {
      total_size += 6;
    }

    // optional .protobuf_unittest.ForeignEnum enum_extension = 2001;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_enum_extension());
    }

    // optional .protobuf_unittest.TestDynamicExtensions.DynamicEnumType dynamic_enum_extension = 2002;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_dynamic_enum_extension());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestDynamicExtensions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestDynamicExtensions::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestDynamicExtensions::GetClassData() const { return &_class_data_; }


void TestDynamicExtensions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestDynamicExtensions*>(&to_msg);
  auto& from = static_cast<const TestDynamicExtensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDynamicExtensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_extension()->MergeFrom(from._internal_repeated_extension());
  _this->_internal_mutable_packed_extension()->MergeFrom(from._internal_packed_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_message_extension()->::protobuf_unittest::ForeignMessage::MergeFrom(
          from._internal_message_extension());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_dynamic_message_extension()->::protobuf_unittest::TestDynamicExtensions_DynamicMessageType::MergeFrom(
          from._internal_dynamic_message_extension());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.scalar_extension_ = from._impl_.scalar_extension_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.enum_extension_ = from._impl_.enum_extension_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dynamic_enum_extension_ = from._impl_.dynamic_enum_extension_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDynamicExtensions::CopyFrom(const TestDynamicExtensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDynamicExtensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDynamicExtensions::IsInitialized() const {
  return true;
}

void TestDynamicExtensions::InternalSwap(TestDynamicExtensions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_extension_.InternalSwap(&other->_impl_.repeated_extension_);
  _impl_.packed_extension_.InternalSwap(&other->_impl_.packed_extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.dynamic_enum_extension_)
      + sizeof(TestDynamicExtensions::_impl_.dynamic_enum_extension_)
      - PROTOBUF_FIELD_OFFSET(TestDynamicExtensions, _impl_.message_extension_)>(
          reinterpret_cast<char*>(&_impl_.message_extension_),
          reinterpret_cast<char*>(&other->_impl_.message_extension_));
}

::google::protobuf::Metadata TestDynamicExtensions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[87]);
}
// ===================================================================

class TestRepeatedString::_Internal {
 public:
};

TestRepeatedString::TestRepeatedString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRepeatedString)
}
TestRepeatedString::TestRepeatedString(const TestRepeatedString& from) : ::google::protobuf::Message() {
  TestRepeatedString* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_string1_){from._impl_.repeated_string1_},
      decltype(_impl_.repeated_string2_){from._impl_.repeated_string2_},
      decltype(_impl_.repeated_bytes11_){from._impl_.repeated_bytes11_},
      decltype(_impl_.repeated_bytes12_){from._impl_.repeated_bytes12_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRepeatedString)
}
inline void TestRepeatedString::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_string1_){arena},
      decltype(_impl_.repeated_string2_){arena},
      decltype(_impl_.repeated_bytes11_){arena},
      decltype(_impl_.repeated_bytes12_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestRepeatedString::~TestRepeatedString() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRepeatedString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRepeatedString::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_repeated_string1()->~RepeatedPtrField();
  _internal_mutable_repeated_string2()->~RepeatedPtrField();
  _internal_mutable_repeated_bytes11()->~RepeatedPtrField();
  _internal_mutable_repeated_bytes12()->~RepeatedPtrField();
}
void TestRepeatedString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRepeatedString::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRepeatedString)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_string1()->Clear();
  _internal_mutable_repeated_string2()->Clear();
  _internal_mutable_repeated_bytes11()->Clear();
  _internal_mutable_repeated_bytes12()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRepeatedString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 77, 2> TestRepeatedString::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964220,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestRepeatedString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes repeated_bytes12 = 12;
    {::_pbi::TcParser::FastBR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_bytes12_)}},
    // repeated string repeated_string1 = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_string1_)}},
    // repeated string repeated_string2 = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_string2_)}},
    // repeated bytes repeated_bytes11 = 11;
    {::_pbi::TcParser::FastBR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_bytes11_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string repeated_string1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_string1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string repeated_string2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_string2_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes11 = 11;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_bytes11_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes12 = 12;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedString, _impl_.repeated_bytes12_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\44\20\20\0\0\0\0\0"
    "protobuf_unittest.TestRepeatedString"
    "repeated_string1"
    "repeated_string2"
  }},
};

::uint8_t* TestRepeatedString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRepeatedString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string repeated_string1 = 1;
  for (int i = 0, n = this->_internal_repeated_string1_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string1().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestRepeatedString.repeated_string1");
    target = stream->WriteString(1, s, target);
  }

  // repeated string repeated_string2 = 2;
  for (int i = 0, n = this->_internal_repeated_string2_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string2().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestRepeatedString.repeated_string2");
    target = stream->WriteString(2, s, target);
  }

  // repeated bytes repeated_bytes11 = 11;
  for (int i = 0, n = this->_internal_repeated_bytes11_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_bytes11().Get(i);
    target = stream->WriteBytes(11, s, target);
  }

  // repeated bytes repeated_bytes12 = 12;
  for (int i = 0, n = this->_internal_repeated_bytes12_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_bytes12().Get(i);
    target = stream->WriteBytes(12, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRepeatedString)
  return target;
}

::size_t TestRepeatedString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRepeatedString)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repeated_string1 = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string1().size());
  for (int i = 0, n = _internal_repeated_string1().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string1().Get(i));
  }
  // repeated string repeated_string2 = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string2().size());
  for (int i = 0, n = _internal_repeated_string2().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string2().Get(i));
  }
  // repeated bytes repeated_bytes11 = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_bytes11().size());
  for (int i = 0, n = _internal_repeated_bytes11().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_repeated_bytes11().Get(i));
  }
  // repeated bytes repeated_bytes12 = 12;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_bytes12().size());
  for (int i = 0, n = _internal_repeated_bytes12().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_repeated_bytes12().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRepeatedString::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRepeatedString::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRepeatedString::GetClassData() const { return &_class_data_; }


void TestRepeatedString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRepeatedString*>(&to_msg);
  auto& from = static_cast<const TestRepeatedString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRepeatedString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_string1()->MergeFrom(from._internal_repeated_string1());
  _this->_internal_mutable_repeated_string2()->MergeFrom(from._internal_repeated_string2());
  _this->_internal_mutable_repeated_bytes11()->MergeFrom(from._internal_repeated_bytes11());
  _this->_internal_mutable_repeated_bytes12()->MergeFrom(from._internal_repeated_bytes12());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRepeatedString::CopyFrom(const TestRepeatedString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRepeatedString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRepeatedString::IsInitialized() const {
  return true;
}

void TestRepeatedString::InternalSwap(TestRepeatedString* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_string1_.InternalSwap(&other->_impl_.repeated_string1_);
  _impl_.repeated_string2_.InternalSwap(&other->_impl_.repeated_string2_);
  _impl_.repeated_bytes11_.InternalSwap(&other->_impl_.repeated_bytes11_);
  _impl_.repeated_bytes12_.InternalSwap(&other->_impl_.repeated_bytes12_);
}

::google::protobuf::Metadata TestRepeatedString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[88]);
}
// ===================================================================

class TestRepeatedScalarDifferentTagSizes::_Internal {
 public:
};

TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}
TestRepeatedScalarDifferentTagSizes::TestRepeatedScalarDifferentTagSizes(const TestRepeatedScalarDifferentTagSizes& from) : ::google::protobuf::Message() {
  TestRepeatedScalarDifferentTagSizes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_fixed32_){from._impl_.repeated_fixed32_},
      decltype(_impl_.repeated_int32_){from._impl_.repeated_int32_},
      decltype(_impl_.repeated_fixed64_){from._impl_.repeated_fixed64_},
      decltype(_impl_.repeated_int64_){from._impl_.repeated_int64_},
      decltype(_impl_.repeated_float_){from._impl_.repeated_float_},
      decltype(_impl_.repeated_uint64_){from._impl_.repeated_uint64_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
}
inline void TestRepeatedScalarDifferentTagSizes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_fixed32_){arena},
      decltype(_impl_.repeated_int32_){arena},
      decltype(_impl_.repeated_fixed64_){arena},
      decltype(_impl_.repeated_int64_){arena},
      decltype(_impl_.repeated_float_){arena},
      decltype(_impl_.repeated_uint64_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestRepeatedScalarDifferentTagSizes::~TestRepeatedScalarDifferentTagSizes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestRepeatedScalarDifferentTagSizes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_fixed32_.~RepeatedField();
  _impl_.repeated_int32_.~RepeatedField();
  _impl_.repeated_fixed64_.~RepeatedField();
  _impl_.repeated_int64_.~RepeatedField();
  _impl_.repeated_float_.~RepeatedField();
  _impl_.repeated_uint64_.~RepeatedField();
}
void TestRepeatedScalarDifferentTagSizes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestRepeatedScalarDifferentTagSizes::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_fixed32()->Clear();
  _internal_mutable_repeated_int32()->Clear();
  _internal_mutable_repeated_fixed64()->Clear();
  _internal_mutable_repeated_int64()->Clear();
  _internal_mutable_repeated_float()->Clear();
  _internal_mutable_repeated_uint64()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestRepeatedScalarDifferentTagSizes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 0, 0, 12> TestRepeatedScalarDifferentTagSizes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    262143, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294961151,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestRepeatedScalarDifferentTagSizes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated fixed32 repeated_fixed32 = 12;
    {::_pbi::TcParser::FastF32R1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed32_)}},
    // repeated int32 repeated_int32 = 13;
    {::_pbi::TcParser::FastV32R1,
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int32_)}},
    // repeated fixed64 repeated_fixed64 = 2046;
    {::_pbi::TcParser::FastF64R2,
     {32753, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed64_)}},
    // repeated int64 repeated_int64 = 2047;
    {::_pbi::TcParser::FastV64R2,
     {32760, 63, 0, PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int64_)}},
  }}, {{
    2046, 0, 1,
    65532, 2,65534, 3, 1,
     65532, 4,
    65535, 65535
  }}, {{
    // repeated fixed32 repeated_fixed32 = 12;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
    // repeated int32 repeated_int32 = 13;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated fixed64 repeated_fixed64 = 2046;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
    // repeated int64 repeated_int64 = 2047;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated float repeated_float = 262142;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated uint64 repeated_uint64 = 262143;
    {PROTOBUF_FIELD_OFFSET(TestRepeatedScalarDifferentTagSizes, _impl_.repeated_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestRepeatedScalarDifferentTagSizes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 12;
  for (int i = 0, n = this->_internal_repeated_fixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        12, this->_internal_repeated_fixed32().Get(i), target);
  }

  // repeated int32 repeated_int32 = 13;
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        13, this->_internal_repeated_int32().Get(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 2046;
  for (int i = 0, n = this->_internal_repeated_fixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2046, this->_internal_repeated_fixed64().Get(i), target);
  }

  // repeated int64 repeated_int64 = 2047;
  for (int i = 0, n = this->_internal_repeated_int64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2047, this->_internal_repeated_int64().Get(i), target);
  }

  // repeated float repeated_float = 262142;
  for (int i = 0, n = this->_internal_repeated_float_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        262142, this->_internal_repeated_float().Get(i), target);
  }

  // repeated uint64 repeated_uint64 = 262143;
  for (int i = 0, n = this->_internal_repeated_uint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        262143, this->_internal_repeated_uint64().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  return target;
}

::size_t TestRepeatedScalarDifferentTagSizes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 12;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 repeated_int32 = 13;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 repeated_fixed64 = 2046;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64 = 2047;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float repeated_float = 262142;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size())
    ;
    std::size_t tag_size = std::size_t{3} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 repeated_uint64 = 262143;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_repeated_uint64())
    ;
    std::size_t tag_size = std::size_t{3} *
        ::_pbi::FromIntSize(this->_internal_repeated_uint64_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestRepeatedScalarDifferentTagSizes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestRepeatedScalarDifferentTagSizes::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestRepeatedScalarDifferentTagSizes::GetClassData() const { return &_class_data_; }


void TestRepeatedScalarDifferentTagSizes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestRepeatedScalarDifferentTagSizes*>(&to_msg);
  auto& from = static_cast<const TestRepeatedScalarDifferentTagSizes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestRepeatedScalarDifferentTagSizes::CopyFrom(const TestRepeatedScalarDifferentTagSizes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestRepeatedScalarDifferentTagSizes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestRepeatedScalarDifferentTagSizes::IsInitialized() const {
  return true;
}

void TestRepeatedScalarDifferentTagSizes::InternalSwap(TestRepeatedScalarDifferentTagSizes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
}

::google::protobuf::Metadata TestRepeatedScalarDifferentTagSizes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[89]);
}
// ===================================================================

class TestParsingMerge_RepeatedFieldsGenerator_Group1::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMerge_RepeatedFieldsGenerator_Group1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& field1(const TestParsingMerge_RepeatedFieldsGenerator_Group1* msg);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group1::_Internal::field1(const TestParsingMerge_RepeatedFieldsGenerator_Group1* msg) {
  return *msg->_impl_.field1_;
}
TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}
TestParsingMerge_RepeatedFieldsGenerator_Group1::TestParsingMerge_RepeatedFieldsGenerator_Group1(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) : ::google::protobuf::Message() {
  TestParsingMerge_RepeatedFieldsGenerator_Group1* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.field1_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.field1_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){nullptr},
  };
}
TestParsingMerge_RepeatedFieldsGenerator_Group1::~TestParsingMerge_RepeatedFieldsGenerator_Group1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group1::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.field1_;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge_RepeatedFieldsGenerator_Group1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.field1_ != nullptr);
    _impl_.field1_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge_RepeatedFieldsGenerator_Group1::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMerge_RepeatedFieldsGenerator_Group1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_._has_bits_),
    0, // no _extensions_
    11, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966271,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_RepeatedFieldsGenerator_Group1_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {84, 84}},
    // optional .protobuf_unittest.TestAllTypes field1 = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_.field1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes field1 = 11;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group1, _impl_.field1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge_RepeatedFieldsGenerator_Group1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::field1(this),
        _Internal::field1(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  return target;
}

::size_t TestParsingMerge_RepeatedFieldsGenerator_Group1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes field1 = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.field1_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge_RepeatedFieldsGenerator_Group1::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge_RepeatedFieldsGenerator_Group1::GetClassData() const { return &_class_data_; }


void TestParsingMerge_RepeatedFieldsGenerator_Group1::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge_RepeatedFieldsGenerator_Group1*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge_RepeatedFieldsGenerator_Group1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_field1());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge_RepeatedFieldsGenerator_Group1::IsInitialized() const {
  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group1::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.field1_, other->_impl_.field1_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[90]);
}
// ===================================================================

class TestParsingMerge_RepeatedFieldsGenerator_Group2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMerge_RepeatedFieldsGenerator_Group2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& field1(const TestParsingMerge_RepeatedFieldsGenerator_Group2* msg);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedFieldsGenerator_Group2::_Internal::field1(const TestParsingMerge_RepeatedFieldsGenerator_Group2* msg) {
  return *msg->_impl_.field1_;
}
TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}
TestParsingMerge_RepeatedFieldsGenerator_Group2::TestParsingMerge_RepeatedFieldsGenerator_Group2(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) : ::google::protobuf::Message() {
  TestParsingMerge_RepeatedFieldsGenerator_Group2* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.field1_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.field1_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){nullptr},
  };
}
TestParsingMerge_RepeatedFieldsGenerator_Group2::~TestParsingMerge_RepeatedFieldsGenerator_Group2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge_RepeatedFieldsGenerator_Group2::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.field1_;
}
void TestParsingMerge_RepeatedFieldsGenerator_Group2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge_RepeatedFieldsGenerator_Group2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.field1_ != nullptr);
    _impl_.field1_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge_RepeatedFieldsGenerator_Group2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMerge_RepeatedFieldsGenerator_Group2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_._has_bits_),
    0, // no _extensions_
    21, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918719,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_RepeatedFieldsGenerator_Group2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {420, 164}},
    // optional .protobuf_unittest.TestAllTypes field1 = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_.field1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes field1 = 21;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator_Group2, _impl_.field1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge_RepeatedFieldsGenerator_Group2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::field1(this),
        _Internal::field1(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  return target;
}

::size_t TestParsingMerge_RepeatedFieldsGenerator_Group2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes field1 = 21;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.field1_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge_RepeatedFieldsGenerator_Group2::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge_RepeatedFieldsGenerator_Group2::GetClassData() const { return &_class_data_; }


void TestParsingMerge_RepeatedFieldsGenerator_Group2::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge_RepeatedFieldsGenerator_Group2*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge_RepeatedFieldsGenerator_Group2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_field1()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_field1());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge_RepeatedFieldsGenerator_Group2::IsInitialized() const {
  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator_Group2::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator_Group2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.field1_, other->_impl_.field1_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator_Group2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[91]);
}
// ===================================================================

class TestParsingMerge_RepeatedFieldsGenerator::_Internal {
 public:
};

TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}
TestParsingMerge_RepeatedFieldsGenerator::TestParsingMerge_RepeatedFieldsGenerator(const TestParsingMerge_RepeatedFieldsGenerator& from) : ::google::protobuf::Message() {
  TestParsingMerge_RepeatedFieldsGenerator* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field1_){from._impl_.field1_},
      decltype(_impl_.field2_){from._impl_.field2_},
      decltype(_impl_.field3_){from._impl_.field3_},
      decltype(_impl_.group1_){from._impl_.group1_},
      decltype(_impl_.group2_){from._impl_.group2_},
      decltype(_impl_.ext1_){from._impl_.ext1_},
      decltype(_impl_.ext2_){from._impl_.ext2_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
}
inline void TestParsingMerge_RepeatedFieldsGenerator::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.field1_){arena},
      decltype(_impl_.field2_){arena},
      decltype(_impl_.field3_){arena},
      decltype(_impl_.group1_){arena},
      decltype(_impl_.group2_){arena},
      decltype(_impl_.ext1_){arena},
      decltype(_impl_.ext2_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestParsingMerge_RepeatedFieldsGenerator::~TestParsingMerge_RepeatedFieldsGenerator() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge_RepeatedFieldsGenerator::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field1_.~RepeatedPtrField();
  _impl_.field2_.~RepeatedPtrField();
  _impl_.field3_.~RepeatedPtrField();
  _impl_.group1_.~RepeatedPtrField();
  _impl_.group2_.~RepeatedPtrField();
  _impl_.ext1_.~RepeatedPtrField();
  _impl_.ext2_.~RepeatedPtrField();
}
void TestParsingMerge_RepeatedFieldsGenerator::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge_RepeatedFieldsGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_field1()->Clear();
  _internal_mutable_field2()->Clear();
  _internal_mutable_field3()->Clear();
  _internal_mutable_group1()->Clear();
  _internal_mutable_group2()->Clear();
  _internal_mutable_ext1()->Clear();
  _internal_mutable_ext2()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge_RepeatedFieldsGenerator::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 7, 0, 7> TestParsingMerge_RepeatedFieldsGenerator::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1001, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294442488,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_RepeatedFieldsGenerator_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
    {::_pbi::TcParser::FastMtR2,
     {16066, 63, 5, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.ext1_)}},
    // repeated .protobuf_unittest.TestAllTypes field1 = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field1_)}},
    // repeated .protobuf_unittest.TestAllTypes field2 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field2_)}},
    // repeated .protobuf_unittest.TestAllTypes field3 = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field3_)}},
    // repeated group Group2 = 20 { ... };
    {::_pbi::TcParser::FastGtR2,
     {419, 63, 4, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.group2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    1000, 0, 1,
    65532, 5,
    65535, 65535
  }}, {{
    // repeated .protobuf_unittest.TestAllTypes field1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes field2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field2_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes field3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.field3_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated group Group1 = 10 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.group1_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group Group2 = 20 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.group2_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.ext1_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedFieldsGenerator, _impl_.ext2_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group1>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMerge_RepeatedFieldsGenerator_Group2>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge_RepeatedFieldsGenerator::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field1_size()); i < n; i++) {
    const auto& repfield = this->_internal_field1().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field2_size()); i < n; i++) {
    const auto& repfield = this->_internal_field2().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field3_size()); i < n; i++) {
    const auto& repfield = this->_internal_field3().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated group Group1 = 10 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group1_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(10, this->_internal_group1().Get(i), target, stream);
  }

  // repeated group Group2 = 20 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group2_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(20, this->_internal_group2().Get(i), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ext1_size()); i < n; i++) {
    const auto& repfield = this->_internal_ext1().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1000, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ext2_size()); i < n; i++) {
    const auto& repfield = this->_internal_ext2().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1001, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  return target;
}

::size_t TestParsingMerge_RepeatedFieldsGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes field1 = 1;
  total_size += 1UL * this->_internal_field1_size();
  for (const auto& msg : this->_internal_field1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes field2 = 2;
  total_size += 1UL * this->_internal_field2_size();
  for (const auto& msg : this->_internal_field2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes field3 = 3;
  total_size += 1UL * this->_internal_field3_size();
  for (const auto& msg : this->_internal_field3()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated group Group1 = 10 { ... };
  total_size += 2UL * this->_internal_group1_size();
  for (const auto& msg : this->_internal_group1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated group Group2 = 20 { ... };
  total_size += 4UL * this->_internal_group2_size();
  for (const auto& msg : this->_internal_group2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes ext1 = 1000;
  total_size += 2UL * this->_internal_ext1_size();
  for (const auto& msg : this->_internal_ext1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes ext2 = 1001;
  total_size += 2UL * this->_internal_ext2_size();
  for (const auto& msg : this->_internal_ext2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge_RepeatedFieldsGenerator::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge_RepeatedFieldsGenerator::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge_RepeatedFieldsGenerator::GetClassData() const { return &_class_data_; }


void TestParsingMerge_RepeatedFieldsGenerator::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge_RepeatedFieldsGenerator*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge_RepeatedFieldsGenerator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_field1()->MergeFrom(from._internal_field1());
  _this->_internal_mutable_field2()->MergeFrom(from._internal_field2());
  _this->_internal_mutable_field3()->MergeFrom(from._internal_field3());
  _this->_internal_mutable_group1()->MergeFrom(from._internal_group1());
  _this->_internal_mutable_group2()->MergeFrom(from._internal_group2());
  _this->_internal_mutable_ext1()->MergeFrom(from._internal_ext1());
  _this->_internal_mutable_ext2()->MergeFrom(from._internal_ext2());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge_RepeatedFieldsGenerator::CopyFrom(const TestParsingMerge_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge_RepeatedFieldsGenerator::IsInitialized() const {
  return true;
}

void TestParsingMerge_RepeatedFieldsGenerator::InternalSwap(TestParsingMerge_RepeatedFieldsGenerator* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.field1_.InternalSwap(&other->_impl_.field1_);
  _impl_.field2_.InternalSwap(&other->_impl_.field2_);
  _impl_.field3_.InternalSwap(&other->_impl_.field3_);
  _impl_.group1_.InternalSwap(&other->_impl_.group1_);
  _impl_.group2_.InternalSwap(&other->_impl_.group2_);
  _impl_.ext1_.InternalSwap(&other->_impl_.ext1_);
  _impl_.ext2_.InternalSwap(&other->_impl_.ext2_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedFieldsGenerator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[92]);
}
// ===================================================================

class TestParsingMerge_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMerge_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& optional_group_all_types(const TestParsingMerge_OptionalGroup* msg);
  static void set_has_optional_group_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestParsingMerge_OptionalGroup::_Internal::optional_group_all_types(const TestParsingMerge_OptionalGroup* msg) {
  return *msg->_impl_.optional_group_all_types_;
}
TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}
TestParsingMerge_OptionalGroup::TestParsingMerge_OptionalGroup(const TestParsingMerge_OptionalGroup& from) : ::google::protobuf::Message() {
  TestParsingMerge_OptionalGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_group_all_types_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_group_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_group_all_types_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
}
inline void TestParsingMerge_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_group_all_types_){nullptr},
  };
}
TestParsingMerge_OptionalGroup::~TestParsingMerge_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.OptionalGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.optional_group_all_types_;
}
void TestParsingMerge_OptionalGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_group_all_types_ != nullptr);
    _impl_.optional_group_all_types_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMerge_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    11, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966271,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {84, 84}},
    // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _impl_.optional_group_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_OptionalGroup, _impl_.optional_group_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::optional_group_all_types(this),
        _Internal::optional_group_all_types(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.OptionalGroup)
  return target;
}

::size_t TestParsingMerge_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes optional_group_all_types = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.optional_group_all_types_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge_OptionalGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge_OptionalGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge_OptionalGroup::GetClassData() const { return &_class_data_; }


void TestParsingMerge_OptionalGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge_OptionalGroup*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge_OptionalGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_optional_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_optional_group_all_types());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge_OptionalGroup::CopyFrom(const TestParsingMerge_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge_OptionalGroup::IsInitialized() const {
  return true;
}

void TestParsingMerge_OptionalGroup::InternalSwap(TestParsingMerge_OptionalGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.optional_group_all_types_, other->_impl_.optional_group_all_types_);
}

::google::protobuf::Metadata TestParsingMerge_OptionalGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[93]);
}
// ===================================================================

class TestParsingMerge_RepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMerge_RepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& repeated_group_all_types(const TestParsingMerge_RepeatedGroup* msg);
  static void set_has_repeated_group_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestParsingMerge_RepeatedGroup::_Internal::repeated_group_all_types(const TestParsingMerge_RepeatedGroup* msg) {
  return *msg->_impl_.repeated_group_all_types_;
}
TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}
TestParsingMerge_RepeatedGroup::TestParsingMerge_RepeatedGroup(const TestParsingMerge_RepeatedGroup& from) : ::google::protobuf::Message() {
  TestParsingMerge_RepeatedGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_group_all_types_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.repeated_group_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.repeated_group_all_types_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
}
inline void TestParsingMerge_RepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_group_all_types_){nullptr},
  };
}
TestParsingMerge_RepeatedGroup::~TestParsingMerge_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge_RepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.repeated_group_all_types_;
}
void TestParsingMerge_RepeatedGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.repeated_group_all_types_ != nullptr);
    _impl_.repeated_group_all_types_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge_RepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMerge_RepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _impl_._has_bits_),
    0, // no _extensions_
    21, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918719,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_RepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {420, 164}},
    // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _impl_.repeated_group_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge_RepeatedGroup, _impl_.repeated_group_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge_RepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::repeated_group_all_types(this),
        _Internal::repeated_group_all_types(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  return target;
}

::size_t TestParsingMerge_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypes repeated_group_all_types = 21;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.repeated_group_all_types_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge_RepeatedGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge_RepeatedGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge_RepeatedGroup::GetClassData() const { return &_class_data_; }


void TestParsingMerge_RepeatedGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge_RepeatedGroup*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge_RepeatedGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_repeated_group_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
        from._internal_repeated_group_all_types());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge_RepeatedGroup::CopyFrom(const TestParsingMerge_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge_RepeatedGroup::IsInitialized() const {
  return true;
}

void TestParsingMerge_RepeatedGroup::InternalSwap(TestParsingMerge_RepeatedGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.repeated_group_all_types_, other->_impl_.repeated_group_all_types_);
}

::google::protobuf::Metadata TestParsingMerge_RepeatedGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[94]);
}
// ===================================================================

class TestParsingMerge::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMerge>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypes& required_all_types(const TestParsingMerge* msg);
  static void set_has_required_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestParsingMerge* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestParsingMerge_OptionalGroup& optionalgroup(const TestParsingMerge* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::protobuf_unittest::TestAllTypes& TestParsingMerge::_Internal::required_all_types(const TestParsingMerge* msg) {
  return *msg->_impl_.required_all_types_;
}
const ::protobuf_unittest::TestAllTypes& TestParsingMerge::_Internal::optional_all_types(const TestParsingMerge* msg) {
  return *msg->_impl_.optional_all_types_;
}
const ::protobuf_unittest::TestParsingMerge_OptionalGroup& TestParsingMerge::_Internal::optionalgroup(const TestParsingMerge* msg) {
  return *msg->_impl_.optionalgroup_;
}
TestParsingMerge::TestParsingMerge(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMerge)
}
TestParsingMerge::TestParsingMerge(const TestParsingMerge& from) : ::google::protobuf::Message() {
  TestParsingMerge* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.repeatedgroup_){from._impl_.repeatedgroup_},
      decltype(_impl_.required_all_types_){nullptr},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optionalgroup_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.required_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.required_all_types_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optionalgroup_ = new ::protobuf_unittest::TestParsingMerge_OptionalGroup(*from._impl_.optionalgroup_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMerge)
}
inline void TestParsingMerge::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.repeatedgroup_){arena},
      decltype(_impl_.required_all_types_){nullptr},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optionalgroup_){nullptr},
  };
}
TestParsingMerge::~TestParsingMerge() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMerge)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestParsingMerge::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.repeated_all_types_.~RepeatedPtrField();
  _impl_.repeatedgroup_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.required_all_types_;
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
  if (this != internal_default_instance()) delete _impl_.optionalgroup_;
}
void TestParsingMerge::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestParsingMerge::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMerge)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_all_types()->Clear();
  _internal_mutable_repeatedgroup()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.required_all_types_ != nullptr);
      _impl_.required_all_types_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
      _impl_.optional_all_types_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestParsingMerge::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 5, 0, 2> TestParsingMerge::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_._extensions_),
    20, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294442488,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMerge_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated group RepeatedGroup = 20 { ... };
    {::_pbi::TcParser::FastGtR2,
     {419, 63, 4, PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.repeatedgroup_)}},
    // required .protobuf_unittest.TestAllTypes required_all_types = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.required_all_types_)}},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.repeated_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .protobuf_unittest.TestAllTypes required_all_types = 1;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.required_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.repeated_all_types_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group OptionalGroup = 10 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group RepeatedGroup = 20 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.repeatedgroup_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMerge_OptionalGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMerge_RepeatedGroup>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMerge::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMerge)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::required_all_types(this),
        _Internal::required_all_types(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional group OptionalGroup = 10 { ... };
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        10, _Internal::optionalgroup(this), target, stream);
  }

  // repeated group RepeatedGroup = 20 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(20, this->_internal_repeatedgroup().Get(i), target, stream);
  }

  // Extension range [1000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMerge)
  return target;
}

::size_t TestParsingMerge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMerge)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 3;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated group RepeatedGroup = 20 { ... };
  total_size += 4UL * this->_internal_repeatedgroup_size();
  for (const auto& msg : this->_internal_repeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // required .protobuf_unittest.TestAllTypes required_all_types = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.required_all_types_);
  }

  if (cached_has_bits & 0x00000006u) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional group OptionalGroup = 10 { ... };
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.optionalgroup_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestParsingMerge::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestParsingMerge::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestParsingMerge::GetClassData() const { return &_class_data_; }


void TestParsingMerge::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestParsingMerge*>(&to_msg);
  auto& from = static_cast<const TestParsingMerge&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMerge)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  _this->_internal_mutable_repeatedgroup()->MergeFrom(from._internal_repeatedgroup());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_required_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_required_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestParsingMerge_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestParsingMerge::CopyFrom(const TestParsingMerge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMerge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMerge::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void TestParsingMerge::InternalSwap(TestParsingMerge* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  _impl_.repeatedgroup_.InternalSwap(&other->_impl_.repeatedgroup_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.optionalgroup_)
      + sizeof(TestParsingMerge::_impl_.optionalgroup_)
      - PROTOBUF_FIELD_OFFSET(TestParsingMerge, _impl_.required_all_types_)>(
          reinterpret_cast<char*>(&_impl_.required_all_types_),
          reinterpret_cast<char*>(&other->_impl_.required_all_types_));
}

::google::protobuf::Metadata TestParsingMerge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[95]);
}
// ===================================================================

class TestMergeException::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMergeException>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMergeException, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllExtensions& all_extensions(const TestMergeException* msg);
  static void set_has_all_extensions(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllExtensions& TestMergeException::_Internal::all_extensions(const TestMergeException* msg) {
  return *msg->_impl_.all_extensions_;
}
TestMergeException::TestMergeException(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMergeException)
}
TestMergeException::TestMergeException(const TestMergeException& from) : ::google::protobuf::Message() {
  TestMergeException* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.all_extensions_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.all_extensions_ = new ::protobuf_unittest::TestAllExtensions(*from._impl_.all_extensions_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMergeException)
}
inline void TestMergeException::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.all_extensions_){nullptr},
  };
}
TestMergeException::~TestMergeException() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMergeException)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMergeException::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.all_extensions_;
}
void TestMergeException::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMergeException::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMergeException)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.all_extensions_ != nullptr);
    _impl_.all_extensions_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMergeException::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestMergeException::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMergeException, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMergeException_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllExtensions all_extensions = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMergeException, _impl_.all_extensions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllExtensions all_extensions = 1;
    {PROTOBUF_FIELD_OFFSET(TestMergeException, _impl_.all_extensions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllExtensions>()},
  }}, {{
  }},
};

::uint8_t* TestMergeException::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMergeException)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllExtensions all_extensions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::all_extensions(this),
        _Internal::all_extensions(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMergeException)
  return target;
}

::size_t TestMergeException::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMergeException)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllExtensions all_extensions = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.all_extensions_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMergeException::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMergeException::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMergeException::GetClassData() const { return &_class_data_; }


void TestMergeException::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMergeException*>(&to_msg);
  auto& from = static_cast<const TestMergeException&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMergeException)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_all_extensions()->::protobuf_unittest::TestAllExtensions::MergeFrom(
        from._internal_all_extensions());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMergeException::CopyFrom(const TestMergeException& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMergeException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMergeException::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.all_extensions_->IsInitialized()) return false;
  }
  return true;
}

void TestMergeException::InternalSwap(TestMergeException* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.all_extensions_, other->_impl_.all_extensions_);
}

::google::protobuf::Metadata TestMergeException::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[96]);
}
// ===================================================================

class TestCommentInjectionMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestCommentInjectionMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestCommentInjectionMessage, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

/*static*/ const ::_pbi::LazyString TestCommentInjectionMessage::Impl_::_i_give_permission_to_break_this_code_default_a_{
    {{"*/ <- Neither should this.", 26}},
    {nullptr},
};
TestCommentInjectionMessage::TestCommentInjectionMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestCommentInjectionMessage)
}
TestCommentInjectionMessage::TestCommentInjectionMessage(const TestCommentInjectionMessage& from) : ::google::protobuf::Message() {
  TestCommentInjectionMessage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.a_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.a_.Set(from._internal_a(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCommentInjectionMessage)
}
inline void TestCommentInjectionMessage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.a_){},
  };
  _impl_.a_.InitDefault();
}
TestCommentInjectionMessage::~TestCommentInjectionMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCommentInjectionMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestCommentInjectionMessage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.a_.Destroy();
}
void TestCommentInjectionMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestCommentInjectionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestCommentInjectionMessage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.a_.ClearToDefault(::protobuf_unittest::TestCommentInjectionMessage::Impl_::_i_give_permission_to_break_this_code_default_a_, GetArenaForAllocation());
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestCommentInjectionMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2> TestCommentInjectionMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestCommentInjectionMessage, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestCommentInjectionMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string a = 1 [default = "*/ <- Neither should this."];
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestCommentInjectionMessage, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string a = 1 [default = "*/ <- Neither should this."];
    {PROTOBUF_FIELD_OFFSET(TestCommentInjectionMessage, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\1\0\0\0\0\0\0"
    "protobuf_unittest.TestCommentInjectionMessage"
    "a"
  }},
};

::uint8_t* TestCommentInjectionMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCommentInjectionMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string a = 1 [default = "*/ <- Neither should this."];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_a();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestCommentInjectionMessage.a");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCommentInjectionMessage)
  return target;
}

::size_t TestCommentInjectionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestCommentInjectionMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string a = 1 [default = "*/ <- Neither should this."];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestCommentInjectionMessage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestCommentInjectionMessage::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestCommentInjectionMessage::GetClassData() const { return &_class_data_; }


void TestCommentInjectionMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestCommentInjectionMessage*>(&to_msg);
  auto& from = static_cast<const TestCommentInjectionMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestCommentInjectionMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestCommentInjectionMessage::CopyFrom(const TestCommentInjectionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestCommentInjectionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestCommentInjectionMessage::IsInitialized() const {
  return true;
}

void TestCommentInjectionMessage::InternalSwap(TestCommentInjectionMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.a_, lhs_arena,
                                       &other->_impl_.a_, rhs_arena);
}

::google::protobuf::Metadata TestCommentInjectionMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[97]);
}
// ===================================================================

class TestMessageSize::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMessageSize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_._has_bits_);
  static void set_has_m1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_m2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_m3(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_m4(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_m5(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_m6(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

TestMessageSize::TestMessageSize(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageSize)
}
TestMessageSize::TestMessageSize(const TestMessageSize& from) : ::google::protobuf::Message() {
  TestMessageSize* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.m4_){},
      decltype(_impl_.m2_){},
      decltype(_impl_.m1_){},
      decltype(_impl_.m3_){},
      decltype(_impl_.m5_){},
      decltype(_impl_.m6_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.m4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.m4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.m4_.Set(from._internal_m4(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.m2_, &from._impl_.m2_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.m6_) -
    reinterpret_cast<char*>(&_impl_.m2_)) + sizeof(_impl_.m6_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageSize)
}
inline void TestMessageSize::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.m4_){},
      decltype(_impl_.m2_){::int64_t{0}},
      decltype(_impl_.m1_){false},
      decltype(_impl_.m3_){false},
      decltype(_impl_.m5_){0},
      decltype(_impl_.m6_){::int64_t{0}},
  };
  _impl_.m4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.m4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestMessageSize::~TestMessageSize() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageSize)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestMessageSize::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.m4_.Destroy();
}
void TestMessageSize::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestMessageSize::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageSize)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.m4_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.m2_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.m6_) -
        reinterpret_cast<char*>(&_impl_.m2_)) + sizeof(_impl_.m6_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestMessageSize::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 44, 2> TestMessageSize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestMessageSize_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool m1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestMessageSize, _impl_.m1_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m1_)}},
    // optional int64 m2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestMessageSize, _impl_.m2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m2_)}},
    // optional bool m3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestMessageSize, _impl_.m3_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m3_)}},
    // optional string m4 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m4_)}},
    // optional int32 m5 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessageSize, _impl_.m5_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m5_)}},
    // optional int64 m6 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestMessageSize, _impl_.m6_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m6_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool m1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 m2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool m3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m3_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string m4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m4_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 m5 = 5;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m5_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 m6 = 6;
    {PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m6_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\41\0\0\0\2\0\0\0"
    "protobuf_unittest.TestMessageSize"
    "m4"
  }},
};

::uint8_t* TestMessageSize::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageSize)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool m1 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_m1(), target);
  }

  // optional int64 m2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_m2(), target);
  }

  // optional bool m3 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_m3(), target);
  }

  // optional string m4 = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_m4();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestMessageSize.m4");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int32 m5 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_m5(), target);
  }

  // optional int64 m6 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_m6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageSize)
  return target;
}

::size_t TestMessageSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageSize)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string m4 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_m4());
    }

    // optional int64 m2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_m2());
    }

    // optional bool m1 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool m3 = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional int32 m5 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_m5());
    }

    // optional int64 m6 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_m6());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestMessageSize::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestMessageSize::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestMessageSize::GetClassData() const { return &_class_data_; }


void TestMessageSize::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestMessageSize*>(&to_msg);
  auto& from = static_cast<const TestMessageSize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageSize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_m4(from._internal_m4());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.m2_ = from._impl_.m2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.m1_ = from._impl_.m1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.m3_ = from._impl_.m3_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.m5_ = from._impl_.m5_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.m6_ = from._impl_.m6_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessageSize::CopyFrom(const TestMessageSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMessageSize::IsInitialized() const {
  return true;
}

void TestMessageSize::InternalSwap(TestMessageSize* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.m4_, lhs_arena,
                                       &other->_impl_.m4_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m6_)
      + sizeof(TestMessageSize::_impl_.m6_)
      - PROTOBUF_FIELD_OFFSET(TestMessageSize, _impl_.m2_)>(
          reinterpret_cast<char*>(&_impl_.m2_),
          reinterpret_cast<char*>(&other->_impl_.m2_));
}

::google::protobuf::Metadata TestMessageSize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[98]);
}
// ===================================================================

class FooRequest::_Internal {
 public:
};

FooRequest::FooRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooRequest)
}
FooRequest::FooRequest(const FooRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  FooRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooRequest)
}




const ::google::protobuf::Message::ClassData FooRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*FooRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata FooRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[99]);
}
// ===================================================================

class FooResponse::_Internal {
 public:
};

FooResponse::FooResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooResponse)
}
FooResponse::FooResponse(const FooResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  FooResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooResponse)
}




const ::google::protobuf::Message::ClassData FooResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*FooResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata FooResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[100]);
}
// ===================================================================

class FooClientMessage::_Internal {
 public:
};

FooClientMessage::FooClientMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooClientMessage)
}
FooClientMessage::FooClientMessage(const FooClientMessage& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  FooClientMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooClientMessage)
}




const ::google::protobuf::Message::ClassData FooClientMessage::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*FooClientMessage::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata FooClientMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[101]);
}
// ===================================================================

class FooServerMessage::_Internal {
 public:
};

FooServerMessage::FooServerMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.FooServerMessage)
}
FooServerMessage::FooServerMessage(const FooServerMessage& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  FooServerMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.FooServerMessage)
}




const ::google::protobuf::Message::ClassData FooServerMessage::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*FooServerMessage::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata FooServerMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[102]);
}
// ===================================================================

class BarRequest::_Internal {
 public:
};

BarRequest::BarRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BarRequest)
}
BarRequest::BarRequest(const BarRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  BarRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarRequest)
}




const ::google::protobuf::Message::ClassData BarRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*BarRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata BarRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[103]);
}
// ===================================================================

class BarResponse::_Internal {
 public:
};

BarResponse::BarResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BarResponse)
}
BarResponse::BarResponse(const BarResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  BarResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BarResponse)
}




const ::google::protobuf::Message::ClassData BarResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*BarResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata BarResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[104]);
}
// ===================================================================

class TestJsonName::_Internal {
 public:
  using HasBits = decltype(std::declval<TestJsonName>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_._has_bits_);
  static void set_has_field_name1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fieldname2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fieldname3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has__field_name4(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_field_name5(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_field_name6(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_fieldname7(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

TestJsonName::TestJsonName(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestJsonName)
}
TestJsonName::TestJsonName(const TestJsonName& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestJsonName)
}
inline void TestJsonName::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field_name1_){0},
      decltype(_impl_.fieldname2_){0},
      decltype(_impl_.fieldname3_){0},
      decltype(_impl_._field_name4_){0},
      decltype(_impl_.field_name5_){0},
      decltype(_impl_.field_name6_){0},
      decltype(_impl_.fieldname7_){0},
  };
}
TestJsonName::~TestJsonName() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestJsonName)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestJsonName::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestJsonName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestJsonName::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestJsonName)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.field_name1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fieldname7_) -
        reinterpret_cast<char*>(&_impl_.field_name1_)) + sizeof(_impl_.fieldname7_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestJsonName::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> TestJsonName::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestJsonName_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 field_name1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.field_name1_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name1_)}},
    // optional int32 fieldName2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.fieldname2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname2_)}},
    // optional int32 FieldName3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.fieldname3_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname3_)}},
    // optional int32 _field_name4 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_._field_name4_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_._field_name4_)}},
    // optional int32 FIELD_NAME5 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.field_name5_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name5_)}},
    // optional int32 field_name6 = 6 [json_name = "@type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.field_name6_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name6_)}},
    // optional int32 fieldname7 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestJsonName, _impl_.fieldname7_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname7_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 field_name1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 fieldName2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 FieldName3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 _field_name4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_._field_name4_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 FIELD_NAME5 = 5;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name5_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field_name6 = 6 [json_name = "@type"];
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name6_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 fieldname7 = 7;
    {PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname7_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestJsonName::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestJsonName)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 field_name1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_field_name1(), target);
  }

  // optional int32 fieldName2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_fieldname2(), target);
  }

  // optional int32 FieldName3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_fieldname3(), target);
  }

  // optional int32 _field_name4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal__field_name4(), target);
  }

  // optional int32 FIELD_NAME5 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_field_name5(), target);
  }

  // optional int32 field_name6 = 6 [json_name = "@type"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_field_name6(), target);
  }

  // optional int32 fieldname7 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_fieldname7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestJsonName)
  return target;
}

::size_t TestJsonName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestJsonName)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional int32 field_name1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field_name1());
    }

    // optional int32 fieldName2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fieldname2());
    }

    // optional int32 FieldName3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fieldname3());
    }

    // optional int32 _field_name4 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal__field_name4());
    }

    // optional int32 FIELD_NAME5 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field_name5());
    }

    // optional int32 field_name6 = 6 [json_name = "@type"];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field_name6());
    }

    // optional int32 fieldname7 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_fieldname7());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestJsonName::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestJsonName::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestJsonName::GetClassData() const { return &_class_data_; }


void TestJsonName::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestJsonName*>(&to_msg);
  auto& from = static_cast<const TestJsonName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestJsonName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.field_name1_ = from._impl_.field_name1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.fieldname2_ = from._impl_.fieldname2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fieldname3_ = from._impl_.fieldname3_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_._field_name4_ = from._impl_._field_name4_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.field_name5_ = from._impl_.field_name5_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.field_name6_ = from._impl_.field_name6_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.fieldname7_ = from._impl_.fieldname7_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestJsonName::CopyFrom(const TestJsonName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestJsonName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestJsonName::IsInitialized() const {
  return true;
}

void TestJsonName::InternalSwap(TestJsonName* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.fieldname7_)
      + sizeof(TestJsonName::_impl_.fieldname7_)
      - PROTOBUF_FIELD_OFFSET(TestJsonName, _impl_.field_name1_)>(
          reinterpret_cast<char*>(&_impl_.field_name1_),
          reinterpret_cast<char*>(&other->_impl_.field_name1_));
}

::google::protobuf::Metadata TestJsonName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[105]);
}
// ===================================================================

class TestHugeFieldNumbers_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestHugeFieldNumbers_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers_OptionalGroup, _impl_._has_bits_);
  static void set_has_group_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestHugeFieldNumbers_OptionalGroup::TestHugeFieldNumbers_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
}
TestHugeFieldNumbers_OptionalGroup::TestHugeFieldNumbers_OptionalGroup(const TestHugeFieldNumbers_OptionalGroup& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
}
inline void TestHugeFieldNumbers_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.group_a_){0},
  };
}
TestHugeFieldNumbers_OptionalGroup::~TestHugeFieldNumbers_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestHugeFieldNumbers_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestHugeFieldNumbers_OptionalGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestHugeFieldNumbers_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestHugeFieldNumbers_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> TestHugeFieldNumbers_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    536870009, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestHugeFieldNumbers_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    64633, 8191, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 group_a = 536870009;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers_OptionalGroup, _impl_.group_a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestHugeFieldNumbers_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 group_a = 536870009;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870009, this->_internal_group_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  return target;
}

::size_t TestHugeFieldNumbers_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 group_a = 536870009;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_group_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestHugeFieldNumbers_OptionalGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestHugeFieldNumbers_OptionalGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestHugeFieldNumbers_OptionalGroup::GetClassData() const { return &_class_data_; }


void TestHugeFieldNumbers_OptionalGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestHugeFieldNumbers_OptionalGroup*>(&to_msg);
  auto& from = static_cast<const TestHugeFieldNumbers_OptionalGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_group_a(from._internal_group_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestHugeFieldNumbers_OptionalGroup::CopyFrom(const TestHugeFieldNumbers_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestHugeFieldNumbers.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestHugeFieldNumbers_OptionalGroup::IsInitialized() const {
  return true;
}

void TestHugeFieldNumbers_OptionalGroup::InternalSwap(TestHugeFieldNumbers_OptionalGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.group_a_, other->_impl_.group_a_);
}

::google::protobuf::Metadata TestHugeFieldNumbers_OptionalGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[106]);
}
// ===================================================================

TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse() {}
TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::TestHugeFieldNumbers_StringStringMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::MergeFrom(const TestHugeFieldNumbers_StringStringMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[107]);
}
// ===================================================================

class TestHugeFieldNumbers::_Internal {
 public:
  using HasBits = decltype(std::declval<TestHugeFieldNumbers>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbers, _impl_._oneof_case_);
  static void set_has_optional_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_fixed_32(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::ForeignMessage& optional_message(const TestHugeFieldNumbers* msg);
  static void set_has_optional_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup& optionalgroup(const TestHugeFieldNumbers* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::protobuf_unittest::TestAllTypes& oneof_test_all_types(const TestHugeFieldNumbers* msg);
};

const ::protobuf_unittest::ForeignMessage& TestHugeFieldNumbers::_Internal::optional_message(const TestHugeFieldNumbers* msg) {
  return *msg->_impl_.optional_message_;
}
const ::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup& TestHugeFieldNumbers::_Internal::optionalgroup(const TestHugeFieldNumbers* msg) {
  return *msg->_impl_.optionalgroup_;
}
const ::protobuf_unittest::TestAllTypes& TestHugeFieldNumbers::_Internal::oneof_test_all_types(const TestHugeFieldNumbers* msg) {
  return *msg->_impl_.oneof_field_.oneof_test_all_types_;
}
void TestHugeFieldNumbers::set_allocated_oneof_test_all_types(::protobuf_unittest::TestAllTypes* oneof_test_all_types) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_oneof_field();
  if (oneof_test_all_types) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::InternalGetOwningArena(oneof_test_all_types);
    if (message_arena != submessage_arena) {
      oneof_test_all_types = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oneof_test_all_types, submessage_arena);
    }
    set_has_oneof_test_all_types();
    _impl_.oneof_field_.oneof_test_all_types_ = oneof_test_all_types;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestHugeFieldNumbers.oneof_test_all_types)
}
TestHugeFieldNumbers::TestHugeFieldNumbers(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestHugeFieldNumbers)
}
TestHugeFieldNumbers::TestHugeFieldNumbers(const TestHugeFieldNumbers& from) : ::google::protobuf::Message() {
  TestHugeFieldNumbers* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_){from._impl_.repeated_int32_},
      decltype(_impl_.packed_int32_){from._impl_.packed_int32_},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      /* decltype(_impl_.string_string_map_) */ {},
      decltype(_impl_.optional_string_){},
      decltype(_impl_.optional_bytes_){},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_int32_){},
      decltype(_impl_.fixed_32_){},
      decltype(_impl_.optional_enum_){},
      decltype(_impl_.oneof_field_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  _this->_impl_.string_string_map_.MergeFrom(from._impl_.string_string_map_);
  _impl_.optional_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_string_.Set(from._internal_optional_string(), _this->GetArenaForAllocation());
  }
  _impl_.optional_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_bytes_.Set(from._internal_optional_bytes(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_message_ = new ::protobuf_unittest::ForeignMessage(*from._impl_.optional_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.optionalgroup_ = new ::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup(*from._impl_.optionalgroup_);
  }
  ::memcpy(&_impl_.optional_int32_, &from._impl_.optional_int32_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_enum_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_)) + sizeof(_impl_.optional_enum_));
  clear_has_oneof_field();
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofTestAllTypes: {
      _this->_internal_mutable_oneof_test_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_oneof_test_all_types());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestHugeFieldNumbers)
}
inline void TestHugeFieldNumbers::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_){arena},
      decltype(_impl_.packed_int32_){arena},
      /* _impl_._packed_int32_cached_byte_size_ = */ {0},
      /* decltype(_impl_.string_string_map_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      decltype(_impl_.optional_string_){},
      decltype(_impl_.optional_bytes_){},
      decltype(_impl_.optional_message_){nullptr},
      decltype(_impl_.optionalgroup_){nullptr},
      decltype(_impl_.optional_int32_){0},
      decltype(_impl_.fixed_32_){0},
      decltype(_impl_.optional_enum_){4},
      decltype(_impl_.oneof_field_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _impl_.optional_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_bytes_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_oneof_field();
}
TestHugeFieldNumbers::~TestHugeFieldNumbers() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestHugeFieldNumbers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestHugeFieldNumbers::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.repeated_int32_.~RepeatedField();
  _impl_.packed_int32_.~RepeatedField();
  _impl_.string_string_map_.~MapField();
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optional_message_;
  if (this != internal_default_instance()) delete _impl_.optionalgroup_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
}
void TestHugeFieldNumbers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestHugeFieldNumbers::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestHugeFieldNumbers)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofTestAllTypes: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.oneof_field_.oneof_test_all_types_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestHugeFieldNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestHugeFieldNumbers)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_int32()->Clear();
  _internal_mutable_packed_int32()->Clear();
  _impl_.string_string_map_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_message_ != nullptr);
      _impl_.optional_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&_impl_.optional_int32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fixed_32_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_)) + sizeof(_impl_.fixed_32_));
    _impl_.optional_enum_ = 4;
  }
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestHugeFieldNumbers::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 14, 5, 99, 7> TestHugeFieldNumbers::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_._extensions_),
    536870014, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestHugeFieldNumbers_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    64624, 8191, 1,
    33280, 0,
    65535, 65535
  }}, {{
    // optional int32 optional_int32 = 536870000;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_int32_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 fixed_32 = 536870001;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.fixed_32_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 repeated_int32 = 536870002 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 packed_int32 = 536870003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.packed_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional .protobuf_unittest.ForeignEnum optional_enum = 536870004;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_enum_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string optional_string = 536870005;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes optional_bytes = 536870006;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest.ForeignMessage optional_message = 536870007;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_message_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group OptionalGroup = 536870008 { ... };
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // map<string, string> string_string_map = 536870010;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.string_string_map_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 oneof_uint32 = 536870011;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .protobuf_unittest.TestAllTypes oneof_test_all_types = 536870012;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.oneof_field_.oneof_test_all_types_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 536870013;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kRawString | ::_fl::kRepAString)},
    // bytes oneof_bytes = 536870014;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {4, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup>()},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(TestHugeFieldNumbers()._impl_.string_string_map_)>(0, 1, 0)},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
    "\46\0\0\0\0\0\17\0\0\0\21\0\0\14\0\0"
    "protobuf_unittest.TestHugeFieldNumbers"
    "optional_string"
    "string_string_map"
    "oneof_string"
  }},
};

::uint8_t* TestHugeFieldNumbers::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestHugeFieldNumbers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [536860000, 536870000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 536860000, 536870000, target, stream);
  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32 = 536870000;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870000, this->_internal_optional_int32(), target);
  }

  // optional int32 fixed_32 = 536870001;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870001, this->_internal_fixed_32(), target);
  }

  // repeated int32 repeated_int32 = 536870002 [packed = false];
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870002, this->_internal_repeated_int32().Get(i), target);
  }

  // repeated int32 packed_int32 = 536870003 [packed = true];
  {
    int byte_size = _impl_._packed_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(536870003, _internal_packed_int32(),
                                                 byte_size, target);
    }
  }

  // optional .protobuf_unittest.ForeignEnum optional_enum = 536870004;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        536870004, this->_internal_optional_enum(), target);
  }

  // optional string optional_string = 536870005;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestHugeFieldNumbers.optional_string");
    target = stream->WriteStringMaybeAliased(536870005, _s, target);
  }

  // optional bytes optional_bytes = 536870006;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_bytes();
    target = stream->WriteBytesMaybeAliased(536870006, _s, target);
  }

  // optional .protobuf_unittest.ForeignMessage optional_message = 536870007;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(536870007, _Internal::optional_message(this),
        _Internal::optional_message(this).GetCachedSize(), target, stream);
  }

  // optional group OptionalGroup = 536870008 { ... };
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        536870008, _Internal::optionalgroup(this), target, stream);
  }

  // map<string, string> string_string_map = 536870010;
  if (!_internal_string_string_map().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::Funcs;
    const auto& field = _internal_string_string_map();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            536870010, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.TestHugeFieldNumbers.string_string_map");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.TestHugeFieldNumbers.string_string_map");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            536870010, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.TestHugeFieldNumbers.string_string_map");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.TestHugeFieldNumbers.string_string_map");
      }
    }
  }

  switch (oneof_field_case()) {
    case kOneofUint32: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          536870011, this->_internal_oneof_uint32(), target);
      break;
    }
    case kOneofTestAllTypes: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(536870012, _Internal::oneof_test_all_types(this),
          _Internal::oneof_test_all_types(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                  "protobuf_unittest.TestHugeFieldNumbers.oneof_string");
      target = stream->WriteStringMaybeAliased(536870013, _s, target);
      break;
    }
    case kOneofBytes: {
      const std::string& _s = this->_internal_oneof_bytes();
      target = stream->WriteBytesMaybeAliased(536870014, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestHugeFieldNumbers)
  return target;
}

::size_t TestHugeFieldNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestHugeFieldNumbers)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 536870002 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{5} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 packed_int32 = 536870003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32())
    ;
    _impl_._packed_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 5 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // map<string, string> string_string_map = 536870010;
  total_size += 5 * ::google::protobuf::internal::FromIntSize(_internal_string_string_map_size());
  for (const auto& entry : _internal_string_string_map()) {
    total_size += TestHugeFieldNumbers_StringStringMapEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string optional_string = 536870005;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string());
    }

    // optional bytes optional_bytes = 536870006;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_optional_bytes());
    }

    // optional .protobuf_unittest.ForeignMessage optional_message = 536870007;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_message_);
    }

    // optional group OptionalGroup = 536870008 { ... };
    if (cached_has_bits & 0x00000008u) {
      total_size += 10 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *_impl_.optionalgroup_);
    }

    // optional int32 optional_int32 = 536870000;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32());
    }

    // optional int32 fixed_32 = 536870001;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_fixed_32());
    }

    // optional .protobuf_unittest.ForeignEnum optional_enum = 536870004;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_enum());
    }

  }
  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 536870011;
    case kOneofUint32: {
      total_size += 5 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_oneof_uint32());
      break;
    }
    // .protobuf_unittest.TestAllTypes oneof_test_all_types = 536870012;
    case kOneofTestAllTypes: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.oneof_field_.oneof_test_all_types_);
      break;
    }
    // string oneof_string = 536870013;
    case kOneofString: {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // bytes oneof_bytes = 536870014;
    case kOneofBytes: {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestHugeFieldNumbers::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestHugeFieldNumbers::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestHugeFieldNumbers::GetClassData() const { return &_class_data_; }


void TestHugeFieldNumbers::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestHugeFieldNumbers*>(&to_msg);
  auto& from = static_cast<const TestHugeFieldNumbers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestHugeFieldNumbers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_packed_int32()->MergeFrom(from._internal_packed_int32());
  _this->_impl_.string_string_map_.MergeFrom(from._impl_.string_string_map_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string(from._internal_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes(from._internal_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_message()->::protobuf_unittest::ForeignMessage::MergeFrom(
          from._internal_optional_message());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestHugeFieldNumbers_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.fixed_32_ = from._impl_.fixed_32_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_enum_ = from._impl_.optional_enum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofTestAllTypes: {
      _this->_internal_mutable_oneof_test_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_oneof_test_all_types());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestHugeFieldNumbers::CopyFrom(const TestHugeFieldNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestHugeFieldNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestHugeFieldNumbers::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestHugeFieldNumbers::InternalSwap(TestHugeFieldNumbers* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.packed_int32_.InternalSwap(&other->_impl_.packed_int32_);
  _impl_.string_string_map_.InternalSwap(&other->_impl_.string_string_map_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, lhs_arena,
                                       &other->_impl_.optional_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, lhs_arena,
                                       &other->_impl_.optional_bytes_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_enum_)
      + sizeof(TestHugeFieldNumbers::_impl_.optional_enum_)
      - PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbers, _impl_.optional_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_message_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestHugeFieldNumbers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[108]);
}
// ===================================================================

class TestExtensionInsideTable::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtensionInsideTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_._has_bits_);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_field2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_field3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_field4(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_field6(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_field7(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_field8(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_field9(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_field10(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

TestExtensionInsideTable::TestExtensionInsideTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtensionInsideTable)
}
TestExtensionInsideTable::TestExtensionInsideTable(const TestExtensionInsideTable& from) : ::google::protobuf::Message() {
  TestExtensionInsideTable* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){},
      decltype(_impl_.field2_){},
      decltype(_impl_.field3_){},
      decltype(_impl_.field4_){},
      decltype(_impl_.field6_){},
      decltype(_impl_.field7_){},
      decltype(_impl_.field8_){},
      decltype(_impl_.field9_){},
      decltype(_impl_.field10_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.field1_, &from._impl_.field1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.field10_) -
    reinterpret_cast<char*>(&_impl_.field1_)) + sizeof(_impl_.field10_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtensionInsideTable)
}
inline void TestExtensionInsideTable::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.field1_){0},
      decltype(_impl_.field2_){0},
      decltype(_impl_.field3_){0},
      decltype(_impl_.field4_){0},
      decltype(_impl_.field6_){0},
      decltype(_impl_.field7_){0},
      decltype(_impl_.field8_){0},
      decltype(_impl_.field9_){0},
      decltype(_impl_.field10_){0},
  };
}
TestExtensionInsideTable::~TestExtensionInsideTable() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtensionInsideTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtensionInsideTable::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestExtensionInsideTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtensionInsideTable::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtensionInsideTable)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.field1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.field9_) -
        reinterpret_cast<char*>(&_impl_.field1_)) + sizeof(_impl_.field9_));
  }
  _impl_.field10_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtensionInsideTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> TestExtensionInsideTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_._extensions_),
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtensionInsideTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 field1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field1_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field1_)}},
    // optional int32 field2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field2_)}},
    // optional int32 field3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field3_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field3_)}},
    // optional int32 field4 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field4_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 field6 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field6_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field6_)}},
    // optional int32 field7 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field7_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field7_)}},
    // optional int32 field8 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field8_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field8_)}},
    // optional int32 field9 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field9_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field9_)}},
    // optional int32 field10 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionInsideTable, _impl_.field10_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field10_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 field1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field4_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field6 = 6;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field6_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field7 = 7;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field7_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field8 = 8;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field8_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field9 = 9;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field9_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 field10 = 10;
    {PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field10_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestExtensionInsideTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtensionInsideTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 field1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_field1(), target);
  }

  // optional int32 field2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_field2(), target);
  }

  // optional int32 field3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_field3(), target);
  }

  // optional int32 field4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_field4(), target);
  }

  // Extension range [5, 6)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 5, 6, target, stream);
  // optional int32 field6 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_field6(), target);
  }

  // optional int32 field7 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_field7(), target);
  }

  // optional int32 field8 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_field8(), target);
  }

  // optional int32 field9 = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_field9(), target);
  }

  // optional int32 field10 = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_field10(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtensionInsideTable)
  return target;
}

::size_t TestExtensionInsideTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtensionInsideTable)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 field1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field1());
    }

    // optional int32 field2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field2());
    }

    // optional int32 field3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field3());
    }

    // optional int32 field4 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field4());
    }

    // optional int32 field6 = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field6());
    }

    // optional int32 field7 = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field7());
    }

    // optional int32 field8 = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field8());
    }

    // optional int32 field9 = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_field9());
    }

  }
  // optional int32 field10 = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_field10());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtensionInsideTable::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtensionInsideTable::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtensionInsideTable::GetClassData() const { return &_class_data_; }


void TestExtensionInsideTable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtensionInsideTable*>(&to_msg);
  auto& from = static_cast<const TestExtensionInsideTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtensionInsideTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.field1_ = from._impl_.field1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.field2_ = from._impl_.field2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.field3_ = from._impl_.field3_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.field4_ = from._impl_.field4_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.field6_ = from._impl_.field6_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.field7_ = from._impl_.field7_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.field8_ = from._impl_.field8_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.field9_ = from._impl_.field9_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_field10(from._internal_field10());
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtensionInsideTable::CopyFrom(const TestExtensionInsideTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtensionInsideTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtensionInsideTable::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestExtensionInsideTable::InternalSwap(TestExtensionInsideTable* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field10_)
      + sizeof(TestExtensionInsideTable::_impl_.field10_)
      - PROTOBUF_FIELD_OFFSET(TestExtensionInsideTable, _impl_.field1_)>(
          reinterpret_cast<char*>(&_impl_.field1_),
          reinterpret_cast<char*>(&other->_impl_.field1_));
}

::google::protobuf::Metadata TestExtensionInsideTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[109]);
}
// ===================================================================

class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_._has_bits_);
  static void set_has_another_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from) : ::google::protobuf::Message() {
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.another_field_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  _impl_.another_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.another_field_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.another_field_.Set(from._internal_another_field(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.another_field_){},
  };
  _impl_.another_field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.another_field_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.another_field_.Destroy();
}
void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.another_field_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 1, 0, 109, 2> TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_._extensions_),
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967263,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::FastEndG1, {20, 20}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string another_field = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_.another_field_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string another_field = 6;
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup, _impl_.another_field_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\127\15\0\0\0\0\0\0"
    "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup"
    "another_field"
  }},
};

::uint8_t* TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [3, 4)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 3, 4, target, stream);
  cached_has_bits = _impl_._has_bits_[0];
  // optional string another_field = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_another_field();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.another_field");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  return target;
}

::size_t TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string another_field = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_another_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::GetClassData() const { return &_class_data_; }


void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup*>(&to_msg);
  auto& from = static_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_another_field(from._internal_another_field());
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.another_field_, lhs_arena,
                                       &other->_impl_.another_field_, rhs_arena);
}

::google::protobuf::Metadata TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[110]);
}
// ===================================================================

class TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_._has_bits_);
  static void set_has_but_why_tho(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from) : ::google::protobuf::Message() {
  TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.but_why_tho_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.but_why_tho_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.but_why_tho_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.but_why_tho_.Set(from._internal_but_why_tho(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.but_why_tho_){},
  };
  _impl_.but_why_tho_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.but_why_tho_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::~TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.but_why_tho_.Destroy();
}
void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.but_why_tho_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 122, 2> TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_._has_bits_),
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967279,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {36, 36}},
    // optional string but_why_tho = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_.but_why_tho_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string but_why_tho = 5;
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup, _impl_.but_why_tho_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\146\13\0\0\0\0\0\0"
    "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup"
    "but_why_tho"
  }},
};

::uint8_t* TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string but_why_tho = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_but_why_tho();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup.but_why_tho");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  return target;
}

::size_t TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string but_why_tho = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_but_why_tho());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::GetClassData() const { return &_class_data_; }


void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup*>(&to_msg);
  auto& from = static_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_but_why_tho(from._internal_but_why_tho());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::IsInitialized() const {
  return true;
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.but_why_tho_, lhs_arena,
                                       &other->_impl_.but_why_tho_, rhs_arena);
}

::google::protobuf::Metadata TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[111]);
}
// ===================================================================

class TestNestedGroupExtensionOuter_Layer1OptionalGroup::_Internal {
 public:
};

TestNestedGroupExtensionOuter_Layer1OptionalGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup::TestNestedGroupExtensionOuter_Layer1OptionalGroup(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from) : ::google::protobuf::Message() {
  TestNestedGroupExtensionOuter_Layer1OptionalGroup* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.layer2repeatedgroup_){from._impl_.layer2repeatedgroup_},
      decltype(_impl_.layer2anotheroptionalrepeatedgroup_){from._impl_.layer2anotheroptionalrepeatedgroup_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.layer2repeatedgroup_){arena},
      decltype(_impl_.layer2anotheroptionalrepeatedgroup_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestNestedGroupExtensionOuter_Layer1OptionalGroup::~TestNestedGroupExtensionOuter_Layer1OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedGroupExtensionOuter_Layer1OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.layer2repeatedgroup_.~RepeatedPtrField();
  _impl_.layer2anotheroptionalrepeatedgroup_.~RepeatedPtrField();
}
void TestNestedGroupExtensionOuter_Layer1OptionalGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedGroupExtensionOuter_Layer1OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_layer2repeatedgroup()->Clear();
  _internal_mutable_layer2anotheroptionalrepeatedgroup()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedGroupExtensionOuter_Layer1OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> TestNestedGroupExtensionOuter_Layer1OptionalGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967285,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedGroupExtensionOuter_Layer1OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated group Layer2AnotherOptionalRepeatedGroup = 4 { ... };
    {::_pbi::TcParser::FastGtR1,
     {35, 63, 1, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2anotheroptionalrepeatedgroup_)}},
    {::_pbi::TcParser::FastEndG1, {12, 12}},
    // repeated group Layer2RepeatedGroup = 2 { ... };
    {::_pbi::TcParser::FastGtR1,
     {19, 63, 0, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2repeatedgroup_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated group Layer2RepeatedGroup = 2 { ... };
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2repeatedgroup_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group Layer2AnotherOptionalRepeatedGroup = 4 { ... };
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter_Layer1OptionalGroup, _impl_.layer2anotheroptionalrepeatedgroup_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2AnotherOptionalRepeatedGroup>()},
  }}, {{
  }},
};

::uint8_t* TestNestedGroupExtensionOuter_Layer1OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated group Layer2RepeatedGroup = 2 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layer2repeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(2, this->_internal_layer2repeatedgroup().Get(i), target, stream);
  }

  // repeated group Layer2AnotherOptionalRepeatedGroup = 4 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layer2anotheroptionalrepeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(4, this->_internal_layer2anotheroptionalrepeatedgroup().Get(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  return target;
}

::size_t TestNestedGroupExtensionOuter_Layer1OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated group Layer2RepeatedGroup = 2 { ... };
  total_size += 2UL * this->_internal_layer2repeatedgroup_size();
  for (const auto& msg : this->_internal_layer2repeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated group Layer2AnotherOptionalRepeatedGroup = 4 { ... };
  total_size += 2UL * this->_internal_layer2anotheroptionalrepeatedgroup_size();
  for (const auto& msg : this->_internal_layer2anotheroptionalrepeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedGroupExtensionOuter_Layer1OptionalGroup::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedGroupExtensionOuter_Layer1OptionalGroup::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedGroupExtensionOuter_Layer1OptionalGroup::GetClassData() const { return &_class_data_; }


void TestNestedGroupExtensionOuter_Layer1OptionalGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedGroupExtensionOuter_Layer1OptionalGroup*>(&to_msg);
  auto& from = static_cast<const TestNestedGroupExtensionOuter_Layer1OptionalGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_layer2repeatedgroup()->MergeFrom(from._internal_layer2repeatedgroup());
  _this->_internal_mutable_layer2anotheroptionalrepeatedgroup()->MergeFrom(from._internal_layer2anotheroptionalrepeatedgroup());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup::CopyFrom(const TestNestedGroupExtensionOuter_Layer1OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedGroupExtensionOuter_Layer1OptionalGroup::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_layer2repeatedgroup()))
    return false;
  return true;
}

void TestNestedGroupExtensionOuter_Layer1OptionalGroup::InternalSwap(TestNestedGroupExtensionOuter_Layer1OptionalGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.layer2repeatedgroup_.InternalSwap(&other->_impl_.layer2repeatedgroup_);
  _impl_.layer2anotheroptionalrepeatedgroup_.InternalSwap(&other->_impl_.layer2anotheroptionalrepeatedgroup_);
}

::google::protobuf::Metadata TestNestedGroupExtensionOuter_Layer1OptionalGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[112]);
}
// ===================================================================

class TestNestedGroupExtensionOuter::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedGroupExtensionOuter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter, _impl_._has_bits_);
  static const ::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& layer1optionalgroup(const TestNestedGroupExtensionOuter* msg);
  static void set_has_layer1optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup& TestNestedGroupExtensionOuter::_Internal::layer1optionalgroup(const TestNestedGroupExtensionOuter* msg) {
  return *msg->_impl_.layer1optionalgroup_;
}
TestNestedGroupExtensionOuter::TestNestedGroupExtensionOuter(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedGroupExtensionOuter)
}
TestNestedGroupExtensionOuter::TestNestedGroupExtensionOuter(const TestNestedGroupExtensionOuter& from) : ::google::protobuf::Message() {
  TestNestedGroupExtensionOuter* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.layer1optionalgroup_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.layer1optionalgroup_ = new ::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup(*from._impl_.layer1optionalgroup_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedGroupExtensionOuter)
}
inline void TestNestedGroupExtensionOuter::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.layer1optionalgroup_){nullptr},
  };
}
TestNestedGroupExtensionOuter::~TestNestedGroupExtensionOuter() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedGroupExtensionOuter)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedGroupExtensionOuter::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.layer1optionalgroup_;
}
void TestNestedGroupExtensionOuter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedGroupExtensionOuter::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedGroupExtensionOuter)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.layer1optionalgroup_ != nullptr);
    _impl_.layer1optionalgroup_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedGroupExtensionOuter::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestNestedGroupExtensionOuter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestNestedGroupExtensionOuter_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional group Layer1OptionalGroup = 1 { ... };
    {::_pbi::TcParser::FastGtS1,
     {11, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter, _impl_.layer1optionalgroup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional group Layer1OptionalGroup = 1 { ... };
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionOuter, _impl_.layer1optionalgroup_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup>()},
  }}, {{
  }},
};

::uint8_t* TestNestedGroupExtensionOuter::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedGroupExtensionOuter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional group Layer1OptionalGroup = 1 { ... };
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(
        1, _Internal::layer1optionalgroup(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedGroupExtensionOuter)
  return target;
}

::size_t TestNestedGroupExtensionOuter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedGroupExtensionOuter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional group Layer1OptionalGroup = 1 { ... };
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::GroupSize(
        *_impl_.layer1optionalgroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedGroupExtensionOuter::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedGroupExtensionOuter::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedGroupExtensionOuter::GetClassData() const { return &_class_data_; }


void TestNestedGroupExtensionOuter::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedGroupExtensionOuter*>(&to_msg);
  auto& from = static_cast<const TestNestedGroupExtensionOuter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedGroupExtensionOuter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_layer1optionalgroup()->::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup::MergeFrom(
        from._internal_layer1optionalgroup());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedGroupExtensionOuter::CopyFrom(const TestNestedGroupExtensionOuter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedGroupExtensionOuter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedGroupExtensionOuter::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.layer1optionalgroup_->IsInitialized()) return false;
  }
  return true;
}

void TestNestedGroupExtensionOuter::InternalSwap(TestNestedGroupExtensionOuter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.layer1optionalgroup_, other->_impl_.layer1optionalgroup_);
}

::google::protobuf::Metadata TestNestedGroupExtensionOuter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[113]);
}
// ===================================================================

class TestNestedGroupExtensionInnerExtension::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedGroupExtensionInnerExtension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionInnerExtension, _impl_._has_bits_);
  static void set_has_inner_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestNestedGroupExtensionInnerExtension::TestNestedGroupExtensionInnerExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
}
TestNestedGroupExtensionInnerExtension::TestNestedGroupExtensionInnerExtension(const TestNestedGroupExtensionInnerExtension& from) : ::google::protobuf::Message() {
  TestNestedGroupExtensionInnerExtension* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.inner_name_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.inner_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.inner_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.inner_name_.Set(from._internal_inner_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
}
inline void TestNestedGroupExtensionInnerExtension::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.inner_name_){},
  };
  _impl_.inner_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.inner_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestNestedGroupExtensionInnerExtension::~TestNestedGroupExtensionInnerExtension() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedGroupExtensionInnerExtension::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inner_name_.Destroy();
}
void TestNestedGroupExtensionInnerExtension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedGroupExtensionInnerExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.inner_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedGroupExtensionInnerExtension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 75, 2> TestNestedGroupExtensionInnerExtension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionInnerExtension, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedGroupExtensionInnerExtension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string inner_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionInnerExtension, _impl_.inner_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string inner_name = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedGroupExtensionInnerExtension, _impl_.inner_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\12\0\0\0\0\0\0"
    "protobuf_unittest.TestNestedGroupExtensionInnerExtension"
    "inner_name"
  }},
};

::uint8_t* TestNestedGroupExtensionInnerExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string inner_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_inner_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestNestedGroupExtensionInnerExtension.inner_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  return target;
}

::size_t TestNestedGroupExtensionInnerExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string inner_name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_inner_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedGroupExtensionInnerExtension::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedGroupExtensionInnerExtension::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedGroupExtensionInnerExtension::GetClassData() const { return &_class_data_; }


void TestNestedGroupExtensionInnerExtension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedGroupExtensionInnerExtension*>(&to_msg);
  auto& from = static_cast<const TestNestedGroupExtensionInnerExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_inner_name(from._internal_inner_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedGroupExtensionInnerExtension::CopyFrom(const TestNestedGroupExtensionInnerExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedGroupExtensionInnerExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedGroupExtensionInnerExtension::IsInitialized() const {
  return true;
}

void TestNestedGroupExtensionInnerExtension::InternalSwap(TestNestedGroupExtensionInnerExtension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inner_name_, lhs_arena,
                                       &other->_impl_.inner_name_, rhs_arena);
}

::google::protobuf::Metadata TestNestedGroupExtensionInnerExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[114]);
}
// ===================================================================

class TestExtensionRangeSerialize::_Internal {
 public:
  using HasBits = decltype(std::declval<TestExtensionRangeSerialize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_._has_bits_);
  static void set_has_foo_one(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_foo_two(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_foo_three(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_foo_four(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

TestExtensionRangeSerialize::TestExtensionRangeSerialize(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestExtensionRangeSerialize)
}
TestExtensionRangeSerialize::TestExtensionRangeSerialize(const TestExtensionRangeSerialize& from) : ::google::protobuf::Message() {
  TestExtensionRangeSerialize* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_one_){},
      decltype(_impl_.foo_two_){},
      decltype(_impl_.foo_three_){},
      decltype(_impl_.foo_four_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.foo_one_, &from._impl_.foo_one_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.foo_four_) -
    reinterpret_cast<char*>(&_impl_.foo_one_)) + sizeof(_impl_.foo_four_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestExtensionRangeSerialize)
}
inline void TestExtensionRangeSerialize::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.foo_one_){0},
      decltype(_impl_.foo_two_){0},
      decltype(_impl_.foo_three_){0},
      decltype(_impl_.foo_four_){0},
  };
}
TestExtensionRangeSerialize::~TestExtensionRangeSerialize() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestExtensionRangeSerialize)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestExtensionRangeSerialize::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
}
void TestExtensionRangeSerialize::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestExtensionRangeSerialize::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestExtensionRangeSerialize)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.foo_one_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.foo_four_) -
        reinterpret_cast<char*>(&_impl_.foo_one_)) + sizeof(_impl_.foo_four_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestExtensionRangeSerialize::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 0, 2> TestExtensionRangeSerialize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_._extensions_),
    13, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963102,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestExtensionRangeSerialize_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 foo_one = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionRangeSerialize, _impl_.foo_one_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_one_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 foo_four = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionRangeSerialize, _impl_.foo_four_), 3>(),
     {104, 3, 0, PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_four_)}},
    // optional int32 foo_two = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionRangeSerialize, _impl_.foo_two_), 1>(),
     {48, 1, 0, PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_two_)}},
    // optional int32 foo_three = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestExtensionRangeSerialize, _impl_.foo_three_), 2>(),
     {56, 2, 0, PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_three_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 foo_one = 1;
    {PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_one_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 foo_two = 6;
    {PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_two_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 foo_three = 7;
    {PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_three_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 foo_four = 13;
    {PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_four_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestExtensionRangeSerialize::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestExtensionRangeSerialize)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 foo_one = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_foo_one(), target);
  }

  // Extension range [2, 5)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2, 5, target, stream);
  // optional int32 foo_two = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_foo_two(), target);
  }

  // optional int32 foo_three = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_foo_three(), target);
  }

  // Extension range [9, 11)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 9, 11, target, stream);
  // optional int32 foo_four = 13;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_foo_four(), target);
  }

  // Extension range [15, 20)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 15, 20, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestExtensionRangeSerialize)
  return target;
}

::size_t TestExtensionRangeSerialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestExtensionRangeSerialize)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 foo_one = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_one());
    }

    // optional int32 foo_two = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_two());
    }

    // optional int32 foo_three = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_three());
    }

    // optional int32 foo_four = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_foo_four());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestExtensionRangeSerialize::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestExtensionRangeSerialize::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestExtensionRangeSerialize::GetClassData() const { return &_class_data_; }


void TestExtensionRangeSerialize::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestExtensionRangeSerialize*>(&to_msg);
  auto& from = static_cast<const TestExtensionRangeSerialize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestExtensionRangeSerialize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.foo_one_ = from._impl_.foo_one_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.foo_two_ = from._impl_.foo_two_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.foo_three_ = from._impl_.foo_three_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.foo_four_ = from._impl_.foo_four_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestExtensionRangeSerialize::CopyFrom(const TestExtensionRangeSerialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestExtensionRangeSerialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestExtensionRangeSerialize::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void TestExtensionRangeSerialize::InternalSwap(TestExtensionRangeSerialize* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_four_)
      + sizeof(TestExtensionRangeSerialize::_impl_.foo_four_)
      - PROTOBUF_FIELD_OFFSET(TestExtensionRangeSerialize, _impl_.foo_one_)>(
          reinterpret_cast<char*>(&_impl_.foo_one_),
          reinterpret_cast<char*>(&other->_impl_.foo_one_));
}

::google::protobuf::Metadata TestExtensionRangeSerialize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[115]);
}
// ===================================================================

class TestVerifyInt32Simple::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyInt32Simple>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_._has_bits_);
  static void set_has_optional_int32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

TestVerifyInt32Simple::TestVerifyInt32Simple(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyInt32Simple)
}
TestVerifyInt32Simple::TestVerifyInt32Simple(const TestVerifyInt32Simple& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyInt32Simple)
}
inline void TestVerifyInt32Simple::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_int32_1_){0},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
  };
}
TestVerifyInt32Simple::~TestVerifyInt32Simple() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyInt32Simple)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyInt32Simple::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestVerifyInt32Simple::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyInt32Simple::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyInt32Simple)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.optional_int32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyInt32Simple::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 7> TestVerifyInt32Simple::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestVerifyInt32Simple_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_64_)}},
    // optional int32 optional_int32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32Simple, _impl_.optional_int32_1_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32Simple, _impl_.optional_int32_2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_2_)}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 2,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestVerifyInt32Simple::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyInt32Simple)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyInt32Simple)
  return target;
}

::size_t TestVerifyInt32Simple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyInt32Simple)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 optional_int32_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyInt32Simple::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyInt32Simple::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyInt32Simple::GetClassData() const { return &_class_data_; }


void TestVerifyInt32Simple::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyInt32Simple*>(&to_msg);
  auto& from = static_cast<const TestVerifyInt32Simple&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyInt32Simple)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_int32_1_ = from._impl_.optional_int32_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyInt32Simple::CopyFrom(const TestVerifyInt32Simple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyInt32Simple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyInt32Simple::IsInitialized() const {
  return true;
}

void TestVerifyInt32Simple::InternalSwap(TestVerifyInt32Simple* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_64_)
      + sizeof(TestVerifyInt32Simple::_impl_.optional_int32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyInt32Simple, _impl_.optional_int32_1_)>(
          reinterpret_cast<char*>(&_impl_.optional_int32_1_),
          reinterpret_cast<char*>(&other->_impl_.optional_int32_1_));
}

::google::protobuf::Metadata TestVerifyInt32Simple::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[116]);
}
// ===================================================================

class TestVerifyInt32::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyInt32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_._has_bits_);
  static void set_has_optional_int32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyInt32* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyInt32::_Internal::optional_all_types(const TestVerifyInt32* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyInt32::TestVerifyInt32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyInt32)
}
TestVerifyInt32::TestVerifyInt32(const TestVerifyInt32& from) : ::google::protobuf::Message() {
  TestVerifyInt32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){},
      decltype(_impl_.optional_int32_2_){},
      decltype(_impl_.optional_int32_63_){},
      decltype(_impl_.optional_int32_64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_int32_1_, &from._impl_.optional_int32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyInt32)
}
inline void TestVerifyInt32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){0},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
  };
}
TestVerifyInt32::~TestVerifyInt32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyInt32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyInt32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyInt32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyInt32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.optional_int32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyInt32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 0, 7> TestVerifyInt32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyInt32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_64_)}},
    // optional int32 optional_int32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32, _impl_.optional_int32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32, _impl_.optional_int32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_2_)}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 4,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyInt32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyInt32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyInt32)
  return target;
}

::size_t TestVerifyInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyInt32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional int32 optional_int32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyInt32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyInt32::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyInt32::GetClassData() const { return &_class_data_; }


void TestVerifyInt32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyInt32*>(&to_msg);
  auto& from = static_cast<const TestVerifyInt32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyInt32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_1_ = from._impl_.optional_int32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyInt32::CopyFrom(const TestVerifyInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyInt32::IsInitialized() const {
  return true;
}

void TestVerifyInt32::InternalSwap(TestVerifyInt32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_int32_64_)
      + sizeof(TestVerifyInt32::_impl_.optional_int32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyInt32, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyInt32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[117]);
}
// ===================================================================

class TestVerifyMostlyInt32::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyMostlyInt32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_._has_bits_);
  static void set_has_optional_int64_30(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_int32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_3(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int32_4(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyMostlyInt32* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyMostlyInt32::_Internal::optional_all_types(const TestVerifyMostlyInt32* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyMostlyInt32::TestVerifyMostlyInt32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyMostlyInt32)
}
TestVerifyMostlyInt32::TestVerifyMostlyInt32(const TestVerifyMostlyInt32& from) : ::google::protobuf::Message() {
  TestVerifyMostlyInt32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){},
      decltype(_impl_.optional_int32_2_){},
      decltype(_impl_.optional_int32_3_){},
      decltype(_impl_.optional_int32_4_){},
      decltype(_impl_.optional_int64_30_){},
      decltype(_impl_.optional_int32_63_){},
      decltype(_impl_.optional_int32_64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_int32_1_, &from._impl_.optional_int32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyMostlyInt32)
}
inline void TestVerifyMostlyInt32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){0},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_3_){0},
      decltype(_impl_.optional_int32_4_){0},
      decltype(_impl_.optional_int64_30_){::int64_t{0}},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
  };
}
TestVerifyMostlyInt32::~TestVerifyMostlyInt32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyMostlyInt32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyMostlyInt32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyMostlyInt32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyMostlyInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyMostlyInt32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.optional_int32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyMostlyInt32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 0, 7> TestVerifyMostlyInt32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_._has_bits_),
    0, // no _extensions_
    64, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758095600,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyMostlyInt32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 7, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_64_)}},
    // optional int32 optional_int32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32, _impl_.optional_int32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32, _impl_.optional_int32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_2_)}},
    // optional int32 optional_int32_3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32, _impl_.optional_int32_3_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_3_)}},
    // optional int32 optional_int32_4 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32, _impl_.optional_int32_4_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.repeated_all_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 optional_int64_30 = 30;
    {::_pbi::TcParser::FastV64S2,
     {496, 5, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int64_30_)}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 6, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 7,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_3_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 optional_int64_30 = 30;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int64_30_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyMostlyInt32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyMostlyInt32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional int32 optional_int32_3 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_optional_int32_3(), target);
  }

  // optional int32 optional_int32_4 = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_optional_int32_4(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int64 optional_int64_30 = 30;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        30, this->_internal_optional_int64_30(), target);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyMostlyInt32)
  return target;
}

::size_t TestVerifyMostlyInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyMostlyInt32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional int32 optional_int32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_3 = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_3());
    }

    // optional int32 optional_int32_4 = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_4());
    }

    // optional int64 optional_int64_30 = 30;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_30());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyMostlyInt32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyMostlyInt32::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyMostlyInt32::GetClassData() const { return &_class_data_; }


void TestVerifyMostlyInt32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyMostlyInt32*>(&to_msg);
  auto& from = static_cast<const TestVerifyMostlyInt32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyMostlyInt32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_1_ = from._impl_.optional_int32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_3_ = from._impl_.optional_int32_3_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_4_ = from._impl_.optional_int32_4_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_int64_30_ = from._impl_.optional_int64_30_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyMostlyInt32::CopyFrom(const TestVerifyMostlyInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyMostlyInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyMostlyInt32::IsInitialized() const {
  return true;
}

void TestVerifyMostlyInt32::InternalSwap(TestVerifyMostlyInt32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_int32_64_)
      + sizeof(TestVerifyMostlyInt32::_impl_.optional_int32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyMostlyInt32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[118]);
}
// ===================================================================

class TestVerifyMostlyInt32BigFieldNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyMostlyInt32BigFieldNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_._has_bits_);
  static void set_has_optional_int64_30(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_int32_300(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_optional_int32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_3(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int32_4(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyMostlyInt32BigFieldNumber* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyMostlyInt32BigFieldNumber::_Internal::optional_all_types(const TestVerifyMostlyInt32BigFieldNumber* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyMostlyInt32BigFieldNumber::TestVerifyMostlyInt32BigFieldNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
}
TestVerifyMostlyInt32BigFieldNumber::TestVerifyMostlyInt32BigFieldNumber(const TestVerifyMostlyInt32BigFieldNumber& from) : ::google::protobuf::Message() {
  TestVerifyMostlyInt32BigFieldNumber* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){},
      decltype(_impl_.optional_int32_2_){},
      decltype(_impl_.optional_int32_3_){},
      decltype(_impl_.optional_int32_4_){},
      decltype(_impl_.optional_int64_30_){},
      decltype(_impl_.optional_int32_63_){},
      decltype(_impl_.optional_int32_64_){},
      decltype(_impl_.optional_int32_300_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_int32_1_, &from._impl_.optional_int32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_300_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_300_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
}
inline void TestVerifyMostlyInt32BigFieldNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){0},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_3_){0},
      decltype(_impl_.optional_int32_4_){0},
      decltype(_impl_.optional_int64_30_){::int64_t{0}},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
      decltype(_impl_.optional_int32_300_){0},
  };
}
TestVerifyMostlyInt32BigFieldNumber::~TestVerifyMostlyInt32BigFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyMostlyInt32BigFieldNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyMostlyInt32BigFieldNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyMostlyInt32BigFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.optional_int32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_64_));
  }
  _impl_.optional_int32_300_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyMostlyInt32BigFieldNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 0, 12> TestVerifyMostlyInt32BigFieldNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_._has_bits_),
    0, // no _extensions_
    300, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758095600,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyMostlyInt32BigFieldNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 7, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_64_)}},
    // optional int32 optional_int32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_2_)}},
    // optional int32 optional_int32_3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_3_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_3_)}},
    // optional int32 optional_int32_4 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_4_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.repeated_all_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32_300 = 300;
    {::_pbi::TcParser::FastV32S2,
     {4832, 8, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_300_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 optional_int64_30 = 30;
    {::_pbi::TcParser::FastV64S2,
     {496, 5, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int64_30_)}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 6, 0, PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 7,300, 0, 1,
     65534, 9,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_3_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_4 = 4;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 optional_int64_30 = 30;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int64_30_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_300 = 300;
    {PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_300_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyMostlyInt32BigFieldNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional int32 optional_int32_3 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_optional_int32_3(), target);
  }

  // optional int32 optional_int32_4 = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_optional_int32_4(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int64 optional_int64_30 = 30;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        30, this->_internal_optional_int64_30(), target);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  // optional int32 optional_int32_300 = 300;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        300, this->_internal_optional_int32_300(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  return target;
}

::size_t TestVerifyMostlyInt32BigFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional int32 optional_int32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_3 = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_3());
    }

    // optional int32 optional_int32_4 = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_4());
    }

    // optional int64 optional_int64_30 = 30;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_30());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

  }
  // optional int32 optional_int32_300 = 300;
  if (cached_has_bits & 0x00000100u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_optional_int32_300());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyMostlyInt32BigFieldNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyMostlyInt32BigFieldNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyMostlyInt32BigFieldNumber::GetClassData() const { return &_class_data_; }


void TestVerifyMostlyInt32BigFieldNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyMostlyInt32BigFieldNumber*>(&to_msg);
  auto& from = static_cast<const TestVerifyMostlyInt32BigFieldNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_1_ = from._impl_.optional_int32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_3_ = from._impl_.optional_int32_3_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_4_ = from._impl_.optional_int32_4_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_int64_30_ = from._impl_.optional_int64_30_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_optional_int32_300(from._internal_optional_int32_300());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyMostlyInt32BigFieldNumber::CopyFrom(const TestVerifyMostlyInt32BigFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyMostlyInt32BigFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyMostlyInt32BigFieldNumber::IsInitialized() const {
  return true;
}

void TestVerifyMostlyInt32BigFieldNumber::InternalSwap(TestVerifyMostlyInt32BigFieldNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_int32_300_)
      + sizeof(TestVerifyMostlyInt32BigFieldNumber::_impl_.optional_int32_300_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyMostlyInt32BigFieldNumber, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyMostlyInt32BigFieldNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[119]);
}
// ===================================================================

class TestVerifyUint32Simple::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyUint32Simple>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_._has_bits_);
  static void set_has_optional_uint32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_uint32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_uint32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_uint32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

TestVerifyUint32Simple::TestVerifyUint32Simple(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyUint32Simple)
}
TestVerifyUint32Simple::TestVerifyUint32Simple(const TestVerifyUint32Simple& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyUint32Simple)
}
inline void TestVerifyUint32Simple::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_uint32_1_){0u},
      decltype(_impl_.optional_uint32_2_){0u},
      decltype(_impl_.optional_uint32_63_){0u},
      decltype(_impl_.optional_uint32_64_){0u},
  };
}
TestVerifyUint32Simple::~TestVerifyUint32Simple() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyUint32Simple)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyUint32Simple::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TestVerifyUint32Simple::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyUint32Simple::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyUint32Simple)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.optional_uint32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_uint32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyUint32Simple::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 7> TestVerifyUint32Simple::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestVerifyUint32Simple_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 optional_uint32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_64_)}},
    // optional uint32 optional_uint32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32Simple, _impl_.optional_uint32_1_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_1_)}},
    // optional uint32 optional_uint32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32Simple, _impl_.optional_uint32_2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_2_)}},
    // optional uint32 optional_uint32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 2,
    65535, 65535
  }}, {{
    // optional uint32 optional_uint32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_63_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_64_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestVerifyUint32Simple::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyUint32Simple)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 optional_uint32_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_optional_uint32_1(), target);
  }

  // optional uint32 optional_uint32_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_optional_uint32_2(), target);
  }

  // optional uint32 optional_uint32_63 = 63;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_optional_uint32_63(), target);
  }

  // optional uint32 optional_uint32_64 = 64;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        64, this->_internal_optional_uint32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyUint32Simple)
  return target;
}

::size_t TestVerifyUint32Simple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyUint32Simple)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 optional_uint32_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_1());
    }

    // optional uint32 optional_uint32_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_2());
    }

    // optional uint32 optional_uint32_63 = 63;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_63());
    }

    // optional uint32 optional_uint32_64 = 64;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyUint32Simple::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyUint32Simple::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyUint32Simple::GetClassData() const { return &_class_data_; }


void TestVerifyUint32Simple::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyUint32Simple*>(&to_msg);
  auto& from = static_cast<const TestVerifyUint32Simple&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyUint32Simple)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_uint32_1_ = from._impl_.optional_uint32_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_uint32_2_ = from._impl_.optional_uint32_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_uint32_63_ = from._impl_.optional_uint32_63_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_uint32_64_ = from._impl_.optional_uint32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyUint32Simple::CopyFrom(const TestVerifyUint32Simple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyUint32Simple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyUint32Simple::IsInitialized() const {
  return true;
}

void TestVerifyUint32Simple::InternalSwap(TestVerifyUint32Simple* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_64_)
      + sizeof(TestVerifyUint32Simple::_impl_.optional_uint32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyUint32Simple, _impl_.optional_uint32_1_)>(
          reinterpret_cast<char*>(&_impl_.optional_uint32_1_),
          reinterpret_cast<char*>(&other->_impl_.optional_uint32_1_));
}

::google::protobuf::Metadata TestVerifyUint32Simple::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[120]);
}
// ===================================================================

class TestVerifyUint32::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyUint32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_._has_bits_);
  static void set_has_optional_uint32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_uint32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_uint32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_uint32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyUint32* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyUint32::_Internal::optional_all_types(const TestVerifyUint32* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyUint32::TestVerifyUint32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyUint32)
}
TestVerifyUint32::TestVerifyUint32(const TestVerifyUint32& from) : ::google::protobuf::Message() {
  TestVerifyUint32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){},
      decltype(_impl_.optional_uint32_2_){},
      decltype(_impl_.optional_uint32_63_){},
      decltype(_impl_.optional_uint32_64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_uint32_1_, &from._impl_.optional_uint32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_uint32_64_) -
    reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_64_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyUint32)
}
inline void TestVerifyUint32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){0u},
      decltype(_impl_.optional_uint32_2_){0u},
      decltype(_impl_.optional_uint32_63_){0u},
      decltype(_impl_.optional_uint32_64_){0u},
  };
}
TestVerifyUint32::~TestVerifyUint32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyUint32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyUint32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyUint32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyUint32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.optional_uint32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_uint32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyUint32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 0, 7> TestVerifyUint32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyUint32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 optional_uint32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_64_)}},
    // optional uint32 optional_uint32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32, _impl_.optional_uint32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_1_)}},
    // optional uint32 optional_uint32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32, _impl_.optional_uint32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_2_)}},
    // optional uint32 optional_uint32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 4,
    65535, 65535
  }}, {{
    // optional uint32 optional_uint32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 optional_uint32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyUint32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyUint32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 optional_uint32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_optional_uint32_1(), target);
  }

  // optional uint32 optional_uint32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_optional_uint32_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 optional_uint32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_optional_uint32_63(), target);
  }

  // optional uint32 optional_uint32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        64, this->_internal_optional_uint32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyUint32)
  return target;
}

::size_t TestVerifyUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyUint32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional uint32 optional_uint32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_1());
    }

    // optional uint32 optional_uint32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_2());
    }

    // optional uint32 optional_uint32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_63());
    }

    // optional uint32 optional_uint32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyUint32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyUint32::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyUint32::GetClassData() const { return &_class_data_; }


void TestVerifyUint32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyUint32*>(&to_msg);
  auto& from = static_cast<const TestVerifyUint32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyUint32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_uint32_1_ = from._impl_.optional_uint32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_uint32_2_ = from._impl_.optional_uint32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_uint32_63_ = from._impl_.optional_uint32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_uint32_64_ = from._impl_.optional_uint32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyUint32::CopyFrom(const TestVerifyUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyUint32::IsInitialized() const {
  return true;
}

void TestVerifyUint32::InternalSwap(TestVerifyUint32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_uint32_64_)
      + sizeof(TestVerifyUint32::_impl_.optional_uint32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyUint32, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyUint32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[121]);
}
// ===================================================================

class TestVerifyOneUint32::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyOneUint32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_._has_bits_);
  static void set_has_optional_uint32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyOneUint32* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyOneUint32::_Internal::optional_all_types(const TestVerifyOneUint32* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyOneUint32::TestVerifyOneUint32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyOneUint32)
}
TestVerifyOneUint32::TestVerifyOneUint32(const TestVerifyOneUint32& from) : ::google::protobuf::Message() {
  TestVerifyOneUint32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){},
      decltype(_impl_.optional_int32_2_){},
      decltype(_impl_.optional_int32_63_){},
      decltype(_impl_.optional_int32_64_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_uint32_1_, &from._impl_.optional_uint32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
    reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_int32_64_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyOneUint32)
}
inline void TestVerifyOneUint32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){0u},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
  };
}
TestVerifyOneUint32::~TestVerifyOneUint32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyOneUint32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyOneUint32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyOneUint32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyOneUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyOneUint32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.optional_uint32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_64_) -
        reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_int32_64_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyOneUint32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 0, 7> TestVerifyOneUint32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyOneUint32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_64_)}},
    // optional uint32 optional_uint32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyOneUint32, _impl_.optional_uint32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_uint32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyOneUint32, _impl_.optional_int32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_2_)}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65532, 4,
    65535, 65535
  }}, {{
    // optional uint32 optional_uint32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_uint32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyOneUint32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyOneUint32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 optional_uint32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_optional_uint32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyOneUint32)
  return target;
}

::size_t TestVerifyOneUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyOneUint32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional uint32 optional_uint32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyOneUint32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyOneUint32::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyOneUint32::GetClassData() const { return &_class_data_; }


void TestVerifyOneUint32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyOneUint32*>(&to_msg);
  auto& from = static_cast<const TestVerifyOneUint32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyOneUint32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_uint32_1_ = from._impl_.optional_uint32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyOneUint32::CopyFrom(const TestVerifyOneUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyOneUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyOneUint32::IsInitialized() const {
  return true;
}

void TestVerifyOneUint32::InternalSwap(TestVerifyOneUint32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_int32_64_)
      + sizeof(TestVerifyOneUint32::_impl_.optional_int32_64_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyOneUint32, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyOneUint32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[122]);
}
// ===================================================================

class TestVerifyOneInt32BigFieldNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyOneInt32BigFieldNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_._has_bits_);
  static void set_has_optional_int32_65(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_int64_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int64_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int64_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int64_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyOneInt32BigFieldNumber* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyOneInt32BigFieldNumber::_Internal::optional_all_types(const TestVerifyOneInt32BigFieldNumber* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyOneInt32BigFieldNumber::TestVerifyOneInt32BigFieldNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
}
TestVerifyOneInt32BigFieldNumber::TestVerifyOneInt32BigFieldNumber(const TestVerifyOneInt32BigFieldNumber& from) : ::google::protobuf::Message() {
  TestVerifyOneInt32BigFieldNumber* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int64_1_){},
      decltype(_impl_.optional_int64_2_){},
      decltype(_impl_.optional_int64_63_){},
      decltype(_impl_.optional_int64_64_){},
      decltype(_impl_.optional_int32_65_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_int64_1_, &from._impl_.optional_int64_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_65_) -
    reinterpret_cast<char*>(&_impl_.optional_int64_1_)) + sizeof(_impl_.optional_int32_65_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
}
inline void TestVerifyOneInt32BigFieldNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int64_1_){::int64_t{0}},
      decltype(_impl_.optional_int64_2_){::int64_t{0}},
      decltype(_impl_.optional_int64_63_){::int64_t{0}},
      decltype(_impl_.optional_int64_64_){::int64_t{0}},
      decltype(_impl_.optional_int32_65_){0},
  };
}
TestVerifyOneInt32BigFieldNumber::~TestVerifyOneInt32BigFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyOneInt32BigFieldNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyOneInt32BigFieldNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyOneInt32BigFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.optional_int64_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_65_) -
        reinterpret_cast<char*>(&_impl_.optional_int64_1_)) + sizeof(_impl_.optional_int32_65_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyOneInt32BigFieldNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 2, 0, 7> TestVerifyOneInt32BigFieldNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_._has_bits_),
    0, // no _extensions_
    65, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyOneInt32BigFieldNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int64 optional_int64_64 = 64;
    {::_pbi::TcParser::FastV64S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_64_)}},
    // optional int64 optional_int64_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_1_)}},
    // optional int64 optional_int64_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_2_)}},
    // optional int64 optional_int64_63 = 63;
    {::_pbi::TcParser::FastV64S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_63_)}},
  }}, {{
    63, 0, 1,
    65528, 4,
    65535, 65535
  }}, {{
    // optional int64 optional_int64_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 optional_int64_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 optional_int64_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 optional_int64_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int64_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 optional_int32_65 = 65;
    {PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int32_65_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyOneInt32BigFieldNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 optional_int64_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_optional_int64_1(), target);
  }

  // optional int64 optional_int64_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_optional_int64_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int64 optional_int64_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        63, this->_internal_optional_int64_63(), target);
  }

  // optional int64 optional_int64_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        64, this->_internal_optional_int64_64(), target);
  }

  // optional int32 optional_int32_65 = 65;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        65, this->_internal_optional_int32_65(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  return target;
}

::size_t TestVerifyOneInt32BigFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional int64 optional_int64_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_optional_int64_1());
    }

    // optional int64 optional_int64_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_optional_int64_2());
    }

    // optional int64 optional_int64_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_63());
    }

    // optional int64 optional_int64_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_64());
    }

    // optional int32 optional_int32_65 = 65;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_65());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyOneInt32BigFieldNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyOneInt32BigFieldNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyOneInt32BigFieldNumber::GetClassData() const { return &_class_data_; }


void TestVerifyOneInt32BigFieldNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyOneInt32BigFieldNumber*>(&to_msg);
  auto& from = static_cast<const TestVerifyOneInt32BigFieldNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int64_1_ = from._impl_.optional_int64_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int64_2_ = from._impl_.optional_int64_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int64_63_ = from._impl_.optional_int64_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int64_64_ = from._impl_.optional_int64_64_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_int32_65_ = from._impl_.optional_int32_65_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyOneInt32BigFieldNumber::CopyFrom(const TestVerifyOneInt32BigFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyOneInt32BigFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyOneInt32BigFieldNumber::IsInitialized() const {
  return true;
}

void TestVerifyOneInt32BigFieldNumber::InternalSwap(TestVerifyOneInt32BigFieldNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_int32_65_)
      + sizeof(TestVerifyOneInt32BigFieldNumber::_impl_.optional_int32_65_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyOneInt32BigFieldNumber, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyOneInt32BigFieldNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[123]);
}
// ===================================================================

class TestVerifyInt32BigFieldNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyInt32BigFieldNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_._has_bits_);
  static void set_has_optional_int32_1000(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_int32_65(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_int32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_int32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyInt32BigFieldNumber* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyInt32BigFieldNumber::_Internal::optional_all_types(const TestVerifyInt32BigFieldNumber* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyInt32BigFieldNumber::TestVerifyInt32BigFieldNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyInt32BigFieldNumber)
}
TestVerifyInt32BigFieldNumber::TestVerifyInt32BigFieldNumber(const TestVerifyInt32BigFieldNumber& from) : ::google::protobuf::Message() {
  TestVerifyInt32BigFieldNumber* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){},
      decltype(_impl_.optional_int32_2_){},
      decltype(_impl_.optional_int32_63_){},
      decltype(_impl_.optional_int32_64_){},
      decltype(_impl_.optional_int32_65_){},
      decltype(_impl_.optional_int32_1000_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_int32_1_, &from._impl_.optional_int32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_1000_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_1000_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyInt32BigFieldNumber)
}
inline void TestVerifyInt32BigFieldNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_int32_1_){0},
      decltype(_impl_.optional_int32_2_){0},
      decltype(_impl_.optional_int32_63_){0},
      decltype(_impl_.optional_int32_64_){0},
      decltype(_impl_.optional_int32_65_){0},
      decltype(_impl_.optional_int32_1000_){0},
  };
}
TestVerifyInt32BigFieldNumber::~TestVerifyInt32BigFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyInt32BigFieldNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyInt32BigFieldNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyInt32BigFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.optional_int32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_1000_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_1_)) + sizeof(_impl_.optional_int32_1000_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyInt32BigFieldNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 0, 12> TestVerifyInt32BigFieldNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_._has_bits_),
    0, // no _extensions_
    1000, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyInt32BigFieldNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 optional_int32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_64_)}},
    // optional int32 optional_int32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1_)}},
    // optional int32 optional_int32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32_1000 = 1000;
    {::_pbi::TcParser::FastV32S2,
     {16064, 6, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1000_)}},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.repeated_all_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_63_)}},
  }}, {{
    63, 0, 1,
    65528, 4,1000, 0, 1,
     65534, 7,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 optional_int32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_65 = 65;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_65_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_1000 = 1000;
    {PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1000_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyInt32BigFieldNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_1(), target);
  }

  // optional int32 optional_int32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_optional_int32_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 optional_int32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        63, this->_internal_optional_int32_63(), target);
  }

  // optional int32 optional_int32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        64, this->_internal_optional_int32_64(), target);
  }

  // optional int32 optional_int32_65 = 65;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        65, this->_internal_optional_int32_65(), target);
  }

  // optional int32 optional_int32_1000 = 1000;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1000, this->_internal_optional_int32_1000(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  return target;
}

::size_t TestVerifyInt32BigFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional int32 optional_int32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_1());
    }

    // optional int32 optional_int32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_2());
    }

    // optional int32 optional_int32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_63());
    }

    // optional int32 optional_int32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_64());
    }

    // optional int32 optional_int32_65 = 65;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_65());
    }

    // optional int32 optional_int32_1000 = 1000;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_1000());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyInt32BigFieldNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyInt32BigFieldNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyInt32BigFieldNumber::GetClassData() const { return &_class_data_; }


void TestVerifyInt32BigFieldNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyInt32BigFieldNumber*>(&to_msg);
  auto& from = static_cast<const TestVerifyInt32BigFieldNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int32_1_ = from._impl_.optional_int32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_2_ = from._impl_.optional_int32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_63_ = from._impl_.optional_int32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_64_ = from._impl_.optional_int32_64_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_int32_65_ = from._impl_.optional_int32_65_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_int32_1000_ = from._impl_.optional_int32_1000_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyInt32BigFieldNumber::CopyFrom(const TestVerifyInt32BigFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyInt32BigFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyInt32BigFieldNumber::IsInitialized() const {
  return true;
}

void TestVerifyInt32BigFieldNumber::InternalSwap(TestVerifyInt32BigFieldNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_int32_1000_)
      + sizeof(TestVerifyInt32BigFieldNumber::_impl_.optional_int32_1000_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyInt32BigFieldNumber, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyInt32BigFieldNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[124]);
}
// ===================================================================

class TestVerifyUint32BigFieldNumber::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyUint32BigFieldNumber>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_._has_bits_);
  static void set_has_optional_uint32_1000(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_uint32_65(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_uint32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_uint32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_uint32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_uint32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_all_types(const TestVerifyUint32BigFieldNumber* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypes& TestVerifyUint32BigFieldNumber::_Internal::optional_all_types(const TestVerifyUint32BigFieldNumber* msg) {
  return *msg->_impl_.optional_all_types_;
}
TestVerifyUint32BigFieldNumber::TestVerifyUint32BigFieldNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyUint32BigFieldNumber)
}
TestVerifyUint32BigFieldNumber::TestVerifyUint32BigFieldNumber(const TestVerifyUint32BigFieldNumber& from) : ::google::protobuf::Message() {
  TestVerifyUint32BigFieldNumber* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){from._impl_.repeated_all_types_},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){},
      decltype(_impl_.optional_uint32_2_){},
      decltype(_impl_.optional_uint32_63_){},
      decltype(_impl_.optional_uint32_64_){},
      decltype(_impl_.optional_uint32_65_){},
      decltype(_impl_.optional_uint32_1000_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_all_types_ = new ::protobuf_unittest::TestAllTypes(*from._impl_.optional_all_types_);
  }
  ::memcpy(&_impl_.optional_uint32_1_, &from._impl_.optional_uint32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_uint32_1000_) -
    reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_1000_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyUint32BigFieldNumber)
}
inline void TestVerifyUint32BigFieldNumber::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_all_types_){arena},
      decltype(_impl_.optional_all_types_){nullptr},
      decltype(_impl_.optional_uint32_1_){0u},
      decltype(_impl_.optional_uint32_2_){0u},
      decltype(_impl_.optional_uint32_63_){0u},
      decltype(_impl_.optional_uint32_64_){0u},
      decltype(_impl_.optional_uint32_65_){0u},
      decltype(_impl_.optional_uint32_1000_){0u},
  };
}
TestVerifyUint32BigFieldNumber::~TestVerifyUint32BigFieldNumber() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyUint32BigFieldNumber::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_all_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_all_types_;
}
void TestVerifyUint32BigFieldNumber::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyUint32BigFieldNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_all_types()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
    _impl_.optional_all_types_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.optional_uint32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_uint32_1000_) -
        reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_1000_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyUint32BigFieldNumber::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 0, 12> TestVerifyUint32BigFieldNumber::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_._has_bits_),
    0, // no _extensions_
    1000, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyUint32BigFieldNumber_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 optional_uint32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_64_)}},
    // optional uint32 optional_uint32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1_)}},
    // optional uint32 optional_uint32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 optional_uint32_1000 = 1000;
    {::_pbi::TcParser::FastV32S2,
     {16064, 6, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1000_)}},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.repeated_all_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 optional_uint32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_63_)}},
  }}, {{
    63, 0, 1,
    65528, 4,1000, 0, 1,
     65534, 7,
    65535, 65535
  }}, {{
    // optional uint32 optional_uint32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.repeated_all_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 optional_uint32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_65 = 65;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_65_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_1000 = 1000;
    {PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1000_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyUint32BigFieldNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 optional_uint32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_optional_uint32_1(), target);
  }

  // optional uint32 optional_uint32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_optional_uint32_2(), target);
  }

  // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 optional_uint32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_optional_uint32_63(), target);
  }

  // optional uint32 optional_uint32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        64, this->_internal_optional_uint32_64(), target);
  }

  // optional uint32 optional_uint32_65 = 65;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        65, this->_internal_optional_uint32_65(), target);
  }

  // optional uint32 optional_uint32_1000 = 1000;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1000, this->_internal_optional_uint32_1000(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  return target;
}

::size_t TestVerifyUint32BigFieldNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypes repeated_all_types = 10;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .protobuf_unittest.TestAllTypes optional_all_types = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_all_types_);
    }

    // optional uint32 optional_uint32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_1());
    }

    // optional uint32 optional_uint32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_2());
    }

    // optional uint32 optional_uint32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_63());
    }

    // optional uint32 optional_uint32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_64());
    }

    // optional uint32 optional_uint32_65 = 65;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_65());
    }

    // optional uint32 optional_uint32_1000 = 1000;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_1000());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyUint32BigFieldNumber::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyUint32BigFieldNumber::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyUint32BigFieldNumber::GetClassData() const { return &_class_data_; }


void TestVerifyUint32BigFieldNumber::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyUint32BigFieldNumber*>(&to_msg);
  auto& from = static_cast<const TestVerifyUint32BigFieldNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(from._internal_repeated_all_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_uint32_1_ = from._impl_.optional_uint32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_uint32_2_ = from._impl_.optional_uint32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_uint32_63_ = from._impl_.optional_uint32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_uint32_64_ = from._impl_.optional_uint32_64_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_uint32_65_ = from._impl_.optional_uint32_65_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_uint32_1000_ = from._impl_.optional_uint32_1000_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyUint32BigFieldNumber::CopyFrom(const TestVerifyUint32BigFieldNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyUint32BigFieldNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyUint32BigFieldNumber::IsInitialized() const {
  return true;
}

void TestVerifyUint32BigFieldNumber::InternalSwap(TestVerifyUint32BigFieldNumber* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_uint32_1000_)
      + sizeof(TestVerifyUint32BigFieldNumber::_impl_.optional_uint32_1000_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyUint32BigFieldNumber, _impl_.optional_all_types_)>(
          reinterpret_cast<char*>(&_impl_.optional_all_types_),
          reinterpret_cast<char*>(&other->_impl_.optional_all_types_));
}

::google::protobuf::Metadata TestVerifyUint32BigFieldNumber::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[125]);
}
// ===================================================================

class TestVerifyBigFieldNumberUint32_Nested::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyBigFieldNumberUint32_Nested>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_._has_bits_);
  static void set_has_optional_uint32_5000(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_optional_uint32_1000(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_optional_uint32_66(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_uint32_65(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_uint32_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_uint32_2(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_uint32_63(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_uint32_64(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested& optional_nested(const TestVerifyBigFieldNumberUint32_Nested* msg);
  static void set_has_optional_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32_Nested::_Internal::optional_nested(const TestVerifyBigFieldNumberUint32_Nested* msg) {
  return *msg->_impl_.optional_nested_;
}
TestVerifyBigFieldNumberUint32_Nested::TestVerifyBigFieldNumberUint32_Nested(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
}
TestVerifyBigFieldNumberUint32_Nested::TestVerifyBigFieldNumberUint32_Nested(const TestVerifyBigFieldNumberUint32_Nested& from) : ::google::protobuf::Message() {
  TestVerifyBigFieldNumberUint32_Nested* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_nested_){from._impl_.repeated_nested_},
      decltype(_impl_.optional_nested_){nullptr},
      decltype(_impl_.optional_uint32_1_){},
      decltype(_impl_.optional_uint32_2_){},
      decltype(_impl_.optional_uint32_63_){},
      decltype(_impl_.optional_uint32_64_){},
      decltype(_impl_.optional_uint32_65_){},
      decltype(_impl_.optional_uint32_66_){},
      decltype(_impl_.optional_uint32_1000_){},
      decltype(_impl_.optional_uint32_5000_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_nested_ = new ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested(*from._impl_.optional_nested_);
  }
  ::memcpy(&_impl_.optional_uint32_1_, &from._impl_.optional_uint32_1_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_uint32_5000_) -
    reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_5000_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
}
inline void TestVerifyBigFieldNumberUint32_Nested::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_nested_){arena},
      decltype(_impl_.optional_nested_){nullptr},
      decltype(_impl_.optional_uint32_1_){0u},
      decltype(_impl_.optional_uint32_2_){0u},
      decltype(_impl_.optional_uint32_63_){0u},
      decltype(_impl_.optional_uint32_64_){0u},
      decltype(_impl_.optional_uint32_65_){0u},
      decltype(_impl_.optional_uint32_66_){0u},
      decltype(_impl_.optional_uint32_1000_){0u},
      decltype(_impl_.optional_uint32_5000_){0u},
  };
}
TestVerifyBigFieldNumberUint32_Nested::~TestVerifyBigFieldNumberUint32_Nested() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyBigFieldNumberUint32_Nested::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_nested_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.optional_nested_;
}
void TestVerifyBigFieldNumberUint32_Nested::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyBigFieldNumberUint32_Nested::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_nested()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_nested_ != nullptr);
    _impl_.optional_nested_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.optional_uint32_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_uint32_1000_) -
        reinterpret_cast<char*>(&_impl_.optional_uint32_1_)) + sizeof(_impl_.optional_uint32_1000_));
  }
  _impl_.optional_uint32_5000_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyBigFieldNumberUint32_Nested::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 0, 17> TestVerifyBigFieldNumberUint32_Nested::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_._has_bits_),
    0, // no _extensions_
    5000, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966524,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyBigFieldNumberUint32_Nested_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 optional_uint32_64 = 64;
    {::_pbi::TcParser::FastV32S2,
     {1152, 4, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_64_)}},
    // optional uint32 optional_uint32_1 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1_)}},
    // optional uint32 optional_uint32_2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_2_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 optional_uint32_1000 = 1000;
    {::_pbi::TcParser::FastV32S2,
     {16064, 7, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1000_)}},
    // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_nested_)}},
    // repeated .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.repeated_nested_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 optional_uint32_63 = 63;
    {::_pbi::TcParser::FastV32S2,
     {1016, 3, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_63_)}},
  }}, {{
    63, 0, 1,
    65520, 4,1000, 0, 1,
     65534, 8,5000, 0, 1,
     65534, 9,
    65535, 65535
  }}, {{
    // optional uint32 optional_uint32_1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_nested_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.repeated_nested_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 optional_uint32_63 = 63;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_63_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_64 = 64;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_64_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_65 = 65;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_65_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_66 = 66;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_66_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_1000 = 1000;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_1000_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 optional_uint32_5000 = 5000;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_5000_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyBigFieldNumberUint32_Nested::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 optional_uint32_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_optional_uint32_1(), target);
  }

  // optional uint32 optional_uint32_2 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_optional_uint32_2(), target);
  }

  // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::optional_nested(this),
        _Internal::optional_nested(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_nested_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_nested().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 optional_uint32_63 = 63;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_optional_uint32_63(), target);
  }

  // optional uint32 optional_uint32_64 = 64;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        64, this->_internal_optional_uint32_64(), target);
  }

  // optional uint32 optional_uint32_65 = 65;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        65, this->_internal_optional_uint32_65(), target);
  }

  // optional uint32 optional_uint32_66 = 66;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        66, this->_internal_optional_uint32_66(), target);
  }

  // optional uint32 optional_uint32_1000 = 1000;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1000, this->_internal_optional_uint32_1000(), target);
  }

  // optional uint32 optional_uint32_5000 = 5000;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5000, this->_internal_optional_uint32_5000(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  return target;
}

::size_t TestVerifyBigFieldNumberUint32_Nested::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested repeated_nested = 10;
  total_size += 1UL * this->_internal_repeated_nested_size();
  for (const auto& msg : this->_internal_repeated_nested()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_nested_);
    }

    // optional uint32 optional_uint32_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_1());
    }

    // optional uint32 optional_uint32_2 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32_2());
    }

    // optional uint32 optional_uint32_63 = 63;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_63());
    }

    // optional uint32 optional_uint32_64 = 64;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_64());
    }

    // optional uint32 optional_uint32_65 = 65;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_65());
    }

    // optional uint32 optional_uint32_66 = 66;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_66());
    }

    // optional uint32 optional_uint32_1000 = 1000;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_optional_uint32_1000());
    }

  }
  // optional uint32 optional_uint32_5000 = 5000;
  if (cached_has_bits & 0x00000100u) {
    total_size += 3 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_optional_uint32_5000());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyBigFieldNumberUint32_Nested::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyBigFieldNumberUint32_Nested::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyBigFieldNumberUint32_Nested::GetClassData() const { return &_class_data_; }


void TestVerifyBigFieldNumberUint32_Nested::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyBigFieldNumberUint32_Nested*>(&to_msg);
  auto& from = static_cast<const TestVerifyBigFieldNumberUint32_Nested&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_nested()->MergeFrom(from._internal_repeated_nested());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_nested()->::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested::MergeFrom(
          from._internal_optional_nested());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_uint32_1_ = from._impl_.optional_uint32_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_uint32_2_ = from._impl_.optional_uint32_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_uint32_63_ = from._impl_.optional_uint32_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_uint32_64_ = from._impl_.optional_uint32_64_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_uint32_65_ = from._impl_.optional_uint32_65_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_uint32_66_ = from._impl_.optional_uint32_66_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.optional_uint32_1000_ = from._impl_.optional_uint32_1000_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_optional_uint32_5000(from._internal_optional_uint32_5000());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyBigFieldNumberUint32_Nested::CopyFrom(const TestVerifyBigFieldNumberUint32_Nested& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyBigFieldNumberUint32_Nested::IsInitialized() const {
  return true;
}

void TestVerifyBigFieldNumberUint32_Nested::InternalSwap(TestVerifyBigFieldNumberUint32_Nested* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_nested_.InternalSwap(&other->_impl_.repeated_nested_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_uint32_5000_)
      + sizeof(TestVerifyBigFieldNumberUint32_Nested::_impl_.optional_uint32_5000_)
      - PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32_Nested, _impl_.optional_nested_)>(
          reinterpret_cast<char*>(&_impl_.optional_nested_),
          reinterpret_cast<char*>(&other->_impl_.optional_nested_));
}

::google::protobuf::Metadata TestVerifyBigFieldNumberUint32_Nested::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[126]);
}
// ===================================================================

class TestVerifyBigFieldNumberUint32::_Internal {
 public:
  using HasBits = decltype(std::declval<TestVerifyBigFieldNumberUint32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32, _impl_._has_bits_);
  static const ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested& optional_nested(const TestVerifyBigFieldNumberUint32* msg);
  static void set_has_optional_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested& TestVerifyBigFieldNumberUint32::_Internal::optional_nested(const TestVerifyBigFieldNumberUint32* msg) {
  return *msg->_impl_.optional_nested_;
}
TestVerifyBigFieldNumberUint32::TestVerifyBigFieldNumberUint32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestVerifyBigFieldNumberUint32)
}
TestVerifyBigFieldNumberUint32::TestVerifyBigFieldNumberUint32(const TestVerifyBigFieldNumberUint32& from) : ::google::protobuf::Message() {
  TestVerifyBigFieldNumberUint32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_nested_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_nested_ = new ::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested(*from._impl_.optional_nested_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestVerifyBigFieldNumberUint32)
}
inline void TestVerifyBigFieldNumberUint32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_nested_){nullptr},
  };
}
TestVerifyBigFieldNumberUint32::~TestVerifyBigFieldNumberUint32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestVerifyBigFieldNumberUint32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.optional_nested_;
}
void TestVerifyBigFieldNumberUint32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestVerifyBigFieldNumberUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_nested_ != nullptr);
    _impl_.optional_nested_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestVerifyBigFieldNumberUint32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestVerifyBigFieldNumberUint32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestVerifyBigFieldNumberUint32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32, _impl_.optional_nested_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
    {PROTOBUF_FIELD_OFFSET(TestVerifyBigFieldNumberUint32, _impl_.optional_nested_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested>()},
  }}, {{
  }},
};

::uint8_t* TestVerifyBigFieldNumberUint32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::optional_nested(this),
        _Internal::optional_nested(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  return target;
}

::size_t TestVerifyBigFieldNumberUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested optional_nested = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.optional_nested_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestVerifyBigFieldNumberUint32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestVerifyBigFieldNumberUint32::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestVerifyBigFieldNumberUint32::GetClassData() const { return &_class_data_; }


void TestVerifyBigFieldNumberUint32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestVerifyBigFieldNumberUint32*>(&to_msg);
  auto& from = static_cast<const TestVerifyBigFieldNumberUint32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_optional_nested()->::protobuf_unittest::TestVerifyBigFieldNumberUint32_Nested::MergeFrom(
        from._internal_optional_nested());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestVerifyBigFieldNumberUint32::CopyFrom(const TestVerifyBigFieldNumberUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestVerifyBigFieldNumberUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestVerifyBigFieldNumberUint32::IsInitialized() const {
  return true;
}

void TestVerifyBigFieldNumberUint32::InternalSwap(TestVerifyBigFieldNumberUint32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.optional_nested_, other->_impl_.optional_nested_);
}

::google::protobuf::Metadata TestVerifyBigFieldNumberUint32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[127]);
}
// ===================================================================

class EnumParseTester::_Internal {
 public:
  using HasBits = decltype(std::declval<EnumParseTester>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_._has_bits_);
  static void set_has_optional_seq_small_0_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_seq_small_0_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_seq_small_0_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_optional_seq_small_1_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_seq_small_1_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_optional_seq_small_1_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_optional_seq_large_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_seq_large_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_optional_seq_large_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_optional_arbitrary_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_optional_arbitrary_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_optional_arbitrary_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_other_field(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

EnumParseTester::EnumParseTester(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.EnumParseTester)
}
EnumParseTester::EnumParseTester(const EnumParseTester& from) : ::google::protobuf::Message() {
  EnumParseTester* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_seq_small_0_lowfield_){from._internal_repeated_seq_small_0_lowfield()},
      decltype(_impl_.packed_seq_small_0_lowfield_){from._internal_packed_seq_small_0_lowfield()},
      /*decltype(_impl_._packed_seq_small_0_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_lowfield_){from._internal_repeated_seq_small_1_lowfield()},
      decltype(_impl_.packed_seq_small_1_lowfield_){from._internal_packed_seq_small_1_lowfield()},
      /*decltype(_impl_._packed_seq_small_1_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_lowfield_){from._internal_repeated_seq_large_lowfield()},
      decltype(_impl_.packed_seq_large_lowfield_){from._internal_packed_seq_large_lowfield()},
      /*decltype(_impl_._packed_seq_large_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_lowfield_){from._internal_repeated_arbitrary_lowfield()},
      decltype(_impl_.packed_arbitrary_lowfield_){from._internal_packed_arbitrary_lowfield()},
      /*decltype(_impl_._packed_arbitrary_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_0_midfield_){from._internal_repeated_seq_small_0_midfield()},
      decltype(_impl_.packed_seq_small_0_midfield_){from._internal_packed_seq_small_0_midfield()},
      /*decltype(_impl_._packed_seq_small_0_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_midfield_){from._internal_repeated_seq_small_1_midfield()},
      decltype(_impl_.packed_seq_small_1_midfield_){from._internal_packed_seq_small_1_midfield()},
      /*decltype(_impl_._packed_seq_small_1_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_midfield_){from._internal_repeated_seq_large_midfield()},
      decltype(_impl_.packed_seq_large_midfield_){from._internal_packed_seq_large_midfield()},
      /*decltype(_impl_._packed_seq_large_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_midfield_){from._internal_repeated_arbitrary_midfield()},
      decltype(_impl_.packed_arbitrary_midfield_){from._internal_packed_arbitrary_midfield()},
      /*decltype(_impl_._packed_arbitrary_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_0_hifield_){from._internal_repeated_seq_small_0_hifield()},
      decltype(_impl_.packed_seq_small_0_hifield_){from._internal_packed_seq_small_0_hifield()},
      /*decltype(_impl_._packed_seq_small_0_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_hifield_){from._internal_repeated_seq_small_1_hifield()},
      decltype(_impl_.packed_seq_small_1_hifield_){from._internal_packed_seq_small_1_hifield()},
      /*decltype(_impl_._packed_seq_small_1_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_hifield_){from._internal_repeated_seq_large_hifield()},
      decltype(_impl_.packed_seq_large_hifield_){from._internal_packed_seq_large_hifield()},
      /*decltype(_impl_._packed_seq_large_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_hifield_){from._internal_repeated_arbitrary_hifield()},
      decltype(_impl_.packed_arbitrary_hifield_){from._internal_packed_arbitrary_hifield()},
      /*decltype(_impl_._packed_arbitrary_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.optional_seq_small_0_lowfield_){},
      decltype(_impl_.other_field_){},
      decltype(_impl_.optional_seq_small_0_midfield_){},
      decltype(_impl_.optional_seq_small_0_hifield_){},
      decltype(_impl_.optional_arbitrary_hifield_){},
      decltype(_impl_.optional_seq_small_1_lowfield_){},
      decltype(_impl_.optional_seq_large_lowfield_){},
      decltype(_impl_.optional_arbitrary_lowfield_){},
      decltype(_impl_.optional_seq_small_1_midfield_){},
      decltype(_impl_.optional_seq_large_midfield_){},
      decltype(_impl_.optional_arbitrary_midfield_){},
      decltype(_impl_.optional_seq_small_1_hifield_){},
      decltype(_impl_.optional_seq_large_hifield_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.optional_seq_small_0_lowfield_, &from._impl_.optional_seq_small_0_lowfield_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_seq_large_hifield_) -
    reinterpret_cast<char*>(&_impl_.optional_seq_small_0_lowfield_)) + sizeof(_impl_.optional_seq_large_hifield_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.EnumParseTester)
}
inline void EnumParseTester::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_seq_small_0_lowfield_){arena},
      decltype(_impl_.packed_seq_small_0_lowfield_){arena},
      /*decltype(_impl_._packed_seq_small_0_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_lowfield_){arena},
      decltype(_impl_.packed_seq_small_1_lowfield_){arena},
      /*decltype(_impl_._packed_seq_small_1_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_lowfield_){arena},
      decltype(_impl_.packed_seq_large_lowfield_){arena},
      /*decltype(_impl_._packed_seq_large_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_lowfield_){arena},
      decltype(_impl_.packed_arbitrary_lowfield_){arena},
      /*decltype(_impl_._packed_arbitrary_lowfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_0_midfield_){arena},
      decltype(_impl_.packed_seq_small_0_midfield_){arena},
      /*decltype(_impl_._packed_seq_small_0_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_midfield_){arena},
      decltype(_impl_.packed_seq_small_1_midfield_){arena},
      /*decltype(_impl_._packed_seq_small_1_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_midfield_){arena},
      decltype(_impl_.packed_seq_large_midfield_){arena},
      /*decltype(_impl_._packed_seq_large_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_midfield_){arena},
      decltype(_impl_.packed_arbitrary_midfield_){arena},
      /*decltype(_impl_._packed_arbitrary_midfield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_0_hifield_){arena},
      decltype(_impl_.packed_seq_small_0_hifield_){arena},
      /*decltype(_impl_._packed_seq_small_0_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_small_1_hifield_){arena},
      decltype(_impl_.packed_seq_small_1_hifield_){arena},
      /*decltype(_impl_._packed_seq_small_1_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_seq_large_hifield_){arena},
      decltype(_impl_.packed_seq_large_hifield_){arena},
      /*decltype(_impl_._packed_seq_large_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.repeated_arbitrary_hifield_){arena},
      decltype(_impl_.packed_arbitrary_hifield_){arena},
      /*decltype(_impl_._packed_arbitrary_hifield_cached_byte_size_)*/ {0},
      decltype(_impl_.optional_seq_small_0_lowfield_){0},
      decltype(_impl_.other_field_){0},
      decltype(_impl_.optional_seq_small_0_midfield_){0},
      decltype(_impl_.optional_seq_small_0_hifield_){0},
      decltype(_impl_.optional_arbitrary_hifield_){-123123},
      decltype(_impl_.optional_seq_small_1_lowfield_){1},
      decltype(_impl_.optional_seq_large_lowfield_){-1},
      decltype(_impl_.optional_arbitrary_lowfield_){-123123},
      decltype(_impl_.optional_seq_small_1_midfield_){1},
      decltype(_impl_.optional_seq_large_midfield_){-1},
      decltype(_impl_.optional_arbitrary_midfield_){-123123},
      decltype(_impl_.optional_seq_small_1_hifield_){1},
      decltype(_impl_.optional_seq_large_hifield_){-1},
  };
}
EnumParseTester::~EnumParseTester() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.EnumParseTester)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnumParseTester::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _internal_mutable_repeated_seq_small_0_lowfield()->~RepeatedField();
  _internal_mutable_packed_seq_small_0_lowfield()->~RepeatedField();
  _internal_mutable_repeated_seq_small_1_lowfield()->~RepeatedField();
  _internal_mutable_packed_seq_small_1_lowfield()->~RepeatedField();
  _internal_mutable_repeated_seq_large_lowfield()->~RepeatedField();
  _internal_mutable_packed_seq_large_lowfield()->~RepeatedField();
  _internal_mutable_repeated_arbitrary_lowfield()->~RepeatedField();
  _internal_mutable_packed_arbitrary_lowfield()->~RepeatedField();
  _internal_mutable_repeated_seq_small_0_midfield()->~RepeatedField();
  _internal_mutable_packed_seq_small_0_midfield()->~RepeatedField();
  _internal_mutable_repeated_seq_small_1_midfield()->~RepeatedField();
  _internal_mutable_packed_seq_small_1_midfield()->~RepeatedField();
  _internal_mutable_repeated_seq_large_midfield()->~RepeatedField();
  _internal_mutable_packed_seq_large_midfield()->~RepeatedField();
  _internal_mutable_repeated_arbitrary_midfield()->~RepeatedField();
  _internal_mutable_packed_arbitrary_midfield()->~RepeatedField();
  _internal_mutable_repeated_seq_small_0_hifield()->~RepeatedField();
  _internal_mutable_packed_seq_small_0_hifield()->~RepeatedField();
  _internal_mutable_repeated_seq_small_1_hifield()->~RepeatedField();
  _internal_mutable_packed_seq_small_1_hifield()->~RepeatedField();
  _internal_mutable_repeated_seq_large_hifield()->~RepeatedField();
  _internal_mutable_packed_seq_large_hifield()->~RepeatedField();
  _internal_mutable_repeated_arbitrary_hifield()->~RepeatedField();
  _internal_mutable_packed_arbitrary_hifield()->~RepeatedField();
}
void EnumParseTester::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void EnumParseTester::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.EnumParseTester)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_seq_small_0_lowfield()->Clear();
  _internal_mutable_packed_seq_small_0_lowfield()->Clear();
  _internal_mutable_repeated_seq_small_1_lowfield()->Clear();
  _internal_mutable_packed_seq_small_1_lowfield()->Clear();
  _internal_mutable_repeated_seq_large_lowfield()->Clear();
  _internal_mutable_packed_seq_large_lowfield()->Clear();
  _internal_mutable_repeated_arbitrary_lowfield()->Clear();
  _internal_mutable_packed_arbitrary_lowfield()->Clear();
  _internal_mutable_repeated_seq_small_0_midfield()->Clear();
  _internal_mutable_packed_seq_small_0_midfield()->Clear();
  _internal_mutable_repeated_seq_small_1_midfield()->Clear();
  _internal_mutable_packed_seq_small_1_midfield()->Clear();
  _internal_mutable_repeated_seq_large_midfield()->Clear();
  _internal_mutable_packed_seq_large_midfield()->Clear();
  _internal_mutable_repeated_arbitrary_midfield()->Clear();
  _internal_mutable_packed_arbitrary_midfield()->Clear();
  _internal_mutable_repeated_seq_small_0_hifield()->Clear();
  _internal_mutable_packed_seq_small_0_hifield()->Clear();
  _internal_mutable_repeated_seq_small_1_hifield()->Clear();
  _internal_mutable_packed_seq_small_1_hifield()->Clear();
  _internal_mutable_repeated_seq_large_hifield()->Clear();
  _internal_mutable_packed_seq_large_hifield()->Clear();
  _internal_mutable_repeated_arbitrary_hifield()->Clear();
  _internal_mutable_packed_arbitrary_hifield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.optional_seq_small_0_lowfield_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_seq_small_0_hifield_) -
        reinterpret_cast<char*>(&_impl_.optional_seq_small_0_lowfield_)) + sizeof(_impl_.optional_seq_small_0_hifield_));
    _impl_.optional_arbitrary_hifield_ = -123123;
    _impl_.optional_seq_small_1_lowfield_ = 1;
    _impl_.optional_seq_large_lowfield_ = -1;
    _impl_.optional_arbitrary_lowfield_ = -123123;
  }
  if (cached_has_bits & 0x00001f00u) {
    _impl_.optional_seq_small_1_midfield_ = 1;
    _impl_.optional_seq_large_midfield_ = -1;
    _impl_.optional_arbitrary_midfield_ = -123123;
    _impl_.optional_seq_small_1_hifield_ = 1;
    _impl_.optional_seq_large_hifield_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EnumParseTester::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 37, 36, 0, 17> EnumParseTester::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_._extensions_),
    1000012, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    37,  // num_field_entries
    36,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EnumParseTester_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
    {::_pbi::TcParser::FastEr0R1,
     {16, 63, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_0_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
    {::_pbi::TcParser::FastEr0P1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_0_lowfield_)}},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
    {::_pbi::TcParser::FastEr1S1,
     {32, 5, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_1_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
    {::_pbi::TcParser::FastEr1R1,
     {40, 63, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_1_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
    {::_pbi::TcParser::FastEr1P1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_1_lowfield_)}},
    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
    {::_pbi::TcParser::FastErS1,
     {56, 6, 6, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
    {::_pbi::TcParser::FastErR1,
     {64, 63, 7, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_large_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
    {::_pbi::TcParser::FastErP1,
     {74, 63, 8, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_large_lowfield_)}},
    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
    {::_pbi::TcParser::FastEvS1,
     {80, 7, 9, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_arbitrary_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
    {::_pbi::TcParser::FastEvR1,
     {88, 63, 10, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_arbitrary_lowfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
    {::_pbi::TcParser::FastEvP1,
     {98, 63, 11, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_arbitrary_lowfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
    {::_pbi::TcParser::FastErR2,
     {16256, 63, 19, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_large_midfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
    {::_pbi::TcParser::FastErP2,
     {16266, 63, 20, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_large_midfield_)}},
    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
    {::_pbi::TcParser::FastEvS2,
     {16272, 10, 21, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_arbitrary_midfield_)}},
    // optional int32 other_field = 99;
    {::_pbi::TcParser::FastV32S2,
     {1688, 1, 0, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.other_field_)}},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
    {::_pbi::TcParser::FastEvP2,
     {16290, 63, 23, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_arbitrary_midfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
    {::_pbi::TcParser::FastEr0S2,
     {16072, 2, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_midfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
    {::_pbi::TcParser::FastEr0R2,
     {16080, 63, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_0_midfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
    {::_pbi::TcParser::FastEr0P2,
     {16090, 63, 2, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_0_midfield_)}},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
    {::_pbi::TcParser::FastEr1S2,
     {16096, 8, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_1_midfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
    {::_pbi::TcParser::FastEr1R2,
     {16104, 63, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_1_midfield_)}},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
    {::_pbi::TcParser::FastEr1P2,
     {16114, 63, 3, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_1_midfield_)}},
    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
    {::_pbi::TcParser::FastErS2,
     {16120, 9, 18, PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_midfield_)}},
  }}, {{
    99, 0, 1,
    65534, 12,1001, 0, 1,
     61440, 13,16961, 15, 1,
     61440, 25,
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_lowfield_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_0_lowfield_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_0_lowfield_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_1_lowfield_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_1_lowfield_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_1_lowfield_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_lowfield_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_large_lowfield_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_large_lowfield_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_arbitrary_lowfield_), _Internal::kHasBitsOffset + 7, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_arbitrary_lowfield_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_arbitrary_lowfield_), -1, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // optional int32 other_field = 99;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.other_field_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_midfield_), _Internal::kHasBitsOffset + 2, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_0_midfield_), -1, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_0_midfield_), -1, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_1_midfield_), _Internal::kHasBitsOffset + 8, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_1_midfield_), -1, 16,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_1_midfield_), -1, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_midfield_), _Internal::kHasBitsOffset + 9, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_large_midfield_), -1, 19,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_large_midfield_), -1, 20,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_arbitrary_midfield_), _Internal::kHasBitsOffset + 10, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_arbitrary_midfield_), -1, 22,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_arbitrary_midfield_), -1, 23,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_hifield_), _Internal::kHasBitsOffset + 3, 24,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_0_hifield_), -1, 25,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_0_hifield_), -1, 26,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_1_hifield_), _Internal::kHasBitsOffset + 11, 27,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_small_1_hifield_), -1, 28,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_small_1_hifield_), -1, 29,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_hifield_), _Internal::kHasBitsOffset + 12, 30,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_seq_large_hifield_), -1, 31,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_seq_large_hifield_), -1, 32,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_arbitrary_hifield_), _Internal::kHasBitsOffset + 4, 33,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.repeated_arbitrary_hifield_), -1, 34,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [packed = true];
    {PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.packed_arbitrary_hifield_), -1, 35,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
  }}, {{
    {0, 3},
    {0, 3},
    {0, 3},
    {1, 3},
    {1, 3},
    {1, 3},
    {-1, 35},
    {-1, 35},
    {-1, 35},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {0, 3},
    {0, 3},
    {0, 3},
    {1, 3},
    {1, 3},
    {1, 3},
    {-1, 35},
    {-1, 35},
    {-1, 35},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {0, 3},
    {0, 3},
    {0, 3},
    {1, 3},
    {1, 3},
    {1, 3},
    {-1, 35},
    {-1, 35},
    {-1, 35},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
    {::protobuf_unittest::EnumParseTester_Arbitrary_IsValid},
  }}, {{
  }},
};

::uint8_t* EnumParseTester::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.EnumParseTester)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_optional_seq_small_0_lowfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
  for (int i = 0, n = this->_internal_repeated_seq_small_0_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall0>(this->_internal_repeated_seq_small_0_lowfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_0_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(3, _internal_packed_seq_small_0_lowfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_optional_seq_small_1_lowfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
  for (int i = 0, n = this->_internal_repeated_seq_small_1_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall1>(this->_internal_repeated_seq_small_1_lowfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_1_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(6, _internal_packed_seq_small_1_lowfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_optional_seq_large_lowfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
  for (int i = 0, n = this->_internal_repeated_seq_large_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, static_cast<::protobuf_unittest::EnumParseTester_SeqLarge>(this->_internal_repeated_seq_large_lowfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
  {
    int byte_size = _impl_._packed_seq_large_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(9, _internal_packed_seq_large_lowfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_optional_arbitrary_lowfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
  for (int i = 0, n = this->_internal_repeated_arbitrary_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, static_cast<::protobuf_unittest::EnumParseTester_Arbitrary>(this->_internal_repeated_arbitrary_lowfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
  {
    int byte_size = _impl_._packed_arbitrary_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(12, _internal_packed_arbitrary_lowfield(),
                                       byte_size, target);
    }
  }

  // optional int32 other_field = 99;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        99, this->_internal_other_field(), target);
  }

  // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1001, this->_internal_optional_seq_small_0_midfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
  for (int i = 0, n = this->_internal_repeated_seq_small_0_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1002, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall0>(this->_internal_repeated_seq_small_0_midfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_0_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1003, _internal_packed_seq_small_0_midfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1004, this->_internal_optional_seq_small_1_midfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
  for (int i = 0, n = this->_internal_repeated_seq_small_1_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1005, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall1>(this->_internal_repeated_seq_small_1_midfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_1_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1006, _internal_packed_seq_small_1_midfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1007, this->_internal_optional_seq_large_midfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
  for (int i = 0, n = this->_internal_repeated_seq_large_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1008, static_cast<::protobuf_unittest::EnumParseTester_SeqLarge>(this->_internal_repeated_seq_large_midfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
  {
    int byte_size = _impl_._packed_seq_large_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1009, _internal_packed_seq_large_midfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1010, this->_internal_optional_arbitrary_midfield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
  for (int i = 0, n = this->_internal_repeated_arbitrary_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1011, static_cast<::protobuf_unittest::EnumParseTester_Arbitrary>(this->_internal_repeated_arbitrary_midfield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
  {
    int byte_size = _impl_._packed_arbitrary_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1012, _internal_packed_arbitrary_midfield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000001, this->_internal_optional_seq_small_0_hifield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
  for (int i = 0, n = this->_internal_repeated_seq_small_0_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000002, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall0>(this->_internal_repeated_seq_small_0_hifield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_0_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1000003, _internal_packed_seq_small_0_hifield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000004, this->_internal_optional_seq_small_1_hifield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
  for (int i = 0, n = this->_internal_repeated_seq_small_1_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000005, static_cast<::protobuf_unittest::EnumParseTester_SeqSmall1>(this->_internal_repeated_seq_small_1_hifield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [packed = true];
  {
    int byte_size = _impl_._packed_seq_small_1_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1000006, _internal_packed_seq_small_1_hifield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000007, this->_internal_optional_seq_large_hifield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
  for (int i = 0, n = this->_internal_repeated_seq_large_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000008, static_cast<::protobuf_unittest::EnumParseTester_SeqLarge>(this->_internal_repeated_seq_large_hifield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [packed = true];
  {
    int byte_size = _impl_._packed_seq_large_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1000009, _internal_packed_seq_large_hifield(),
                                       byte_size, target);
    }
  }

  // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000010, this->_internal_optional_arbitrary_hifield(), target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
  for (int i = 0, n = this->_internal_repeated_arbitrary_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1000011, static_cast<::protobuf_unittest::EnumParseTester_Arbitrary>(this->_internal_repeated_arbitrary_hifield().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [packed = true];
  {
    int byte_size = _impl_._packed_arbitrary_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1000012, _internal_packed_arbitrary_hifield(),
                                       byte_size, target);
    }
  }

  // Extension range [2000000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2000000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.EnumParseTester)
  return target;
}

::size_t EnumParseTester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.EnumParseTester)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_lowfield = 2;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_0_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_0_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_lowfield = 3 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_0_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_0_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_0_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_lowfield = 5;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_1_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_1_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_lowfield = 6 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_1_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_1_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_1_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_lowfield = 8;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_large_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_large_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_lowfield = 9 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_large_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_large_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_large_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_lowfield = 11;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_arbitrary_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_arbitrary_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_lowfield = 12 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_arbitrary_lowfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_arbitrary_lowfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_arbitrary_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_midfield = 1002;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_0_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_0_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_midfield = 1003 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_0_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_0_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_0_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_midfield = 1005;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_1_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_1_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_midfield = 1006 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_1_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_1_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_1_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_midfield = 1008;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_large_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_large_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_midfield = 1009 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_large_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_large_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_large_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_midfield = 1011;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_arbitrary_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_arbitrary_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_midfield = 1012 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_arbitrary_midfield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_arbitrary_midfield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_arbitrary_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 repeated_seq_small_0_hifield = 1000002;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_0_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_0_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{4} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall0 packed_seq_small_0_hifield = 1000003 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_0_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_0_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 4;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_0_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 repeated_seq_small_1_hifield = 1000005;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_small_1_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_small_1_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{4} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqSmall1 packed_seq_small_1_hifield = 1000006 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_small_1_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_small_1_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 4;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_small_1_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge repeated_seq_large_hifield = 1000008;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_seq_large_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_seq_large_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{4} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.SeqLarge packed_seq_large_hifield = 1000009 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_seq_large_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_seq_large_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 4;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_seq_large_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary repeated_arbitrary_hifield = 1000011;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_arbitrary_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_arbitrary_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{4} * count;
  }
  // repeated .protobuf_unittest.EnumParseTester.Arbitrary packed_arbitrary_hifield = 1000012 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_arbitrary_hifield_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_arbitrary_hifield().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 4;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_arbitrary_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_lowfield = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_0_lowfield());
    }

    // optional int32 other_field = 99;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_other_field());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_midfield = 1001;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_0_midfield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqSmall0 optional_seq_small_0_hifield = 1000001;
    if (cached_has_bits & 0x00000008u) {
      total_size += 4 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_0_hifield());
    }

    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_hifield = 1000010;
    if (cached_has_bits & 0x00000010u) {
      total_size += 4 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_arbitrary_hifield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_lowfield = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_1_lowfield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_lowfield = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_large_lowfield());
    }

    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_lowfield = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_arbitrary_lowfield());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_midfield = 1004;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_1_midfield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_midfield = 1007;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_large_midfield());
    }

    // optional .protobuf_unittest.EnumParseTester.Arbitrary optional_arbitrary_midfield = 1010;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_arbitrary_midfield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqSmall1 optional_seq_small_1_hifield = 1000004;
    if (cached_has_bits & 0x00000800u) {
      total_size += 4 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_small_1_hifield());
    }

    // optional .protobuf_unittest.EnumParseTester.SeqLarge optional_seq_large_hifield = 1000007;
    if (cached_has_bits & 0x00001000u) {
      total_size += 4 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_seq_large_hifield());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EnumParseTester::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    EnumParseTester::MergeImpl
};
const ::google::protobuf::Message::ClassData*EnumParseTester::GetClassData() const { return &_class_data_; }


void EnumParseTester::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EnumParseTester*>(&to_msg);
  auto& from = static_cast<const EnumParseTester&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.EnumParseTester)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_seq_small_0_lowfield()->MergeFrom(from._internal_repeated_seq_small_0_lowfield());
  _this->_internal_mutable_packed_seq_small_0_lowfield()->MergeFrom(from._internal_packed_seq_small_0_lowfield());
  _this->_internal_mutable_repeated_seq_small_1_lowfield()->MergeFrom(from._internal_repeated_seq_small_1_lowfield());
  _this->_internal_mutable_packed_seq_small_1_lowfield()->MergeFrom(from._internal_packed_seq_small_1_lowfield());
  _this->_internal_mutable_repeated_seq_large_lowfield()->MergeFrom(from._internal_repeated_seq_large_lowfield());
  _this->_internal_mutable_packed_seq_large_lowfield()->MergeFrom(from._internal_packed_seq_large_lowfield());
  _this->_internal_mutable_repeated_arbitrary_lowfield()->MergeFrom(from._internal_repeated_arbitrary_lowfield());
  _this->_internal_mutable_packed_arbitrary_lowfield()->MergeFrom(from._internal_packed_arbitrary_lowfield());
  _this->_internal_mutable_repeated_seq_small_0_midfield()->MergeFrom(from._internal_repeated_seq_small_0_midfield());
  _this->_internal_mutable_packed_seq_small_0_midfield()->MergeFrom(from._internal_packed_seq_small_0_midfield());
  _this->_internal_mutable_repeated_seq_small_1_midfield()->MergeFrom(from._internal_repeated_seq_small_1_midfield());
  _this->_internal_mutable_packed_seq_small_1_midfield()->MergeFrom(from._internal_packed_seq_small_1_midfield());
  _this->_internal_mutable_repeated_seq_large_midfield()->MergeFrom(from._internal_repeated_seq_large_midfield());
  _this->_internal_mutable_packed_seq_large_midfield()->MergeFrom(from._internal_packed_seq_large_midfield());
  _this->_internal_mutable_repeated_arbitrary_midfield()->MergeFrom(from._internal_repeated_arbitrary_midfield());
  _this->_internal_mutable_packed_arbitrary_midfield()->MergeFrom(from._internal_packed_arbitrary_midfield());
  _this->_internal_mutable_repeated_seq_small_0_hifield()->MergeFrom(from._internal_repeated_seq_small_0_hifield());
  _this->_internal_mutable_packed_seq_small_0_hifield()->MergeFrom(from._internal_packed_seq_small_0_hifield());
  _this->_internal_mutable_repeated_seq_small_1_hifield()->MergeFrom(from._internal_repeated_seq_small_1_hifield());
  _this->_internal_mutable_packed_seq_small_1_hifield()->MergeFrom(from._internal_packed_seq_small_1_hifield());
  _this->_internal_mutable_repeated_seq_large_hifield()->MergeFrom(from._internal_repeated_seq_large_hifield());
  _this->_internal_mutable_packed_seq_large_hifield()->MergeFrom(from._internal_packed_seq_large_hifield());
  _this->_internal_mutable_repeated_arbitrary_hifield()->MergeFrom(from._internal_repeated_arbitrary_hifield());
  _this->_internal_mutable_packed_arbitrary_hifield()->MergeFrom(from._internal_packed_arbitrary_hifield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_seq_small_0_lowfield_ = from._impl_.optional_seq_small_0_lowfield_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.other_field_ = from._impl_.other_field_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_seq_small_0_midfield_ = from._impl_.optional_seq_small_0_midfield_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_seq_small_0_hifield_ = from._impl_.optional_seq_small_0_hifield_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_arbitrary_hifield_ = from._impl_.optional_arbitrary_hifield_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.optional_seq_small_1_lowfield_ = from._impl_.optional_seq_small_1_lowfield_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_seq_large_lowfield_ = from._impl_.optional_seq_large_lowfield_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.optional_arbitrary_lowfield_ = from._impl_.optional_arbitrary_lowfield_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.optional_seq_small_1_midfield_ = from._impl_.optional_seq_small_1_midfield_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.optional_seq_large_midfield_ = from._impl_.optional_seq_large_midfield_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.optional_arbitrary_midfield_ = from._impl_.optional_arbitrary_midfield_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.optional_seq_small_1_hifield_ = from._impl_.optional_seq_small_1_hifield_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.optional_seq_large_hifield_ = from._impl_.optional_seq_large_hifield_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnumParseTester::CopyFrom(const EnumParseTester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.EnumParseTester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EnumParseTester::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void EnumParseTester::InternalSwap(EnumParseTester* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_seq_small_0_lowfield_.InternalSwap(&other->_impl_.repeated_seq_small_0_lowfield_);
  _impl_.packed_seq_small_0_lowfield_.InternalSwap(&other->_impl_.packed_seq_small_0_lowfield_);
  _impl_.repeated_seq_small_1_lowfield_.InternalSwap(&other->_impl_.repeated_seq_small_1_lowfield_);
  _impl_.packed_seq_small_1_lowfield_.InternalSwap(&other->_impl_.packed_seq_small_1_lowfield_);
  _impl_.repeated_seq_large_lowfield_.InternalSwap(&other->_impl_.repeated_seq_large_lowfield_);
  _impl_.packed_seq_large_lowfield_.InternalSwap(&other->_impl_.packed_seq_large_lowfield_);
  _impl_.repeated_arbitrary_lowfield_.InternalSwap(&other->_impl_.repeated_arbitrary_lowfield_);
  _impl_.packed_arbitrary_lowfield_.InternalSwap(&other->_impl_.packed_arbitrary_lowfield_);
  _impl_.repeated_seq_small_0_midfield_.InternalSwap(&other->_impl_.repeated_seq_small_0_midfield_);
  _impl_.packed_seq_small_0_midfield_.InternalSwap(&other->_impl_.packed_seq_small_0_midfield_);
  _impl_.repeated_seq_small_1_midfield_.InternalSwap(&other->_impl_.repeated_seq_small_1_midfield_);
  _impl_.packed_seq_small_1_midfield_.InternalSwap(&other->_impl_.packed_seq_small_1_midfield_);
  _impl_.repeated_seq_large_midfield_.InternalSwap(&other->_impl_.repeated_seq_large_midfield_);
  _impl_.packed_seq_large_midfield_.InternalSwap(&other->_impl_.packed_seq_large_midfield_);
  _impl_.repeated_arbitrary_midfield_.InternalSwap(&other->_impl_.repeated_arbitrary_midfield_);
  _impl_.packed_arbitrary_midfield_.InternalSwap(&other->_impl_.packed_arbitrary_midfield_);
  _impl_.repeated_seq_small_0_hifield_.InternalSwap(&other->_impl_.repeated_seq_small_0_hifield_);
  _impl_.packed_seq_small_0_hifield_.InternalSwap(&other->_impl_.packed_seq_small_0_hifield_);
  _impl_.repeated_seq_small_1_hifield_.InternalSwap(&other->_impl_.repeated_seq_small_1_hifield_);
  _impl_.packed_seq_small_1_hifield_.InternalSwap(&other->_impl_.packed_seq_small_1_hifield_);
  _impl_.repeated_seq_large_hifield_.InternalSwap(&other->_impl_.repeated_seq_large_hifield_);
  _impl_.packed_seq_large_hifield_.InternalSwap(&other->_impl_.packed_seq_large_hifield_);
  _impl_.repeated_arbitrary_hifield_.InternalSwap(&other->_impl_.repeated_arbitrary_hifield_);
  _impl_.packed_arbitrary_hifield_.InternalSwap(&other->_impl_.packed_arbitrary_hifield_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_large_hifield_)
      + sizeof(EnumParseTester::_impl_.optional_seq_large_hifield_)
      - PROTOBUF_FIELD_OFFSET(EnumParseTester, _impl_.optional_seq_small_0_lowfield_)>(
          reinterpret_cast<char*>(&_impl_.optional_seq_small_0_lowfield_),
          reinterpret_cast<char*>(&other->_impl_.optional_seq_small_0_lowfield_));
}

::google::protobuf::Metadata EnumParseTester::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[128]);
}
// ===================================================================

class BoolParseTester::_Internal {
 public:
  using HasBits = decltype(std::declval<BoolParseTester>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_._has_bits_);
  static void set_has_optional_bool_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_bool_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_bool_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_other_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BoolParseTester::BoolParseTester(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BoolParseTester)
}
BoolParseTester::BoolParseTester(const BoolParseTester& from) : ::google::protobuf::Message() {
  BoolParseTester* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_bool_lowfield_){from._impl_.repeated_bool_lowfield_},
      decltype(_impl_.packed_bool_lowfield_){from._impl_.packed_bool_lowfield_},
      decltype(_impl_.repeated_bool_midfield_){from._impl_.repeated_bool_midfield_},
      decltype(_impl_.packed_bool_midfield_){from._impl_.packed_bool_midfield_},
      decltype(_impl_.repeated_bool_hifield_){from._impl_.repeated_bool_hifield_},
      decltype(_impl_.packed_bool_hifield_){from._impl_.packed_bool_hifield_},
      decltype(_impl_.other_field_){},
      decltype(_impl_.optional_bool_lowfield_){},
      decltype(_impl_.optional_bool_midfield_){},
      decltype(_impl_.optional_bool_hifield_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.other_field_, &from._impl_.other_field_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_bool_hifield_) -
    reinterpret_cast<char*>(&_impl_.other_field_)) + sizeof(_impl_.optional_bool_hifield_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BoolParseTester)
}
inline void BoolParseTester::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_bool_lowfield_){arena},
      decltype(_impl_.packed_bool_lowfield_){arena},
      decltype(_impl_.repeated_bool_midfield_){arena},
      decltype(_impl_.packed_bool_midfield_){arena},
      decltype(_impl_.repeated_bool_hifield_){arena},
      decltype(_impl_.packed_bool_hifield_){arena},
      decltype(_impl_.other_field_){0},
      decltype(_impl_.optional_bool_lowfield_){false},
      decltype(_impl_.optional_bool_midfield_){false},
      decltype(_impl_.optional_bool_hifield_){false},
  };
}
BoolParseTester::~BoolParseTester() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BoolParseTester)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolParseTester::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.repeated_bool_lowfield_.~RepeatedField();
  _impl_.packed_bool_lowfield_.~RepeatedField();
  _impl_.repeated_bool_midfield_.~RepeatedField();
  _impl_.packed_bool_midfield_.~RepeatedField();
  _impl_.repeated_bool_hifield_.~RepeatedField();
  _impl_.packed_bool_hifield_.~RepeatedField();
}
void BoolParseTester::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BoolParseTester::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BoolParseTester)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_bool_lowfield()->Clear();
  _internal_mutable_packed_bool_lowfield()->Clear();
  _internal_mutable_repeated_bool_midfield()->Clear();
  _internal_mutable_packed_bool_midfield()->Clear();
  _internal_mutable_repeated_bool_hifield()->Clear();
  _internal_mutable_packed_bool_hifield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.other_field_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_bool_hifield_) -
        reinterpret_cast<char*>(&_impl_.other_field_)) + sizeof(_impl_.optional_bool_hifield_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolParseTester::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 17> BoolParseTester::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_._extensions_),
    1000003, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolParseTester_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool optional_bool_lowfield = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BoolParseTester, _impl_.optional_bool_lowfield_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_lowfield_)}},
    // repeated bool repeated_bool_lowfield = 2;
    {::_pbi::TcParser::FastV8R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.repeated_bool_lowfield_)}},
    // repeated bool packed_bool_lowfield = 3 [packed = true];
    {::_pbi::TcParser::FastV8P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.packed_bool_lowfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool optional_bool_midfield = 1001;
    {::_pbi::TcParser::FastV8S2,
     {16072, 2, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_midfield_)}},
    // repeated bool repeated_bool_midfield = 1002;
    {::_pbi::TcParser::FastV8R2,
     {16080, 63, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.repeated_bool_midfield_)}},
    // repeated bool packed_bool_midfield = 1003 [packed = true];
    {::_pbi::TcParser::FastV8P2,
     {16090, 63, 0, PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.packed_bool_midfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    99, 0, 1,
    65534, 3,1001, 0, 1,
     65528, 4,16961, 15, 1,
     65528, 7,
    65535, 65535
  }}, {{
    // optional bool optional_bool_lowfield = 1;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_lowfield_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated bool repeated_bool_lowfield = 2;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.repeated_bool_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated bool packed_bool_lowfield = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.packed_bool_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // optional int32 other_field = 99;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.other_field_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool optional_bool_midfield = 1001;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_midfield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated bool repeated_bool_midfield = 1002;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.repeated_bool_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated bool packed_bool_midfield = 1003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.packed_bool_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // optional bool optional_bool_hifield = 1000001;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_hifield_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated bool repeated_bool_hifield = 1000002;
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.repeated_bool_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated bool packed_bool_hifield = 1000003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.packed_bool_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BoolParseTester::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BoolParseTester)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool optional_bool_lowfield = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_optional_bool_lowfield(), target);
  }

  // repeated bool repeated_bool_lowfield = 2;
  for (int i = 0, n = this->_internal_repeated_bool_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_repeated_bool_lowfield().Get(i), target);
  }

  // repeated bool packed_bool_lowfield = 3 [packed = true];
  if (this->_internal_packed_bool_lowfield_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_packed_bool_lowfield(), target);
  }

  // optional int32 other_field = 99;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        99, this->_internal_other_field(), target);
  }

  // optional bool optional_bool_midfield = 1001;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1001, this->_internal_optional_bool_midfield(), target);
  }

  // repeated bool repeated_bool_midfield = 1002;
  for (int i = 0, n = this->_internal_repeated_bool_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1002, this->_internal_repeated_bool_midfield().Get(i), target);
  }

  // repeated bool packed_bool_midfield = 1003 [packed = true];
  if (this->_internal_packed_bool_midfield_size() > 0) {
    target = stream->WriteFixedPacked(1003, _internal_packed_bool_midfield(), target);
  }

  // optional bool optional_bool_hifield = 1000001;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1000001, this->_internal_optional_bool_hifield(), target);
  }

  // repeated bool repeated_bool_hifield = 1000002;
  for (int i = 0, n = this->_internal_repeated_bool_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1000002, this->_internal_repeated_bool_hifield().Get(i), target);
  }

  // repeated bool packed_bool_hifield = 1000003 [packed = true];
  if (this->_internal_packed_bool_hifield_size() > 0) {
    target = stream->WriteFixedPacked(1000003, _internal_packed_bool_hifield(), target);
  }

  // Extension range [2000000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2000000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BoolParseTester)
  return target;
}

::size_t BoolParseTester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BoolParseTester)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool repeated_bool_lowfield = 2;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_lowfield_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_lowfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool packed_bool_lowfield = 3 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_packed_bool_lowfield_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool repeated_bool_midfield = 1002;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_midfield_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_midfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool packed_bool_midfield = 1003 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_packed_bool_midfield_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool repeated_bool_hifield = 1000002;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_hifield_size())
    ;
    std::size_t tag_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_hifield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool packed_bool_hifield = 1000003 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_packed_bool_hifield_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 4 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 other_field = 99;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_other_field());
    }

    // optional bool optional_bool_lowfield = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool optional_bool_midfield = 1001;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3;
    }

    // optional bool optional_bool_hifield = 1000001;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolParseTester::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BoolParseTester::MergeImpl
};
const ::google::protobuf::Message::ClassData*BoolParseTester::GetClassData() const { return &_class_data_; }


void BoolParseTester::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolParseTester*>(&to_msg);
  auto& from = static_cast<const BoolParseTester&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BoolParseTester)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_bool_lowfield()->MergeFrom(from._internal_repeated_bool_lowfield());
  _this->_internal_mutable_packed_bool_lowfield()->MergeFrom(from._internal_packed_bool_lowfield());
  _this->_internal_mutable_repeated_bool_midfield()->MergeFrom(from._internal_repeated_bool_midfield());
  _this->_internal_mutable_packed_bool_midfield()->MergeFrom(from._internal_packed_bool_midfield());
  _this->_internal_mutable_repeated_bool_hifield()->MergeFrom(from._internal_repeated_bool_hifield());
  _this->_internal_mutable_packed_bool_hifield()->MergeFrom(from._internal_packed_bool_hifield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.other_field_ = from._impl_.other_field_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_bool_lowfield_ = from._impl_.optional_bool_lowfield_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_bool_midfield_ = from._impl_.optional_bool_midfield_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_bool_hifield_ = from._impl_.optional_bool_hifield_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolParseTester::CopyFrom(const BoolParseTester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BoolParseTester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolParseTester::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void BoolParseTester::InternalSwap(BoolParseTester* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_bool_lowfield_.InternalSwap(&other->_impl_.repeated_bool_lowfield_);
  _impl_.packed_bool_lowfield_.InternalSwap(&other->_impl_.packed_bool_lowfield_);
  _impl_.repeated_bool_midfield_.InternalSwap(&other->_impl_.repeated_bool_midfield_);
  _impl_.packed_bool_midfield_.InternalSwap(&other->_impl_.packed_bool_midfield_);
  _impl_.repeated_bool_hifield_.InternalSwap(&other->_impl_.repeated_bool_hifield_);
  _impl_.packed_bool_hifield_.InternalSwap(&other->_impl_.packed_bool_hifield_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.optional_bool_hifield_)
      + sizeof(BoolParseTester::_impl_.optional_bool_hifield_)
      - PROTOBUF_FIELD_OFFSET(BoolParseTester, _impl_.other_field_)>(
          reinterpret_cast<char*>(&_impl_.other_field_),
          reinterpret_cast<char*>(&other->_impl_.other_field_));
}

::google::protobuf::Metadata BoolParseTester::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[129]);
}
// ===================================================================

class Int32ParseTester::_Internal {
 public:
  using HasBits = decltype(std::declval<Int32ParseTester>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_._has_bits_);
  static void set_has_optional_int32_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_int32_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_int32_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_other_field(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Int32ParseTester::Int32ParseTester(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int32ParseTester)
}
Int32ParseTester::Int32ParseTester(const Int32ParseTester& from) : ::google::protobuf::Message() {
  Int32ParseTester* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_lowfield_){from._impl_.repeated_int32_lowfield_},
      decltype(_impl_.packed_int32_lowfield_){from._impl_.packed_int32_lowfield_},
      /* _impl_._packed_int32_lowfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int32_midfield_){from._impl_.repeated_int32_midfield_},
      decltype(_impl_.packed_int32_midfield_){from._impl_.packed_int32_midfield_},
      /* _impl_._packed_int32_midfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int32_hifield_){from._impl_.repeated_int32_hifield_},
      decltype(_impl_.packed_int32_hifield_){from._impl_.packed_int32_hifield_},
      /* _impl_._packed_int32_hifield_cached_byte_size_ = */ {0},
      decltype(_impl_.optional_int32_lowfield_){},
      decltype(_impl_.other_field_){},
      decltype(_impl_.optional_int32_midfield_){},
      decltype(_impl_.optional_int32_hifield_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.optional_int32_lowfield_, &from._impl_.optional_int32_lowfield_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.optional_int32_hifield_) -
    reinterpret_cast<char*>(&_impl_.optional_int32_lowfield_)) + sizeof(_impl_.optional_int32_hifield_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int32ParseTester)
}
inline void Int32ParseTester::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int32_lowfield_){arena},
      decltype(_impl_.packed_int32_lowfield_){arena},
      /* _impl_._packed_int32_lowfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int32_midfield_){arena},
      decltype(_impl_.packed_int32_midfield_){arena},
      /* _impl_._packed_int32_midfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int32_hifield_){arena},
      decltype(_impl_.packed_int32_hifield_){arena},
      /* _impl_._packed_int32_hifield_cached_byte_size_ = */ {0},
      decltype(_impl_.optional_int32_lowfield_){0},
      decltype(_impl_.other_field_){0},
      decltype(_impl_.optional_int32_midfield_){0},
      decltype(_impl_.optional_int32_hifield_){0},
  };
}
Int32ParseTester::~Int32ParseTester() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int32ParseTester)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int32ParseTester::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.repeated_int32_lowfield_.~RepeatedField();
  _impl_.packed_int32_lowfield_.~RepeatedField();
  _impl_.repeated_int32_midfield_.~RepeatedField();
  _impl_.packed_int32_midfield_.~RepeatedField();
  _impl_.repeated_int32_hifield_.~RepeatedField();
  _impl_.packed_int32_hifield_.~RepeatedField();
}
void Int32ParseTester::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int32ParseTester::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int32ParseTester)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_int32_lowfield()->Clear();
  _internal_mutable_packed_int32_lowfield()->Clear();
  _internal_mutable_repeated_int32_midfield()->Clear();
  _internal_mutable_packed_int32_midfield()->Clear();
  _internal_mutable_repeated_int32_hifield()->Clear();
  _internal_mutable_packed_int32_hifield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.optional_int32_lowfield_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_int32_hifield_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_lowfield_)) + sizeof(_impl_.optional_int32_hifield_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int32ParseTester::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 17> Int32ParseTester::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_._extensions_),
    1000003, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int32ParseTester_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32_lowfield = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int32ParseTester, _impl_.optional_int32_lowfield_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_lowfield_)}},
    // repeated int32 repeated_int32_lowfield = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.repeated_int32_lowfield_)}},
    // repeated int32 packed_int32_lowfield = 3 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.packed_int32_lowfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32_midfield = 1001;
    {::_pbi::TcParser::FastV32S2,
     {16072, 2, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_midfield_)}},
    // repeated int32 repeated_int32_midfield = 1002;
    {::_pbi::TcParser::FastV32R2,
     {16080, 63, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.repeated_int32_midfield_)}},
    // repeated int32 packed_int32_midfield = 1003 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {16090, 63, 0, PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.packed_int32_midfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    99, 0, 1,
    65534, 3,1001, 0, 1,
     65528, 4,16961, 15, 1,
     65528, 7,
    65535, 65535
  }}, {{
    // optional int32 optional_int32_lowfield = 1;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_lowfield_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 repeated_int32_lowfield = 2;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.repeated_int32_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 packed_int32_lowfield = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.packed_int32_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional int32 other_field = 99;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.other_field_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 optional_int32_midfield = 1001;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_midfield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 repeated_int32_midfield = 1002;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.repeated_int32_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 packed_int32_midfield = 1003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.packed_int32_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional int32 optional_int32_hifield = 1000001;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_hifield_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 repeated_int32_hifield = 1000002;
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.repeated_int32_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 packed_int32_hifield = 1000003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.packed_int32_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Int32ParseTester::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int32ParseTester)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32_lowfield = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32_lowfield(), target);
  }

  // repeated int32 repeated_int32_lowfield = 2;
  for (int i = 0, n = this->_internal_repeated_int32_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_repeated_int32_lowfield().Get(i), target);
  }

  // repeated int32 packed_int32_lowfield = 3 [packed = true];
  {
    int byte_size = _impl_._packed_int32_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(3, _internal_packed_int32_lowfield(),
                                                 byte_size, target);
    }
  }

  // optional int32 other_field = 99;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        99, this->_internal_other_field(), target);
  }

  // optional int32 optional_int32_midfield = 1001;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1001, this->_internal_optional_int32_midfield(), target);
  }

  // repeated int32 repeated_int32_midfield = 1002;
  for (int i = 0, n = this->_internal_repeated_int32_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1002, this->_internal_repeated_int32_midfield().Get(i), target);
  }

  // repeated int32 packed_int32_midfield = 1003 [packed = true];
  {
    int byte_size = _impl_._packed_int32_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1003, _internal_packed_int32_midfield(),
                                                 byte_size, target);
    }
  }

  // optional int32 optional_int32_hifield = 1000001;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1000001, this->_internal_optional_int32_hifield(), target);
  }

  // repeated int32 repeated_int32_hifield = 1000002;
  for (int i = 0, n = this->_internal_repeated_int32_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1000002, this->_internal_repeated_int32_hifield().Get(i), target);
  }

  // repeated int32 packed_int32_hifield = 1000003 [packed = true];
  {
    int byte_size = _impl_._packed_int32_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1000003, _internal_packed_int32_hifield(),
                                                 byte_size, target);
    }
  }

  // Extension range [2000000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2000000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int32ParseTester)
  return target;
}

::size_t Int32ParseTester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int32ParseTester)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32_lowfield = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32_lowfield())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_lowfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 packed_int32_lowfield = 3 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32_lowfield())
    ;
    _impl_._packed_int32_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 repeated_int32_midfield = 1002;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32_midfield())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_midfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 packed_int32_midfield = 1003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32_midfield())
    ;
    _impl_._packed_int32_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 repeated_int32_hifield = 1000002;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32_hifield())
    ;
    std::size_t tag_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_hifield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 packed_int32_hifield = 1000003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32_hifield())
    ;
    _impl_._packed_int32_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 4 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 optional_int32_lowfield = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32_lowfield());
    }

    // optional int32 other_field = 99;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_other_field());
    }

    // optional int32 optional_int32_midfield = 1001;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_midfield());
    }

    // optional int32 optional_int32_hifield = 1000001;
    if (cached_has_bits & 0x00000008u) {
      total_size += 4 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32_hifield());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int32ParseTester::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int32ParseTester::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int32ParseTester::GetClassData() const { return &_class_data_; }


void Int32ParseTester::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int32ParseTester*>(&to_msg);
  auto& from = static_cast<const Int32ParseTester&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int32ParseTester)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32_lowfield()->MergeFrom(from._internal_repeated_int32_lowfield());
  _this->_internal_mutable_packed_int32_lowfield()->MergeFrom(from._internal_packed_int32_lowfield());
  _this->_internal_mutable_repeated_int32_midfield()->MergeFrom(from._internal_repeated_int32_midfield());
  _this->_internal_mutable_packed_int32_midfield()->MergeFrom(from._internal_packed_int32_midfield());
  _this->_internal_mutable_repeated_int32_hifield()->MergeFrom(from._internal_repeated_int32_hifield());
  _this->_internal_mutable_packed_int32_hifield()->MergeFrom(from._internal_packed_int32_hifield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_int32_lowfield_ = from._impl_.optional_int32_lowfield_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.other_field_ = from._impl_.other_field_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int32_midfield_ = from._impl_.optional_int32_midfield_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optional_int32_hifield_ = from._impl_.optional_int32_hifield_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int32ParseTester::CopyFrom(const Int32ParseTester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int32ParseTester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int32ParseTester::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void Int32ParseTester::InternalSwap(Int32ParseTester* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_lowfield_.InternalSwap(&other->_impl_.repeated_int32_lowfield_);
  _impl_.packed_int32_lowfield_.InternalSwap(&other->_impl_.packed_int32_lowfield_);
  _impl_.repeated_int32_midfield_.InternalSwap(&other->_impl_.repeated_int32_midfield_);
  _impl_.packed_int32_midfield_.InternalSwap(&other->_impl_.packed_int32_midfield_);
  _impl_.repeated_int32_hifield_.InternalSwap(&other->_impl_.repeated_int32_hifield_);
  _impl_.packed_int32_hifield_.InternalSwap(&other->_impl_.packed_int32_hifield_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_hifield_)
      + sizeof(Int32ParseTester::_impl_.optional_int32_hifield_)
      - PROTOBUF_FIELD_OFFSET(Int32ParseTester, _impl_.optional_int32_lowfield_)>(
          reinterpret_cast<char*>(&_impl_.optional_int32_lowfield_),
          reinterpret_cast<char*>(&other->_impl_.optional_int32_lowfield_));
}

::google::protobuf::Metadata Int32ParseTester::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[130]);
}
// ===================================================================

class Int64ParseTester::_Internal {
 public:
  using HasBits = decltype(std::declval<Int64ParseTester>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_._has_bits_);
  static void set_has_optional_int64_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_int64_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_int64_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_other_field(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Int64ParseTester::Int64ParseTester(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.Int64ParseTester)
}
Int64ParseTester::Int64ParseTester(const Int64ParseTester& from) : ::google::protobuf::Message() {
  Int64ParseTester* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int64_lowfield_){from._impl_.repeated_int64_lowfield_},
      decltype(_impl_.packed_int64_lowfield_){from._impl_.packed_int64_lowfield_},
      /* _impl_._packed_int64_lowfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int64_midfield_){from._impl_.repeated_int64_midfield_},
      decltype(_impl_.packed_int64_midfield_){from._impl_.packed_int64_midfield_},
      /* _impl_._packed_int64_midfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int64_hifield_){from._impl_.repeated_int64_hifield_},
      decltype(_impl_.packed_int64_hifield_){from._impl_.packed_int64_hifield_},
      /* _impl_._packed_int64_hifield_cached_byte_size_ = */ {0},
      decltype(_impl_.optional_int64_lowfield_){},
      decltype(_impl_.optional_int64_midfield_){},
      decltype(_impl_.optional_int64_hifield_){},
      decltype(_impl_.other_field_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  ::memcpy(&_impl_.optional_int64_lowfield_, &from._impl_.optional_int64_lowfield_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.other_field_) -
    reinterpret_cast<char*>(&_impl_.optional_int64_lowfield_)) + sizeof(_impl_.other_field_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.Int64ParseTester)
}
inline void Int64ParseTester::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_int64_lowfield_){arena},
      decltype(_impl_.packed_int64_lowfield_){arena},
      /* _impl_._packed_int64_lowfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int64_midfield_){arena},
      decltype(_impl_.packed_int64_midfield_){arena},
      /* _impl_._packed_int64_midfield_cached_byte_size_ = */ {0},
      decltype(_impl_.repeated_int64_hifield_){arena},
      decltype(_impl_.packed_int64_hifield_){arena},
      /* _impl_._packed_int64_hifield_cached_byte_size_ = */ {0},
      decltype(_impl_.optional_int64_lowfield_){::int64_t{0}},
      decltype(_impl_.optional_int64_midfield_){::int64_t{0}},
      decltype(_impl_.optional_int64_hifield_){::int64_t{0}},
      decltype(_impl_.other_field_){0},
  };
}
Int64ParseTester::~Int64ParseTester() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.Int64ParseTester)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Int64ParseTester::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _impl_.repeated_int64_lowfield_.~RepeatedField();
  _impl_.packed_int64_lowfield_.~RepeatedField();
  _impl_.repeated_int64_midfield_.~RepeatedField();
  _impl_.packed_int64_midfield_.~RepeatedField();
  _impl_.repeated_int64_hifield_.~RepeatedField();
  _impl_.packed_int64_hifield_.~RepeatedField();
}
void Int64ParseTester::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Int64ParseTester::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.Int64ParseTester)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_int64_lowfield()->Clear();
  _internal_mutable_packed_int64_lowfield()->Clear();
  _internal_mutable_repeated_int64_midfield()->Clear();
  _internal_mutable_packed_int64_midfield()->Clear();
  _internal_mutable_repeated_int64_hifield()->Clear();
  _internal_mutable_packed_int64_hifield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.optional_int64_lowfield_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.other_field_) -
        reinterpret_cast<char*>(&_impl_.optional_int64_lowfield_)) + sizeof(_impl_.other_field_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Int64ParseTester::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 17> Int64ParseTester::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_._extensions_),
    1000003, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Int64ParseTester_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 optional_int64_lowfield = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64ParseTester, _impl_.optional_int64_lowfield_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_lowfield_)}},
    // repeated int64 repeated_int64_lowfield = 2;
    {::_pbi::TcParser::FastV64R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.repeated_int64_lowfield_)}},
    // repeated int64 packed_int64_lowfield = 3 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.packed_int64_lowfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 optional_int64_midfield = 1001;
    {::_pbi::TcParser::FastV64S2,
     {16072, 1, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_midfield_)}},
    // repeated int64 repeated_int64_midfield = 1002;
    {::_pbi::TcParser::FastV64R2,
     {16080, 63, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.repeated_int64_midfield_)}},
    // repeated int64 packed_int64_midfield = 1003 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {16090, 63, 0, PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.packed_int64_midfield_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    99, 0, 1,
    65534, 3,1001, 0, 1,
     65528, 4,16961, 15, 1,
     65528, 7,
    65535, 65535
  }}, {{
    // optional int64 optional_int64_lowfield = 1;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_lowfield_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int64 repeated_int64_lowfield = 2;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.repeated_int64_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated int64 packed_int64_lowfield = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.packed_int64_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional int32 other_field = 99;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.other_field_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 optional_int64_midfield = 1001;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_midfield_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int64 repeated_int64_midfield = 1002;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.repeated_int64_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated int64 packed_int64_midfield = 1003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.packed_int64_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional int64 optional_int64_hifield = 1000001;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_hifield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int64 repeated_int64_hifield = 1000002;
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.repeated_int64_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated int64 packed_int64_hifield = 1000003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.packed_int64_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Int64ParseTester::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.Int64ParseTester)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 optional_int64_lowfield = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_optional_int64_lowfield(), target);
  }

  // repeated int64 repeated_int64_lowfield = 2;
  for (int i = 0, n = this->_internal_repeated_int64_lowfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_repeated_int64_lowfield().Get(i), target);
  }

  // repeated int64 packed_int64_lowfield = 3 [packed = true];
  {
    int byte_size = _impl_._packed_int64_lowfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(3, _internal_packed_int64_lowfield(),
                                                 byte_size, target);
    }
  }

  // optional int32 other_field = 99;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        99, this->_internal_other_field(), target);
  }

  // optional int64 optional_int64_midfield = 1001;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1001, this->_internal_optional_int64_midfield(), target);
  }

  // repeated int64 repeated_int64_midfield = 1002;
  for (int i = 0, n = this->_internal_repeated_int64_midfield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1002, this->_internal_repeated_int64_midfield().Get(i), target);
  }

  // repeated int64 packed_int64_midfield = 1003 [packed = true];
  {
    int byte_size = _impl_._packed_int64_midfield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(1003, _internal_packed_int64_midfield(),
                                                 byte_size, target);
    }
  }

  // optional int64 optional_int64_hifield = 1000001;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1000001, this->_internal_optional_int64_hifield(), target);
  }

  // repeated int64 repeated_int64_hifield = 1000002;
  for (int i = 0, n = this->_internal_repeated_int64_hifield_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1000002, this->_internal_repeated_int64_hifield().Get(i), target);
  }

  // repeated int64 packed_int64_hifield = 1000003 [packed = true];
  {
    int byte_size = _impl_._packed_int64_hifield_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(1000003, _internal_packed_int64_hifield(),
                                                 byte_size, target);
    }
  }

  // Extension range [2000000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2000000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.Int64ParseTester)
  return target;
}

::size_t Int64ParseTester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.Int64ParseTester)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 repeated_int64_lowfield = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64_lowfield())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_lowfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 packed_int64_lowfield = 3 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_packed_int64_lowfield())
    ;
    _impl_._packed_int64_lowfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64_midfield = 1002;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64_midfield())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_midfield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 packed_int64_midfield = 1003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_packed_int64_midfield())
    ;
    _impl_._packed_int64_midfield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64_hifield = 1000002;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64_hifield())
    ;
    std::size_t tag_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_hifield_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 packed_int64_hifield = 1000003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_packed_int64_hifield())
    ;
    _impl_._packed_int64_hifield_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 4 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 optional_int64_lowfield = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_optional_int64_lowfield());
    }

    // optional int64 optional_int64_midfield = 1001;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_midfield());
    }

    // optional int64 optional_int64_hifield = 1000001;
    if (cached_has_bits & 0x00000004u) {
      total_size += 4 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_optional_int64_hifield());
    }

    // optional int32 other_field = 99;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_other_field());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Int64ParseTester::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Int64ParseTester::MergeImpl
};
const ::google::protobuf::Message::ClassData*Int64ParseTester::GetClassData() const { return &_class_data_; }


void Int64ParseTester::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Int64ParseTester*>(&to_msg);
  auto& from = static_cast<const Int64ParseTester&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.Int64ParseTester)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int64_lowfield()->MergeFrom(from._internal_repeated_int64_lowfield());
  _this->_internal_mutable_packed_int64_lowfield()->MergeFrom(from._internal_packed_int64_lowfield());
  _this->_internal_mutable_repeated_int64_midfield()->MergeFrom(from._internal_repeated_int64_midfield());
  _this->_internal_mutable_packed_int64_midfield()->MergeFrom(from._internal_packed_int64_midfield());
  _this->_internal_mutable_repeated_int64_hifield()->MergeFrom(from._internal_repeated_int64_hifield());
  _this->_internal_mutable_packed_int64_hifield()->MergeFrom(from._internal_packed_int64_hifield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_int64_lowfield_ = from._impl_.optional_int64_lowfield_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.optional_int64_midfield_ = from._impl_.optional_int64_midfield_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.optional_int64_hifield_ = from._impl_.optional_int64_hifield_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.other_field_ = from._impl_.other_field_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64ParseTester::CopyFrom(const Int64ParseTester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.Int64ParseTester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Int64ParseTester::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void Int64ParseTester::InternalSwap(Int64ParseTester* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int64_lowfield_.InternalSwap(&other->_impl_.repeated_int64_lowfield_);
  _impl_.packed_int64_lowfield_.InternalSwap(&other->_impl_.packed_int64_lowfield_);
  _impl_.repeated_int64_midfield_.InternalSwap(&other->_impl_.repeated_int64_midfield_);
  _impl_.packed_int64_midfield_.InternalSwap(&other->_impl_.packed_int64_midfield_);
  _impl_.repeated_int64_hifield_.InternalSwap(&other->_impl_.repeated_int64_hifield_);
  _impl_.packed_int64_hifield_.InternalSwap(&other->_impl_.packed_int64_hifield_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.other_field_)
      + sizeof(Int64ParseTester::_impl_.other_field_)
      - PROTOBUF_FIELD_OFFSET(Int64ParseTester, _impl_.optional_int64_lowfield_)>(
          reinterpret_cast<char*>(&_impl_.optional_int64_lowfield_),
          reinterpret_cast<char*>(&other->_impl_.optional_int64_lowfield_));
}

::google::protobuf::Metadata Int64ParseTester::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[131]);
}
// ===================================================================

class InlinedStringIdxRegressionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InlinedStringIdxRegressionProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_._has_bits_);
  static void set_has_str1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::InlinedStringIdxRegressionProto& sub(const InlinedStringIdxRegressionProto* msg);
  static void set_has_sub(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_str2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_str3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::protobuf_unittest::InlinedStringIdxRegressionProto& InlinedStringIdxRegressionProto::_Internal::sub(const InlinedStringIdxRegressionProto* msg) {
  return *msg->_impl_.sub_;
}
InlinedStringIdxRegressionProto::InlinedStringIdxRegressionProto(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.InlinedStringIdxRegressionProto)
}
InlinedStringIdxRegressionProto::InlinedStringIdxRegressionProto(const InlinedStringIdxRegressionProto& from) : ::google::protobuf::Message() {
  InlinedStringIdxRegressionProto* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str1_){},
      decltype(_impl_.str2_){},
      decltype(_impl_.str3_){},
      decltype(_impl_.sub_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.str1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.str1_.Set(from._internal_str1(), _this->GetArenaForAllocation());
  }
  _impl_.str2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.str2_.Set(from._internal_str2(), _this->GetArenaForAllocation());
  }
  _impl_.str3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.str3_.Set(from._internal_str3(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.sub_ = new ::protobuf_unittest::InlinedStringIdxRegressionProto(*from._impl_.sub_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.InlinedStringIdxRegressionProto)
}
inline void InlinedStringIdxRegressionProto::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.str1_){},
      decltype(_impl_.str2_){},
      decltype(_impl_.str3_){},
      decltype(_impl_.sub_){nullptr},
  };
  _impl_.str1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.str3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
InlinedStringIdxRegressionProto::~InlinedStringIdxRegressionProto() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.InlinedStringIdxRegressionProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InlinedStringIdxRegressionProto::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.str1_.Destroy();
  _impl_.str2_.Destroy();
  _impl_.str3_.Destroy();
  if (this != internal_default_instance()) delete _impl_.sub_;
}
void InlinedStringIdxRegressionProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void InlinedStringIdxRegressionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.InlinedStringIdxRegressionProto)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.str1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.str2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.str3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.sub_ != nullptr);
      _impl_.sub_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InlinedStringIdxRegressionProto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 66, 2> InlinedStringIdxRegressionProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InlinedStringIdxRegressionProto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes str3 = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str3_)}},
    // optional string str1 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str1_)}},
    // optional .protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 3, 0, PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.sub_)}},
    // optional string str2 = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string str1 = 1;
    {PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
    {PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.sub_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string str2 = 3;
    {PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes str3 = 4;
    {PROTOBUF_FIELD_OFFSET(InlinedStringIdxRegressionProto, _impl_.str3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::InlinedStringIdxRegressionProto>()},
  }}, {{
    "\61\4\0\4\0\0\0\0"
    "protobuf_unittest.InlinedStringIdxRegressionProto"
    "str1"
    "str2"
  }},
};

::uint8_t* InlinedStringIdxRegressionProto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.InlinedStringIdxRegressionProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string str1 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_str1();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.InlinedStringIdxRegressionProto.str1");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sub(this),
        _Internal::sub(this).GetCachedSize(), target, stream);
  }

  // optional string str2 = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_str2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.InlinedStringIdxRegressionProto.str2");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bytes str3 = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_str3();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.InlinedStringIdxRegressionProto)
  return target;
}

::size_t InlinedStringIdxRegressionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.InlinedStringIdxRegressionProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string str1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str1());
    }

    // optional string str2 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_str2());
    }

    // optional bytes str3 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_str3());
    }

    // optional .protobuf_unittest.InlinedStringIdxRegressionProto sub = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.sub_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InlinedStringIdxRegressionProto::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    InlinedStringIdxRegressionProto::MergeImpl
};
const ::google::protobuf::Message::ClassData*InlinedStringIdxRegressionProto::GetClassData() const { return &_class_data_; }


void InlinedStringIdxRegressionProto::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InlinedStringIdxRegressionProto*>(&to_msg);
  auto& from = static_cast<const InlinedStringIdxRegressionProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.InlinedStringIdxRegressionProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_str1(from._internal_str1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_str2(from._internal_str2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_str3(from._internal_str3());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_sub()->::protobuf_unittest::InlinedStringIdxRegressionProto::MergeFrom(
          from._internal_sub());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InlinedStringIdxRegressionProto::CopyFrom(const InlinedStringIdxRegressionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.InlinedStringIdxRegressionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InlinedStringIdxRegressionProto::IsInitialized() const {
  return true;
}

void InlinedStringIdxRegressionProto::InternalSwap(InlinedStringIdxRegressionProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str1_, lhs_arena,
                                       &other->_impl_.str1_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str2_, lhs_arena,
                                       &other->_impl_.str2_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str3_, lhs_arena,
                                       &other->_impl_.str3_, rhs_arena);
  swap(_impl_.sub_, other->_impl_.sub_);
}

::google::protobuf::Metadata InlinedStringIdxRegressionProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[132]);
}
// ===================================================================

class StringParseTester::_Internal {
 public:
  using HasBits = decltype(std::declval<StringParseTester>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_._has_bits_);
  static void set_has_optional_string_lowfield(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_string_midfield(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_optional_string_hifield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

StringParseTester::StringParseTester(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.StringParseTester)
}
StringParseTester::StringParseTester(const StringParseTester& from) : ::google::protobuf::Message() {
  StringParseTester* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {},
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_string_lowfield_){from._impl_.repeated_string_lowfield_},
      decltype(_impl_.repeated_string_midfield_){from._impl_.repeated_string_midfield_},
      decltype(_impl_.repeated_string_hifield_){from._impl_.repeated_string_hifield_},
      decltype(_impl_.optional_string_lowfield_){},
      decltype(_impl_.optional_string_midfield_){},
      decltype(_impl_.optional_string_hifield_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_._extensions_.MergeFrom(internal_default_instance(),
                         from._impl_._extensions_);
  _impl_.optional_string_lowfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_lowfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_string_lowfield_.Set(from._internal_optional_string_lowfield(), _this->GetArenaForAllocation());
  }
  _impl_.optional_string_midfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_midfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_string_midfield_.Set(from._internal_optional_string_midfield(), _this->GetArenaForAllocation());
  }
  _impl_.optional_string_hifield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_hifield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_string_hifield_.Set(from._internal_optional_string_hifield(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.StringParseTester)
}
inline void StringParseTester::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /*decltype(_impl_._extensions_)*/ {::_pbi::ArenaInitialized(), arena},
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_string_lowfield_){arena},
      decltype(_impl_.repeated_string_midfield_){arena},
      decltype(_impl_.repeated_string_hifield_){arena},
      decltype(_impl_.optional_string_lowfield_){},
      decltype(_impl_.optional_string_midfield_){},
      decltype(_impl_.optional_string_hifield_){},
  };
  _impl_.optional_string_lowfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_lowfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_string_midfield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_midfield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_string_hifield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_string_hifield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
StringParseTester::~StringParseTester() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.StringParseTester)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StringParseTester::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._extensions_.~ExtensionSet();
  _internal_mutable_repeated_string_lowfield()->~RepeatedPtrField();
  _internal_mutable_repeated_string_midfield()->~RepeatedPtrField();
  _internal_mutable_repeated_string_hifield()->~RepeatedPtrField();
  _impl_.optional_string_lowfield_.Destroy();
  _impl_.optional_string_midfield_.Destroy();
  _impl_.optional_string_hifield_.Destroy();
}
void StringParseTester::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StringParseTester::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.StringParseTester)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_mutable_repeated_string_lowfield()->Clear();
  _internal_mutable_repeated_string_midfield()->Clear();
  _internal_mutable_repeated_string_hifield()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_lowfield_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_string_midfield_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.optional_string_hifield_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StringParseTester::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 6, 0, 186, 12> StringParseTester::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_._extensions_),
    1000002, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StringParseTester_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string repeated_string_lowfield = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.repeated_string_lowfield_)}},
    // optional string optional_string_lowfield = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.optional_string_lowfield_)}},
  }}, {{
    1001, 0, 1,
    65532, 2,16961, 15, 1,
     65532, 4,
    65535, 65535
  }}, {{
    // optional string optional_string_lowfield = 1;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.optional_string_lowfield_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string repeated_string_lowfield = 2;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.repeated_string_lowfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string optional_string_midfield = 1001;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.optional_string_midfield_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string repeated_string_midfield = 1002;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.repeated_string_midfield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string optional_string_hifield = 1000001;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.optional_string_hifield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string repeated_string_hifield = 1000002;
    {PROTOBUF_FIELD_OFFSET(StringParseTester, _impl_.repeated_string_hifield_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\43\30\30\30\30\27\27\0"
    "protobuf_unittest.StringParseTester"
    "optional_string_lowfield"
    "repeated_string_lowfield"
    "optional_string_midfield"
    "repeated_string_midfield"
    "optional_string_hifield"
    "repeated_string_hifield"
  }},
};

::uint8_t* StringParseTester::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.StringParseTester)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string optional_string_lowfield = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_string_lowfield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.optional_string_lowfield");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string repeated_string_lowfield = 2;
  for (int i = 0, n = this->_internal_repeated_string_lowfield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_lowfield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.repeated_string_lowfield");
    target = stream->WriteString(2, s, target);
  }

  // optional string optional_string_midfield = 1001;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_string_midfield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.optional_string_midfield");
    target = stream->WriteStringMaybeAliased(1001, _s, target);
  }

  // repeated string repeated_string_midfield = 1002;
  for (int i = 0, n = this->_internal_repeated_string_midfield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_midfield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.repeated_string_midfield");
    target = stream->WriteString(1002, s, target);
  }

  // optional string optional_string_hifield = 1000001;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_optional_string_hifield();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.optional_string_hifield");
    target = stream->WriteStringMaybeAliased(1000001, _s, target);
  }

  // repeated string repeated_string_hifield = 1000002;
  for (int i = 0, n = this->_internal_repeated_string_hifield_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_hifield().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.StringParseTester.repeated_string_hifield");
    target = stream->WriteString(1000002, s, target);
  }

  // Extension range [2000000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 2000000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.StringParseTester)
  return target;
}

::size_t StringParseTester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.StringParseTester)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repeated_string_lowfield = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_lowfield().size());
  for (int i = 0, n = _internal_repeated_string_lowfield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_lowfield().Get(i));
  }
  // repeated string repeated_string_midfield = 1002;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_midfield().size());
  for (int i = 0, n = _internal_repeated_string_midfield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_midfield().Get(i));
  }
  // repeated string repeated_string_hifield = 1000002;
  total_size += 4 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_hifield().size());
  for (int i = 0, n = _internal_repeated_string_hifield().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_hifield().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string optional_string_lowfield = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string_lowfield());
    }

    // optional string optional_string_midfield = 1001;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string_midfield());
    }

    // optional string optional_string_hifield = 1000001;
    if (cached_has_bits & 0x00000004u) {
      total_size += 4 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string_hifield());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StringParseTester::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StringParseTester::MergeImpl
};
const ::google::protobuf::Message::ClassData*StringParseTester::GetClassData() const { return &_class_data_; }


void StringParseTester::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StringParseTester*>(&to_msg);
  auto& from = static_cast<const StringParseTester&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.StringParseTester)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_string_lowfield()->MergeFrom(from._internal_repeated_string_lowfield());
  _this->_internal_mutable_repeated_string_midfield()->MergeFrom(from._internal_repeated_string_midfield());
  _this->_internal_mutable_repeated_string_hifield()->MergeFrom(from._internal_repeated_string_hifield());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string_lowfield(from._internal_optional_string_lowfield());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_string_midfield(from._internal_optional_string_midfield());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_optional_string_hifield(from._internal_optional_string_hifield());
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringParseTester::CopyFrom(const StringParseTester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.StringParseTester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StringParseTester::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

void StringParseTester::InternalSwap(StringParseTester* other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_string_lowfield_.InternalSwap(&other->_impl_.repeated_string_lowfield_);
  _impl_.repeated_string_midfield_.InternalSwap(&other->_impl_.repeated_string_midfield_);
  _impl_.repeated_string_hifield_.InternalSwap(&other->_impl_.repeated_string_hifield_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_lowfield_, lhs_arena,
                                       &other->_impl_.optional_string_lowfield_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_midfield_, lhs_arena,
                                       &other->_impl_.optional_string_midfield_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_hifield_, lhs_arena,
                                       &other->_impl_.optional_string_hifield_, rhs_arena);
}

::google::protobuf::Metadata StringParseTester::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[133]);
}
// ===================================================================

class BadFieldNames::_Internal {
 public:
  using HasBits = decltype(std::declval<BadFieldNames>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_._has_bits_);
  static void set_has_optionalint32(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_for_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BadFieldNames::BadFieldNames(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.BadFieldNames)
}
BadFieldNames::BadFieldNames(const BadFieldNames& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.BadFieldNames)
}
inline void BadFieldNames::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optionalint32_){0},
      decltype(_impl_.for__){0},
  };
}
BadFieldNames::~BadFieldNames() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.BadFieldNames)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BadFieldNames::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void BadFieldNames::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BadFieldNames::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.BadFieldNames)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.optionalint32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.for__) -
        reinterpret_cast<char*>(&_impl_.optionalint32_)) + sizeof(_impl_.for__));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BadFieldNames::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> BadFieldNames::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BadFieldNames_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 for = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BadFieldNames, _impl_.for__), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.for__)}},
    // optional int32 OptionalInt32 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BadFieldNames, _impl_.optionalint32_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.optionalint32_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 OptionalInt32 = 1;
    {PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.optionalint32_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 for = 2;
    {PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.for__), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BadFieldNames::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.BadFieldNames)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 OptionalInt32 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optionalint32(), target);
  }

  // optional int32 for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_for_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.BadFieldNames)
  return target;
}

::size_t BadFieldNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.BadFieldNames)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 OptionalInt32 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optionalint32());
    }

    // optional int32 for = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_for_());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BadFieldNames::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BadFieldNames::MergeImpl
};
const ::google::protobuf::Message::ClassData*BadFieldNames::GetClassData() const { return &_class_data_; }


void BadFieldNames::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BadFieldNames*>(&to_msg);
  auto& from = static_cast<const BadFieldNames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.BadFieldNames)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optionalint32_ = from._impl_.optionalint32_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.for__ = from._impl_.for__;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BadFieldNames::CopyFrom(const BadFieldNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.BadFieldNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BadFieldNames::IsInitialized() const {
  return true;
}

void BadFieldNames::InternalSwap(BadFieldNames* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.for__)
      + sizeof(BadFieldNames::_impl_.for__)
      - PROTOBUF_FIELD_OFFSET(BadFieldNames, _impl_.optionalint32_)>(
          reinterpret_cast<char*>(&_impl_.optionalint32_),
          reinterpret_cast<char*>(&other->_impl_.optionalint32_));
}

::google::protobuf::Metadata BadFieldNames::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[134]);
}
// ===================================================================

class TestNestedMessageRedaction::_Internal {
 public:
  using HasBits = decltype(std::declval<TestNestedMessageRedaction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_._has_bits_);
  static void set_has_optional_unredacted_nested_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_redacted_nested_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestNestedMessageRedaction::TestNestedMessageRedaction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedMessageRedaction)
}
TestNestedMessageRedaction::TestNestedMessageRedaction(const TestNestedMessageRedaction& from) : ::google::protobuf::Message() {
  TestNestedMessageRedaction* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_unredacted_nested_string_){},
      decltype(_impl_.optional_redacted_nested_string_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.optional_unredacted_nested_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_unredacted_nested_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_unredacted_nested_string_.Set(from._internal_optional_unredacted_nested_string(), _this->GetArenaForAllocation());
  }
  _impl_.optional_redacted_nested_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_redacted_nested_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_redacted_nested_string_.Set(from._internal_optional_redacted_nested_string(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestNestedMessageRedaction)
}
inline void TestNestedMessageRedaction::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_unredacted_nested_string_){},
      decltype(_impl_.optional_redacted_nested_string_){},
  };
  _impl_.optional_unredacted_nested_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_unredacted_nested_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_redacted_nested_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_redacted_nested_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
TestNestedMessageRedaction::~TestNestedMessageRedaction() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedMessageRedaction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestNestedMessageRedaction::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.optional_unredacted_nested_string_.Destroy();
  _impl_.optional_redacted_nested_string_.Destroy();
}
void TestNestedMessageRedaction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestNestedMessageRedaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedMessageRedaction)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_unredacted_nested_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_redacted_nested_string_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestNestedMessageRedaction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 117, 2> TestNestedMessageRedaction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedMessageRedaction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string optional_redacted_nested_string = 2 [debug_redact = true];
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_.optional_redacted_nested_string_)}},
    // optional string optional_unredacted_nested_string = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_.optional_unredacted_nested_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string optional_unredacted_nested_string = 1;
    {PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_.optional_unredacted_nested_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string optional_redacted_nested_string = 2 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(TestNestedMessageRedaction, _impl_.optional_redacted_nested_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\41\37\0\0\0\0\0"
    "protobuf_unittest.TestNestedMessageRedaction"
    "optional_unredacted_nested_string"
    "optional_redacted_nested_string"
  }},
};

::uint8_t* TestNestedMessageRedaction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedMessageRedaction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string optional_unredacted_nested_string = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_unredacted_nested_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestNestedMessageRedaction.optional_unredacted_nested_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string optional_redacted_nested_string = 2 [debug_redact = true];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_redacted_nested_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.TestNestedMessageRedaction.optional_redacted_nested_string");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedMessageRedaction)
  return target;
}

::size_t TestNestedMessageRedaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedMessageRedaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string optional_unredacted_nested_string = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_unredacted_nested_string());
    }

    // optional string optional_redacted_nested_string = 2 [debug_redact = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_redacted_nested_string());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestNestedMessageRedaction::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestNestedMessageRedaction::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestNestedMessageRedaction::GetClassData() const { return &_class_data_; }


void TestNestedMessageRedaction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestNestedMessageRedaction*>(&to_msg);
  auto& from = static_cast<const TestNestedMessageRedaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedMessageRedaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_unredacted_nested_string(from._internal_optional_unredacted_nested_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_redacted_nested_string(from._internal_optional_redacted_nested_string());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestNestedMessageRedaction::CopyFrom(const TestNestedMessageRedaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedMessageRedaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedMessageRedaction::IsInitialized() const {
  return true;
}

void TestNestedMessageRedaction::InternalSwap(TestNestedMessageRedaction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_unredacted_nested_string_, lhs_arena,
                                       &other->_impl_.optional_unredacted_nested_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_redacted_nested_string_, lhs_arena,
                                       &other->_impl_.optional_redacted_nested_string_, rhs_arena);
}

::google::protobuf::Metadata TestNestedMessageRedaction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[135]);
}
// ===================================================================

RedactedFields_MapRedactedStringEntry_DoNotUse::RedactedFields_MapRedactedStringEntry_DoNotUse() {}
RedactedFields_MapRedactedStringEntry_DoNotUse::RedactedFields_MapRedactedStringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void RedactedFields_MapRedactedStringEntry_DoNotUse::MergeFrom(const RedactedFields_MapRedactedStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RedactedFields_MapRedactedStringEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[136]);
}
// ===================================================================

RedactedFields_MapUnredactedStringEntry_DoNotUse::RedactedFields_MapUnredactedStringEntry_DoNotUse() {}
RedactedFields_MapUnredactedStringEntry_DoNotUse::RedactedFields_MapUnredactedStringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void RedactedFields_MapUnredactedStringEntry_DoNotUse::MergeFrom(const RedactedFields_MapUnredactedStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RedactedFields_MapUnredactedStringEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[137]);
}
// ===================================================================

class RedactedFields::_Internal {
 public:
  using HasBits = decltype(std::declval<RedactedFields>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_._has_bits_);
  static void set_has_optional_redacted_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_unredacted_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestNestedMessageRedaction& optional_redacted_message(const RedactedFields* msg);
  static void set_has_optional_redacted_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestNestedMessageRedaction& optional_unredacted_message(const RedactedFields* msg);
  static void set_has_optional_unredacted_message(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::protobuf_unittest::TestNestedMessageRedaction& RedactedFields::_Internal::optional_redacted_message(const RedactedFields* msg) {
  return *msg->_impl_.optional_redacted_message_;
}
const ::protobuf_unittest::TestNestedMessageRedaction& RedactedFields::_Internal::optional_unredacted_message(const RedactedFields* msg) {
  return *msg->_impl_.optional_unredacted_message_;
}
RedactedFields::RedactedFields(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RedactedFields)
}
RedactedFields::RedactedFields(const RedactedFields& from) : ::google::protobuf::Message() {
  RedactedFields* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_redacted_string_){from._impl_.repeated_redacted_string_},
      decltype(_impl_.repeated_unredacted_string_){from._impl_.repeated_unredacted_string_},
      decltype(_impl_.repeated_redacted_message_){from._impl_.repeated_redacted_message_},
      decltype(_impl_.repeated_unredacted_message_){from._impl_.repeated_unredacted_message_},
      /* decltype(_impl_.map_redacted_string_) */ {},
      /* decltype(_impl_.map_unredacted_string_) */ {},
      decltype(_impl_.optional_redacted_string_){},
      decltype(_impl_.optional_unredacted_string_){},
      decltype(_impl_.optional_redacted_message_){nullptr},
      decltype(_impl_.optional_unredacted_message_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.map_redacted_string_.MergeFrom(from._impl_.map_redacted_string_);
  _this->_impl_.map_unredacted_string_.MergeFrom(from._impl_.map_unredacted_string_);
  _impl_.optional_redacted_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_redacted_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.optional_redacted_string_.Set(from._internal_optional_redacted_string(), _this->GetArenaForAllocation());
  }
  _impl_.optional_unredacted_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_unredacted_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.optional_unredacted_string_.Set(from._internal_optional_unredacted_string(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.optional_redacted_message_ = new ::protobuf_unittest::TestNestedMessageRedaction(*from._impl_.optional_redacted_message_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.optional_unredacted_message_ = new ::protobuf_unittest::TestNestedMessageRedaction(*from._impl_.optional_unredacted_message_);
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RedactedFields)
}
inline void RedactedFields::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.repeated_redacted_string_){arena},
      decltype(_impl_.repeated_unredacted_string_){arena},
      decltype(_impl_.repeated_redacted_message_){arena},
      decltype(_impl_.repeated_unredacted_message_){arena},
      /* decltype(_impl_.map_redacted_string_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /* decltype(_impl_.map_unredacted_string_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      decltype(_impl_.optional_redacted_string_){},
      decltype(_impl_.optional_unredacted_string_){},
      decltype(_impl_.optional_redacted_message_){nullptr},
      decltype(_impl_.optional_unredacted_message_){nullptr},
  };
  _impl_.optional_redacted_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_redacted_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.optional_unredacted_string_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.optional_unredacted_string_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
RedactedFields::~RedactedFields() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RedactedFields)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RedactedFields::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_repeated_redacted_string()->~RepeatedPtrField();
  _internal_mutable_repeated_unredacted_string()->~RepeatedPtrField();
  _impl_.repeated_redacted_message_.~RepeatedPtrField();
  _impl_.repeated_unredacted_message_.~RepeatedPtrField();
  _impl_.map_redacted_string_.~MapField();
  _impl_.map_unredacted_string_.~MapField();
  _impl_.optional_redacted_string_.Destroy();
  _impl_.optional_unredacted_string_.Destroy();
  if (this != internal_default_instance()) delete _impl_.optional_redacted_message_;
  if (this != internal_default_instance()) delete _impl_.optional_unredacted_message_;
}
void RedactedFields::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RedactedFields::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RedactedFields)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_repeated_redacted_string()->Clear();
  _internal_mutable_repeated_unredacted_string()->Clear();
  _internal_mutable_repeated_redacted_message()->Clear();
  _internal_mutable_repeated_unredacted_message()->Clear();
  _impl_.map_redacted_string_.Clear();
  _impl_.map_unredacted_string_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_redacted_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_unredacted_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_redacted_message_ != nullptr);
      _impl_.optional_redacted_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optional_unredacted_message_ != nullptr);
      _impl_.optional_unredacted_message_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RedactedFields::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 10, 6, 189, 2> RedactedFields::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_._has_bits_),
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RedactedFields_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_unredacted_message_)}},
    // optional string optional_redacted_string = 1 [debug_redact = true];
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_redacted_string_)}},
    // optional string optional_unredacted_string = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_unredacted_string_)}},
    // repeated string repeated_redacted_string = 3 [debug_redact = true];
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_redacted_string_)}},
    // repeated string repeated_unredacted_string = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_unredacted_string_)}},
    // optional .protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_redacted_message_)}},
    // optional .protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 1, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_unredacted_message_)}},
    // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_redacted_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string optional_redacted_string = 1 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_redacted_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string optional_unredacted_string = 2;
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_unredacted_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string repeated_redacted_string = 3 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_redacted_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string repeated_unredacted_string = 4;
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_unredacted_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_redacted_message_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_unredacted_message_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_redacted_message_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.repeated_unredacted_message_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> map_redacted_string = 9 [debug_redact = true];
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.map_redacted_string_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> map_unredacted_string = 10;
    {PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.map_unredacted_string_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedMessageRedaction>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedMessageRedaction>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedMessageRedaction>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestNestedMessageRedaction>()},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(RedactedFields()._impl_.map_redacted_string_)>(0, 1, 0)},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(RedactedFields()._impl_.map_unredacted_string_)>(0, 1, 0)},
  }}, {{
    "\40\30\32\30\32\0\0\0\0\23\25\0\0\0\0\0"
    "protobuf_unittest.RedactedFields"
    "optional_redacted_string"
    "optional_unredacted_string"
    "repeated_redacted_string"
    "repeated_unredacted_string"
    "map_redacted_string"
    "map_unredacted_string"
  }},
};

::uint8_t* RedactedFields::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RedactedFields)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string optional_redacted_string = 1 [debug_redact = true];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_redacted_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.RedactedFields.optional_redacted_string");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string optional_unredacted_string = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_unredacted_string();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.RedactedFields.optional_unredacted_string");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string repeated_redacted_string = 3 [debug_redact = true];
  for (int i = 0, n = this->_internal_repeated_redacted_string_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_redacted_string().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.RedactedFields.repeated_redacted_string");
    target = stream->WriteString(3, s, target);
  }

  // repeated string repeated_unredacted_string = 4;
  for (int i = 0, n = this->_internal_repeated_unredacted_string_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_unredacted_string().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "protobuf_unittest.RedactedFields.repeated_unredacted_string");
    target = stream->WriteString(4, s, target);
  }

  // optional .protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::optional_redacted_message(this),
        _Internal::optional_redacted_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::optional_unredacted_message(this),
        _Internal::optional_unredacted_message(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_redacted_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_redacted_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_unredacted_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_unredacted_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, string> map_redacted_string = 9 [debug_redact = true];
  if (!_internal_map_redacted_string().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = RedactedFields_MapRedactedStringEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_redacted_string();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_redacted_string");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_redacted_string");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_redacted_string");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_redacted_string");
      }
    }
  }

  // map<string, string> map_unredacted_string = 10;
  if (!_internal_map_unredacted_string().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = RedactedFields_MapUnredactedStringEntry_DoNotUse::Funcs;
    const auto& field = _internal_map_unredacted_string();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_unredacted_string");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_unredacted_string");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_unredacted_string");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                    "protobuf_unittest.RedactedFields.map_unredacted_string");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RedactedFields)
  return target;
}

::size_t RedactedFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RedactedFields)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string repeated_redacted_string = 3 [debug_redact = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_redacted_string().size());
  for (int i = 0, n = _internal_repeated_redacted_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_redacted_string().Get(i));
  }
  // repeated string repeated_unredacted_string = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_repeated_unredacted_string().size());
  for (int i = 0, n = _internal_repeated_unredacted_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_unredacted_string().Get(i));
  }
  // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_redacted_message = 7 [debug_redact = true];
  total_size += 1UL * this->_internal_repeated_redacted_message_size();
  for (const auto& msg : this->_internal_repeated_redacted_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestNestedMessageRedaction repeated_unredacted_message = 8;
  total_size += 1UL * this->_internal_repeated_unredacted_message_size();
  for (const auto& msg : this->_internal_repeated_unredacted_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // map<string, string> map_redacted_string = 9 [debug_redact = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_redacted_string_size());
  for (const auto& entry : _internal_map_redacted_string()) {
    total_size += RedactedFields_MapRedactedStringEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> map_unredacted_string = 10;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_map_unredacted_string_size());
  for (const auto& entry : _internal_map_unredacted_string()) {
    total_size += RedactedFields_MapUnredactedStringEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string optional_redacted_string = 1 [debug_redact = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_redacted_string());
    }

    // optional string optional_unredacted_string = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_unredacted_string());
    }

    // optional .protobuf_unittest.TestNestedMessageRedaction optional_redacted_message = 5 [debug_redact = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_redacted_message_);
    }

    // optional .protobuf_unittest.TestNestedMessageRedaction optional_unredacted_message = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.optional_unredacted_message_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RedactedFields::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RedactedFields::MergeImpl
};
const ::google::protobuf::Message::ClassData*RedactedFields::GetClassData() const { return &_class_data_; }


void RedactedFields::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RedactedFields*>(&to_msg);
  auto& from = static_cast<const RedactedFields&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RedactedFields)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_redacted_string()->MergeFrom(from._internal_repeated_redacted_string());
  _this->_internal_mutable_repeated_unredacted_string()->MergeFrom(from._internal_repeated_unredacted_string());
  _this->_internal_mutable_repeated_redacted_message()->MergeFrom(from._internal_repeated_redacted_message());
  _this->_internal_mutable_repeated_unredacted_message()->MergeFrom(from._internal_repeated_unredacted_message());
  _this->_impl_.map_redacted_string_.MergeFrom(from._impl_.map_redacted_string_);
  _this->_impl_.map_unredacted_string_.MergeFrom(from._impl_.map_unredacted_string_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_redacted_string(from._internal_optional_redacted_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_unredacted_string(from._internal_optional_unredacted_string());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_redacted_message()->::protobuf_unittest::TestNestedMessageRedaction::MergeFrom(
          from._internal_optional_redacted_message());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_optional_unredacted_message()->::protobuf_unittest::TestNestedMessageRedaction::MergeFrom(
          from._internal_optional_unredacted_message());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedactedFields::CopyFrom(const RedactedFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RedactedFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RedactedFields::IsInitialized() const {
  return true;
}

void RedactedFields::InternalSwap(RedactedFields* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_redacted_string_.InternalSwap(&other->_impl_.repeated_redacted_string_);
  _impl_.repeated_unredacted_string_.InternalSwap(&other->_impl_.repeated_unredacted_string_);
  _impl_.repeated_redacted_message_.InternalSwap(&other->_impl_.repeated_redacted_message_);
  _impl_.repeated_unredacted_message_.InternalSwap(&other->_impl_.repeated_unredacted_message_);
  _impl_.map_redacted_string_.InternalSwap(&other->_impl_.map_redacted_string_);
  _impl_.map_unredacted_string_.InternalSwap(&other->_impl_.map_unredacted_string_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_redacted_string_, lhs_arena,
                                       &other->_impl_.optional_redacted_string_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_unredacted_string_, lhs_arena,
                                       &other->_impl_.optional_unredacted_string_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_unredacted_message_)
      + sizeof(RedactedFields::_impl_.optional_unredacted_message_)
      - PROTOBUF_FIELD_OFFSET(RedactedFields, _impl_.optional_redacted_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_redacted_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_redacted_message_));
}

::google::protobuf::Metadata RedactedFields::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[138]);
}
// ===================================================================

class TestCord::_Internal {
 public:
  using HasBits = decltype(std::declval<TestCord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestCord, _impl_._has_bits_);
  static void set_has_optional_bytes_cord(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_bytes_cord_default(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TestCord::TestCord(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &TestCord::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestCord)
}
TestCord::TestCord(const TestCord& from) : ::google::protobuf::Message() {
  TestCord* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_bytes_cord_){from._impl_.optional_bytes_cord_},
      decltype(_impl_.optional_bytes_cord_default_){from._impl_.optional_bytes_cord_default_},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestCord)
}
inline void TestCord::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.optional_bytes_cord_){},
      decltype(_impl_.optional_bytes_cord_default_){},
  };
  _impl_.optional_bytes_cord_default_ = ::absl::string_view("hello", 5);
}
TestCord::~TestCord() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestCord)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestCord::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.optional_bytes_cord_.~Cord();
  _impl_.optional_bytes_cord_default_.~Cord();
}
void TestCord::ArenaDtor(void* object) {
  TestCord* _this = reinterpret_cast<TestCord*>(object);
  _this->_impl_.optional_bytes_cord_. ::absl::Cord::~Cord ();
  _this->_impl_.optional_bytes_cord_default_. ::absl::Cord::~Cord ();
}
void TestCord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestCord::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestCord)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_bytes_cord_.Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_cord_default_ = ::absl::string_view("hello", 5);
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestCord::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TestCord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestCord, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestCord_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
    {::_pbi::TcParser::FastBcS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestCord, _impl_.optional_bytes_cord_default_)}},
    // optional bytes optional_bytes_cord = 1 [ctype = CORD];
    {::_pbi::TcParser::FastBcS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestCord, _impl_.optional_bytes_cord_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes optional_bytes_cord = 1 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestCord, _impl_.optional_bytes_cord_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepCord)},
    // optional bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestCord, _impl_.optional_bytes_cord_default_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepCord)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestCord::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestCord)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes optional_bytes_cord = 1 [ctype = CORD];
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytes(1, this->_internal_optional_bytes_cord(), target);
  }

  // optional bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytes(2, this->_internal_optional_bytes_cord_default(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestCord)
  return target;
}

::size_t TestCord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestCord)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes optional_bytes_cord = 1 [ctype = CORD];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->_internal_optional_bytes_cord());
    }

    // optional bytes optional_bytes_cord_default = 2 [default = "hello", ctype = CORD];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->_internal_optional_bytes_cord_default());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestCord::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestCord::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestCord::GetClassData() const { return &_class_data_; }


void TestCord::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestCord*>(&to_msg);
  auto& from = static_cast<const TestCord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestCord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_bytes_cord(from._internal_optional_bytes_cord());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes_cord_default(from._internal_optional_bytes_cord_default());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestCord::CopyFrom(const TestCord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestCord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestCord::IsInitialized() const {
  return true;
}

void TestCord::InternalSwap(TestCord* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.optional_bytes_cord_.swap(other->_impl_.optional_bytes_cord_);
  _impl_.optional_bytes_cord_default_.swap(other->_impl_.optional_bytes_cord_default_);
}

::google::protobuf::Metadata TestCord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[139]);
}
// ===================================================================

class TestPackedEnumSmallRange::_Internal {
 public:
};

TestPackedEnumSmallRange::TestPackedEnumSmallRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedEnumSmallRange)
}
TestPackedEnumSmallRange::TestPackedEnumSmallRange(const TestPackedEnumSmallRange& from) : ::google::protobuf::Message() {
  TestPackedEnumSmallRange* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vals_){from._internal_vals()},
      /*decltype(_impl_._vals_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedEnumSmallRange)
}
inline void TestPackedEnumSmallRange::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.vals_){arena},
      /*decltype(_impl_._vals_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TestPackedEnumSmallRange::~TestPackedEnumSmallRange() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedEnumSmallRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestPackedEnumSmallRange::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_vals()->~RepeatedField();
}
void TestPackedEnumSmallRange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TestPackedEnumSmallRange::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedEnumSmallRange)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_vals()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestPackedEnumSmallRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestPackedEnumSmallRange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestPackedEnumSmallRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
    {::_pbi::TcParser::FastEr0P1,
     {10, 63, 3, PROTOBUF_FIELD_OFFSET(TestPackedEnumSmallRange, _impl_.vals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedEnumSmallRange, _impl_.vals_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
  }}, {{
    {0, 4},
  }}, {{
  }},
};

::uint8_t* TestPackedEnumSmallRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedEnumSmallRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
  {
    int byte_size = _impl_._vals_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_vals(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedEnumSmallRange)
  return target;
}

::size_t TestPackedEnumSmallRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedEnumSmallRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestPackedEnumSmallRange.NestedEnum vals = 1 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_vals_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_vals().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._vals_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestPackedEnumSmallRange::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TestPackedEnumSmallRange::MergeImpl
};
const ::google::protobuf::Message::ClassData*TestPackedEnumSmallRange::GetClassData() const { return &_class_data_; }


void TestPackedEnumSmallRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestPackedEnumSmallRange*>(&to_msg);
  auto& from = static_cast<const TestPackedEnumSmallRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedEnumSmallRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vals()->MergeFrom(from._internal_vals());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPackedEnumSmallRange::CopyFrom(const TestPackedEnumSmallRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedEnumSmallRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPackedEnumSmallRange::IsInitialized() const {
  return true;
}

void TestPackedEnumSmallRange::InternalSwap(TestPackedEnumSmallRange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vals_.InternalSwap(&other->_impl_.vals_);
}

::google::protobuf::Metadata TestPackedEnumSmallRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_2eproto[140]);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* TestService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_2eproto);
  return file_level_service_descriptors_google_2fprotobuf_2funittest_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* TestService::GetDescriptor() {
  return descriptor();
}

void TestService::Foo(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::FooRequest*, ::protobuf_unittest::FooResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Foo() not implemented.");
  done->Run();
}
void TestService::Bar(::google::protobuf::RpcController* controller,
                         const ::protobuf_unittest::BarRequest*, ::protobuf_unittest::BarResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Bar() not implemented.");
  done->Run();
}

void TestService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_google_2fprotobuf_2funittest_2eproto[0]);
  switch (method->index()) {
    case 0:
      Foo(controller,
             ::google::protobuf::internal::DownCast<const ::protobuf_unittest::FooRequest*>(request),
             ::google::protobuf::internal::DownCast<::protobuf_unittest::FooResponse*>(response), done);
      break;
    case 1:
      Bar(controller,
             ::google::protobuf::internal::DownCast<const ::protobuf_unittest::BarRequest*>(request),
             ::google::protobuf::internal::DownCast<::protobuf_unittest::BarResponse*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TestService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::protobuf_unittest::FooRequest::default_instance();
    case 1:
      return ::protobuf_unittest::BarRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TestService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::protobuf_unittest::FooResponse::default_instance();
    case 1:
      return ::protobuf_unittest::BarResponse::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

TestService_Stub::TestService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

TestService_Stub::TestService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

TestService_Stub::~TestService_Stub() {
  if (owns_channel_) delete channel_;
}

void TestService_Stub::Foo(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::FooRequest* request,
                              ::protobuf_unittest::FooResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void TestService_Stub::Bar(::google::protobuf::RpcController* controller,
                              const ::protobuf_unittest::BarRequest* request,
                              ::protobuf_unittest::BarResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestMixedFieldsAndExtensions::kCFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMixedFieldsAndExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestMixedFieldsAndExtensions::c(kCFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestMixedFieldsAndExtensions::kDFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMixedFieldsAndExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, false>
  TestMixedFieldsAndExtensions::d(kDFieldNumber, 0u, nullptr);
const std::string TestNestedExtension_test_default("test");
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestNestedExtension::kTestFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  TestNestedExtension::test(kTestFieldNumber, TestNestedExtension_test_default, nullptr);
const std::string TestNestedExtension_nested_string_extension_default("");
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestNestedExtension::kNestedStringExtensionFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  TestNestedExtension::nested_string_extension(kNestedStringExtensionFieldNumber, TestNestedExtension_nested_string_extension_default, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestNestedExtension::kOptionalgroupExtensionFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestGroupExtension,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestNestedExtension_OptionalGroup_extension >, 10, false>
  TestNestedExtension::optionalgroup_extension(kOptionalgroupExtensionFieldNumber, ::protobuf_unittest::TestNestedExtension_OptionalGroup_extension::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestNestedExtension::kOptionalForeignEnumExtensionFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestGroupExtension,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false>
  TestNestedExtension::optional_foreign_enum_extension(kOptionalForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestRequired::kSingleFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false>
  TestRequired::single(kSingleFieldNumber, ::protobuf_unittest::TestRequired::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestRequired::kMultiFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestRequired >, 11, false>
  TestRequired::multi(kMultiFieldNumber, ::protobuf_unittest::TestRequired::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionOrderings1::kTestExtOrderings1FieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestExtensionOrderings1 >, 11, false>
  TestExtensionOrderings1::test_ext_orderings1(kTestExtOrderings1FieldNumber, ::protobuf_unittest::TestExtensionOrderings1::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionOrderings2_TestExtensionOrderings3::kTestExtOrderings3FieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3 >, 11, false>
  TestExtensionOrderings2_TestExtensionOrderings3::test_ext_orderings3(kTestExtOrderings3FieldNumber, ::protobuf_unittest::TestExtensionOrderings2_TestExtensionOrderings3::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionOrderings2::kTestExtOrderings2FieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestExtensionOrderings2 >, 11, false>
  TestExtensionOrderings2::test_ext_orderings2(kTestExtOrderings2FieldNumber, ::protobuf_unittest::TestExtensionOrderings2::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestParsingMerge::kOptionalExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false>
  TestParsingMerge::optional_ext(kOptionalExtFieldNumber, ::protobuf_unittest::TestAllTypes::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestParsingMerge::kRepeatedExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMerge,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false>
  TestParsingMerge::repeated_ext(kRepeatedExtFieldNumber, ::protobuf_unittest::TestAllTypes::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionRangeSerialize::kBarOneFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionRangeSerialize,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestExtensionRangeSerialize::bar_one(kBarOneFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionRangeSerialize::kBarTwoFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionRangeSerialize,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestExtensionRangeSerialize::bar_two(kBarTwoFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionRangeSerialize::kBarThreeFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionRangeSerialize,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestExtensionRangeSerialize::bar_three(kBarThreeFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionRangeSerialize::kBarFourFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionRangeSerialize,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestExtensionRangeSerialize::bar_four(kBarFourFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestExtensionRangeSerialize::kBarFiveFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionRangeSerialize,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestExtensionRangeSerialize::bar_five(kBarFiveFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int EnumParseTester::kOptionalArbitraryExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::EnumParseTester,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::EnumParseTester_Arbitrary, ::protobuf_unittest::EnumParseTester_Arbitrary_IsValid>, 14, false>
  EnumParseTester::optional_arbitrary_ext(kOptionalArbitraryExtFieldNumber, static_cast< ::protobuf_unittest::EnumParseTester_Arbitrary >(-123123), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int EnumParseTester::kRepeatedArbitraryExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::EnumParseTester,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::EnumParseTester_Arbitrary, ::protobuf_unittest::EnumParseTester_Arbitrary_IsValid>, 14, false>
  EnumParseTester::repeated_arbitrary_ext(kRepeatedArbitraryExtFieldNumber, static_cast< ::protobuf_unittest::EnumParseTester_Arbitrary >(-123123), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int EnumParseTester::kPackedArbitraryExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::EnumParseTester,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::EnumParseTester_Arbitrary, ::protobuf_unittest::EnumParseTester_Arbitrary_IsValid>, 14, true>
  EnumParseTester::packed_arbitrary_ext(kPackedArbitraryExtFieldNumber, static_cast< ::protobuf_unittest::EnumParseTester_Arbitrary >(-123123), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int BoolParseTester::kOptionalBoolExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::BoolParseTester,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  BoolParseTester::optional_bool_ext(kOptionalBoolExtFieldNumber, false, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int BoolParseTester::kRepeatedBoolExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::BoolParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false>
  BoolParseTester::repeated_bool_ext(kRepeatedBoolExtFieldNumber, false, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int BoolParseTester::kPackedBoolExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::BoolParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true>
  BoolParseTester::packed_bool_ext(kPackedBoolExtFieldNumber, false, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int32ParseTester::kOptionalInt32ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int32ParseTester,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  Int32ParseTester::optional_int32_ext(kOptionalInt32ExtFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int32ParseTester::kRepeatedInt32ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int32ParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, false>
  Int32ParseTester::repeated_int32_ext(kRepeatedInt32ExtFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int32ParseTester::kPackedInt32ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int32ParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, true>
  Int32ParseTester::packed_int32_ext(kPackedInt32ExtFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int64ParseTester::kOptionalInt64ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int64ParseTester,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3, false>
  Int64ParseTester::optional_int64_ext(kOptionalInt64ExtFieldNumber, ::int64_t{0}, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int64ParseTester::kRepeatedInt64ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int64ParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, false>
  Int64ParseTester::repeated_int64_ext(kRepeatedInt64ExtFieldNumber, ::int64_t{0}, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int Int64ParseTester::kPackedInt64ExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::Int64ParseTester,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, true>
  Int64ParseTester::packed_int64_ext(kPackedInt64ExtFieldNumber, ::int64_t{0}, nullptr);
const std::string StringParseTester_optional_string_ext_default("");
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int StringParseTester::kOptionalStringExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::StringParseTester,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  StringParseTester::optional_string_ext(kOptionalStringExtFieldNumber, StringParseTester_optional_string_ext_default, nullptr);
const std::string StringParseTester_repeated_string_ext_default("");
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int StringParseTester::kRepeatedStringExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::StringParseTester,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  StringParseTester::repeated_string_ext(kRepeatedStringExtFieldNumber, StringParseTester_repeated_string_ext_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  optional_int32_extension(kOptionalInt32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3, false>
  optional_int64_extension(kOptionalInt64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  optional_uint32_extension(kOptionalUint32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4, false>
  optional_uint64_extension(kOptionalUint64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17, false>
  optional_sint32_extension(kOptionalSint32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18, false>
  optional_sint64_extension(kOptionalSint64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7, false>
  optional_fixed32_extension(kOptionalFixed32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6, false>
  optional_fixed64_extension(kOptionalFixed64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15, false>
  optional_sfixed32_extension(kOptionalSfixed32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16, false>
  optional_sfixed64_extension(kOptionalSfixed64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false>
  optional_float_extension(kOptionalFloatExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false>
  optional_double_extension(kOptionalDoubleExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  optional_bool_extension(kOptionalBoolExtensionFieldNumber, false, nullptr);
const std::string optional_string_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_string_extension(kOptionalStringExtensionFieldNumber, optional_string_extension_default, nullptr);
const std::string optional_bytes_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  optional_bytes_extension(kOptionalBytesExtensionFieldNumber, optional_bytes_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::OptionalGroup_extension >, 10, false>
  optionalgroup_extension(kOptionalgroupExtensionFieldNumber, ::protobuf_unittest::OptionalGroup_extension::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  optional_nested_message_extension(kOptionalNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false>
  optional_foreign_message_extension(kOptionalForeignMessageExtensionFieldNumber, ::protobuf_unittest::ForeignMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false>
  optional_import_message_extension(kOptionalImportMessageExtensionFieldNumber, ::protobuf_unittest_import::ImportMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false>
  optional_nested_enum_extension(kOptionalNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false>
  optional_foreign_enum_extension(kOptionalForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false>
  optional_import_enum_extension(kOptionalImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7), nullptr);
const std::string optional_string_piece_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_string_piece_extension(kOptionalStringPieceExtensionFieldNumber, optional_string_piece_extension_default, nullptr);
const std::string optional_cord_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_cord_extension(kOptionalCordExtensionFieldNumber, optional_cord_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessage >, 11, false>
  optional_public_import_message_extension(kOptionalPublicImportMessageExtensionFieldNumber, ::protobuf_unittest_import::PublicImportMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  optional_lazy_message_extension(kOptionalLazyMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  optional_unverified_lazy_message_extension(kOptionalUnverifiedLazyMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, false>
  repeated_int32_extension(kRepeatedInt32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, false>
  repeated_int64_extension(kRepeatedInt64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13, false>
  repeated_uint32_extension(kRepeatedUint32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4, false>
  repeated_uint64_extension(kRepeatedUint64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17, false>
  repeated_sint32_extension(kRepeatedSint32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18, false>
  repeated_sint64_extension(kRepeatedSint64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, false>
  repeated_fixed32_extension(kRepeatedFixed32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6, false>
  repeated_fixed64_extension(kRepeatedFixed64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15, false>
  repeated_sfixed32_extension(kRepeatedSfixed32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16, false>
  repeated_sfixed64_extension(kRepeatedSfixed64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false>
  repeated_float_extension(kRepeatedFloatExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false>
  repeated_double_extension(kRepeatedDoubleExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false>
  repeated_bool_extension(kRepeatedBoolExtensionFieldNumber, false, nullptr);
const std::string repeated_string_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_string_extension(kRepeatedStringExtensionFieldNumber, repeated_string_extension_default, nullptr);
const std::string repeated_bytes_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 12, false>
  repeated_bytes_extension(kRepeatedBytesExtensionFieldNumber, repeated_bytes_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::RepeatedGroup_extension >, 10, false>
  repeatedgroup_extension(kRepeatedgroupExtensionFieldNumber, ::protobuf_unittest::RepeatedGroup_extension::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  repeated_nested_message_extension(kRepeatedNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::ForeignMessage >, 11, false>
  repeated_foreign_message_extension(kRepeatedForeignMessageExtensionFieldNumber, ::protobuf_unittest::ForeignMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessage >, 11, false>
  repeated_import_message_extension(kRepeatedImportMessageExtensionFieldNumber, ::protobuf_unittest_import::ImportMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false>
  repeated_nested_enum_extension(kRepeatedNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(1), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false>
  repeated_foreign_enum_extension(kRepeatedForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false>
  repeated_import_enum_extension(kRepeatedImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(7), nullptr);
const std::string repeated_string_piece_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_string_piece_extension(kRepeatedStringPieceExtensionFieldNumber, repeated_string_piece_extension_default, nullptr);
const std::string repeated_cord_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_cord_extension(kRepeatedCordExtensionFieldNumber, repeated_cord_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  repeated_lazy_message_extension(kRepeatedLazyMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  default_int32_extension(kDefaultInt32ExtensionFieldNumber, 41, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3, false>
  default_int64_extension(kDefaultInt64ExtensionFieldNumber, ::int64_t{42}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  default_uint32_extension(kDefaultUint32ExtensionFieldNumber, 43u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4, false>
  default_uint64_extension(kDefaultUint64ExtensionFieldNumber, ::uint64_t{44u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17, false>
  default_sint32_extension(kDefaultSint32ExtensionFieldNumber, -45, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18, false>
  default_sint64_extension(kDefaultSint64ExtensionFieldNumber, ::int64_t{46}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7, false>
  default_fixed32_extension(kDefaultFixed32ExtensionFieldNumber, 47u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6, false>
  default_fixed64_extension(kDefaultFixed64ExtensionFieldNumber, ::uint64_t{48u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15, false>
  default_sfixed32_extension(kDefaultSfixed32ExtensionFieldNumber, 49, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16, false>
  default_sfixed64_extension(kDefaultSfixed64ExtensionFieldNumber, ::int64_t{-50}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false>
  default_float_extension(kDefaultFloatExtensionFieldNumber, 51.5f, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false>
  default_double_extension(kDefaultDoubleExtensionFieldNumber, 52000, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  default_bool_extension(kDefaultBoolExtensionFieldNumber, true, nullptr);
const std::string default_string_extension_default("hello");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_string_extension(kDefaultStringExtensionFieldNumber, default_string_extension_default, nullptr);
const std::string default_bytes_extension_default("world");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  default_bytes_extension(kDefaultBytesExtensionFieldNumber, default_bytes_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypes_NestedEnum, ::protobuf_unittest::TestAllTypes_NestedEnum_IsValid>, 14, false>
  default_nested_enum_extension(kDefaultNestedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::TestAllTypes_NestedEnum >(2), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false>
  default_foreign_enum_extension(kDefaultForeignEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(5), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnum, ::protobuf_unittest_import::ImportEnum_IsValid>, 14, false>
  default_import_enum_extension(kDefaultImportEnumExtensionFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnum >(8), nullptr);
const std::string default_string_piece_extension_default("abc");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_string_piece_extension(kDefaultStringPieceExtensionFieldNumber, default_string_piece_extension_default, nullptr);
const std::string default_cord_extension_default("123");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_cord_extension(kDefaultCordExtensionFieldNumber, default_cord_extension_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  oneof_uint32_extension(kOneofUint32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes_NestedMessage >, 11, false>
  oneof_nested_message_extension(kOneofNestedMessageExtensionFieldNumber, ::protobuf_unittest::TestAllTypes_NestedMessage::default_instance(), nullptr);
const std::string oneof_string_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  oneof_string_extension(kOneofStringExtensionFieldNumber, oneof_string_extension_default, nullptr);
const std::string oneof_bytes_extension_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensions,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  oneof_bytes_extension(kOneofBytesExtensionFieldNumber, oneof_bytes_extension_default, nullptr);
const std::string my_extension_string_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  my_extension_string(kMyExtensionStringFieldNumber, my_extension_string_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestFieldOrderings,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  my_extension_int(kMyExtensionIntFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, true>
  packed_int32_extension(kPackedInt32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, true>
  packed_int64_extension(kPackedInt64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13, true>
  packed_uint32_extension(kPackedUint32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4, true>
  packed_uint64_extension(kPackedUint64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17, true>
  packed_sint32_extension(kPackedSint32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18, true>
  packed_sint64_extension(kPackedSint64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, true>
  packed_fixed32_extension(kPackedFixed32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6, true>
  packed_fixed64_extension(kPackedFixed64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15, true>
  packed_sfixed32_extension(kPackedSfixed32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16, true>
  packed_sfixed64_extension(kPackedSfixed64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, true>
  packed_float_extension(kPackedFloatExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, true>
  packed_double_extension(kPackedDoubleExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true>
  packed_bool_extension(kPackedBoolExtensionFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, true>
  packed_enum_extension(kPackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, false>
  unpacked_int32_extension(kUnpackedInt32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, false>
  unpacked_int64_extension(kUnpackedInt64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13, false>
  unpacked_uint32_extension(kUnpackedUint32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4, false>
  unpacked_uint64_extension(kUnpackedUint64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17, false>
  unpacked_sint32_extension(kUnpackedSint32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18, false>
  unpacked_sint64_extension(kUnpackedSint64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, false>
  unpacked_fixed32_extension(kUnpackedFixed32ExtensionFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6, false>
  unpacked_fixed64_extension(kUnpackedFixed64ExtensionFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15, false>
  unpacked_sfixed32_extension(kUnpackedSfixed32ExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16, false>
  unpacked_sfixed64_extension(kUnpackedSfixed64ExtensionFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false>
  unpacked_float_extension(kUnpackedFloatExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false>
  unpacked_double_extension(kUnpackedDoubleExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false>
  unpacked_bool_extension(kUnpackedBoolExtensionFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestUnpackedExtensions,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnum, ::protobuf_unittest::ForeignEnum_IsValid>, 14, false>
  unpacked_enum_extension(kUnpackedEnumExtensionFieldNumber, static_cast< ::protobuf_unittest::ForeignEnum >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestHugeFieldNumbers,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypes >, 11, false>
  test_all_types(kTestAllTypesFieldNumber, ::protobuf_unittest::TestAllTypes::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestExtensionInsideTable,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  test_extension_inside_table_extension(kTestExtensionInsideTableExtensionFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestNestedGroupExtensionOuter_Layer1OptionalGroup_Layer2RepeatedGroup,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestNestedGroupExtensionInnerExtension >, 11, false>
  inner(kInnerFieldNumber, ::protobuf_unittest::TestNestedGroupExtensionInnerExtension::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
