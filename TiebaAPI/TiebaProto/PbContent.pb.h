// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbContent.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_PbContent_2eproto__INCLUDED
#define PROTOBUF_PbContent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_PbContent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPbContentImpl();
void InitDefaultsPbContent();
inline void InitDefaults() {
  InitDefaultsPbContent();
}
}  // namespace protobuf_PbContent_2eproto
class PbContent;
class PbContentDefaultTypeInternal;
extern PbContentDefaultTypeInternal _PbContent_default_instance_;

// ===================================================================

class PbContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbContent) */ {
 public:
  PbContent();
  virtual ~PbContent();

  PbContent(const PbContent& from);

  inline PbContent& operator=(const PbContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbContent(PbContent&& from) noexcept
    : PbContent() {
    *this = ::std::move(from);
  }

  inline PbContent& operator=(PbContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbContent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbContent* internal_default_instance() {
    return reinterpret_cast<const PbContent*>(
               &_PbContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PbContent* other);
  friend void swap(PbContent& a, PbContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbContent* New() const PROTOBUF_FINAL { return New(NULL); }

  PbContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbContent& from);
  void MergeFrom(const PbContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string link = 3;
  void clear_link();
  static const int kLinkFieldNumber = 3;
  const ::std::string& link() const;
  void set_link(const ::std::string& value);
  #if LANG_CXX11
  void set_link(::std::string&& value);
  #endif
  void set_link(const char* value);
  void set_link(const char* value, size_t size);
  ::std::string* mutable_link();
  ::std::string* release_link();
  void set_allocated_link(::std::string* link);

  // string src = 4;
  void clear_src();
  static const int kSrcFieldNumber = 4;
  const ::std::string& src() const;
  void set_src(const ::std::string& value);
  #if LANG_CXX11
  void set_src(::std::string&& value);
  #endif
  void set_src(const char* value);
  void set_src(const char* value, size_t size);
  ::std::string* mutable_src();
  ::std::string* release_src();
  void set_allocated_src(::std::string* src);

  // string bsize = 5;
  void clear_bsize();
  static const int kBsizeFieldNumber = 5;
  const ::std::string& bsize() const;
  void set_bsize(const ::std::string& value);
  #if LANG_CXX11
  void set_bsize(::std::string&& value);
  #endif
  void set_bsize(const char* value);
  void set_bsize(const char* value, size_t size);
  ::std::string* mutable_bsize();
  ::std::string* release_bsize();
  void set_allocated_bsize(::std::string* bsize);

  // string big_src = 6;
  void clear_big_src();
  static const int kBigSrcFieldNumber = 6;
  const ::std::string& big_src() const;
  void set_big_src(const ::std::string& value);
  #if LANG_CXX11
  void set_big_src(::std::string&& value);
  #endif
  void set_big_src(const char* value);
  void set_big_src(const char* value, size_t size);
  ::std::string* mutable_big_src();
  ::std::string* release_big_src();
  void set_allocated_big_src(::std::string* big_src);

  // string big_size = 7;
  void clear_big_size();
  static const int kBigSizeFieldNumber = 7;
  const ::std::string& big_size() const;
  void set_big_size(const ::std::string& value);
  #if LANG_CXX11
  void set_big_size(::std::string&& value);
  #endif
  void set_big_size(const char* value);
  void set_big_size(const char* value, size_t size);
  ::std::string* mutable_big_size();
  ::std::string* release_big_size();
  void set_allocated_big_size(::std::string* big_size);

  // string cdn_src = 8;
  void clear_cdn_src();
  static const int kCdnSrcFieldNumber = 8;
  const ::std::string& cdn_src() const;
  void set_cdn_src(const ::std::string& value);
  #if LANG_CXX11
  void set_cdn_src(::std::string&& value);
  #endif
  void set_cdn_src(const char* value);
  void set_cdn_src(const char* value, size_t size);
  ::std::string* mutable_cdn_src();
  ::std::string* release_cdn_src();
  void set_allocated_cdn_src(::std::string* cdn_src);

  // string big_cdn_src = 9;
  void clear_big_cdn_src();
  static const int kBigCdnSrcFieldNumber = 9;
  const ::std::string& big_cdn_src() const;
  void set_big_cdn_src(const ::std::string& value);
  #if LANG_CXX11
  void set_big_cdn_src(::std::string&& value);
  #endif
  void set_big_cdn_src(const char* value);
  void set_big_cdn_src(const char* value, size_t size);
  ::std::string* mutable_big_cdn_src();
  ::std::string* release_big_cdn_src();
  void set_allocated_big_cdn_src(::std::string* big_cdn_src);

  // string imgtype = 10;
  void clear_imgtype();
  static const int kImgtypeFieldNumber = 10;
  const ::std::string& imgtype() const;
  void set_imgtype(const ::std::string& value);
  #if LANG_CXX11
  void set_imgtype(::std::string&& value);
  #endif
  void set_imgtype(const char* value);
  void set_imgtype(const char* value, size_t size);
  ::std::string* mutable_imgtype();
  ::std::string* release_imgtype();
  void set_allocated_imgtype(::std::string* imgtype);

  // string voice_md5 = 12;
  void clear_voice_md5();
  static const int kVoiceMd5FieldNumber = 12;
  const ::std::string& voice_md5() const;
  void set_voice_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_md5(::std::string&& value);
  #endif
  void set_voice_md5(const char* value);
  void set_voice_md5(const char* value, size_t size);
  ::std::string* mutable_voice_md5();
  ::std::string* release_voice_md5();
  void set_allocated_voice_md5(::std::string* voice_md5);

  // string packet_name = 20;
  void clear_packet_name();
  static const int kPacketNameFieldNumber = 20;
  const ::std::string& packet_name() const;
  void set_packet_name(const ::std::string& value);
  #if LANG_CXX11
  void set_packet_name(::std::string&& value);
  #endif
  void set_packet_name(const char* value);
  void set_packet_name(const char* value, size_t size);
  ::std::string* mutable_packet_name();
  ::std::string* release_packet_name();
  void set_allocated_packet_name(::std::string* packet_name);

  // string phonetype = 21;
  void clear_phonetype();
  static const int kPhonetypeFieldNumber = 21;
  const ::std::string& phonetype() const;
  void set_phonetype(const ::std::string& value);
  #if LANG_CXX11
  void set_phonetype(::std::string&& value);
  #endif
  void set_phonetype(const char* value);
  void set_phonetype(const char* value, size_t size);
  ::std::string* mutable_phonetype();
  ::std::string* release_phonetype();
  void set_allocated_phonetype(::std::string* phonetype);

  // string origin_src = 25;
  void clear_origin_src();
  static const int kOriginSrcFieldNumber = 25;
  const ::std::string& origin_src() const;
  void set_origin_src(const ::std::string& value);
  #if LANG_CXX11
  void set_origin_src(::std::string&& value);
  #endif
  void set_origin_src(const char* value);
  void set_origin_src(const char* value, size_t size);
  ::std::string* mutable_origin_src();
  ::std::string* release_origin_src();
  void set_allocated_origin_src(::std::string* origin_src);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 during_time = 13;
  void clear_during_time();
  static const int kDuringTimeFieldNumber = 13;
  ::google::protobuf::uint32 during_time() const;
  void set_during_time(::google::protobuf::uint32 value);

  // uint32 width = 18;
  void clear_width();
  static const int kWidthFieldNumber = 18;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 19;
  void clear_height();
  static const int kHeightFieldNumber = 19;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 e_type = 24;
  void clear_e_type();
  static const int kETypeFieldNumber = 24;
  ::google::protobuf::uint32 e_type() const;
  void set_e_type(::google::protobuf::uint32 value);

  // uint32 origin_size = 27;
  void clear_origin_size();
  static const int kOriginSizeFieldNumber = 27;
  ::google::protobuf::uint32 origin_size() const;
  void set_origin_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PbContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr link_;
  ::google::protobuf::internal::ArenaStringPtr src_;
  ::google::protobuf::internal::ArenaStringPtr bsize_;
  ::google::protobuf::internal::ArenaStringPtr big_src_;
  ::google::protobuf::internal::ArenaStringPtr big_size_;
  ::google::protobuf::internal::ArenaStringPtr cdn_src_;
  ::google::protobuf::internal::ArenaStringPtr big_cdn_src_;
  ::google::protobuf::internal::ArenaStringPtr imgtype_;
  ::google::protobuf::internal::ArenaStringPtr voice_md5_;
  ::google::protobuf::internal::ArenaStringPtr packet_name_;
  ::google::protobuf::internal::ArenaStringPtr phonetype_;
  ::google::protobuf::internal::ArenaStringPtr origin_src_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 during_time_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 e_type_;
  ::google::protobuf::uint32 origin_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_PbContent_2eproto::TableStruct;
  friend void ::protobuf_PbContent_2eproto::InitDefaultsPbContentImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbContent

// uint32 type = 1;
inline void PbContent::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::type() const {
  // @@protoc_insertion_point(field_get:PbContent.type)
  return type_;
}
inline void PbContent::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PbContent.type)
}

// string text = 2;
inline void PbContent::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::text() const {
  // @@protoc_insertion_point(field_get:PbContent.text)
  return text_.GetNoArena();
}
inline void PbContent::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.text)
}
#if LANG_CXX11
inline void PbContent::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.text)
}
#endif
inline void PbContent::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.text)
}
inline void PbContent::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.text)
}
inline ::std::string* PbContent::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_text() {
  // @@protoc_insertion_point(field_release:PbContent.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:PbContent.text)
}

// string link = 3;
inline void PbContent::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::link() const {
  // @@protoc_insertion_point(field_get:PbContent.link)
  return link_.GetNoArena();
}
inline void PbContent::set_link(const ::std::string& value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.link)
}
#if LANG_CXX11
inline void PbContent::set_link(::std::string&& value) {
  
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.link)
}
#endif
inline void PbContent::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.link)
}
inline void PbContent::set_link(const char* value, size_t size) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.link)
}
inline ::std::string* PbContent::mutable_link() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_link() {
  // @@protoc_insertion_point(field_release:PbContent.link)
  
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    
  } else {
    
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:PbContent.link)
}

// string src = 4;
inline void PbContent::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::src() const {
  // @@protoc_insertion_point(field_get:PbContent.src)
  return src_.GetNoArena();
}
inline void PbContent::set_src(const ::std::string& value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.src)
}
#if LANG_CXX11
inline void PbContent::set_src(::std::string&& value) {
  
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.src)
}
#endif
inline void PbContent::set_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.src)
}
inline void PbContent::set_src(const char* value, size_t size) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.src)
}
inline ::std::string* PbContent::mutable_src() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_src() {
  // @@protoc_insertion_point(field_release:PbContent.src)
  
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    
  } else {
    
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:PbContent.src)
}

// string bsize = 5;
inline void PbContent::clear_bsize() {
  bsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::bsize() const {
  // @@protoc_insertion_point(field_get:PbContent.bsize)
  return bsize_.GetNoArena();
}
inline void PbContent::set_bsize(const ::std::string& value) {
  
  bsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.bsize)
}
#if LANG_CXX11
inline void PbContent::set_bsize(::std::string&& value) {
  
  bsize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.bsize)
}
#endif
inline void PbContent::set_bsize(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.bsize)
}
inline void PbContent::set_bsize(const char* value, size_t size) {
  
  bsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.bsize)
}
inline ::std::string* PbContent::mutable_bsize() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.bsize)
  return bsize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_bsize() {
  // @@protoc_insertion_point(field_release:PbContent.bsize)
  
  return bsize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_bsize(::std::string* bsize) {
  if (bsize != NULL) {
    
  } else {
    
  }
  bsize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bsize);
  // @@protoc_insertion_point(field_set_allocated:PbContent.bsize)
}

// string big_src = 6;
inline void PbContent::clear_big_src() {
  big_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::big_src() const {
  // @@protoc_insertion_point(field_get:PbContent.big_src)
  return big_src_.GetNoArena();
}
inline void PbContent::set_big_src(const ::std::string& value) {
  
  big_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.big_src)
}
#if LANG_CXX11
inline void PbContent::set_big_src(::std::string&& value) {
  
  big_src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.big_src)
}
#endif
inline void PbContent::set_big_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  big_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.big_src)
}
inline void PbContent::set_big_src(const char* value, size_t size) {
  
  big_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.big_src)
}
inline ::std::string* PbContent::mutable_big_src() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.big_src)
  return big_src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_big_src() {
  // @@protoc_insertion_point(field_release:PbContent.big_src)
  
  return big_src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_big_src(::std::string* big_src) {
  if (big_src != NULL) {
    
  } else {
    
  }
  big_src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), big_src);
  // @@protoc_insertion_point(field_set_allocated:PbContent.big_src)
}

// string big_size = 7;
inline void PbContent::clear_big_size() {
  big_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::big_size() const {
  // @@protoc_insertion_point(field_get:PbContent.big_size)
  return big_size_.GetNoArena();
}
inline void PbContent::set_big_size(const ::std::string& value) {
  
  big_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.big_size)
}
#if LANG_CXX11
inline void PbContent::set_big_size(::std::string&& value) {
  
  big_size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.big_size)
}
#endif
inline void PbContent::set_big_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  big_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.big_size)
}
inline void PbContent::set_big_size(const char* value, size_t size) {
  
  big_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.big_size)
}
inline ::std::string* PbContent::mutable_big_size() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.big_size)
  return big_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_big_size() {
  // @@protoc_insertion_point(field_release:PbContent.big_size)
  
  return big_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_big_size(::std::string* big_size) {
  if (big_size != NULL) {
    
  } else {
    
  }
  big_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), big_size);
  // @@protoc_insertion_point(field_set_allocated:PbContent.big_size)
}

// string cdn_src = 8;
inline void PbContent::clear_cdn_src() {
  cdn_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::cdn_src() const {
  // @@protoc_insertion_point(field_get:PbContent.cdn_src)
  return cdn_src_.GetNoArena();
}
inline void PbContent::set_cdn_src(const ::std::string& value) {
  
  cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.cdn_src)
}
#if LANG_CXX11
inline void PbContent::set_cdn_src(::std::string&& value) {
  
  cdn_src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.cdn_src)
}
#endif
inline void PbContent::set_cdn_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.cdn_src)
}
inline void PbContent::set_cdn_src(const char* value, size_t size) {
  
  cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.cdn_src)
}
inline ::std::string* PbContent::mutable_cdn_src() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.cdn_src)
  return cdn_src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_cdn_src() {
  // @@protoc_insertion_point(field_release:PbContent.cdn_src)
  
  return cdn_src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_cdn_src(::std::string* cdn_src) {
  if (cdn_src != NULL) {
    
  } else {
    
  }
  cdn_src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdn_src);
  // @@protoc_insertion_point(field_set_allocated:PbContent.cdn_src)
}

// string big_cdn_src = 9;
inline void PbContent::clear_big_cdn_src() {
  big_cdn_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::big_cdn_src() const {
  // @@protoc_insertion_point(field_get:PbContent.big_cdn_src)
  return big_cdn_src_.GetNoArena();
}
inline void PbContent::set_big_cdn_src(const ::std::string& value) {
  
  big_cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.big_cdn_src)
}
#if LANG_CXX11
inline void PbContent::set_big_cdn_src(::std::string&& value) {
  
  big_cdn_src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.big_cdn_src)
}
#endif
inline void PbContent::set_big_cdn_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  big_cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.big_cdn_src)
}
inline void PbContent::set_big_cdn_src(const char* value, size_t size) {
  
  big_cdn_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.big_cdn_src)
}
inline ::std::string* PbContent::mutable_big_cdn_src() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.big_cdn_src)
  return big_cdn_src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_big_cdn_src() {
  // @@protoc_insertion_point(field_release:PbContent.big_cdn_src)
  
  return big_cdn_src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_big_cdn_src(::std::string* big_cdn_src) {
  if (big_cdn_src != NULL) {
    
  } else {
    
  }
  big_cdn_src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), big_cdn_src);
  // @@protoc_insertion_point(field_set_allocated:PbContent.big_cdn_src)
}

// string imgtype = 10;
inline void PbContent::clear_imgtype() {
  imgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::imgtype() const {
  // @@protoc_insertion_point(field_get:PbContent.imgtype)
  return imgtype_.GetNoArena();
}
inline void PbContent::set_imgtype(const ::std::string& value) {
  
  imgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.imgtype)
}
#if LANG_CXX11
inline void PbContent::set_imgtype(::std::string&& value) {
  
  imgtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.imgtype)
}
#endif
inline void PbContent::set_imgtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.imgtype)
}
inline void PbContent::set_imgtype(const char* value, size_t size) {
  
  imgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.imgtype)
}
inline ::std::string* PbContent::mutable_imgtype() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.imgtype)
  return imgtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_imgtype() {
  // @@protoc_insertion_point(field_release:PbContent.imgtype)
  
  return imgtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_imgtype(::std::string* imgtype) {
  if (imgtype != NULL) {
    
  } else {
    
  }
  imgtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgtype);
  // @@protoc_insertion_point(field_set_allocated:PbContent.imgtype)
}

// string voice_md5 = 12;
inline void PbContent::clear_voice_md5() {
  voice_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::voice_md5() const {
  // @@protoc_insertion_point(field_get:PbContent.voice_md5)
  return voice_md5_.GetNoArena();
}
inline void PbContent::set_voice_md5(const ::std::string& value) {
  
  voice_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.voice_md5)
}
#if LANG_CXX11
inline void PbContent::set_voice_md5(::std::string&& value) {
  
  voice_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.voice_md5)
}
#endif
inline void PbContent::set_voice_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  voice_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.voice_md5)
}
inline void PbContent::set_voice_md5(const char* value, size_t size) {
  
  voice_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.voice_md5)
}
inline ::std::string* PbContent::mutable_voice_md5() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.voice_md5)
  return voice_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_voice_md5() {
  // @@protoc_insertion_point(field_release:PbContent.voice_md5)
  
  return voice_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_voice_md5(::std::string* voice_md5) {
  if (voice_md5 != NULL) {
    
  } else {
    
  }
  voice_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_md5);
  // @@protoc_insertion_point(field_set_allocated:PbContent.voice_md5)
}

// uint32 during_time = 13;
inline void PbContent::clear_during_time() {
  during_time_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::during_time() const {
  // @@protoc_insertion_point(field_get:PbContent.during_time)
  return during_time_;
}
inline void PbContent::set_during_time(::google::protobuf::uint32 value) {
  
  during_time_ = value;
  // @@protoc_insertion_point(field_set:PbContent.during_time)
}

// uint32 width = 18;
inline void PbContent::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::width() const {
  // @@protoc_insertion_point(field_get:PbContent.width)
  return width_;
}
inline void PbContent::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:PbContent.width)
}

// uint32 height = 19;
inline void PbContent::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::height() const {
  // @@protoc_insertion_point(field_get:PbContent.height)
  return height_;
}
inline void PbContent::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:PbContent.height)
}

// string packet_name = 20;
inline void PbContent::clear_packet_name() {
  packet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::packet_name() const {
  // @@protoc_insertion_point(field_get:PbContent.packet_name)
  return packet_name_.GetNoArena();
}
inline void PbContent::set_packet_name(const ::std::string& value) {
  
  packet_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.packet_name)
}
#if LANG_CXX11
inline void PbContent::set_packet_name(::std::string&& value) {
  
  packet_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.packet_name)
}
#endif
inline void PbContent::set_packet_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packet_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.packet_name)
}
inline void PbContent::set_packet_name(const char* value, size_t size) {
  
  packet_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.packet_name)
}
inline ::std::string* PbContent::mutable_packet_name() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.packet_name)
  return packet_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_packet_name() {
  // @@protoc_insertion_point(field_release:PbContent.packet_name)
  
  return packet_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_packet_name(::std::string* packet_name) {
  if (packet_name != NULL) {
    
  } else {
    
  }
  packet_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packet_name);
  // @@protoc_insertion_point(field_set_allocated:PbContent.packet_name)
}

// string phonetype = 21;
inline void PbContent::clear_phonetype() {
  phonetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::phonetype() const {
  // @@protoc_insertion_point(field_get:PbContent.phonetype)
  return phonetype_.GetNoArena();
}
inline void PbContent::set_phonetype(const ::std::string& value) {
  
  phonetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.phonetype)
}
#if LANG_CXX11
inline void PbContent::set_phonetype(::std::string&& value) {
  
  phonetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.phonetype)
}
#endif
inline void PbContent::set_phonetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phonetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.phonetype)
}
inline void PbContent::set_phonetype(const char* value, size_t size) {
  
  phonetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.phonetype)
}
inline ::std::string* PbContent::mutable_phonetype() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.phonetype)
  return phonetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_phonetype() {
  // @@protoc_insertion_point(field_release:PbContent.phonetype)
  
  return phonetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_phonetype(::std::string* phonetype) {
  if (phonetype != NULL) {
    
  } else {
    
  }
  phonetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonetype);
  // @@protoc_insertion_point(field_set_allocated:PbContent.phonetype)
}

// uint32 e_type = 24;
inline void PbContent::clear_e_type() {
  e_type_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::e_type() const {
  // @@protoc_insertion_point(field_get:PbContent.e_type)
  return e_type_;
}
inline void PbContent::set_e_type(::google::protobuf::uint32 value) {
  
  e_type_ = value;
  // @@protoc_insertion_point(field_set:PbContent.e_type)
}

// string origin_src = 25;
inline void PbContent::clear_origin_src() {
  origin_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbContent::origin_src() const {
  // @@protoc_insertion_point(field_get:PbContent.origin_src)
  return origin_src_.GetNoArena();
}
inline void PbContent::set_origin_src(const ::std::string& value) {
  
  origin_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbContent.origin_src)
}
#if LANG_CXX11
inline void PbContent::set_origin_src(::std::string&& value) {
  
  origin_src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbContent.origin_src)
}
#endif
inline void PbContent::set_origin_src(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  origin_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbContent.origin_src)
}
inline void PbContent::set_origin_src(const char* value, size_t size) {
  
  origin_src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbContent.origin_src)
}
inline ::std::string* PbContent::mutable_origin_src() {
  
  // @@protoc_insertion_point(field_mutable:PbContent.origin_src)
  return origin_src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbContent::release_origin_src() {
  // @@protoc_insertion_point(field_release:PbContent.origin_src)
  
  return origin_src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbContent::set_allocated_origin_src(::std::string* origin_src) {
  if (origin_src != NULL) {
    
  } else {
    
  }
  origin_src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin_src);
  // @@protoc_insertion_point(field_set_allocated:PbContent.origin_src)
}

// uint32 origin_size = 27;
inline void PbContent::clear_origin_size() {
  origin_size_ = 0u;
}
inline ::google::protobuf::uint32 PbContent::origin_size() const {
  // @@protoc_insertion_point(field_get:PbContent.origin_size)
  return origin_size_;
}
inline void PbContent::set_origin_size(::google::protobuf::uint32 value) {
  
  origin_size_ = value;
  // @@protoc_insertion_point(field_set:PbContent.origin_size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PbContent_2eproto__INCLUDED
