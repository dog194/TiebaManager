// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrsPageReqIdl.proto

#include "FrsPageReqIdl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class FrsPageReqIdl_DataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrsPageReqIdl_DataReq>
      _instance;
} _FrsPageReqIdl_DataReq_default_instance_;
class FrsPageReqIdlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrsPageReqIdl>
      _instance;
} _FrsPageReqIdl_default_instance_;
namespace protobuf_FrsPageReqIdl_2eproto {
void InitDefaultsFrsPageReqIdl_DataReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CommonReq_2eproto::InitDefaultsCommonReq();
  {
    void* ptr = &::_FrsPageReqIdl_DataReq_default_instance_;
    new (ptr) ::FrsPageReqIdl_DataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FrsPageReqIdl_DataReq::InitAsDefaultInstance();
}

void InitDefaultsFrsPageReqIdl_DataReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFrsPageReqIdl_DataReqImpl);
}

void InitDefaultsFrsPageReqIdlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_FrsPageReqIdl_2eproto::InitDefaultsFrsPageReqIdl_DataReq();
  {
    void* ptr = &::_FrsPageReqIdl_default_instance_;
    new (ptr) ::FrsPageReqIdl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FrsPageReqIdl::InitAsDefaultInstance();
}

void InitDefaultsFrsPageReqIdl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFrsPageReqIdlImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, kw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, pn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, rn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, rn_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, is_good_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, q_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, sort_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl_DataReq, with_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrsPageReqIdl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FrsPageReqIdl_DataReq)},
  { 15, -1, sizeof(::FrsPageReqIdl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FrsPageReqIdl_DataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FrsPageReqIdl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "FrsPageReqIdl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023FrsPageReqIdl.proto\032\017CommonReq.proto\"\347"
      "\001\n\rFrsPageReqIdl\022$\n\004data\030\001 \001(\0132\026.FrsPage"
      "ReqIdl.DataReq\032\257\001\n\007DataReq\022\032\n\006common\030\' \001"
      "(\0132\n.CommonReq\022\n\n\002kw\030\001 \001(\t\022\n\n\002pn\030\017 \001(\005\022\n"
      "\n\002rn\030\002 \001(\005\022\017\n\007rn_need\030\003 \001(\005\022\013\n\003cid\030\005 \001(\005"
      "\022\017\n\007is_good\030\004 \001(\005\022\016\n\006q_type\030\016 \001(\005\022\021\n\tsor"
      "t_type\030/ \001(\005\022\022\n\nwith_group\030\010 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 280);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrsPageReqIdl.proto", &protobuf_RegisterTypes);
  ::protobuf_CommonReq_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrsPageReqIdl_2eproto

// ===================================================================

void FrsPageReqIdl_DataReq::InitAsDefaultInstance() {
  ::_FrsPageReqIdl_DataReq_default_instance_._instance.get_mutable()->common_ = const_cast< ::CommonReq*>(
      ::CommonReq::internal_default_instance());
}
void FrsPageReqIdl_DataReq::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrsPageReqIdl_DataReq::kCommonFieldNumber;
const int FrsPageReqIdl_DataReq::kKwFieldNumber;
const int FrsPageReqIdl_DataReq::kPnFieldNumber;
const int FrsPageReqIdl_DataReq::kRnFieldNumber;
const int FrsPageReqIdl_DataReq::kRnNeedFieldNumber;
const int FrsPageReqIdl_DataReq::kCidFieldNumber;
const int FrsPageReqIdl_DataReq::kIsGoodFieldNumber;
const int FrsPageReqIdl_DataReq::kQTypeFieldNumber;
const int FrsPageReqIdl_DataReq::kSortTypeFieldNumber;
const int FrsPageReqIdl_DataReq::kWithGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrsPageReqIdl_DataReq::FrsPageReqIdl_DataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FrsPageReqIdl_2eproto::InitDefaultsFrsPageReqIdl_DataReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrsPageReqIdl.DataReq)
}
FrsPageReqIdl_DataReq::FrsPageReqIdl_DataReq(const FrsPageReqIdl_DataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kw().size() > 0) {
    kw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kw_);
  }
  if (from.has_common()) {
    common_ = new ::CommonReq(*from.common_);
  } else {
    common_ = NULL;
  }
  ::memcpy(&rn_, &from.rn_,
    static_cast<size_t>(reinterpret_cast<char*>(&sort_type_) -
    reinterpret_cast<char*>(&rn_)) + sizeof(sort_type_));
  // @@protoc_insertion_point(copy_constructor:FrsPageReqIdl.DataReq)
}

void FrsPageReqIdl_DataReq::SharedCtor() {
  kw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_type_) -
      reinterpret_cast<char*>(&common_)) + sizeof(sort_type_));
  _cached_size_ = 0;
}

FrsPageReqIdl_DataReq::~FrsPageReqIdl_DataReq() {
  // @@protoc_insertion_point(destructor:FrsPageReqIdl.DataReq)
  SharedDtor();
}

void FrsPageReqIdl_DataReq::SharedDtor() {
  kw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
}

void FrsPageReqIdl_DataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrsPageReqIdl_DataReq::descriptor() {
  ::protobuf_FrsPageReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrsPageReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrsPageReqIdl_DataReq& FrsPageReqIdl_DataReq::default_instance() {
  ::protobuf_FrsPageReqIdl_2eproto::InitDefaultsFrsPageReqIdl_DataReq();
  return *internal_default_instance();
}

FrsPageReqIdl_DataReq* FrsPageReqIdl_DataReq::New(::google::protobuf::Arena* arena) const {
  FrsPageReqIdl_DataReq* n = new FrsPageReqIdl_DataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrsPageReqIdl_DataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  ::memset(&rn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_type_) -
      reinterpret_cast<char*>(&rn_)) + sizeof(sort_type_));
  _internal_metadata_.Clear();
}

bool FrsPageReqIdl_DataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrsPageReqIdl.DataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kw()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kw().data(), static_cast<int>(this->kw().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FrsPageReqIdl.DataReq.kw"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rn_need = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rn_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_good = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_good_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 with_group = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &with_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 q_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &q_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pn = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CommonReq common = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sort_type = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrsPageReqIdl.DataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrsPageReqIdl.DataReq)
  return false;
#undef DO_
}

void FrsPageReqIdl_DataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrsPageReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kw = 1;
  if (this->kw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kw().data(), static_cast<int>(this->kw().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FrsPageReqIdl.DataReq.kw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kw(), output);
  }

  // int32 rn = 2;
  if (this->rn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rn(), output);
  }

  // int32 rn_need = 3;
  if (this->rn_need() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rn_need(), output);
  }

  // int32 is_good = 4;
  if (this->is_good() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_good(), output);
  }

  // int32 cid = 5;
  if (this->cid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cid(), output);
  }

  // int32 with_group = 8;
  if (this->with_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->with_group(), output);
  }

  // int32 q_type = 14;
  if (this->q_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->q_type(), output);
  }

  // int32 pn = 15;
  if (this->pn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->pn(), output);
  }

  // .CommonReq common = 39;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *this->common_, output);
  }

  // int32 sort_type = 47;
  if (this->sort_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->sort_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FrsPageReqIdl.DataReq)
}

::google::protobuf::uint8* FrsPageReqIdl_DataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kw = 1;
  if (this->kw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kw().data(), static_cast<int>(this->kw().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FrsPageReqIdl.DataReq.kw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kw(), target);
  }

  // int32 rn = 2;
  if (this->rn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rn(), target);
  }

  // int32 rn_need = 3;
  if (this->rn_need() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rn_need(), target);
  }

  // int32 is_good = 4;
  if (this->is_good() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_good(), target);
  }

  // int32 cid = 5;
  if (this->cid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cid(), target);
  }

  // int32 with_group = 8;
  if (this->with_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->with_group(), target);
  }

  // int32 q_type = 14;
  if (this->q_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->q_type(), target);
  }

  // int32 pn = 15;
  if (this->pn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->pn(), target);
  }

  // .CommonReq common = 39;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, *this->common_, deterministic, target);
  }

  // int32 sort_type = 47;
  if (this->sort_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->sort_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageReqIdl.DataReq)
  return target;
}

size_t FrsPageReqIdl_DataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageReqIdl.DataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string kw = 1;
  if (this->kw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kw());
  }

  // .CommonReq common = 39;
  if (this->has_common()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->common_);
  }

  // int32 rn = 2;
  if (this->rn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rn());
  }

  // int32 rn_need = 3;
  if (this->rn_need() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rn_need());
  }

  // int32 is_good = 4;
  if (this->is_good() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_good());
  }

  // int32 cid = 5;
  if (this->cid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cid());
  }

  // int32 with_group = 8;
  if (this->with_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->with_group());
  }

  // int32 q_type = 14;
  if (this->q_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->q_type());
  }

  // int32 pn = 15;
  if (this->pn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pn());
  }

  // int32 sort_type = 47;
  if (this->sort_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sort_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrsPageReqIdl_DataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrsPageReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FrsPageReqIdl_DataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrsPageReqIdl_DataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrsPageReqIdl.DataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrsPageReqIdl.DataReq)
    MergeFrom(*source);
  }
}

void FrsPageReqIdl_DataReq::MergeFrom(const FrsPageReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrsPageReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kw().size() > 0) {

    kw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kw_);
  }
  if (from.has_common()) {
    mutable_common()->::CommonReq::MergeFrom(from.common());
  }
  if (from.rn() != 0) {
    set_rn(from.rn());
  }
  if (from.rn_need() != 0) {
    set_rn_need(from.rn_need());
  }
  if (from.is_good() != 0) {
    set_is_good(from.is_good());
  }
  if (from.cid() != 0) {
    set_cid(from.cid());
  }
  if (from.with_group() != 0) {
    set_with_group(from.with_group());
  }
  if (from.q_type() != 0) {
    set_q_type(from.q_type());
  }
  if (from.pn() != 0) {
    set_pn(from.pn());
  }
  if (from.sort_type() != 0) {
    set_sort_type(from.sort_type());
  }
}

void FrsPageReqIdl_DataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrsPageReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrsPageReqIdl_DataReq::CopyFrom(const FrsPageReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrsPageReqIdl_DataReq::IsInitialized() const {
  return true;
}

void FrsPageReqIdl_DataReq::Swap(FrsPageReqIdl_DataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrsPageReqIdl_DataReq::InternalSwap(FrsPageReqIdl_DataReq* other) {
  using std::swap;
  kw_.Swap(&other->kw_);
  swap(common_, other->common_);
  swap(rn_, other->rn_);
  swap(rn_need_, other->rn_need_);
  swap(is_good_, other->is_good_);
  swap(cid_, other->cid_);
  swap(with_group_, other->with_group_);
  swap(q_type_, other->q_type_);
  swap(pn_, other->pn_);
  swap(sort_type_, other->sort_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrsPageReqIdl_DataReq::GetMetadata() const {
  protobuf_FrsPageReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrsPageReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrsPageReqIdl::InitAsDefaultInstance() {
  ::_FrsPageReqIdl_default_instance_._instance.get_mutable()->data_ = const_cast< ::FrsPageReqIdl_DataReq*>(
      ::FrsPageReqIdl_DataReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrsPageReqIdl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrsPageReqIdl::FrsPageReqIdl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FrsPageReqIdl_2eproto::InitDefaultsFrsPageReqIdl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrsPageReqIdl)
}
FrsPageReqIdl::FrsPageReqIdl(const FrsPageReqIdl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::FrsPageReqIdl_DataReq(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FrsPageReqIdl)
}

void FrsPageReqIdl::SharedCtor() {
  data_ = NULL;
  _cached_size_ = 0;
}

FrsPageReqIdl::~FrsPageReqIdl() {
  // @@protoc_insertion_point(destructor:FrsPageReqIdl)
  SharedDtor();
}

void FrsPageReqIdl::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void FrsPageReqIdl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrsPageReqIdl::descriptor() {
  ::protobuf_FrsPageReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrsPageReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrsPageReqIdl& FrsPageReqIdl::default_instance() {
  ::protobuf_FrsPageReqIdl_2eproto::InitDefaultsFrsPageReqIdl();
  return *internal_default_instance();
}

FrsPageReqIdl* FrsPageReqIdl::New(::google::protobuf::Arena* arena) const {
  FrsPageReqIdl* n = new FrsPageReqIdl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrsPageReqIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool FrsPageReqIdl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrsPageReqIdl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .FrsPageReqIdl.DataReq data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrsPageReqIdl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrsPageReqIdl)
  return false;
#undef DO_
}

void FrsPageReqIdl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrsPageReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FrsPageReqIdl.DataReq data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FrsPageReqIdl)
}

::google::protobuf::uint8* FrsPageReqIdl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FrsPageReqIdl.DataReq data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageReqIdl)
  return target;
}

size_t FrsPageReqIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageReqIdl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FrsPageReqIdl.DataReq data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrsPageReqIdl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrsPageReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  const FrsPageReqIdl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrsPageReqIdl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrsPageReqIdl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrsPageReqIdl)
    MergeFrom(*source);
  }
}

void FrsPageReqIdl::MergeFrom(const FrsPageReqIdl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrsPageReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::FrsPageReqIdl_DataReq::MergeFrom(from.data());
  }
}

void FrsPageReqIdl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrsPageReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrsPageReqIdl::CopyFrom(const FrsPageReqIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrsPageReqIdl::IsInitialized() const {
  return true;
}

void FrsPageReqIdl::Swap(FrsPageReqIdl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrsPageReqIdl::InternalSwap(FrsPageReqIdl* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrsPageReqIdl::GetMetadata() const {
  protobuf_FrsPageReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrsPageReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
