// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PluginUser.proto

#include "PluginUser.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR PluginUser::PluginUser(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.user_name_show_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_photo_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.user_id_)*/ ::int64_t{0},
      /*decltype(_impl_.user_type_)*/ 0,
      /*decltype(_impl_.is_download_card_whiteuser_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PluginUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginUserDefaultTypeInternal() {}
  union {
    PluginUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginUserDefaultTypeInternal _PluginUser_default_instance_;
static ::_pb::Metadata file_level_metadata_PluginUser_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_PluginUser_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_PluginUser_2eproto = nullptr;
const ::uint32_t TableStruct_PluginUser_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PluginUser, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PluginUser, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::PluginUser, _impl_.user_name_show_),
    PROTOBUF_FIELD_OFFSET(::PluginUser, _impl_.user_type_),
    PROTOBUF_FIELD_OFFSET(::PluginUser, _impl_.user_photo_),
    PROTOBUF_FIELD_OFFSET(::PluginUser, _impl_.is_download_card_whiteuser_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::PluginUser)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_PluginUser_default_instance_._instance,
};
const char descriptor_table_protodef_PluginUser_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020PluginUser.proto\"\200\001\n\nPluginUser\022\017\n\007use"
    "r_id\030\001 \001(\003\022\026\n\016user_name_show\030\002 \001(\t\022\021\n\tus"
    "er_type\030\003 \001(\005\022\022\n\nuser_photo\030\004 \001(\t\022\"\n\032is_"
    "download_card_whiteuser\030\005 \001(\005b\006proto3"
};
static ::absl::once_flag descriptor_table_PluginUser_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PluginUser_2eproto = {
    false,
    false,
    157,
    descriptor_table_protodef_PluginUser_2eproto,
    "PluginUser.proto",
    &descriptor_table_PluginUser_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_PluginUser_2eproto::offsets,
    file_level_metadata_PluginUser_2eproto,
    file_level_enum_descriptors_PluginUser_2eproto,
    file_level_service_descriptors_PluginUser_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PluginUser_2eproto_getter() {
  return &descriptor_table_PluginUser_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_PluginUser_2eproto(&descriptor_table_PluginUser_2eproto);
// ===================================================================

class PluginUser::_Internal {
 public:
};

PluginUser::PluginUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginUser)
}
PluginUser::PluginUser(const PluginUser& from) : ::google::protobuf::Message() {
  PluginUser* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_name_show_){},
      decltype(_impl_.user_photo_){},
      decltype(_impl_.user_id_){},
      decltype(_impl_.user_type_){},
      decltype(_impl_.is_download_card_whiteuser_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.user_name_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_name_show_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_name_show().empty()) {
    _this->_impl_.user_name_show_.Set(from._internal_user_name_show(), _this->GetArenaForAllocation());
  }
  _impl_.user_photo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_photo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_photo().empty()) {
    _this->_impl_.user_photo_.Set(from._internal_user_photo(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.user_id_, &from._impl_.user_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.is_download_card_whiteuser_) -
    reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.is_download_card_whiteuser_));

  // @@protoc_insertion_point(copy_constructor:PluginUser)
}
inline void PluginUser::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_name_show_){},
      decltype(_impl_.user_photo_){},
      decltype(_impl_.user_id_){::int64_t{0}},
      decltype(_impl_.user_type_){0},
      decltype(_impl_.is_download_card_whiteuser_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.user_name_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_name_show_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_photo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_photo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PluginUser::~PluginUser() {
  // @@protoc_insertion_point(destructor:PluginUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PluginUser::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_name_show_.Destroy();
  _impl_.user_photo_.Destroy();
}
void PluginUser::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PluginUser::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginUser)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_name_show_.ClearToEmpty();
  _impl_.user_photo_.ClearToEmpty();
  ::memset(&_impl_.user_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_download_card_whiteuser_) -
      reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.is_download_card_whiteuser_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PluginUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 43, 2> PluginUser::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PluginUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 user_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PluginUser, _impl_.user_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_id_)}},
    // string user_name_show = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_name_show_)}},
    // int32 user_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PluginUser, _impl_.user_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_type_)}},
    // string user_photo = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_photo_)}},
    // int32 is_download_card_whiteuser = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PluginUser, _impl_.is_download_card_whiteuser_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.is_download_card_whiteuser_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 user_id = 1;
    {PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string user_name_show = 2;
    {PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_name_show_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 user_type = 3;
    {PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string user_photo = 4;
    {PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_photo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 is_download_card_whiteuser = 5;
    {PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.is_download_card_whiteuser_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\12\0\16\0\12\0\0\0"
    "PluginUser"
    "user_name_show"
    "user_photo"
  }},
};

::uint8_t* PluginUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_user_id(), target);
  }

  // string user_name_show = 2;
  if (!this->_internal_user_name_show().empty()) {
    const std::string& _s = this->_internal_user_name_show();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PluginUser.user_name_show");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 user_type = 3;
  if (this->_internal_user_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_user_type(), target);
  }

  // string user_photo = 4;
  if (!this->_internal_user_photo().empty()) {
    const std::string& _s = this->_internal_user_photo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PluginUser.user_photo");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 is_download_card_whiteuser = 5;
  if (this->_internal_is_download_card_whiteuser() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_is_download_card_whiteuser(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginUser)
  return target;
}

::size_t PluginUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_name_show = 2;
  if (!this->_internal_user_name_show().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_name_show());
  }

  // string user_photo = 4;
  if (!this->_internal_user_photo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_photo());
  }

  // int64 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_user_id());
  }

  // int32 user_type = 3;
  if (this->_internal_user_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_user_type());
  }

  // int32 is_download_card_whiteuser = 5;
  if (this->_internal_is_download_card_whiteuser() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_is_download_card_whiteuser());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PluginUser::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PluginUser::MergeImpl
};
const ::google::protobuf::Message::ClassData*PluginUser::GetClassData() const { return &_class_data_; }


void PluginUser::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PluginUser*>(&to_msg);
  auto& from = static_cast<const PluginUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PluginUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_name_show().empty()) {
    _this->_internal_set_user_name_show(from._internal_user_name_show());
  }
  if (!from._internal_user_photo().empty()) {
    _this->_internal_set_user_photo(from._internal_user_photo());
  }
  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_user_type() != 0) {
    _this->_internal_set_user_type(from._internal_user_type());
  }
  if (from._internal_is_download_card_whiteuser() != 0) {
    _this->_internal_set_is_download_card_whiteuser(from._internal_is_download_card_whiteuser());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginUser::CopyFrom(const PluginUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginUser::IsInitialized() const {
  return true;
}

void PluginUser::InternalSwap(PluginUser* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_show_, lhs_arena,
                                       &other->_impl_.user_name_show_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_photo_, lhs_arena,
                                       &other->_impl_.user_photo_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.is_download_card_whiteuser_)
      + sizeof(PluginUser::_impl_.is_download_card_whiteuser_)
      - PROTOBUF_FIELD_OFFSET(PluginUser, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::google::protobuf::Metadata PluginUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PluginUser_2eproto_getter, &descriptor_table_PluginUser_2eproto_once,
      file_level_metadata_PluginUser_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
