// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbPageResIdl.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_PbPageResIdl_2eproto__INCLUDED
#define PROTOBUF_PbPageResIdl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SimpleForum.pb.h"
#include "Page.pb.h"
#include "Post.pb.h"
#include "ThreadInfo.pb.h"
#include "User.pb.h"
#include "Error.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_PbPageResIdl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPbPageResIdl_DataResImpl();
void InitDefaultsPbPageResIdl_DataRes();
void InitDefaultsPbPageResIdlImpl();
void InitDefaultsPbPageResIdl();
inline void InitDefaults() {
  InitDefaultsPbPageResIdl_DataRes();
  InitDefaultsPbPageResIdl();
}
}  // namespace protobuf_PbPageResIdl_2eproto
class PbPageResIdl;
class PbPageResIdlDefaultTypeInternal;
extern PbPageResIdlDefaultTypeInternal _PbPageResIdl_default_instance_;
class PbPageResIdl_DataRes;
class PbPageResIdl_DataResDefaultTypeInternal;
extern PbPageResIdl_DataResDefaultTypeInternal _PbPageResIdl_DataRes_default_instance_;

// ===================================================================

class PbPageResIdl_DataRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbPageResIdl.DataRes) */ {
 public:
  PbPageResIdl_DataRes();
  virtual ~PbPageResIdl_DataRes();

  PbPageResIdl_DataRes(const PbPageResIdl_DataRes& from);

  inline PbPageResIdl_DataRes& operator=(const PbPageResIdl_DataRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbPageResIdl_DataRes(PbPageResIdl_DataRes&& from) noexcept
    : PbPageResIdl_DataRes() {
    *this = ::std::move(from);
  }

  inline PbPageResIdl_DataRes& operator=(PbPageResIdl_DataRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPageResIdl_DataRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbPageResIdl_DataRes* internal_default_instance() {
    return reinterpret_cast<const PbPageResIdl_DataRes*>(
               &_PbPageResIdl_DataRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PbPageResIdl_DataRes* other);
  friend void swap(PbPageResIdl_DataRes& a, PbPageResIdl_DataRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbPageResIdl_DataRes* New() const PROTOBUF_FINAL { return New(NULL); }

  PbPageResIdl_DataRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbPageResIdl_DataRes& from);
  void MergeFrom(const PbPageResIdl_DataRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbPageResIdl_DataRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Post post_list = 6;
  int post_list_size() const;
  void clear_post_list();
  static const int kPostListFieldNumber = 6;
  const ::Post& post_list(int index) const;
  ::Post* mutable_post_list(int index);
  ::Post* add_post_list();
  ::google::protobuf::RepeatedPtrField< ::Post >*
      mutable_post_list();
  const ::google::protobuf::RepeatedPtrField< ::Post >&
      post_list() const;

  // repeated .User user_list = 13;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 13;
  const ::User& user_list(int index) const;
  ::User* mutable_user_list(int index);
  ::User* add_user_list();
  ::google::protobuf::RepeatedPtrField< ::User >*
      mutable_user_list();
  const ::google::protobuf::RepeatedPtrField< ::User >&
      user_list() const;

  // .SimpleForum forum = 2;
  bool has_forum() const;
  void clear_forum();
  static const int kForumFieldNumber = 2;
  const ::SimpleForum& forum() const;
  ::SimpleForum* release_forum();
  ::SimpleForum* mutable_forum();
  void set_allocated_forum(::SimpleForum* forum);

  // .Page page = 3;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 3;
  const ::Page& page() const;
  ::Page* release_page();
  ::Page* mutable_page();
  void set_allocated_page(::Page* page);

  // .ThreadInfo thread = 8;
  bool has_thread() const;
  void clear_thread();
  static const int kThreadFieldNumber = 8;
  const ::ThreadInfo& thread() const;
  ::ThreadInfo* release_thread();
  ::ThreadInfo* mutable_thread();
  void set_allocated_thread(::ThreadInfo* thread);

  // @@protoc_insertion_point(class_scope:PbPageResIdl.DataRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Post > post_list_;
  ::google::protobuf::RepeatedPtrField< ::User > user_list_;
  ::SimpleForum* forum_;
  ::Page* page_;
  ::ThreadInfo* thread_;
  mutable int _cached_size_;
  friend struct ::protobuf_PbPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl_DataResImpl();
};
// -------------------------------------------------------------------

class PbPageResIdl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PbPageResIdl) */ {
 public:
  PbPageResIdl();
  virtual ~PbPageResIdl();

  PbPageResIdl(const PbPageResIdl& from);

  inline PbPageResIdl& operator=(const PbPageResIdl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbPageResIdl(PbPageResIdl&& from) noexcept
    : PbPageResIdl() {
    *this = ::std::move(from);
  }

  inline PbPageResIdl& operator=(PbPageResIdl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPageResIdl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbPageResIdl* internal_default_instance() {
    return reinterpret_cast<const PbPageResIdl*>(
               &_PbPageResIdl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PbPageResIdl* other);
  friend void swap(PbPageResIdl& a, PbPageResIdl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbPageResIdl* New() const PROTOBUF_FINAL { return New(NULL); }

  PbPageResIdl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PbPageResIdl& from);
  void MergeFrom(const PbPageResIdl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PbPageResIdl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PbPageResIdl_DataRes DataRes;

  // accessors -------------------------------------------------------

  // .Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::Error& error() const;
  ::Error* release_error();
  ::Error* mutable_error();
  void set_allocated_error(::Error* error);

  // .PbPageResIdl.DataRes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::PbPageResIdl_DataRes& data() const;
  ::PbPageResIdl_DataRes* release_data();
  ::PbPageResIdl_DataRes* mutable_data();
  void set_allocated_data(::PbPageResIdl_DataRes* data);

  // @@protoc_insertion_point(class_scope:PbPageResIdl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Error* error_;
  ::PbPageResIdl_DataRes* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_PbPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbPageResIdl_DataRes

// .SimpleForum forum = 2;
inline bool PbPageResIdl_DataRes::has_forum() const {
  return this != internal_default_instance() && forum_ != NULL;
}
inline const ::SimpleForum& PbPageResIdl_DataRes::forum() const {
  const ::SimpleForum* p = forum_;
  // @@protoc_insertion_point(field_get:PbPageResIdl.DataRes.forum)
  return p != NULL ? *p : *reinterpret_cast<const ::SimpleForum*>(
      &::_SimpleForum_default_instance_);
}
inline ::SimpleForum* PbPageResIdl_DataRes::release_forum() {
  // @@protoc_insertion_point(field_release:PbPageResIdl.DataRes.forum)
  
  ::SimpleForum* temp = forum_;
  forum_ = NULL;
  return temp;
}
inline ::SimpleForum* PbPageResIdl_DataRes::mutable_forum() {
  
  if (forum_ == NULL) {
    forum_ = new ::SimpleForum;
  }
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.DataRes.forum)
  return forum_;
}
inline void PbPageResIdl_DataRes::set_allocated_forum(::SimpleForum* forum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forum_);
  }
  if (forum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forum, submessage_arena);
    }
    
  } else {
    
  }
  forum_ = forum;
  // @@protoc_insertion_point(field_set_allocated:PbPageResIdl.DataRes.forum)
}

// .Page page = 3;
inline bool PbPageResIdl_DataRes::has_page() const {
  return this != internal_default_instance() && page_ != NULL;
}
inline const ::Page& PbPageResIdl_DataRes::page() const {
  const ::Page* p = page_;
  // @@protoc_insertion_point(field_get:PbPageResIdl.DataRes.page)
  return p != NULL ? *p : *reinterpret_cast<const ::Page*>(
      &::_Page_default_instance_);
}
inline ::Page* PbPageResIdl_DataRes::release_page() {
  // @@protoc_insertion_point(field_release:PbPageResIdl.DataRes.page)
  
  ::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline ::Page* PbPageResIdl_DataRes::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Page;
  }
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.DataRes.page)
  return page_;
}
inline void PbPageResIdl_DataRes::set_allocated_page(::Page* page) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(page_);
  }
  if (page) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      page = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, page, submessage_arena);
    }
    
  } else {
    
  }
  page_ = page;
  // @@protoc_insertion_point(field_set_allocated:PbPageResIdl.DataRes.page)
}

// repeated .Post post_list = 6;
inline int PbPageResIdl_DataRes::post_list_size() const {
  return post_list_.size();
}
inline const ::Post& PbPageResIdl_DataRes::post_list(int index) const {
  // @@protoc_insertion_point(field_get:PbPageResIdl.DataRes.post_list)
  return post_list_.Get(index);
}
inline ::Post* PbPageResIdl_DataRes::mutable_post_list(int index) {
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.DataRes.post_list)
  return post_list_.Mutable(index);
}
inline ::Post* PbPageResIdl_DataRes::add_post_list() {
  // @@protoc_insertion_point(field_add:PbPageResIdl.DataRes.post_list)
  return post_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Post >*
PbPageResIdl_DataRes::mutable_post_list() {
  // @@protoc_insertion_point(field_mutable_list:PbPageResIdl.DataRes.post_list)
  return &post_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Post >&
PbPageResIdl_DataRes::post_list() const {
  // @@protoc_insertion_point(field_list:PbPageResIdl.DataRes.post_list)
  return post_list_;
}

// .ThreadInfo thread = 8;
inline bool PbPageResIdl_DataRes::has_thread() const {
  return this != internal_default_instance() && thread_ != NULL;
}
inline const ::ThreadInfo& PbPageResIdl_DataRes::thread() const {
  const ::ThreadInfo* p = thread_;
  // @@protoc_insertion_point(field_get:PbPageResIdl.DataRes.thread)
  return p != NULL ? *p : *reinterpret_cast<const ::ThreadInfo*>(
      &::_ThreadInfo_default_instance_);
}
inline ::ThreadInfo* PbPageResIdl_DataRes::release_thread() {
  // @@protoc_insertion_point(field_release:PbPageResIdl.DataRes.thread)
  
  ::ThreadInfo* temp = thread_;
  thread_ = NULL;
  return temp;
}
inline ::ThreadInfo* PbPageResIdl_DataRes::mutable_thread() {
  
  if (thread_ == NULL) {
    thread_ = new ::ThreadInfo;
  }
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.DataRes.thread)
  return thread_;
}
inline void PbPageResIdl_DataRes::set_allocated_thread(::ThreadInfo* thread) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(thread_);
  }
  if (thread) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      thread = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, thread, submessage_arena);
    }
    
  } else {
    
  }
  thread_ = thread;
  // @@protoc_insertion_point(field_set_allocated:PbPageResIdl.DataRes.thread)
}

// repeated .User user_list = 13;
inline int PbPageResIdl_DataRes::user_list_size() const {
  return user_list_.size();
}
inline const ::User& PbPageResIdl_DataRes::user_list(int index) const {
  // @@protoc_insertion_point(field_get:PbPageResIdl.DataRes.user_list)
  return user_list_.Get(index);
}
inline ::User* PbPageResIdl_DataRes::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.DataRes.user_list)
  return user_list_.Mutable(index);
}
inline ::User* PbPageResIdl_DataRes::add_user_list() {
  // @@protoc_insertion_point(field_add:PbPageResIdl.DataRes.user_list)
  return user_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::User >*
PbPageResIdl_DataRes::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:PbPageResIdl.DataRes.user_list)
  return &user_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::User >&
PbPageResIdl_DataRes::user_list() const {
  // @@protoc_insertion_point(field_list:PbPageResIdl.DataRes.user_list)
  return user_list_;
}

// -------------------------------------------------------------------

// PbPageResIdl

// .Error error = 1;
inline bool PbPageResIdl::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::Error& PbPageResIdl::error() const {
  const ::Error* p = error_;
  // @@protoc_insertion_point(field_get:PbPageResIdl.error)
  return p != NULL ? *p : *reinterpret_cast<const ::Error*>(
      &::_Error_default_instance_);
}
inline ::Error* PbPageResIdl::release_error() {
  // @@protoc_insertion_point(field_release:PbPageResIdl.error)
  
  ::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::Error* PbPageResIdl::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::Error;
  }
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.error)
  return error_;
}
inline void PbPageResIdl::set_allocated_error(::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:PbPageResIdl.error)
}

// .PbPageResIdl.DataRes data = 2;
inline bool PbPageResIdl::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void PbPageResIdl::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::PbPageResIdl_DataRes& PbPageResIdl::data() const {
  const ::PbPageResIdl_DataRes* p = data_;
  // @@protoc_insertion_point(field_get:PbPageResIdl.data)
  return p != NULL ? *p : *reinterpret_cast<const ::PbPageResIdl_DataRes*>(
      &::_PbPageResIdl_DataRes_default_instance_);
}
inline ::PbPageResIdl_DataRes* PbPageResIdl::release_data() {
  // @@protoc_insertion_point(field_release:PbPageResIdl.data)
  
  ::PbPageResIdl_DataRes* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::PbPageResIdl_DataRes* PbPageResIdl::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::PbPageResIdl_DataRes;
  }
  // @@protoc_insertion_point(field_mutable:PbPageResIdl.data)
  return data_;
}
inline void PbPageResIdl::set_allocated_data(::PbPageResIdl_DataRes* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:PbPageResIdl.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PbPageResIdl_2eproto__INCLUDED
