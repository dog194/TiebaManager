// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchPostForumReqIdl.proto

#include "SearchPostForumReqIdl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class SearchPostForumReqIdl_DataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPostForumReqIdl_DataReq>
      _instance;
} _SearchPostForumReqIdl_DataReq_default_instance_;
class SearchPostForumReqIdlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPostForumReqIdl>
      _instance;
} _SearchPostForumReqIdl_default_instance_;
namespace protobuf_SearchPostForumReqIdl_2eproto {
void InitDefaultsSearchPostForumReqIdl_DataReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CommonReq_2eproto::InitDefaultsCommonReq();
  {
    void* ptr = &::_SearchPostForumReqIdl_DataReq_default_instance_;
    new (ptr) ::SearchPostForumReqIdl_DataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchPostForumReqIdl_DataReq::InitAsDefaultInstance();
}

void InitDefaultsSearchPostForumReqIdl_DataReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchPostForumReqIdl_DataReqImpl);
}

void InitDefaultsSearchPostForumReqIdlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl_DataReq();
  {
    void* ptr = &::_SearchPostForumReqIdl_default_instance_;
    new (ptr) ::SearchPostForumReqIdl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchPostForumReqIdl::InitAsDefaultInstance();
}

void InitDefaultsSearchPostForumReqIdl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchPostForumReqIdlImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumReqIdl_DataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumReqIdl_DataReq, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumReqIdl_DataReq, word_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumReqIdl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumReqIdl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SearchPostForumReqIdl_DataReq)},
  { 7, -1, sizeof(::SearchPostForumReqIdl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchPostForumReqIdl_DataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchPostForumReqIdl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SearchPostForumReqIdl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033SearchPostForumReqIdl.proto\032\017CommonReq"
      ".proto\"z\n\025SearchPostForumReqIdl\022,\n\004data\030"
      "\001 \001(\0132\036.SearchPostForumReqIdl.DataReq\0323\n"
      "\007DataReq\022\032\n\006common\030\001 \001(\0132\n.CommonReq\022\014\n\004"
      "word\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 178);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SearchPostForumReqIdl.proto", &protobuf_RegisterTypes);
  ::protobuf_CommonReq_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SearchPostForumReqIdl_2eproto

// ===================================================================

void SearchPostForumReqIdl_DataReq::InitAsDefaultInstance() {
  ::_SearchPostForumReqIdl_DataReq_default_instance_._instance.get_mutable()->common_ = const_cast< ::CommonReq*>(
      ::CommonReq::internal_default_instance());
}
void SearchPostForumReqIdl_DataReq::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPostForumReqIdl_DataReq::kCommonFieldNumber;
const int SearchPostForumReqIdl_DataReq::kWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPostForumReqIdl_DataReq::SearchPostForumReqIdl_DataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl_DataReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchPostForumReqIdl.DataReq)
}
SearchPostForumReqIdl_DataReq::SearchPostForumReqIdl_DataReq(const SearchPostForumReqIdl_DataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.word().size() > 0) {
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  if (from.has_common()) {
    common_ = new ::CommonReq(*from.common_);
  } else {
    common_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SearchPostForumReqIdl.DataReq)
}

void SearchPostForumReqIdl_DataReq::SharedCtor() {
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  common_ = NULL;
  _cached_size_ = 0;
}

SearchPostForumReqIdl_DataReq::~SearchPostForumReqIdl_DataReq() {
  // @@protoc_insertion_point(destructor:SearchPostForumReqIdl.DataReq)
  SharedDtor();
}

void SearchPostForumReqIdl_DataReq::SharedDtor() {
  word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
}

void SearchPostForumReqIdl_DataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchPostForumReqIdl_DataReq::descriptor() {
  ::protobuf_SearchPostForumReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPostForumReqIdl_DataReq& SearchPostForumReqIdl_DataReq::default_instance() {
  ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl_DataReq();
  return *internal_default_instance();
}

SearchPostForumReqIdl_DataReq* SearchPostForumReqIdl_DataReq::New(::google::protobuf::Arena* arena) const {
  SearchPostForumReqIdl_DataReq* n = new SearchPostForumReqIdl_DataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchPostForumReqIdl_DataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchPostForumReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchPostForumReqIdl_DataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchPostForumReqIdl.DataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CommonReq common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string word = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->word().data(), static_cast<int>(this->word().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchPostForumReqIdl.DataReq.word"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchPostForumReqIdl.DataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchPostForumReqIdl.DataReq)
  return false;
#undef DO_
}

void SearchPostForumReqIdl_DataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchPostForumReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CommonReq common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // string word = 2;
  if (this->word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchPostForumReqIdl.DataReq.word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->word(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchPostForumReqIdl.DataReq)
}

::google::protobuf::uint8* SearchPostForumReqIdl_DataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchPostForumReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CommonReq common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->common_, deterministic, target);
  }

  // string word = 2;
  if (this->word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchPostForumReqIdl.DataReq.word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->word(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchPostForumReqIdl.DataReq)
  return target;
}

size_t SearchPostForumReqIdl_DataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchPostForumReqIdl.DataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string word = 2;
  if (this->word().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word());
  }

  // .CommonReq common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->common_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchPostForumReqIdl_DataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchPostForumReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPostForumReqIdl_DataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPostForumReqIdl_DataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchPostForumReqIdl.DataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchPostForumReqIdl.DataReq)
    MergeFrom(*source);
  }
}

void SearchPostForumReqIdl_DataReq::MergeFrom(const SearchPostForumReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchPostForumReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word().size() > 0) {

    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  if (from.has_common()) {
    mutable_common()->::CommonReq::MergeFrom(from.common());
  }
}

void SearchPostForumReqIdl_DataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchPostForumReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPostForumReqIdl_DataReq::CopyFrom(const SearchPostForumReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchPostForumReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPostForumReqIdl_DataReq::IsInitialized() const {
  return true;
}

void SearchPostForumReqIdl_DataReq::Swap(SearchPostForumReqIdl_DataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPostForumReqIdl_DataReq::InternalSwap(SearchPostForumReqIdl_DataReq* other) {
  using std::swap;
  word_.Swap(&other->word_);
  swap(common_, other->common_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchPostForumReqIdl_DataReq::GetMetadata() const {
  protobuf_SearchPostForumReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchPostForumReqIdl::InitAsDefaultInstance() {
  ::_SearchPostForumReqIdl_default_instance_._instance.get_mutable()->data_ = const_cast< ::SearchPostForumReqIdl_DataReq*>(
      ::SearchPostForumReqIdl_DataReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPostForumReqIdl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPostForumReqIdl::SearchPostForumReqIdl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchPostForumReqIdl)
}
SearchPostForumReqIdl::SearchPostForumReqIdl(const SearchPostForumReqIdl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::SearchPostForumReqIdl_DataReq(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SearchPostForumReqIdl)
}

void SearchPostForumReqIdl::SharedCtor() {
  data_ = NULL;
  _cached_size_ = 0;
}

SearchPostForumReqIdl::~SearchPostForumReqIdl() {
  // @@protoc_insertion_point(destructor:SearchPostForumReqIdl)
  SharedDtor();
}

void SearchPostForumReqIdl::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void SearchPostForumReqIdl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchPostForumReqIdl::descriptor() {
  ::protobuf_SearchPostForumReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPostForumReqIdl& SearchPostForumReqIdl::default_instance() {
  ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl();
  return *internal_default_instance();
}

SearchPostForumReqIdl* SearchPostForumReqIdl::New(::google::protobuf::Arena* arena) const {
  SearchPostForumReqIdl* n = new SearchPostForumReqIdl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchPostForumReqIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchPostForumReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchPostForumReqIdl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchPostForumReqIdl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SearchPostForumReqIdl.DataReq data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchPostForumReqIdl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchPostForumReqIdl)
  return false;
#undef DO_
}

void SearchPostForumReqIdl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchPostForumReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SearchPostForumReqIdl.DataReq data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchPostForumReqIdl)
}

::google::protobuf::uint8* SearchPostForumReqIdl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchPostForumReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SearchPostForumReqIdl.DataReq data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchPostForumReqIdl)
  return target;
}

size_t SearchPostForumReqIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchPostForumReqIdl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SearchPostForumReqIdl.DataReq data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchPostForumReqIdl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchPostForumReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPostForumReqIdl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPostForumReqIdl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchPostForumReqIdl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchPostForumReqIdl)
    MergeFrom(*source);
  }
}

void SearchPostForumReqIdl::MergeFrom(const SearchPostForumReqIdl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchPostForumReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::SearchPostForumReqIdl_DataReq::MergeFrom(from.data());
  }
}

void SearchPostForumReqIdl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchPostForumReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPostForumReqIdl::CopyFrom(const SearchPostForumReqIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchPostForumReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPostForumReqIdl::IsInitialized() const {
  return true;
}

void SearchPostForumReqIdl::Swap(SearchPostForumReqIdl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPostForumReqIdl::InternalSwap(SearchPostForumReqIdl* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchPostForumReqIdl::GetMetadata() const {
  protobuf_SearchPostForumReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
