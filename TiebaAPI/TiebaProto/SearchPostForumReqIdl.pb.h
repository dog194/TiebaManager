// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchPostForumReqIdl.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_SearchPostForumReqIdl_2eproto__INCLUDED
#define PROTOBUF_SearchPostForumReqIdl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "CommonReq.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_SearchPostForumReqIdl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSearchPostForumReqIdl_DataReqImpl();
void InitDefaultsSearchPostForumReqIdl_DataReq();
void InitDefaultsSearchPostForumReqIdlImpl();
void InitDefaultsSearchPostForumReqIdl();
inline void InitDefaults() {
  InitDefaultsSearchPostForumReqIdl_DataReq();
  InitDefaultsSearchPostForumReqIdl();
}
}  // namespace protobuf_SearchPostForumReqIdl_2eproto
class SearchPostForumReqIdl;
class SearchPostForumReqIdlDefaultTypeInternal;
extern SearchPostForumReqIdlDefaultTypeInternal _SearchPostForumReqIdl_default_instance_;
class SearchPostForumReqIdl_DataReq;
class SearchPostForumReqIdl_DataReqDefaultTypeInternal;
extern SearchPostForumReqIdl_DataReqDefaultTypeInternal _SearchPostForumReqIdl_DataReq_default_instance_;

// ===================================================================

class SearchPostForumReqIdl_DataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchPostForumReqIdl.DataReq) */ {
 public:
  SearchPostForumReqIdl_DataReq();
  virtual ~SearchPostForumReqIdl_DataReq();

  SearchPostForumReqIdl_DataReq(const SearchPostForumReqIdl_DataReq& from);

  inline SearchPostForumReqIdl_DataReq& operator=(const SearchPostForumReqIdl_DataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchPostForumReqIdl_DataReq(SearchPostForumReqIdl_DataReq&& from) noexcept
    : SearchPostForumReqIdl_DataReq() {
    *this = ::std::move(from);
  }

  inline SearchPostForumReqIdl_DataReq& operator=(SearchPostForumReqIdl_DataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPostForumReqIdl_DataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchPostForumReqIdl_DataReq* internal_default_instance() {
    return reinterpret_cast<const SearchPostForumReqIdl_DataReq*>(
               &_SearchPostForumReqIdl_DataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SearchPostForumReqIdl_DataReq* other);
  friend void swap(SearchPostForumReqIdl_DataReq& a, SearchPostForumReqIdl_DataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchPostForumReqIdl_DataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchPostForumReqIdl_DataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchPostForumReqIdl_DataReq& from);
  void MergeFrom(const SearchPostForumReqIdl_DataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchPostForumReqIdl_DataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string word = 2;
  void clear_word();
  static const int kWordFieldNumber = 2;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // .CommonReq common = 1;
  bool has_common() const;
  void clear_common();
  static const int kCommonFieldNumber = 1;
  const ::CommonReq& common() const;
  ::CommonReq* release_common();
  ::CommonReq* mutable_common();
  void set_allocated_common(::CommonReq* common);

  // @@protoc_insertion_point(class_scope:SearchPostForumReqIdl.DataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  ::CommonReq* common_;
  mutable int _cached_size_;
  friend struct ::protobuf_SearchPostForumReqIdl_2eproto::TableStruct;
  friend void ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdl_DataReqImpl();
};
// -------------------------------------------------------------------

class SearchPostForumReqIdl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchPostForumReqIdl) */ {
 public:
  SearchPostForumReqIdl();
  virtual ~SearchPostForumReqIdl();

  SearchPostForumReqIdl(const SearchPostForumReqIdl& from);

  inline SearchPostForumReqIdl& operator=(const SearchPostForumReqIdl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchPostForumReqIdl(SearchPostForumReqIdl&& from) noexcept
    : SearchPostForumReqIdl() {
    *this = ::std::move(from);
  }

  inline SearchPostForumReqIdl& operator=(SearchPostForumReqIdl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPostForumReqIdl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchPostForumReqIdl* internal_default_instance() {
    return reinterpret_cast<const SearchPostForumReqIdl*>(
               &_SearchPostForumReqIdl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SearchPostForumReqIdl* other);
  friend void swap(SearchPostForumReqIdl& a, SearchPostForumReqIdl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchPostForumReqIdl* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchPostForumReqIdl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchPostForumReqIdl& from);
  void MergeFrom(const SearchPostForumReqIdl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchPostForumReqIdl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SearchPostForumReqIdl_DataReq DataReq;

  // accessors -------------------------------------------------------

  // .SearchPostForumReqIdl.DataReq data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::SearchPostForumReqIdl_DataReq& data() const;
  ::SearchPostForumReqIdl_DataReq* release_data();
  ::SearchPostForumReqIdl_DataReq* mutable_data();
  void set_allocated_data(::SearchPostForumReqIdl_DataReq* data);

  // @@protoc_insertion_point(class_scope:SearchPostForumReqIdl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SearchPostForumReqIdl_DataReq* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_SearchPostForumReqIdl_2eproto::TableStruct;
  friend void ::protobuf_SearchPostForumReqIdl_2eproto::InitDefaultsSearchPostForumReqIdlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SearchPostForumReqIdl_DataReq

// .CommonReq common = 1;
inline bool SearchPostForumReqIdl_DataReq::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
inline const ::CommonReq& SearchPostForumReqIdl_DataReq::common() const {
  const ::CommonReq* p = common_;
  // @@protoc_insertion_point(field_get:SearchPostForumReqIdl.DataReq.common)
  return p != NULL ? *p : *reinterpret_cast<const ::CommonReq*>(
      &::_CommonReq_default_instance_);
}
inline ::CommonReq* SearchPostForumReqIdl_DataReq::release_common() {
  // @@protoc_insertion_point(field_release:SearchPostForumReqIdl.DataReq.common)
  
  ::CommonReq* temp = common_;
  common_ = NULL;
  return temp;
}
inline ::CommonReq* SearchPostForumReqIdl_DataReq::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::CommonReq;
  }
  // @@protoc_insertion_point(field_mutable:SearchPostForumReqIdl.DataReq.common)
  return common_;
}
inline void SearchPostForumReqIdl_DataReq::set_allocated_common(::CommonReq* common) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(common_);
  }
  if (common) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      common = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, common, submessage_arena);
    }
    
  } else {
    
  }
  common_ = common;
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumReqIdl.DataReq.common)
}

// string word = 2;
inline void SearchPostForumReqIdl_DataReq::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchPostForumReqIdl_DataReq::word() const {
  // @@protoc_insertion_point(field_get:SearchPostForumReqIdl.DataReq.word)
  return word_.GetNoArena();
}
inline void SearchPostForumReqIdl_DataReq::set_word(const ::std::string& value) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SearchPostForumReqIdl.DataReq.word)
}
#if LANG_CXX11
inline void SearchPostForumReqIdl_DataReq::set_word(::std::string&& value) {
  
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SearchPostForumReqIdl.DataReq.word)
}
#endif
inline void SearchPostForumReqIdl_DataReq::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SearchPostForumReqIdl.DataReq.word)
}
inline void SearchPostForumReqIdl_DataReq::set_word(const char* value, size_t size) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SearchPostForumReqIdl.DataReq.word)
}
inline ::std::string* SearchPostForumReqIdl_DataReq::mutable_word() {
  
  // @@protoc_insertion_point(field_mutable:SearchPostForumReqIdl.DataReq.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchPostForumReqIdl_DataReq::release_word() {
  // @@protoc_insertion_point(field_release:SearchPostForumReqIdl.DataReq.word)
  
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchPostForumReqIdl_DataReq::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    
  } else {
    
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumReqIdl.DataReq.word)
}

// -------------------------------------------------------------------

// SearchPostForumReqIdl

// .SearchPostForumReqIdl.DataReq data = 1;
inline bool SearchPostForumReqIdl::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void SearchPostForumReqIdl::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::SearchPostForumReqIdl_DataReq& SearchPostForumReqIdl::data() const {
  const ::SearchPostForumReqIdl_DataReq* p = data_;
  // @@protoc_insertion_point(field_get:SearchPostForumReqIdl.data)
  return p != NULL ? *p : *reinterpret_cast<const ::SearchPostForumReqIdl_DataReq*>(
      &::_SearchPostForumReqIdl_DataReq_default_instance_);
}
inline ::SearchPostForumReqIdl_DataReq* SearchPostForumReqIdl::release_data() {
  // @@protoc_insertion_point(field_release:SearchPostForumReqIdl.data)
  
  ::SearchPostForumReqIdl_DataReq* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::SearchPostForumReqIdl_DataReq* SearchPostForumReqIdl::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::SearchPostForumReqIdl_DataReq;
  }
  // @@protoc_insertion_point(field_mutable:SearchPostForumReqIdl.data)
  return data_;
}
inline void SearchPostForumReqIdl::set_allocated_data(::SearchPostForumReqIdl_DataReq* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumReqIdl.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SearchPostForumReqIdl_2eproto__INCLUDED
