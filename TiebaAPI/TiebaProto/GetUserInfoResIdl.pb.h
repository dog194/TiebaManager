// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetUserInfoResIdl.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_GetUserInfoResIdl_2eproto__INCLUDED
#define PROTOBUF_GetUserInfoResIdl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "User.pb.h"
#include "Error.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_GetUserInfoResIdl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGetUserInfoResIdl_DataResImpl();
void InitDefaultsGetUserInfoResIdl_DataRes();
void InitDefaultsGetUserInfoResIdlImpl();
void InitDefaultsGetUserInfoResIdl();
inline void InitDefaults() {
  InitDefaultsGetUserInfoResIdl_DataRes();
  InitDefaultsGetUserInfoResIdl();
}
}  // namespace protobuf_GetUserInfoResIdl_2eproto
class GetUserInfoResIdl;
class GetUserInfoResIdlDefaultTypeInternal;
extern GetUserInfoResIdlDefaultTypeInternal _GetUserInfoResIdl_default_instance_;
class GetUserInfoResIdl_DataRes;
class GetUserInfoResIdl_DataResDefaultTypeInternal;
extern GetUserInfoResIdl_DataResDefaultTypeInternal _GetUserInfoResIdl_DataRes_default_instance_;

// ===================================================================

class GetUserInfoResIdl_DataRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetUserInfoResIdl.DataRes) */ {
 public:
  GetUserInfoResIdl_DataRes();
  virtual ~GetUserInfoResIdl_DataRes();

  GetUserInfoResIdl_DataRes(const GetUserInfoResIdl_DataRes& from);

  inline GetUserInfoResIdl_DataRes& operator=(const GetUserInfoResIdl_DataRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserInfoResIdl_DataRes(GetUserInfoResIdl_DataRes&& from) noexcept
    : GetUserInfoResIdl_DataRes() {
    *this = ::std::move(from);
  }

  inline GetUserInfoResIdl_DataRes& operator=(GetUserInfoResIdl_DataRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoResIdl_DataRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserInfoResIdl_DataRes* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoResIdl_DataRes*>(
               &_GetUserInfoResIdl_DataRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetUserInfoResIdl_DataRes* other);
  friend void swap(GetUserInfoResIdl_DataRes& a, GetUserInfoResIdl_DataRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserInfoResIdl_DataRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoResIdl_DataRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoResIdl_DataRes& from);
  void MergeFrom(const GetUserInfoResIdl_DataRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoResIdl_DataRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .User user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::User& user() const;
  ::User* release_user();
  ::User* mutable_user();
  void set_allocated_user(::User* user);

  // @@protoc_insertion_point(class_scope:GetUserInfoResIdl.DataRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::User* user_;
  mutable int _cached_size_;
  friend struct ::protobuf_GetUserInfoResIdl_2eproto::TableStruct;
  friend void ::protobuf_GetUserInfoResIdl_2eproto::InitDefaultsGetUserInfoResIdl_DataResImpl();
};
// -------------------------------------------------------------------

class GetUserInfoResIdl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetUserInfoResIdl) */ {
 public:
  GetUserInfoResIdl();
  virtual ~GetUserInfoResIdl();

  GetUserInfoResIdl(const GetUserInfoResIdl& from);

  inline GetUserInfoResIdl& operator=(const GetUserInfoResIdl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUserInfoResIdl(GetUserInfoResIdl&& from) noexcept
    : GetUserInfoResIdl() {
    *this = ::std::move(from);
  }

  inline GetUserInfoResIdl& operator=(GetUserInfoResIdl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoResIdl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUserInfoResIdl* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoResIdl*>(
               &_GetUserInfoResIdl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetUserInfoResIdl* other);
  friend void swap(GetUserInfoResIdl& a, GetUserInfoResIdl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUserInfoResIdl* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoResIdl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoResIdl& from);
  void MergeFrom(const GetUserInfoResIdl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoResIdl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetUserInfoResIdl_DataRes DataRes;

  // accessors -------------------------------------------------------

  // .Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::Error& error() const;
  ::Error* release_error();
  ::Error* mutable_error();
  void set_allocated_error(::Error* error);

  // .GetUserInfoResIdl.DataRes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::GetUserInfoResIdl_DataRes& data() const;
  ::GetUserInfoResIdl_DataRes* release_data();
  ::GetUserInfoResIdl_DataRes* mutable_data();
  void set_allocated_data(::GetUserInfoResIdl_DataRes* data);

  // @@protoc_insertion_point(class_scope:GetUserInfoResIdl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Error* error_;
  ::GetUserInfoResIdl_DataRes* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_GetUserInfoResIdl_2eproto::TableStruct;
  friend void ::protobuf_GetUserInfoResIdl_2eproto::InitDefaultsGetUserInfoResIdlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetUserInfoResIdl_DataRes

// .User user = 1;
inline bool GetUserInfoResIdl_DataRes::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline const ::User& GetUserInfoResIdl_DataRes::user() const {
  const ::User* p = user_;
  // @@protoc_insertion_point(field_get:GetUserInfoResIdl.DataRes.user)
  return p != NULL ? *p : *reinterpret_cast<const ::User*>(
      &::_User_default_instance_);
}
inline ::User* GetUserInfoResIdl_DataRes::release_user() {
  // @@protoc_insertion_point(field_release:GetUserInfoResIdl.DataRes.user)
  
  ::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::User* GetUserInfoResIdl_DataRes::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::User;
  }
  // @@protoc_insertion_point(field_mutable:GetUserInfoResIdl.DataRes.user)
  return user_;
}
inline void GetUserInfoResIdl_DataRes::set_allocated_user(::User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(user_);
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:GetUserInfoResIdl.DataRes.user)
}

// -------------------------------------------------------------------

// GetUserInfoResIdl

// .Error error = 1;
inline bool GetUserInfoResIdl::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::Error& GetUserInfoResIdl::error() const {
  const ::Error* p = error_;
  // @@protoc_insertion_point(field_get:GetUserInfoResIdl.error)
  return p != NULL ? *p : *reinterpret_cast<const ::Error*>(
      &::_Error_default_instance_);
}
inline ::Error* GetUserInfoResIdl::release_error() {
  // @@protoc_insertion_point(field_release:GetUserInfoResIdl.error)
  
  ::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::Error* GetUserInfoResIdl::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::Error;
  }
  // @@protoc_insertion_point(field_mutable:GetUserInfoResIdl.error)
  return error_;
}
inline void GetUserInfoResIdl::set_allocated_error(::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:GetUserInfoResIdl.error)
}

// .GetUserInfoResIdl.DataRes data = 2;
inline bool GetUserInfoResIdl::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void GetUserInfoResIdl::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::GetUserInfoResIdl_DataRes& GetUserInfoResIdl::data() const {
  const ::GetUserInfoResIdl_DataRes* p = data_;
  // @@protoc_insertion_point(field_get:GetUserInfoResIdl.data)
  return p != NULL ? *p : *reinterpret_cast<const ::GetUserInfoResIdl_DataRes*>(
      &::_GetUserInfoResIdl_DataRes_default_instance_);
}
inline ::GetUserInfoResIdl_DataRes* GetUserInfoResIdl::release_data() {
  // @@protoc_insertion_point(field_release:GetUserInfoResIdl.data)
  
  ::GetUserInfoResIdl_DataRes* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::GetUserInfoResIdl_DataRes* GetUserInfoResIdl::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::GetUserInfoResIdl_DataRes;
  }
  // @@protoc_insertion_point(field_mutable:GetUserInfoResIdl.data)
  return data_;
}
inline void GetUserInfoResIdl::set_allocated_data(::GetUserInfoResIdl_DataRes* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:GetUserInfoResIdl.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GetUserInfoResIdl_2eproto__INCLUDED
