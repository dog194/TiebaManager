// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonReq.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_CommonReq_2eproto__INCLUDED
#define PROTOBUF_CommonReq_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_CommonReq_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCommonReqImpl();
void InitDefaultsCommonReq();
inline void InitDefaults() {
  InitDefaultsCommonReq();
}
}  // namespace protobuf_CommonReq_2eproto
class CommonReq;
class CommonReqDefaultTypeInternal;
extern CommonReqDefaultTypeInternal _CommonReq_default_instance_;

// ===================================================================

class CommonReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CommonReq) */ {
 public:
  CommonReq();
  virtual ~CommonReq();

  CommonReq(const CommonReq& from);

  inline CommonReq& operator=(const CommonReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonReq(CommonReq&& from) noexcept
    : CommonReq() {
    *this = ::std::move(from);
  }

  inline CommonReq& operator=(CommonReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonReq* internal_default_instance() {
    return reinterpret_cast<const CommonReq*>(
               &_CommonReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CommonReq* other);
  friend void swap(CommonReq& a, CommonReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonReq& from);
  void MergeFrom(const CommonReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string _client_version = 2;
  void clear__client_version();
  static const int kClientVersionFieldNumber = 2;
  const ::std::string& _client_version() const;
  void set__client_version(const ::std::string& value);
  #if LANG_CXX11
  void set__client_version(::std::string&& value);
  #endif
  void set__client_version(const char* value);
  void set__client_version(const char* value, size_t size);
  ::std::string* mutable__client_version();
  ::std::string* release__client_version();
  void set_allocated__client_version(::std::string* _client_version);

  // string _client_id = 3;
  void clear__client_id();
  static const int kClientIdFieldNumber = 3;
  const ::std::string& _client_id() const;
  void set__client_id(const ::std::string& value);
  #if LANG_CXX11
  void set__client_id(::std::string&& value);
  #endif
  void set__client_id(const char* value);
  void set__client_id(const char* value, size_t size);
  ::std::string* mutable__client_id();
  ::std::string* release__client_id();
  void set_allocated__client_id(::std::string* _client_id);

  // string apid = 4;
  void clear_apid();
  static const int kApidFieldNumber = 4;
  const ::std::string& apid() const;
  void set_apid(const ::std::string& value);
  #if LANG_CXX11
  void set_apid(::std::string&& value);
  #endif
  void set_apid(const char* value);
  void set_apid(const char* value, size_t size);
  ::std::string* mutable_apid();
  ::std::string* release_apid();
  void set_allocated_apid(::std::string* apid);

  // string _phone_imei = 5;
  void clear__phone_imei();
  static const int kPhoneImeiFieldNumber = 5;
  const ::std::string& _phone_imei() const;
  void set__phone_imei(const ::std::string& value);
  #if LANG_CXX11
  void set__phone_imei(::std::string&& value);
  #endif
  void set__phone_imei(const char* value);
  void set__phone_imei(const char* value, size_t size);
  ::std::string* mutable__phone_imei();
  ::std::string* release__phone_imei();
  void set_allocated__phone_imei(::std::string* _phone_imei);

  // string _from = 6;
  void clear__from();
  static const int kFromFieldNumber = 6;
  const ::std::string& _from() const;
  void set__from(const ::std::string& value);
  #if LANG_CXX11
  void set__from(::std::string&& value);
  #endif
  void set__from(const char* value);
  void set__from(const char* value, size_t size);
  ::std::string* mutable__from();
  ::std::string* release__from();
  void set_allocated__from(::std::string* _from);

  // string cuid = 7;
  void clear_cuid();
  static const int kCuidFieldNumber = 7;
  const ::std::string& cuid() const;
  void set_cuid(const ::std::string& value);
  #if LANG_CXX11
  void set_cuid(::std::string&& value);
  #endif
  void set_cuid(const char* value);
  void set_cuid(const char* value, size_t size);
  ::std::string* mutable_cuid();
  ::std::string* release_cuid();
  void set_allocated_cuid(::std::string* cuid);

  // string model = 9;
  void clear_model();
  static const int kModelFieldNumber = 9;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // string BDUSS = 10;
  void clear_bduss();
  static const int kBDUSSFieldNumber = 10;
  const ::std::string& bduss() const;
  void set_bduss(const ::std::string& value);
  #if LANG_CXX11
  void set_bduss(::std::string&& value);
  #endif
  void set_bduss(const char* value);
  void set_bduss(const char* value, size_t size);
  ::std::string* mutable_bduss();
  ::std::string* release_bduss();
  void set_allocated_bduss(::std::string* bduss);

  // string tbs = 11;
  void clear_tbs();
  static const int kTbsFieldNumber = 11;
  const ::std::string& tbs() const;
  void set_tbs(const ::std::string& value);
  #if LANG_CXX11
  void set_tbs(::std::string&& value);
  #endif
  void set_tbs(const char* value);
  void set_tbs(const char* value, size_t size);
  ::std::string* mutable_tbs();
  ::std::string* release_tbs();
  void set_allocated_tbs(::std::string* tbs);

  // string subapp_type = 13;
  void clear_subapp_type();
  static const int kSubappTypeFieldNumber = 13;
  const ::std::string& subapp_type() const;
  void set_subapp_type(const ::std::string& value);
  #if LANG_CXX11
  void set_subapp_type(::std::string&& value);
  #endif
  void set_subapp_type(const char* value);
  void set_subapp_type(const char* value, size_t size);
  ::std::string* mutable_subapp_type();
  ::std::string* release_subapp_type();
  void set_allocated_subapp_type(::std::string* subapp_type);

  // string _phone_newimei = 14;
  void clear__phone_newimei();
  static const int kPhoneNewimeiFieldNumber = 14;
  const ::std::string& _phone_newimei() const;
  void set__phone_newimei(const ::std::string& value);
  #if LANG_CXX11
  void set__phone_newimei(::std::string&& value);
  #endif
  void set__phone_newimei(const char* value);
  void set__phone_newimei(const char* value, size_t size);
  ::std::string* mutable__phone_newimei();
  ::std::string* release__phone_newimei();
  void set_allocated__phone_newimei(::std::string* _phone_newimei);

  // string ka = 15;
  void clear_ka();
  static const int kKaFieldNumber = 15;
  const ::std::string& ka() const;
  void set_ka(const ::std::string& value);
  #if LANG_CXX11
  void set_ka(::std::string&& value);
  #endif
  void set_ka(const char* value);
  void set_ka(const char* value, size_t size);
  ::std::string* mutable_ka();
  ::std::string* release_ka();
  void set_allocated_ka(::std::string* ka);

  // string m_api = 16;
  void clear_m_api();
  static const int kMApiFieldNumber = 16;
  const ::std::string& m_api() const;
  void set_m_api(const ::std::string& value);
  #if LANG_CXX11
  void set_m_api(::std::string&& value);
  #endif
  void set_m_api(const char* value);
  void set_m_api(const char* value, size_t size);
  ::std::string* mutable_m_api();
  ::std::string* release_m_api();
  void set_allocated_m_api(::std::string* m_api);

  // string m_logid = 17;
  void clear_m_logid();
  static const int kMLogidFieldNumber = 17;
  const ::std::string& m_logid() const;
  void set_m_logid(const ::std::string& value);
  #if LANG_CXX11
  void set_m_logid(::std::string&& value);
  #endif
  void set_m_logid(const char* value);
  void set_m_logid(const char* value, size_t size);
  ::std::string* mutable_m_logid();
  ::std::string* release_m_logid();
  void set_allocated_m_logid(::std::string* m_logid);

  // string m_cost = 18;
  void clear_m_cost();
  static const int kMCostFieldNumber = 18;
  const ::std::string& m_cost() const;
  void set_m_cost(const ::std::string& value);
  #if LANG_CXX11
  void set_m_cost(::std::string&& value);
  #endif
  void set_m_cost(const char* value);
  void set_m_cost(const char* value, size_t size);
  ::std::string* mutable_m_cost();
  ::std::string* release_m_cost();
  void set_allocated_m_cost(::std::string* m_cost);

  // string m_result = 19;
  void clear_m_result();
  static const int kMResultFieldNumber = 19;
  const ::std::string& m_result() const;
  void set_m_result(const ::std::string& value);
  #if LANG_CXX11
  void set_m_result(::std::string&& value);
  #endif
  void set_m_result(const char* value);
  void set_m_result(const char* value, size_t size);
  ::std::string* mutable_m_result();
  ::std::string* release_m_result();
  void set_allocated_m_result(::std::string* m_result);

  // string m_size_u = 20;
  void clear_m_size_u();
  static const int kMSizeUFieldNumber = 20;
  const ::std::string& m_size_u() const;
  void set_m_size_u(const ::std::string& value);
  #if LANG_CXX11
  void set_m_size_u(::std::string&& value);
  #endif
  void set_m_size_u(const char* value);
  void set_m_size_u(const char* value, size_t size);
  ::std::string* mutable_m_size_u();
  ::std::string* release_m_size_u();
  void set_allocated_m_size_u(::std::string* m_size_u);

  // string m_size_d = 21;
  void clear_m_size_d();
  static const int kMSizeDFieldNumber = 21;
  const ::std::string& m_size_d() const;
  void set_m_size_d(const ::std::string& value);
  #if LANG_CXX11
  void set_m_size_d(::std::string&& value);
  #endif
  void set_m_size_d(const char* value);
  void set_m_size_d(const char* value, size_t size);
  ::std::string* mutable_m_size_d();
  ::std::string* release_m_size_d();
  void set_allocated_m_size_d(::std::string* m_size_d);

  // string smallflow = 22;
  void clear_smallflow();
  static const int kSmallflowFieldNumber = 22;
  const ::std::string& smallflow() const;
  void set_smallflow(const ::std::string& value);
  #if LANG_CXX11
  void set_smallflow(::std::string&& value);
  #endif
  void set_smallflow(const char* value);
  void set_smallflow(const char* value, size_t size);
  ::std::string* mutable_smallflow();
  ::std::string* release_smallflow();
  void set_allocated_smallflow(::std::string* smallflow);

  // string sign = 23;
  void clear_sign();
  static const int kSignFieldNumber = 23;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // string pversion = 24;
  void clear_pversion();
  static const int kPversionFieldNumber = 24;
  const ::std::string& pversion() const;
  void set_pversion(const ::std::string& value);
  #if LANG_CXX11
  void set_pversion(::std::string&& value);
  #endif
  void set_pversion(const char* value);
  void set_pversion(const char* value, size_t size);
  ::std::string* mutable_pversion();
  ::std::string* release_pversion();
  void set_allocated_pversion(::std::string* pversion);

  // string brand = 26;
  void clear_brand();
  static const int kBrandFieldNumber = 26;
  const ::std::string& brand() const;
  void set_brand(const ::std::string& value);
  #if LANG_CXX11
  void set_brand(::std::string&& value);
  #endif
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  ::std::string* mutable_brand();
  ::std::string* release_brand();
  void set_allocated_brand(::std::string* brand);

  // string brand_type = 27;
  void clear_brand_type();
  static const int kBrandTypeFieldNumber = 27;
  const ::std::string& brand_type() const;
  void set_brand_type(const ::std::string& value);
  #if LANG_CXX11
  void set_brand_type(::std::string&& value);
  #endif
  void set_brand_type(const char* value);
  void set_brand_type(const char* value, size_t size);
  ::std::string* mutable_brand_type();
  ::std::string* release_brand_type();
  void set_allocated_brand_type(::std::string* brand_type);

  // string lego_lib_version = 28;
  void clear_lego_lib_version();
  static const int kLegoLibVersionFieldNumber = 28;
  const ::std::string& lego_lib_version() const;
  void set_lego_lib_version(const ::std::string& value);
  #if LANG_CXX11
  void set_lego_lib_version(::std::string&& value);
  #endif
  void set_lego_lib_version(const char* value);
  void set_lego_lib_version(const char* value, size_t size);
  ::std::string* mutable_lego_lib_version();
  ::std::string* release_lego_lib_version();
  void set_allocated_lego_lib_version(::std::string* lego_lib_version);

  // string applist = 29;
  void clear_applist();
  static const int kApplistFieldNumber = 29;
  const ::std::string& applist() const;
  void set_applist(const ::std::string& value);
  #if LANG_CXX11
  void set_applist(::std::string&& value);
  #endif
  void set_applist(const char* value);
  void set_applist(const char* value, size_t size);
  ::std::string* mutable_applist();
  ::std::string* release_applist();
  void set_allocated_applist(::std::string* applist);

  // string stoken = 30;
  void clear_stoken();
  static const int kStokenFieldNumber = 30;
  const ::std::string& stoken() const;
  void set_stoken(const ::std::string& value);
  #if LANG_CXX11
  void set_stoken(::std::string&& value);
  #endif
  void set_stoken(const char* value);
  void set_stoken(const char* value, size_t size);
  ::std::string* mutable_stoken();
  ::std::string* release_stoken();
  void set_allocated_stoken(::std::string* stoken);

  // string z_id = 31;
  void clear_z_id();
  static const int kZIdFieldNumber = 31;
  const ::std::string& z_id() const;
  void set_z_id(const ::std::string& value);
  #if LANG_CXX11
  void set_z_id(::std::string&& value);
  #endif
  void set_z_id(const char* value);
  void set_z_id(const char* value, size_t size);
  ::std::string* mutable_z_id();
  ::std::string* release_z_id();
  void set_allocated_z_id(::std::string* z_id);

  // string cuid_galaxy2 = 32;
  void clear_cuid_galaxy2();
  static const int kCuidGalaxy2FieldNumber = 32;
  const ::std::string& cuid_galaxy2() const;
  void set_cuid_galaxy2(const ::std::string& value);
  #if LANG_CXX11
  void set_cuid_galaxy2(::std::string&& value);
  #endif
  void set_cuid_galaxy2(const char* value);
  void set_cuid_galaxy2(const char* value, size_t size);
  ::std::string* mutable_cuid_galaxy2();
  ::std::string* release_cuid_galaxy2();
  void set_allocated_cuid_galaxy2(::std::string* cuid_galaxy2);

  // string cuid_gid = 33;
  void clear_cuid_gid();
  static const int kCuidGidFieldNumber = 33;
  const ::std::string& cuid_gid() const;
  void set_cuid_gid(const ::std::string& value);
  #if LANG_CXX11
  void set_cuid_gid(::std::string&& value);
  #endif
  void set_cuid_gid(const char* value);
  void set_cuid_gid(const char* value, size_t size);
  ::std::string* mutable_cuid_gid();
  ::std::string* release_cuid_gid();
  void set_allocated_cuid_gid(::std::string* cuid_gid);

  // int32 _client_type = 1;
  void clear__client_type();
  static const int kClientTypeFieldNumber = 1;
  ::google::protobuf::int32 _client_type() const;
  void set__client_type(::google::protobuf::int32 value);

  // int32 net_type = 12;
  void clear_net_type();
  static const int kNetTypeFieldNumber = 12;
  ::google::protobuf::int32 net_type() const;
  void set_net_type(::google::protobuf::int32 value);

  // int64 _timestamp = 8;
  void clear__timestamp();
  static const int kTimestampFieldNumber = 8;
  ::google::protobuf::int64 _timestamp() const;
  void set__timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CommonReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr _client_version_;
  ::google::protobuf::internal::ArenaStringPtr _client_id_;
  ::google::protobuf::internal::ArenaStringPtr apid_;
  ::google::protobuf::internal::ArenaStringPtr _phone_imei_;
  ::google::protobuf::internal::ArenaStringPtr _from_;
  ::google::protobuf::internal::ArenaStringPtr cuid_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr bduss_;
  ::google::protobuf::internal::ArenaStringPtr tbs_;
  ::google::protobuf::internal::ArenaStringPtr subapp_type_;
  ::google::protobuf::internal::ArenaStringPtr _phone_newimei_;
  ::google::protobuf::internal::ArenaStringPtr ka_;
  ::google::protobuf::internal::ArenaStringPtr m_api_;
  ::google::protobuf::internal::ArenaStringPtr m_logid_;
  ::google::protobuf::internal::ArenaStringPtr m_cost_;
  ::google::protobuf::internal::ArenaStringPtr m_result_;
  ::google::protobuf::internal::ArenaStringPtr m_size_u_;
  ::google::protobuf::internal::ArenaStringPtr m_size_d_;
  ::google::protobuf::internal::ArenaStringPtr smallflow_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr pversion_;
  ::google::protobuf::internal::ArenaStringPtr brand_;
  ::google::protobuf::internal::ArenaStringPtr brand_type_;
  ::google::protobuf::internal::ArenaStringPtr lego_lib_version_;
  ::google::protobuf::internal::ArenaStringPtr applist_;
  ::google::protobuf::internal::ArenaStringPtr stoken_;
  ::google::protobuf::internal::ArenaStringPtr z_id_;
  ::google::protobuf::internal::ArenaStringPtr cuid_galaxy2_;
  ::google::protobuf::internal::ArenaStringPtr cuid_gid_;
  ::google::protobuf::int32 _client_type_;
  ::google::protobuf::int32 net_type_;
  ::google::protobuf::int64 _timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_CommonReq_2eproto::TableStruct;
  friend void ::protobuf_CommonReq_2eproto::InitDefaultsCommonReqImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonReq

// string BDUSS = 10;
inline void CommonReq::clear_bduss() {
  bduss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::bduss() const {
  // @@protoc_insertion_point(field_get:CommonReq.BDUSS)
  return bduss_.GetNoArena();
}
inline void CommonReq::set_bduss(const ::std::string& value) {
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.BDUSS)
}
#if LANG_CXX11
inline void CommonReq::set_bduss(::std::string&& value) {
  
  bduss_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.BDUSS)
}
#endif
inline void CommonReq::set_bduss(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.BDUSS)
}
inline void CommonReq::set_bduss(const char* value, size_t size) {
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.BDUSS)
}
inline ::std::string* CommonReq::mutable_bduss() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.BDUSS)
  return bduss_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_bduss() {
  // @@protoc_insertion_point(field_release:CommonReq.BDUSS)
  
  return bduss_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_bduss(::std::string* bduss) {
  if (bduss != NULL) {
    
  } else {
    
  }
  bduss_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bduss);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.BDUSS)
}

// int32 _client_type = 1;
inline void CommonReq::clear__client_type() {
  _client_type_ = 0;
}
inline ::google::protobuf::int32 CommonReq::_client_type() const {
  // @@protoc_insertion_point(field_get:CommonReq._client_type)
  return _client_type_;
}
inline void CommonReq::set__client_type(::google::protobuf::int32 value) {
  
  _client_type_ = value;
  // @@protoc_insertion_point(field_set:CommonReq._client_type)
}

// string _client_version = 2;
inline void CommonReq::clear__client_version() {
  _client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::_client_version() const {
  // @@protoc_insertion_point(field_get:CommonReq._client_version)
  return _client_version_.GetNoArena();
}
inline void CommonReq::set__client_version(const ::std::string& value) {
  
  _client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq._client_version)
}
#if LANG_CXX11
inline void CommonReq::set__client_version(::std::string&& value) {
  
  _client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq._client_version)
}
#endif
inline void CommonReq::set__client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  _client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq._client_version)
}
inline void CommonReq::set__client_version(const char* value, size_t size) {
  
  _client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq._client_version)
}
inline ::std::string* CommonReq::mutable__client_version() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq._client_version)
  return _client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release__client_version() {
  // @@protoc_insertion_point(field_release:CommonReq._client_version)
  
  return _client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated__client_version(::std::string* _client_version) {
  if (_client_version != NULL) {
    
  } else {
    
  }
  _client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _client_version);
  // @@protoc_insertion_point(field_set_allocated:CommonReq._client_version)
}

// string _client_id = 3;
inline void CommonReq::clear__client_id() {
  _client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::_client_id() const {
  // @@protoc_insertion_point(field_get:CommonReq._client_id)
  return _client_id_.GetNoArena();
}
inline void CommonReq::set__client_id(const ::std::string& value) {
  
  _client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq._client_id)
}
#if LANG_CXX11
inline void CommonReq::set__client_id(::std::string&& value) {
  
  _client_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq._client_id)
}
#endif
inline void CommonReq::set__client_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  _client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq._client_id)
}
inline void CommonReq::set__client_id(const char* value, size_t size) {
  
  _client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq._client_id)
}
inline ::std::string* CommonReq::mutable__client_id() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq._client_id)
  return _client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release__client_id() {
  // @@protoc_insertion_point(field_release:CommonReq._client_id)
  
  return _client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated__client_id(::std::string* _client_id) {
  if (_client_id != NULL) {
    
  } else {
    
  }
  _client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _client_id);
  // @@protoc_insertion_point(field_set_allocated:CommonReq._client_id)
}

// string apid = 4;
inline void CommonReq::clear_apid() {
  apid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::apid() const {
  // @@protoc_insertion_point(field_get:CommonReq.apid)
  return apid_.GetNoArena();
}
inline void CommonReq::set_apid(const ::std::string& value) {
  
  apid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.apid)
}
#if LANG_CXX11
inline void CommonReq::set_apid(::std::string&& value) {
  
  apid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.apid)
}
#endif
inline void CommonReq::set_apid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.apid)
}
inline void CommonReq::set_apid(const char* value, size_t size) {
  
  apid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.apid)
}
inline ::std::string* CommonReq::mutable_apid() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.apid)
  return apid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_apid() {
  // @@protoc_insertion_point(field_release:CommonReq.apid)
  
  return apid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_apid(::std::string* apid) {
  if (apid != NULL) {
    
  } else {
    
  }
  apid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apid);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.apid)
}

// string _phone_imei = 5;
inline void CommonReq::clear__phone_imei() {
  _phone_imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::_phone_imei() const {
  // @@protoc_insertion_point(field_get:CommonReq._phone_imei)
  return _phone_imei_.GetNoArena();
}
inline void CommonReq::set__phone_imei(const ::std::string& value) {
  
  _phone_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq._phone_imei)
}
#if LANG_CXX11
inline void CommonReq::set__phone_imei(::std::string&& value) {
  
  _phone_imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq._phone_imei)
}
#endif
inline void CommonReq::set__phone_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  _phone_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq._phone_imei)
}
inline void CommonReq::set__phone_imei(const char* value, size_t size) {
  
  _phone_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq._phone_imei)
}
inline ::std::string* CommonReq::mutable__phone_imei() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq._phone_imei)
  return _phone_imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release__phone_imei() {
  // @@protoc_insertion_point(field_release:CommonReq._phone_imei)
  
  return _phone_imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated__phone_imei(::std::string* _phone_imei) {
  if (_phone_imei != NULL) {
    
  } else {
    
  }
  _phone_imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _phone_imei);
  // @@protoc_insertion_point(field_set_allocated:CommonReq._phone_imei)
}

// string _from = 6;
inline void CommonReq::clear__from() {
  _from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::_from() const {
  // @@protoc_insertion_point(field_get:CommonReq._from)
  return _from_.GetNoArena();
}
inline void CommonReq::set__from(const ::std::string& value) {
  
  _from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq._from)
}
#if LANG_CXX11
inline void CommonReq::set__from(::std::string&& value) {
  
  _from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq._from)
}
#endif
inline void CommonReq::set__from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  _from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq._from)
}
inline void CommonReq::set__from(const char* value, size_t size) {
  
  _from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq._from)
}
inline ::std::string* CommonReq::mutable__from() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq._from)
  return _from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release__from() {
  // @@protoc_insertion_point(field_release:CommonReq._from)
  
  return _from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated__from(::std::string* _from) {
  if (_from != NULL) {
    
  } else {
    
  }
  _from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _from);
  // @@protoc_insertion_point(field_set_allocated:CommonReq._from)
}

// string cuid = 7;
inline void CommonReq::clear_cuid() {
  cuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::cuid() const {
  // @@protoc_insertion_point(field_get:CommonReq.cuid)
  return cuid_.GetNoArena();
}
inline void CommonReq::set_cuid(const ::std::string& value) {
  
  cuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.cuid)
}
#if LANG_CXX11
inline void CommonReq::set_cuid(::std::string&& value) {
  
  cuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.cuid)
}
#endif
inline void CommonReq::set_cuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.cuid)
}
inline void CommonReq::set_cuid(const char* value, size_t size) {
  
  cuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.cuid)
}
inline ::std::string* CommonReq::mutable_cuid() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.cuid)
  return cuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_cuid() {
  // @@protoc_insertion_point(field_release:CommonReq.cuid)
  
  return cuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_cuid(::std::string* cuid) {
  if (cuid != NULL) {
    
  } else {
    
  }
  cuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cuid);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.cuid)
}

// int64 _timestamp = 8;
inline void CommonReq::clear__timestamp() {
  _timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommonReq::_timestamp() const {
  // @@protoc_insertion_point(field_get:CommonReq._timestamp)
  return _timestamp_;
}
inline void CommonReq::set__timestamp(::google::protobuf::int64 value) {
  
  _timestamp_ = value;
  // @@protoc_insertion_point(field_set:CommonReq._timestamp)
}

// string model = 9;
inline void CommonReq::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::model() const {
  // @@protoc_insertion_point(field_get:CommonReq.model)
  return model_.GetNoArena();
}
inline void CommonReq::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.model)
}
#if LANG_CXX11
inline void CommonReq::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.model)
}
#endif
inline void CommonReq::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.model)
}
inline void CommonReq::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.model)
}
inline ::std::string* CommonReq::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_model() {
  // @@protoc_insertion_point(field_release:CommonReq.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.model)
}

// string tbs = 11;
inline void CommonReq::clear_tbs() {
  tbs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::tbs() const {
  // @@protoc_insertion_point(field_get:CommonReq.tbs)
  return tbs_.GetNoArena();
}
inline void CommonReq::set_tbs(const ::std::string& value) {
  
  tbs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.tbs)
}
#if LANG_CXX11
inline void CommonReq::set_tbs(::std::string&& value) {
  
  tbs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.tbs)
}
#endif
inline void CommonReq::set_tbs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tbs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.tbs)
}
inline void CommonReq::set_tbs(const char* value, size_t size) {
  
  tbs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.tbs)
}
inline ::std::string* CommonReq::mutable_tbs() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.tbs)
  return tbs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_tbs() {
  // @@protoc_insertion_point(field_release:CommonReq.tbs)
  
  return tbs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_tbs(::std::string* tbs) {
  if (tbs != NULL) {
    
  } else {
    
  }
  tbs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tbs);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.tbs)
}

// int32 net_type = 12;
inline void CommonReq::clear_net_type() {
  net_type_ = 0;
}
inline ::google::protobuf::int32 CommonReq::net_type() const {
  // @@protoc_insertion_point(field_get:CommonReq.net_type)
  return net_type_;
}
inline void CommonReq::set_net_type(::google::protobuf::int32 value) {
  
  net_type_ = value;
  // @@protoc_insertion_point(field_set:CommonReq.net_type)
}

// string subapp_type = 13;
inline void CommonReq::clear_subapp_type() {
  subapp_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::subapp_type() const {
  // @@protoc_insertion_point(field_get:CommonReq.subapp_type)
  return subapp_type_.GetNoArena();
}
inline void CommonReq::set_subapp_type(const ::std::string& value) {
  
  subapp_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.subapp_type)
}
#if LANG_CXX11
inline void CommonReq::set_subapp_type(::std::string&& value) {
  
  subapp_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.subapp_type)
}
#endif
inline void CommonReq::set_subapp_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subapp_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.subapp_type)
}
inline void CommonReq::set_subapp_type(const char* value, size_t size) {
  
  subapp_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.subapp_type)
}
inline ::std::string* CommonReq::mutable_subapp_type() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.subapp_type)
  return subapp_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_subapp_type() {
  // @@protoc_insertion_point(field_release:CommonReq.subapp_type)
  
  return subapp_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_subapp_type(::std::string* subapp_type) {
  if (subapp_type != NULL) {
    
  } else {
    
  }
  subapp_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subapp_type);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.subapp_type)
}

// string _phone_newimei = 14;
inline void CommonReq::clear__phone_newimei() {
  _phone_newimei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::_phone_newimei() const {
  // @@protoc_insertion_point(field_get:CommonReq._phone_newimei)
  return _phone_newimei_.GetNoArena();
}
inline void CommonReq::set__phone_newimei(const ::std::string& value) {
  
  _phone_newimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq._phone_newimei)
}
#if LANG_CXX11
inline void CommonReq::set__phone_newimei(::std::string&& value) {
  
  _phone_newimei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq._phone_newimei)
}
#endif
inline void CommonReq::set__phone_newimei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  _phone_newimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq._phone_newimei)
}
inline void CommonReq::set__phone_newimei(const char* value, size_t size) {
  
  _phone_newimei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq._phone_newimei)
}
inline ::std::string* CommonReq::mutable__phone_newimei() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq._phone_newimei)
  return _phone_newimei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release__phone_newimei() {
  // @@protoc_insertion_point(field_release:CommonReq._phone_newimei)
  
  return _phone_newimei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated__phone_newimei(::std::string* _phone_newimei) {
  if (_phone_newimei != NULL) {
    
  } else {
    
  }
  _phone_newimei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _phone_newimei);
  // @@protoc_insertion_point(field_set_allocated:CommonReq._phone_newimei)
}

// string ka = 15;
inline void CommonReq::clear_ka() {
  ka_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::ka() const {
  // @@protoc_insertion_point(field_get:CommonReq.ka)
  return ka_.GetNoArena();
}
inline void CommonReq::set_ka(const ::std::string& value) {
  
  ka_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.ka)
}
#if LANG_CXX11
inline void CommonReq::set_ka(::std::string&& value) {
  
  ka_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.ka)
}
#endif
inline void CommonReq::set_ka(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ka_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.ka)
}
inline void CommonReq::set_ka(const char* value, size_t size) {
  
  ka_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.ka)
}
inline ::std::string* CommonReq::mutable_ka() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.ka)
  return ka_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_ka() {
  // @@protoc_insertion_point(field_release:CommonReq.ka)
  
  return ka_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_ka(::std::string* ka) {
  if (ka != NULL) {
    
  } else {
    
  }
  ka_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ka);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.ka)
}

// string m_api = 16;
inline void CommonReq::clear_m_api() {
  m_api_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_api() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_api)
  return m_api_.GetNoArena();
}
inline void CommonReq::set_m_api(const ::std::string& value) {
  
  m_api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_api)
}
#if LANG_CXX11
inline void CommonReq::set_m_api(::std::string&& value) {
  
  m_api_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_api)
}
#endif
inline void CommonReq::set_m_api(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_api)
}
inline void CommonReq::set_m_api(const char* value, size_t size) {
  
  m_api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_api)
}
inline ::std::string* CommonReq::mutable_m_api() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_api)
  return m_api_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_api() {
  // @@protoc_insertion_point(field_release:CommonReq.m_api)
  
  return m_api_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_api(::std::string* m_api) {
  if (m_api != NULL) {
    
  } else {
    
  }
  m_api_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_api);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_api)
}

// string m_logid = 17;
inline void CommonReq::clear_m_logid() {
  m_logid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_logid() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_logid)
  return m_logid_.GetNoArena();
}
inline void CommonReq::set_m_logid(const ::std::string& value) {
  
  m_logid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_logid)
}
#if LANG_CXX11
inline void CommonReq::set_m_logid(::std::string&& value) {
  
  m_logid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_logid)
}
#endif
inline void CommonReq::set_m_logid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_logid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_logid)
}
inline void CommonReq::set_m_logid(const char* value, size_t size) {
  
  m_logid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_logid)
}
inline ::std::string* CommonReq::mutable_m_logid() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_logid)
  return m_logid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_logid() {
  // @@protoc_insertion_point(field_release:CommonReq.m_logid)
  
  return m_logid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_logid(::std::string* m_logid) {
  if (m_logid != NULL) {
    
  } else {
    
  }
  m_logid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_logid);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_logid)
}

// string m_cost = 18;
inline void CommonReq::clear_m_cost() {
  m_cost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_cost() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_cost)
  return m_cost_.GetNoArena();
}
inline void CommonReq::set_m_cost(const ::std::string& value) {
  
  m_cost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_cost)
}
#if LANG_CXX11
inline void CommonReq::set_m_cost(::std::string&& value) {
  
  m_cost_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_cost)
}
#endif
inline void CommonReq::set_m_cost(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_cost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_cost)
}
inline void CommonReq::set_m_cost(const char* value, size_t size) {
  
  m_cost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_cost)
}
inline ::std::string* CommonReq::mutable_m_cost() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_cost)
  return m_cost_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_cost() {
  // @@protoc_insertion_point(field_release:CommonReq.m_cost)
  
  return m_cost_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_cost(::std::string* m_cost) {
  if (m_cost != NULL) {
    
  } else {
    
  }
  m_cost_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_cost);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_cost)
}

// string m_result = 19;
inline void CommonReq::clear_m_result() {
  m_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_result() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_result)
  return m_result_.GetNoArena();
}
inline void CommonReq::set_m_result(const ::std::string& value) {
  
  m_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_result)
}
#if LANG_CXX11
inline void CommonReq::set_m_result(::std::string&& value) {
  
  m_result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_result)
}
#endif
inline void CommonReq::set_m_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_result)
}
inline void CommonReq::set_m_result(const char* value, size_t size) {
  
  m_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_result)
}
inline ::std::string* CommonReq::mutable_m_result() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_result)
  return m_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_result() {
  // @@protoc_insertion_point(field_release:CommonReq.m_result)
  
  return m_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_result(::std::string* m_result) {
  if (m_result != NULL) {
    
  } else {
    
  }
  m_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_result);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_result)
}

// string m_size_u = 20;
inline void CommonReq::clear_m_size_u() {
  m_size_u_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_size_u() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_size_u)
  return m_size_u_.GetNoArena();
}
inline void CommonReq::set_m_size_u(const ::std::string& value) {
  
  m_size_u_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_size_u)
}
#if LANG_CXX11
inline void CommonReq::set_m_size_u(::std::string&& value) {
  
  m_size_u_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_size_u)
}
#endif
inline void CommonReq::set_m_size_u(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_size_u_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_size_u)
}
inline void CommonReq::set_m_size_u(const char* value, size_t size) {
  
  m_size_u_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_size_u)
}
inline ::std::string* CommonReq::mutable_m_size_u() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_size_u)
  return m_size_u_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_size_u() {
  // @@protoc_insertion_point(field_release:CommonReq.m_size_u)
  
  return m_size_u_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_size_u(::std::string* m_size_u) {
  if (m_size_u != NULL) {
    
  } else {
    
  }
  m_size_u_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_size_u);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_size_u)
}

// string m_size_d = 21;
inline void CommonReq::clear_m_size_d() {
  m_size_d_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::m_size_d() const {
  // @@protoc_insertion_point(field_get:CommonReq.m_size_d)
  return m_size_d_.GetNoArena();
}
inline void CommonReq::set_m_size_d(const ::std::string& value) {
  
  m_size_d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.m_size_d)
}
#if LANG_CXX11
inline void CommonReq::set_m_size_d(::std::string&& value) {
  
  m_size_d_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.m_size_d)
}
#endif
inline void CommonReq::set_m_size_d(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  m_size_d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.m_size_d)
}
inline void CommonReq::set_m_size_d(const char* value, size_t size) {
  
  m_size_d_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.m_size_d)
}
inline ::std::string* CommonReq::mutable_m_size_d() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.m_size_d)
  return m_size_d_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_m_size_d() {
  // @@protoc_insertion_point(field_release:CommonReq.m_size_d)
  
  return m_size_d_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_m_size_d(::std::string* m_size_d) {
  if (m_size_d != NULL) {
    
  } else {
    
  }
  m_size_d_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_size_d);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.m_size_d)
}

// string smallflow = 22;
inline void CommonReq::clear_smallflow() {
  smallflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::smallflow() const {
  // @@protoc_insertion_point(field_get:CommonReq.smallflow)
  return smallflow_.GetNoArena();
}
inline void CommonReq::set_smallflow(const ::std::string& value) {
  
  smallflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.smallflow)
}
#if LANG_CXX11
inline void CommonReq::set_smallflow(::std::string&& value) {
  
  smallflow_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.smallflow)
}
#endif
inline void CommonReq::set_smallflow(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smallflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.smallflow)
}
inline void CommonReq::set_smallflow(const char* value, size_t size) {
  
  smallflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.smallflow)
}
inline ::std::string* CommonReq::mutable_smallflow() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.smallflow)
  return smallflow_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_smallflow() {
  // @@protoc_insertion_point(field_release:CommonReq.smallflow)
  
  return smallflow_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_smallflow(::std::string* smallflow) {
  if (smallflow != NULL) {
    
  } else {
    
  }
  smallflow_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallflow);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.smallflow)
}

// string sign = 23;
inline void CommonReq::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::sign() const {
  // @@protoc_insertion_point(field_get:CommonReq.sign)
  return sign_.GetNoArena();
}
inline void CommonReq::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.sign)
}
#if LANG_CXX11
inline void CommonReq::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.sign)
}
#endif
inline void CommonReq::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.sign)
}
inline void CommonReq::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.sign)
}
inline ::std::string* CommonReq::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_sign() {
  // @@protoc_insertion_point(field_release:CommonReq.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.sign)
}

// string pversion = 24;
inline void CommonReq::clear_pversion() {
  pversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::pversion() const {
  // @@protoc_insertion_point(field_get:CommonReq.pversion)
  return pversion_.GetNoArena();
}
inline void CommonReq::set_pversion(const ::std::string& value) {
  
  pversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.pversion)
}
#if LANG_CXX11
inline void CommonReq::set_pversion(::std::string&& value) {
  
  pversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.pversion)
}
#endif
inline void CommonReq::set_pversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.pversion)
}
inline void CommonReq::set_pversion(const char* value, size_t size) {
  
  pversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.pversion)
}
inline ::std::string* CommonReq::mutable_pversion() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.pversion)
  return pversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_pversion() {
  // @@protoc_insertion_point(field_release:CommonReq.pversion)
  
  return pversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_pversion(::std::string* pversion) {
  if (pversion != NULL) {
    
  } else {
    
  }
  pversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pversion);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.pversion)
}

// string brand = 26;
inline void CommonReq::clear_brand() {
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::brand() const {
  // @@protoc_insertion_point(field_get:CommonReq.brand)
  return brand_.GetNoArena();
}
inline void CommonReq::set_brand(const ::std::string& value) {
  
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.brand)
}
#if LANG_CXX11
inline void CommonReq::set_brand(::std::string&& value) {
  
  brand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.brand)
}
#endif
inline void CommonReq::set_brand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.brand)
}
inline void CommonReq::set_brand(const char* value, size_t size) {
  
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.brand)
}
inline ::std::string* CommonReq::mutable_brand() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.brand)
  return brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_brand() {
  // @@protoc_insertion_point(field_release:CommonReq.brand)
  
  return brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_brand(::std::string* brand) {
  if (brand != NULL) {
    
  } else {
    
  }
  brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.brand)
}

// string brand_type = 27;
inline void CommonReq::clear_brand_type() {
  brand_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::brand_type() const {
  // @@protoc_insertion_point(field_get:CommonReq.brand_type)
  return brand_type_.GetNoArena();
}
inline void CommonReq::set_brand_type(const ::std::string& value) {
  
  brand_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.brand_type)
}
#if LANG_CXX11
inline void CommonReq::set_brand_type(::std::string&& value) {
  
  brand_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.brand_type)
}
#endif
inline void CommonReq::set_brand_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brand_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.brand_type)
}
inline void CommonReq::set_brand_type(const char* value, size_t size) {
  
  brand_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.brand_type)
}
inline ::std::string* CommonReq::mutable_brand_type() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.brand_type)
  return brand_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_brand_type() {
  // @@protoc_insertion_point(field_release:CommonReq.brand_type)
  
  return brand_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_brand_type(::std::string* brand_type) {
  if (brand_type != NULL) {
    
  } else {
    
  }
  brand_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brand_type);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.brand_type)
}

// string lego_lib_version = 28;
inline void CommonReq::clear_lego_lib_version() {
  lego_lib_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::lego_lib_version() const {
  // @@protoc_insertion_point(field_get:CommonReq.lego_lib_version)
  return lego_lib_version_.GetNoArena();
}
inline void CommonReq::set_lego_lib_version(const ::std::string& value) {
  
  lego_lib_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.lego_lib_version)
}
#if LANG_CXX11
inline void CommonReq::set_lego_lib_version(::std::string&& value) {
  
  lego_lib_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.lego_lib_version)
}
#endif
inline void CommonReq::set_lego_lib_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lego_lib_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.lego_lib_version)
}
inline void CommonReq::set_lego_lib_version(const char* value, size_t size) {
  
  lego_lib_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.lego_lib_version)
}
inline ::std::string* CommonReq::mutable_lego_lib_version() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.lego_lib_version)
  return lego_lib_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_lego_lib_version() {
  // @@protoc_insertion_point(field_release:CommonReq.lego_lib_version)
  
  return lego_lib_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_lego_lib_version(::std::string* lego_lib_version) {
  if (lego_lib_version != NULL) {
    
  } else {
    
  }
  lego_lib_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lego_lib_version);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.lego_lib_version)
}

// string applist = 29;
inline void CommonReq::clear_applist() {
  applist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::applist() const {
  // @@protoc_insertion_point(field_get:CommonReq.applist)
  return applist_.GetNoArena();
}
inline void CommonReq::set_applist(const ::std::string& value) {
  
  applist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.applist)
}
#if LANG_CXX11
inline void CommonReq::set_applist(::std::string&& value) {
  
  applist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.applist)
}
#endif
inline void CommonReq::set_applist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  applist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.applist)
}
inline void CommonReq::set_applist(const char* value, size_t size) {
  
  applist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.applist)
}
inline ::std::string* CommonReq::mutable_applist() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.applist)
  return applist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_applist() {
  // @@protoc_insertion_point(field_release:CommonReq.applist)
  
  return applist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_applist(::std::string* applist) {
  if (applist != NULL) {
    
  } else {
    
  }
  applist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), applist);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.applist)
}

// string stoken = 30;
inline void CommonReq::clear_stoken() {
  stoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::stoken() const {
  // @@protoc_insertion_point(field_get:CommonReq.stoken)
  return stoken_.GetNoArena();
}
inline void CommonReq::set_stoken(const ::std::string& value) {
  
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.stoken)
}
#if LANG_CXX11
inline void CommonReq::set_stoken(::std::string&& value) {
  
  stoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.stoken)
}
#endif
inline void CommonReq::set_stoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.stoken)
}
inline void CommonReq::set_stoken(const char* value, size_t size) {
  
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.stoken)
}
inline ::std::string* CommonReq::mutable_stoken() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.stoken)
  return stoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_stoken() {
  // @@protoc_insertion_point(field_release:CommonReq.stoken)
  
  return stoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_stoken(::std::string* stoken) {
  if (stoken != NULL) {
    
  } else {
    
  }
  stoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoken);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.stoken)
}

// string z_id = 31;
inline void CommonReq::clear_z_id() {
  z_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::z_id() const {
  // @@protoc_insertion_point(field_get:CommonReq.z_id)
  return z_id_.GetNoArena();
}
inline void CommonReq::set_z_id(const ::std::string& value) {
  
  z_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.z_id)
}
#if LANG_CXX11
inline void CommonReq::set_z_id(::std::string&& value) {
  
  z_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.z_id)
}
#endif
inline void CommonReq::set_z_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  z_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.z_id)
}
inline void CommonReq::set_z_id(const char* value, size_t size) {
  
  z_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.z_id)
}
inline ::std::string* CommonReq::mutable_z_id() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.z_id)
  return z_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_z_id() {
  // @@protoc_insertion_point(field_release:CommonReq.z_id)
  
  return z_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_z_id(::std::string* z_id) {
  if (z_id != NULL) {
    
  } else {
    
  }
  z_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), z_id);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.z_id)
}

// string cuid_galaxy2 = 32;
inline void CommonReq::clear_cuid_galaxy2() {
  cuid_galaxy2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::cuid_galaxy2() const {
  // @@protoc_insertion_point(field_get:CommonReq.cuid_galaxy2)
  return cuid_galaxy2_.GetNoArena();
}
inline void CommonReq::set_cuid_galaxy2(const ::std::string& value) {
  
  cuid_galaxy2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.cuid_galaxy2)
}
#if LANG_CXX11
inline void CommonReq::set_cuid_galaxy2(::std::string&& value) {
  
  cuid_galaxy2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.cuid_galaxy2)
}
#endif
inline void CommonReq::set_cuid_galaxy2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cuid_galaxy2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.cuid_galaxy2)
}
inline void CommonReq::set_cuid_galaxy2(const char* value, size_t size) {
  
  cuid_galaxy2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.cuid_galaxy2)
}
inline ::std::string* CommonReq::mutable_cuid_galaxy2() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.cuid_galaxy2)
  return cuid_galaxy2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_cuid_galaxy2() {
  // @@protoc_insertion_point(field_release:CommonReq.cuid_galaxy2)
  
  return cuid_galaxy2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_cuid_galaxy2(::std::string* cuid_galaxy2) {
  if (cuid_galaxy2 != NULL) {
    
  } else {
    
  }
  cuid_galaxy2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cuid_galaxy2);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.cuid_galaxy2)
}

// string cuid_gid = 33;
inline void CommonReq::clear_cuid_gid() {
  cuid_gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonReq::cuid_gid() const {
  // @@protoc_insertion_point(field_get:CommonReq.cuid_gid)
  return cuid_gid_.GetNoArena();
}
inline void CommonReq::set_cuid_gid(const ::std::string& value) {
  
  cuid_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommonReq.cuid_gid)
}
#if LANG_CXX11
inline void CommonReq::set_cuid_gid(::std::string&& value) {
  
  cuid_gid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommonReq.cuid_gid)
}
#endif
inline void CommonReq::set_cuid_gid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cuid_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommonReq.cuid_gid)
}
inline void CommonReq::set_cuid_gid(const char* value, size_t size) {
  
  cuid_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommonReq.cuid_gid)
}
inline ::std::string* CommonReq::mutable_cuid_gid() {
  
  // @@protoc_insertion_point(field_mutable:CommonReq.cuid_gid)
  return cuid_gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonReq::release_cuid_gid() {
  // @@protoc_insertion_point(field_release:CommonReq.cuid_gid)
  
  return cuid_gid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonReq::set_allocated_cuid_gid(::std::string* cuid_gid) {
  if (cuid_gid != NULL) {
    
  } else {
    
  }
  cuid_gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cuid_gid);
  // @@protoc_insertion_point(field_set_allocated:CommonReq.cuid_gid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonReq_2eproto__INCLUDED
