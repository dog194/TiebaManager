// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#include "User.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR User_PrivSets::User_PrivSets(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.location_)*/ 0,
      /*decltype(_impl_.like_)*/ 0,
      /*decltype(_impl_.group_)*/ 0,
      /*decltype(_impl_.post_)*/ 0,
      /*decltype(_impl_.friend__)*/ 0,
      /*decltype(_impl_.live_)*/ 0,
      /*decltype(_impl_.reply_)*/ 0,
      /*decltype(_impl_.bazhu_show_inside_)*/ 0,
      /*decltype(_impl_.bazhu_show_outside_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct User_PrivSetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_PrivSetsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_PrivSetsDefaultTypeInternal() {}
  union {
    User_PrivSets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_PrivSetsDefaultTypeInternal _User_PrivSets_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User_LikeForumInfo::User_LikeForumInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.forum_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.forum_id_)*/ ::uint64_t{0u},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct User_LikeForumInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_LikeForumInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_LikeForumInfoDefaultTypeInternal() {}
  union {
    User_LikeForumInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_LikeForumInfoDefaultTypeInternal _User_LikeForumInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User_UserVipInfo::User_UserVipInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.icon_url_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.v_status_)*/ 0u,
      /*decltype(_impl_.s_time_)*/ 0u,
      /*decltype(_impl_.e_time_)*/ 0u,
      /*decltype(_impl_.ext_score_)*/ 0u,
      /*decltype(_impl_.v_level_)*/ 0u,
      /*decltype(_impl_.a_score_)*/ 0,
      /*decltype(_impl_.n_score_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct User_UserVipInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_UserVipInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_UserVipInfoDefaultTypeInternal() {}
  union {
    User_UserVipInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_UserVipInfoDefaultTypeInternal _User_UserVipInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User_NewGodInfo::User_NewGodInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.field_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.type_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.status_)*/ 0,
      /*decltype(_impl_.field_id_)*/ 0u,
      /*decltype(_impl_.type_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct User_NewGodInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_NewGodInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_NewGodInfoDefaultTypeInternal() {}
  union {
    User_NewGodInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_NewGodInfoDefaultTypeInternal _User_NewGodInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User_VirtualImageInfo_StateInfo::User_VirtualImageInfo_StateInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct User_VirtualImageInfo_StateInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_VirtualImageInfo_StateInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_VirtualImageInfo_StateInfoDefaultTypeInternal() {}
  union {
    User_VirtualImageInfo_StateInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_VirtualImageInfo_StateInfoDefaultTypeInternal _User_VirtualImageInfo_StateInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User_VirtualImageInfo::User_VirtualImageInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.personal_state_)*/ nullptr,
      /*decltype(_impl_.isset_virtual_image_)*/ 0,
    } {}
struct User_VirtualImageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR User_VirtualImageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~User_VirtualImageInfoDefaultTypeInternal() {}
  union {
    User_VirtualImageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 User_VirtualImageInfoDefaultTypeInternal _User_VirtualImageInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.likeforum_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_show_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.portrait_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bawu_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bduss_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tb_age_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tieba_uid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.priv_sets_)*/ nullptr,
      /*decltype(_impl_.vipinfo_)*/ nullptr,
      /*decltype(_impl_.new_god_data_)*/ nullptr,
      /*decltype(_impl_.virtual_image_info_)*/ nullptr,
      /*decltype(_impl_.id_)*/ ::int64_t{0},
      /*decltype(_impl_.is_coreuser_)*/ 0,
      /*decltype(_impl_.level_id_)*/ 0,
      /*decltype(_impl_.is_bawu_)*/ 0,
      /*decltype(_impl_.post_num_)*/ 0,
      /*decltype(_impl_.gender_)*/ 0,
      /*decltype(_impl_.is_friend_)*/ 0,
      /*decltype(_impl_.is_guanfang_)*/ 0,
      /*decltype(_impl_.is_fans_)*/ 0,
      /*decltype(_impl_.is_default_avatar_)*/ 0,
    } {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;
static ::_pb::Metadata file_level_metadata_User_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_User_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_User_2eproto = nullptr;
const ::uint32_t TableStruct_User_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.like_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.group_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.post_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.friend__),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.live_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.reply_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.bazhu_show_inside_),
    PROTOBUF_FIELD_OFFSET(::User_PrivSets, _impl_.bazhu_show_outside_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::User_LikeForumInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_LikeForumInfo, _impl_.forum_name_),
    PROTOBUF_FIELD_OFFSET(::User_LikeForumInfo, _impl_.forum_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.v_status_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.s_time_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.e_time_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.ext_score_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.v_level_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.a_score_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.n_score_),
    PROTOBUF_FIELD_OFFSET(::User_UserVipInfo, _impl_.icon_url_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _impl_.field_id_),
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _impl_.field_name_),
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::User_NewGodInfo, _impl_.type_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo_StateInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo_StateInfo, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo, _impl_.isset_virtual_image_),
    PROTOBUF_FIELD_OFFSET(::User_VirtualImageInfo, _impl_.personal_state_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::User, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::User, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::User, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.name_show_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.portrait_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_coreuser_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.level_id_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_bawu_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.bawu_type_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.bduss_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.post_num_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.tb_age_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.gender_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.priv_sets_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_friend_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.likeforum_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_guanfang_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.vipinfo_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_fans_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.new_god_data_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.is_default_avatar_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.tieba_uid_),
    PROTOBUF_FIELD_OFFSET(::User, _impl_.virtual_image_info_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    1,
    ~0u,
    2,
    ~0u,
    ~0u,
    3,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::User_PrivSets)},
        {17, -1, -1, sizeof(::User_LikeForumInfo)},
        {27, -1, -1, sizeof(::User_UserVipInfo)},
        {43, -1, -1, sizeof(::User_NewGodInfo)},
        {56, -1, -1, sizeof(::User_VirtualImageInfo_StateInfo)},
        {65, 75, -1, sizeof(::User_VirtualImageInfo)},
        {77, 107, -1, sizeof(::User)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_User_PrivSets_default_instance_._instance,
    &::_User_LikeForumInfo_default_instance_._instance,
    &::_User_UserVipInfo_default_instance_._instance,
    &::_User_NewGodInfo_default_instance_._instance,
    &::_User_VirtualImageInfo_StateInfo_default_instance_._instance,
    &::_User_VirtualImageInfo_default_instance_._instance,
    &::_User_default_instance_._instance,
};
const char descriptor_table_protodef_User_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nUser.proto\"\357\010\n\004User\022\n\n\002id\030\002 \001(\003\022\014\n\004nam"
    "e\030\003 \001(\t\022\021\n\tname_show\030\004 \001(\t\022\020\n\010portrait\030\005"
    " \001(\t\022\023\n\013is_coreuser\030\024 \001(\005\022\020\n\010level_id\030\027 "
    "\001(\005\022\017\n\007is_bawu\030\031 \001(\005\022\021\n\tbawu_type\030\032 \001(\t\022"
    "\r\n\005BDUSS\030\035 \001(\t\022\020\n\010post_num\030% \001(\005\022\016\n\006tb_a"
    "ge\030& \001(\t\022\016\n\006gender\030* \001(\005\022!\n\tpriv_sets\030- "
    "\001(\0132\016.User.PrivSets\022\021\n\tis_friend\030. \001(\005\022&"
    "\n\tlikeForum\030/ \003(\0132\023.User.LikeForumInfo\022\023"
    "\n\013is_guanfang\0304 \001(\005\022\"\n\007vipInfo\030= \001(\0132\021.U"
    "ser.UserVipInfo\022\017\n\007is_fans\030[ \001(\005\022&\n\014new_"
    "god_data\030e \001(\0132\020.User.NewGodInfo\022\031\n\021is_d"
    "efault_avatar\030j \001(\005\022\021\n\ttieba_uid\030x \001(\t\0223"
    "\n\022virtual_image_info\030\210\001 \001(\0132\026.User.Virtu"
    "alImageInfo\032\253\001\n\010PrivSets\022\020\n\010location\030\001 \001"
    "(\005\022\014\n\004like\030\002 \001(\005\022\r\n\005group\030\003 \001(\005\022\014\n\004post\030"
    "\004 \001(\005\022\016\n\006friend\030\005 \001(\005\022\014\n\004live\030\006 \001(\005\022\r\n\005r"
    "eply\030\007 \001(\005\022\031\n\021bazhu_show_inside\030\010 \001(\005\022\032\n"
    "\022bazhu_show_outside\030\t \001(\005\0325\n\rLikeForumIn"
    "fo\022\022\n\nforum_name\030\001 \001(\t\022\020\n\010forum_id\030\002 \001(\004"
    "\032\227\001\n\013UserVipInfo\022\020\n\010v_status\030\001 \001(\r\022\016\n\006s_"
    "time\030\002 \001(\r\022\016\n\006e_time\030\003 \001(\r\022\021\n\text_score\030"
    "\004 \001(\r\022\017\n\007v_level\030\005 \001(\r\022\017\n\007a_score\030\006 \001(\005\022"
    "\017\n\007n_score\030\007 \001(\r\022\020\n\010icon_url\030\010 \001(\t\032c\n\nNe"
    "wGodInfo\022\016\n\006status\030\001 \001(\005\022\020\n\010field_id\030\002 \001"
    "(\r\022\022\n\nfield_name\030\003 \001(\t\022\014\n\004type\030\004 \001(\r\022\021\n\t"
    "type_name\030\005 \001(\t\032\204\001\n\020VirtualImageInfo\022\033\n\023"
    "isset_virtual_image\030\001 \001(\005\0228\n\016personal_st"
    "ate\030\t \001(\0132 .User.VirtualImageInfo.StateI"
    "nfo\032\031\n\tStateInfo\022\014\n\004text\030\002 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_User_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_User_2eproto = {
    false,
    false,
    1158,
    descriptor_table_protodef_User_2eproto,
    "User.proto",
    &descriptor_table_User_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_User_2eproto::offsets,
    file_level_metadata_User_2eproto,
    file_level_enum_descriptors_User_2eproto,
    file_level_service_descriptors_User_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_User_2eproto_getter() {
  return &descriptor_table_User_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_User_2eproto(&descriptor_table_User_2eproto);
// ===================================================================

class User_PrivSets::_Internal {
 public:
};

User_PrivSets::User_PrivSets(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.PrivSets)
}
User_PrivSets::User_PrivSets(const User_PrivSets& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:User.PrivSets)
}
inline void User_PrivSets::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){0},
      decltype(_impl_.like_){0},
      decltype(_impl_.group_){0},
      decltype(_impl_.post_){0},
      decltype(_impl_.friend__){0},
      decltype(_impl_.live_){0},
      decltype(_impl_.reply_){0},
      decltype(_impl_.bazhu_show_inside_){0},
      decltype(_impl_.bazhu_show_outside_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
User_PrivSets::~User_PrivSets() {
  // @@protoc_insertion_point(destructor:User.PrivSets)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_PrivSets::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void User_PrivSets::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_PrivSets::Clear() {
// @@protoc_insertion_point(message_clear_start:User.PrivSets)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.location_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bazhu_show_outside_) -
      reinterpret_cast<char*>(&_impl_.location_)) + sizeof(_impl_.bazhu_show_outside_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_PrivSets::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> User_PrivSets::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_PrivSets_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 location = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.location_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.location_)}},
    // int32 like = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.like_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.like_)}},
    // int32 group = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.group_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.group_)}},
    // int32 post = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.post_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.post_)}},
    // int32 friend = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.friend__), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.friend__)}},
    // int32 live = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.live_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.live_)}},
    // int32 reply = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.reply_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.reply_)}},
    // int32 bazhu_show_inside = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.bazhu_show_inside_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.bazhu_show_inside_)}},
    // int32 bazhu_show_outside = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_PrivSets, _impl_.bazhu_show_outside_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.bazhu_show_outside_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 location = 1;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.location_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 like = 2;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.like_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 group = 3;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.group_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 post = 4;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.post_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 friend = 5;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.friend__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 live = 6;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.live_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 reply = 7;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.reply_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bazhu_show_inside = 8;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.bazhu_show_inside_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bazhu_show_outside = 9;
    {PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.bazhu_show_outside_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* User_PrivSets::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.PrivSets)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 location = 1;
  if (this->_internal_location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_location(), target);
  }

  // int32 like = 2;
  if (this->_internal_like() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_like(), target);
  }

  // int32 group = 3;
  if (this->_internal_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_group(), target);
  }

  // int32 post = 4;
  if (this->_internal_post() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_post(), target);
  }

  // int32 friend = 5;
  if (this->_internal_friend_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_friend_(), target);
  }

  // int32 live = 6;
  if (this->_internal_live() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_live(), target);
  }

  // int32 reply = 7;
  if (this->_internal_reply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_reply(), target);
  }

  // int32 bazhu_show_inside = 8;
  if (this->_internal_bazhu_show_inside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_bazhu_show_inside(), target);
  }

  // int32 bazhu_show_outside = 9;
  if (this->_internal_bazhu_show_outside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_bazhu_show_outside(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.PrivSets)
  return target;
}

::size_t User_PrivSets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.PrivSets)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 location = 1;
  if (this->_internal_location() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_location());
  }

  // int32 like = 2;
  if (this->_internal_like() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_like());
  }

  // int32 group = 3;
  if (this->_internal_group() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_group());
  }

  // int32 post = 4;
  if (this->_internal_post() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_post());
  }

  // int32 friend = 5;
  if (this->_internal_friend_() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_friend_());
  }

  // int32 live = 6;
  if (this->_internal_live() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_live());
  }

  // int32 reply = 7;
  if (this->_internal_reply() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_reply());
  }

  // int32 bazhu_show_inside = 8;
  if (this->_internal_bazhu_show_inside() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bazhu_show_inside());
  }

  // int32 bazhu_show_outside = 9;
  if (this->_internal_bazhu_show_outside() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bazhu_show_outside());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_PrivSets::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_PrivSets::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_PrivSets::GetClassData() const { return &_class_data_; }


void User_PrivSets::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_PrivSets*>(&to_msg);
  auto& from = static_cast<const User_PrivSets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.PrivSets)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_location() != 0) {
    _this->_internal_set_location(from._internal_location());
  }
  if (from._internal_like() != 0) {
    _this->_internal_set_like(from._internal_like());
  }
  if (from._internal_group() != 0) {
    _this->_internal_set_group(from._internal_group());
  }
  if (from._internal_post() != 0) {
    _this->_internal_set_post(from._internal_post());
  }
  if (from._internal_friend_() != 0) {
    _this->_internal_set_friend_(from._internal_friend_());
  }
  if (from._internal_live() != 0) {
    _this->_internal_set_live(from._internal_live());
  }
  if (from._internal_reply() != 0) {
    _this->_internal_set_reply(from._internal_reply());
  }
  if (from._internal_bazhu_show_inside() != 0) {
    _this->_internal_set_bazhu_show_inside(from._internal_bazhu_show_inside());
  }
  if (from._internal_bazhu_show_outside() != 0) {
    _this->_internal_set_bazhu_show_outside(from._internal_bazhu_show_outside());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_PrivSets::CopyFrom(const User_PrivSets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.PrivSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_PrivSets::IsInitialized() const {
  return true;
}

void User_PrivSets::InternalSwap(User_PrivSets* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.bazhu_show_outside_)
      + sizeof(User_PrivSets::_impl_.bazhu_show_outside_)
      - PROTOBUF_FIELD_OFFSET(User_PrivSets, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata User_PrivSets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[0]);
}
// ===================================================================

class User_LikeForumInfo::_Internal {
 public:
};

User_LikeForumInfo::User_LikeForumInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.LikeForumInfo)
}
User_LikeForumInfo::User_LikeForumInfo(const User_LikeForumInfo& from) : ::google::protobuf::Message() {
  User_LikeForumInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.forum_name_){},
      decltype(_impl_.forum_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.forum_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.forum_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_forum_name().empty()) {
    _this->_impl_.forum_name_.Set(from._internal_forum_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.forum_id_ = from._impl_.forum_id_;

  // @@protoc_insertion_point(copy_constructor:User.LikeForumInfo)
}
inline void User_LikeForumInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.forum_name_){},
      decltype(_impl_.forum_id_){::uint64_t{0u}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.forum_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.forum_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User_LikeForumInfo::~User_LikeForumInfo() {
  // @@protoc_insertion_point(destructor:User.LikeForumInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_LikeForumInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.forum_name_.Destroy();
}
void User_LikeForumInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_LikeForumInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:User.LikeForumInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forum_name_.ClearToEmpty();
  _impl_.forum_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_LikeForumInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> User_LikeForumInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_LikeForumInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 forum_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(User_LikeForumInfo, _impl_.forum_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User_LikeForumInfo, _impl_.forum_id_)}},
    // string forum_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(User_LikeForumInfo, _impl_.forum_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string forum_name = 1;
    {PROTOBUF_FIELD_OFFSET(User_LikeForumInfo, _impl_.forum_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 forum_id = 2;
    {PROTOBUF_FIELD_OFFSET(User_LikeForumInfo, _impl_.forum_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\22\12\0\0\0\0\0\0"
    "User.LikeForumInfo"
    "forum_name"
  }},
};

::uint8_t* User_LikeForumInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.LikeForumInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string forum_name = 1;
  if (!this->_internal_forum_name().empty()) {
    const std::string& _s = this->_internal_forum_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.LikeForumInfo.forum_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 forum_id = 2;
  if (this->_internal_forum_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_forum_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.LikeForumInfo)
  return target;
}

::size_t User_LikeForumInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.LikeForumInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string forum_name = 1;
  if (!this->_internal_forum_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_forum_name());
  }

  // uint64 forum_id = 2;
  if (this->_internal_forum_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_forum_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_LikeForumInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_LikeForumInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_LikeForumInfo::GetClassData() const { return &_class_data_; }


void User_LikeForumInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_LikeForumInfo*>(&to_msg);
  auto& from = static_cast<const User_LikeForumInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.LikeForumInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_forum_name().empty()) {
    _this->_internal_set_forum_name(from._internal_forum_name());
  }
  if (from._internal_forum_id() != 0) {
    _this->_internal_set_forum_id(from._internal_forum_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_LikeForumInfo::CopyFrom(const User_LikeForumInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.LikeForumInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_LikeForumInfo::IsInitialized() const {
  return true;
}

void User_LikeForumInfo::InternalSwap(User_LikeForumInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.forum_name_, lhs_arena,
                                       &other->_impl_.forum_name_, rhs_arena);
        swap(_impl_.forum_id_, other->_impl_.forum_id_);
}

::google::protobuf::Metadata User_LikeForumInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[1]);
}
// ===================================================================

class User_UserVipInfo::_Internal {
 public:
};

User_UserVipInfo::User_UserVipInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.UserVipInfo)
}
User_UserVipInfo::User_UserVipInfo(const User_UserVipInfo& from) : ::google::protobuf::Message() {
  User_UserVipInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.icon_url_){},
      decltype(_impl_.v_status_){},
      decltype(_impl_.s_time_){},
      decltype(_impl_.e_time_){},
      decltype(_impl_.ext_score_){},
      decltype(_impl_.v_level_){},
      decltype(_impl_.a_score_){},
      decltype(_impl_.n_score_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.icon_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.icon_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_icon_url().empty()) {
    _this->_impl_.icon_url_.Set(from._internal_icon_url(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.v_status_, &from._impl_.v_status_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.n_score_) -
    reinterpret_cast<char*>(&_impl_.v_status_)) + sizeof(_impl_.n_score_));

  // @@protoc_insertion_point(copy_constructor:User.UserVipInfo)
}
inline void User_UserVipInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.icon_url_){},
      decltype(_impl_.v_status_){0u},
      decltype(_impl_.s_time_){0u},
      decltype(_impl_.e_time_){0u},
      decltype(_impl_.ext_score_){0u},
      decltype(_impl_.v_level_){0u},
      decltype(_impl_.a_score_){0},
      decltype(_impl_.n_score_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.icon_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.icon_url_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User_UserVipInfo::~User_UserVipInfo() {
  // @@protoc_insertion_point(destructor:User.UserVipInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_UserVipInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.icon_url_.Destroy();
}
void User_UserVipInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_UserVipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:User.UserVipInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.icon_url_.ClearToEmpty();
  ::memset(&_impl_.v_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.n_score_) -
      reinterpret_cast<char*>(&_impl_.v_status_)) + sizeof(_impl_.n_score_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_UserVipInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 41, 2> User_UserVipInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_UserVipInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string icon_url = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.icon_url_)}},
    // uint32 v_status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.v_status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.v_status_)}},
    // uint32 s_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.s_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.s_time_)}},
    // uint32 e_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.e_time_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.e_time_)}},
    // uint32 ext_score = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.ext_score_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.ext_score_)}},
    // uint32 v_level = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.v_level_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.v_level_)}},
    // int32 a_score = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.a_score_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.a_score_)}},
    // uint32 n_score = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_UserVipInfo, _impl_.n_score_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.n_score_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 v_status = 1;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.v_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 s_time = 2;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.s_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 e_time = 3;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.e_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 ext_score = 4;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.ext_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 v_level = 5;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.v_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 a_score = 6;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.a_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint32 n_score = 7;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.n_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string icon_url = 8;
    {PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.icon_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0"
    "User.UserVipInfo"
    "icon_url"
  }},
};

::uint8_t* User_UserVipInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.UserVipInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 v_status = 1;
  if (this->_internal_v_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_v_status(), target);
  }

  // uint32 s_time = 2;
  if (this->_internal_s_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_s_time(), target);
  }

  // uint32 e_time = 3;
  if (this->_internal_e_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_e_time(), target);
  }

  // uint32 ext_score = 4;
  if (this->_internal_ext_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_ext_score(), target);
  }

  // uint32 v_level = 5;
  if (this->_internal_v_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_v_level(), target);
  }

  // int32 a_score = 6;
  if (this->_internal_a_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_a_score(), target);
  }

  // uint32 n_score = 7;
  if (this->_internal_n_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_n_score(), target);
  }

  // string icon_url = 8;
  if (!this->_internal_icon_url().empty()) {
    const std::string& _s = this->_internal_icon_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.UserVipInfo.icon_url");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.UserVipInfo)
  return target;
}

::size_t User_UserVipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.UserVipInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string icon_url = 8;
  if (!this->_internal_icon_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_icon_url());
  }

  // uint32 v_status = 1;
  if (this->_internal_v_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_v_status());
  }

  // uint32 s_time = 2;
  if (this->_internal_s_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_s_time());
  }

  // uint32 e_time = 3;
  if (this->_internal_e_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_e_time());
  }

  // uint32 ext_score = 4;
  if (this->_internal_ext_score() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ext_score());
  }

  // uint32 v_level = 5;
  if (this->_internal_v_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_v_level());
  }

  // int32 a_score = 6;
  if (this->_internal_a_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a_score());
  }

  // uint32 n_score = 7;
  if (this->_internal_n_score() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_n_score());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_UserVipInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_UserVipInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_UserVipInfo::GetClassData() const { return &_class_data_; }


void User_UserVipInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_UserVipInfo*>(&to_msg);
  auto& from = static_cast<const User_UserVipInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.UserVipInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_icon_url().empty()) {
    _this->_internal_set_icon_url(from._internal_icon_url());
  }
  if (from._internal_v_status() != 0) {
    _this->_internal_set_v_status(from._internal_v_status());
  }
  if (from._internal_s_time() != 0) {
    _this->_internal_set_s_time(from._internal_s_time());
  }
  if (from._internal_e_time() != 0) {
    _this->_internal_set_e_time(from._internal_e_time());
  }
  if (from._internal_ext_score() != 0) {
    _this->_internal_set_ext_score(from._internal_ext_score());
  }
  if (from._internal_v_level() != 0) {
    _this->_internal_set_v_level(from._internal_v_level());
  }
  if (from._internal_a_score() != 0) {
    _this->_internal_set_a_score(from._internal_a_score());
  }
  if (from._internal_n_score() != 0) {
    _this->_internal_set_n_score(from._internal_n_score());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_UserVipInfo::CopyFrom(const User_UserVipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.UserVipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_UserVipInfo::IsInitialized() const {
  return true;
}

void User_UserVipInfo::InternalSwap(User_UserVipInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.icon_url_, lhs_arena,
                                       &other->_impl_.icon_url_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.n_score_)
      + sizeof(User_UserVipInfo::_impl_.n_score_)
      - PROTOBUF_FIELD_OFFSET(User_UserVipInfo, _impl_.v_status_)>(
          reinterpret_cast<char*>(&_impl_.v_status_),
          reinterpret_cast<char*>(&other->_impl_.v_status_));
}

::google::protobuf::Metadata User_UserVipInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[2]);
}
// ===================================================================

class User_NewGodInfo::_Internal {
 public:
};

User_NewGodInfo::User_NewGodInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.NewGodInfo)
}
User_NewGodInfo::User_NewGodInfo(const User_NewGodInfo& from) : ::google::protobuf::Message() {
  User_NewGodInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field_name_){},
      decltype(_impl_.type_name_){},
      decltype(_impl_.status_){},
      decltype(_impl_.field_id_){},
      decltype(_impl_.type_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.field_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.field_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field_name().empty()) {
    _this->_impl_.field_name_.Set(from._internal_field_name(), _this->GetArenaForAllocation());
  }
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type_name().empty()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.status_, &from._impl_.status_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.type_));

  // @@protoc_insertion_point(copy_constructor:User.NewGodInfo)
}
inline void User_NewGodInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.field_name_){},
      decltype(_impl_.type_name_){},
      decltype(_impl_.status_){0},
      decltype(_impl_.field_id_){0u},
      decltype(_impl_.type_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.field_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.field_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User_NewGodInfo::~User_NewGodInfo() {
  // @@protoc_insertion_point(destructor:User.NewGodInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_NewGodInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field_name_.Destroy();
  _impl_.type_name_.Destroy();
}
void User_NewGodInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_NewGodInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:User.NewGodInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_name_.ClearToEmpty();
  _impl_.type_name_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_NewGodInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 43, 2> User_NewGodInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_NewGodInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_NewGodInfo, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.status_)}},
    // uint32 field_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_NewGodInfo, _impl_.field_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.field_id_)}},
    // string field_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.field_name_)}},
    // uint32 type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_NewGodInfo, _impl_.type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.type_)}},
    // string type_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.type_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 status = 1;
    {PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint32 field_id = 2;
    {PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.field_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string field_name = 3;
    {PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.field_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 type = 4;
    {PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string type_name = 5;
    {PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.type_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\0\12\0\11\0\0"
    "User.NewGodInfo"
    "field_name"
    "type_name"
  }},
};

::uint8_t* User_NewGodInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.NewGodInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_status(), target);
  }

  // uint32 field_id = 2;
  if (this->_internal_field_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_field_id(), target);
  }

  // string field_name = 3;
  if (!this->_internal_field_name().empty()) {
    const std::string& _s = this->_internal_field_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.NewGodInfo.field_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint32 type = 4;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_type(), target);
  }

  // string type_name = 5;
  if (!this->_internal_type_name().empty()) {
    const std::string& _s = this->_internal_type_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.NewGodInfo.type_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.NewGodInfo)
  return target;
}

::size_t User_NewGodInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.NewGodInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field_name = 3;
  if (!this->_internal_field_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field_name());
  }

  // string type_name = 5;
  if (!this->_internal_type_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type_name());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_status());
  }

  // uint32 field_id = 2;
  if (this->_internal_field_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_field_id());
  }

  // uint32 type = 4;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_NewGodInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_NewGodInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_NewGodInfo::GetClassData() const { return &_class_data_; }


void User_NewGodInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_NewGodInfo*>(&to_msg);
  auto& from = static_cast<const User_NewGodInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.NewGodInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field_name().empty()) {
    _this->_internal_set_field_name(from._internal_field_name());
  }
  if (!from._internal_type_name().empty()) {
    _this->_internal_set_type_name(from._internal_type_name());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_field_id() != 0) {
    _this->_internal_set_field_id(from._internal_field_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_NewGodInfo::CopyFrom(const User_NewGodInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.NewGodInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_NewGodInfo::IsInitialized() const {
  return true;
}

void User_NewGodInfo::InternalSwap(User_NewGodInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_name_, lhs_arena,
                                       &other->_impl_.field_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_name_, lhs_arena,
                                       &other->_impl_.type_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.type_)
      + sizeof(User_NewGodInfo::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(User_NewGodInfo, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata User_NewGodInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[3]);
}
// ===================================================================

class User_VirtualImageInfo_StateInfo::_Internal {
 public:
};

User_VirtualImageInfo_StateInfo::User_VirtualImageInfo_StateInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.VirtualImageInfo.StateInfo)
}
User_VirtualImageInfo_StateInfo::User_VirtualImageInfo_StateInfo(const User_VirtualImageInfo_StateInfo& from) : ::google::protobuf::Message() {
  User_VirtualImageInfo_StateInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:User.VirtualImageInfo.StateInfo)
}
inline void User_VirtualImageInfo_StateInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User_VirtualImageInfo_StateInfo::~User_VirtualImageInfo_StateInfo() {
  // @@protoc_insertion_point(destructor:User.VirtualImageInfo.StateInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_VirtualImageInfo_StateInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}
void User_VirtualImageInfo_StateInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_VirtualImageInfo_StateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:User.VirtualImageInfo.StateInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_VirtualImageInfo_StateInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> User_VirtualImageInfo_StateInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_VirtualImageInfo_StateInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo_StateInfo, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo_StateInfo, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "User.VirtualImageInfo.StateInfo"
    "text"
  }},
};

::uint8_t* User_VirtualImageInfo_StateInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.VirtualImageInfo.StateInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 2;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.VirtualImageInfo.StateInfo.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.VirtualImageInfo.StateInfo)
  return target;
}

::size_t User_VirtualImageInfo_StateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.VirtualImageInfo.StateInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_VirtualImageInfo_StateInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_VirtualImageInfo_StateInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_VirtualImageInfo_StateInfo::GetClassData() const { return &_class_data_; }


void User_VirtualImageInfo_StateInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_VirtualImageInfo_StateInfo*>(&to_msg);
  auto& from = static_cast<const User_VirtualImageInfo_StateInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.VirtualImageInfo.StateInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_VirtualImageInfo_StateInfo::CopyFrom(const User_VirtualImageInfo_StateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.VirtualImageInfo.StateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_VirtualImageInfo_StateInfo::IsInitialized() const {
  return true;
}

void User_VirtualImageInfo_StateInfo::InternalSwap(User_VirtualImageInfo_StateInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
}

::google::protobuf::Metadata User_VirtualImageInfo_StateInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[4]);
}
// ===================================================================

class User_VirtualImageInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<User_VirtualImageInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_._has_bits_);
  static const ::User_VirtualImageInfo_StateInfo& personal_state(const User_VirtualImageInfo* msg);
  static void set_has_personal_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::User_VirtualImageInfo_StateInfo& User_VirtualImageInfo::_Internal::personal_state(const User_VirtualImageInfo* msg) {
  return *msg->_impl_.personal_state_;
}
User_VirtualImageInfo::User_VirtualImageInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User.VirtualImageInfo)
}
User_VirtualImageInfo::User_VirtualImageInfo(const User_VirtualImageInfo& from) : ::google::protobuf::Message() {
  User_VirtualImageInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.personal_state_){nullptr},
      decltype(_impl_.isset_virtual_image_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.personal_state_ = new ::User_VirtualImageInfo_StateInfo(*from._impl_.personal_state_);
  }
  _this->_impl_.isset_virtual_image_ = from._impl_.isset_virtual_image_;

  // @@protoc_insertion_point(copy_constructor:User.VirtualImageInfo)
}
inline void User_VirtualImageInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.personal_state_){nullptr},
      decltype(_impl_.isset_virtual_image_){0},
  };
}
User_VirtualImageInfo::~User_VirtualImageInfo() {
  // @@protoc_insertion_point(destructor:User.VirtualImageInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User_VirtualImageInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.personal_state_;
}
void User_VirtualImageInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User_VirtualImageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:User.VirtualImageInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.personal_state_ != nullptr);
    _impl_.personal_state_->Clear();
  }
  _impl_.isset_virtual_image_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User_VirtualImageInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> User_VirtualImageInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_User_VirtualImageInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 isset_virtual_image = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User_VirtualImageInfo, _impl_.isset_virtual_image_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_.isset_virtual_image_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 isset_virtual_image = 1;
    {PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_.isset_virtual_image_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .User.VirtualImageInfo.StateInfo personal_state = 9;
    {PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_.personal_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::User_VirtualImageInfo_StateInfo>()},
  }}, {{
  }},
};

::uint8_t* User_VirtualImageInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User.VirtualImageInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 isset_virtual_image = 1;
  if (this->_internal_isset_virtual_image() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_isset_virtual_image(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .User.VirtualImageInfo.StateInfo personal_state = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::personal_state(this),
        _Internal::personal_state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User.VirtualImageInfo)
  return target;
}

::size_t User_VirtualImageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User.VirtualImageInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .User.VirtualImageInfo.StateInfo personal_state = 9;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.personal_state_);
  }

  // int32 isset_virtual_image = 1;
  if (this->_internal_isset_virtual_image() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_isset_virtual_image());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User_VirtualImageInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User_VirtualImageInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*User_VirtualImageInfo::GetClassData() const { return &_class_data_; }


void User_VirtualImageInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User_VirtualImageInfo*>(&to_msg);
  auto& from = static_cast<const User_VirtualImageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User.VirtualImageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_personal_state()->::User_VirtualImageInfo_StateInfo::MergeFrom(
        from._internal_personal_state());
  }
  if (from._internal_isset_virtual_image() != 0) {
    _this->_internal_set_isset_virtual_image(from._internal_isset_virtual_image());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User_VirtualImageInfo::CopyFrom(const User_VirtualImageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User.VirtualImageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User_VirtualImageInfo::IsInitialized() const {
  return true;
}

void User_VirtualImageInfo::InternalSwap(User_VirtualImageInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_.isset_virtual_image_)
      + sizeof(User_VirtualImageInfo::_impl_.isset_virtual_image_)
      - PROTOBUF_FIELD_OFFSET(User_VirtualImageInfo, _impl_.personal_state_)>(
          reinterpret_cast<char*>(&_impl_.personal_state_),
          reinterpret_cast<char*>(&other->_impl_.personal_state_));
}

::google::protobuf::Metadata User_VirtualImageInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[5]);
}
// ===================================================================

class User::_Internal {
 public:
  using HasBits = decltype(std::declval<User>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(User, _impl_._has_bits_);
  static const ::User_PrivSets& priv_sets(const User* msg);
  static void set_has_priv_sets(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::User_UserVipInfo& vipinfo(const User* msg);
  static void set_has_vipinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::User_NewGodInfo& new_god_data(const User* msg);
  static void set_has_new_god_data(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::User_VirtualImageInfo& virtual_image_info(const User* msg);
  static void set_has_virtual_image_info(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::User_PrivSets& User::_Internal::priv_sets(const User* msg) {
  return *msg->_impl_.priv_sets_;
}
const ::User_UserVipInfo& User::_Internal::vipinfo(const User* msg) {
  return *msg->_impl_.vipinfo_;
}
const ::User_NewGodInfo& User::_Internal::new_god_data(const User* msg) {
  return *msg->_impl_.new_god_data_;
}
const ::User_VirtualImageInfo& User::_Internal::virtual_image_info(const User* msg) {
  return *msg->_impl_.virtual_image_info_;
}
User::User(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:User)
}
User::User(const User& from) : ::google::protobuf::Message() {
  User* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.likeforum_){from._impl_.likeforum_},
      decltype(_impl_.name_){},
      decltype(_impl_.name_show_){},
      decltype(_impl_.portrait_){},
      decltype(_impl_.bawu_type_){},
      decltype(_impl_.bduss_){},
      decltype(_impl_.tb_age_){},
      decltype(_impl_.tieba_uid_){},
      decltype(_impl_.priv_sets_){nullptr},
      decltype(_impl_.vipinfo_){nullptr},
      decltype(_impl_.new_god_data_){nullptr},
      decltype(_impl_.virtual_image_info_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.is_coreuser_){},
      decltype(_impl_.level_id_){},
      decltype(_impl_.is_bawu_){},
      decltype(_impl_.post_num_){},
      decltype(_impl_.gender_){},
      decltype(_impl_.is_friend_){},
      decltype(_impl_.is_guanfang_){},
      decltype(_impl_.is_fans_){},
      decltype(_impl_.is_default_avatar_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.name_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_show_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_show().empty()) {
    _this->_impl_.name_show_.Set(from._internal_name_show(), _this->GetArenaForAllocation());
  }
  _impl_.portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.portrait_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_portrait().empty()) {
    _this->_impl_.portrait_.Set(from._internal_portrait(), _this->GetArenaForAllocation());
  }
  _impl_.bawu_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bawu_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bawu_type().empty()) {
    _this->_impl_.bawu_type_.Set(from._internal_bawu_type(), _this->GetArenaForAllocation());
  }
  _impl_.bduss_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bduss_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bduss().empty()) {
    _this->_impl_.bduss_.Set(from._internal_bduss(), _this->GetArenaForAllocation());
  }
  _impl_.tb_age_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tb_age_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tb_age().empty()) {
    _this->_impl_.tb_age_.Set(from._internal_tb_age(), _this->GetArenaForAllocation());
  }
  _impl_.tieba_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tieba_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tieba_uid().empty()) {
    _this->_impl_.tieba_uid_.Set(from._internal_tieba_uid(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.priv_sets_ = new ::User_PrivSets(*from._impl_.priv_sets_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.vipinfo_ = new ::User_UserVipInfo(*from._impl_.vipinfo_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.new_god_data_ = new ::User_NewGodInfo(*from._impl_.new_god_data_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.virtual_image_info_ = new ::User_VirtualImageInfo(*from._impl_.virtual_image_info_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.is_default_avatar_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.is_default_avatar_));

  // @@protoc_insertion_point(copy_constructor:User)
}
inline void User::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.likeforum_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.name_show_){},
      decltype(_impl_.portrait_){},
      decltype(_impl_.bawu_type_){},
      decltype(_impl_.bduss_){},
      decltype(_impl_.tb_age_){},
      decltype(_impl_.tieba_uid_){},
      decltype(_impl_.priv_sets_){nullptr},
      decltype(_impl_.vipinfo_){nullptr},
      decltype(_impl_.new_god_data_){nullptr},
      decltype(_impl_.virtual_image_info_){nullptr},
      decltype(_impl_.id_){::int64_t{0}},
      decltype(_impl_.is_coreuser_){0},
      decltype(_impl_.level_id_){0},
      decltype(_impl_.is_bawu_){0},
      decltype(_impl_.post_num_){0},
      decltype(_impl_.gender_){0},
      decltype(_impl_.is_friend_){0},
      decltype(_impl_.is_guanfang_){0},
      decltype(_impl_.is_fans_){0},
      decltype(_impl_.is_default_avatar_){0},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_show_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_show_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.portrait_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bawu_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bawu_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bduss_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bduss_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tb_age_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tb_age_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tieba_uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tieba_uid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User::~User() {
  // @@protoc_insertion_point(destructor:User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.likeforum_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.name_show_.Destroy();
  _impl_.portrait_.Destroy();
  _impl_.bawu_type_.Destroy();
  _impl_.bduss_.Destroy();
  _impl_.tb_age_.Destroy();
  _impl_.tieba_uid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.priv_sets_;
  if (this != internal_default_instance()) delete _impl_.vipinfo_;
  if (this != internal_default_instance()) delete _impl_.new_god_data_;
  if (this != internal_default_instance()) delete _impl_.virtual_image_info_;
}
void User::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:User)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_likeforum()->Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.name_show_.ClearToEmpty();
  _impl_.portrait_.ClearToEmpty();
  _impl_.bawu_type_.ClearToEmpty();
  _impl_.bduss_.ClearToEmpty();
  _impl_.tb_age_.ClearToEmpty();
  _impl_.tieba_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.priv_sets_ != nullptr);
      _impl_.priv_sets_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vipinfo_ != nullptr);
      _impl_.vipinfo_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.new_god_data_ != nullptr);
      _impl_.new_god_data_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.virtual_image_info_ != nullptr);
      _impl_.virtual_image_info_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_default_avatar_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.is_default_avatar_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 22, 5, 79, 19> User::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(User, _impl_._has_bits_),
    0, // no _extensions_
    136, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3971481569,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_User_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(User, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.id_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.name_)}},
    // string name_show = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.name_show_)}},
    // string portrait = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.portrait_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 is_coreuser = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_coreuser_)}},
    // int32 post_num = 37;
    {::_pbi::TcParser::FastV32S2,
     {680, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.post_num_)}},
    // string tb_age = 38;
    {::_pbi::TcParser::FastUS2,
     {690, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.tb_age_)}},
    // int32 level_id = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.level_id_)}},
    // string tieba_uid = 120;
    {::_pbi::TcParser::FastUS2,
     {1986, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.tieba_uid_)}},
    // int32 is_bawu = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_bawu_)}},
    // string bawu_type = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.bawu_type_)}},
    // int32 is_fans = 91;
    {::_pbi::TcParser::FastV32S2,
     {1496, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_fans_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string BDUSS = 29;
    {::_pbi::TcParser::FastUS2,
     {490, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.bduss_)}},
    // int32 is_friend = 46;
    {::_pbi::TcParser::FastV32S2,
     {752, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_friend_)}},
    // repeated .User.LikeForumInfo likeForum = 47;
    {::_pbi::TcParser::FastMtR2,
     {762, 63, 1, PROTOBUF_FIELD_OFFSET(User, _impl_.likeforum_)}},
  }}, {{
    37, 0, 7,
    30940, 9, 65279, 16, 65535, 17, 65471, 17, 65502, 18, 65527, 20,
    65527, 21,
    65535, 65535
  }}, {{
    // int64 id = 2;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_show = 4;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.name_show_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string portrait = 5;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.portrait_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 is_coreuser = 20;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_coreuser_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 level_id = 23;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.level_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 is_bawu = 25;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_bawu_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string bawu_type = 26;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.bawu_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string BDUSS = 29;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.bduss_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 post_num = 37;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.post_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string tb_age = 38;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.tb_age_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 gender = 42;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.gender_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .User.PrivSets priv_sets = 45;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.priv_sets_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 is_friend = 46;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_friend_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .User.LikeForumInfo likeForum = 47;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.likeforum_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 is_guanfang = 52;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_guanfang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .User.UserVipInfo vipInfo = 61;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.vipinfo_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 is_fans = 91;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_fans_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .User.NewGodInfo new_god_data = 101;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.new_god_data_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 is_default_avatar = 106;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_default_avatar_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string tieba_uid = 120;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.tieba_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .User.VirtualImageInfo virtual_image_info = 136;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.virtual_image_info_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::User_PrivSets>()},
    {::_pbi::TcParser::GetTable<::User_LikeForumInfo>()},
    {::_pbi::TcParser::GetTable<::User_UserVipInfo>()},
    {::_pbi::TcParser::GetTable<::User_NewGodInfo>()},
    {::_pbi::TcParser::GetTable<::User_VirtualImageInfo>()},
  }}, {{
    "\4\0\4\11\10\0\0\0\11\5\0\6\0\0\0\0\0\0\0\0\0\11\0\0"
    "User"
    "name"
    "name_show"
    "portrait"
    "bawu_type"
    "BDUSS"
    "tb_age"
    "tieba_uid"
  }},
};

::uint8_t* User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_id(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string name_show = 4;
  if (!this->_internal_name_show().empty()) {
    const std::string& _s = this->_internal_name_show();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.name_show");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string portrait = 5;
  if (!this->_internal_portrait().empty()) {
    const std::string& _s = this->_internal_portrait();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.portrait");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int32 is_coreuser = 20;
  if (this->_internal_is_coreuser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        20, this->_internal_is_coreuser(), target);
  }

  // int32 level_id = 23;
  if (this->_internal_level_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        23, this->_internal_level_id(), target);
  }

  // int32 is_bawu = 25;
  if (this->_internal_is_bawu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        25, this->_internal_is_bawu(), target);
  }

  // string bawu_type = 26;
  if (!this->_internal_bawu_type().empty()) {
    const std::string& _s = this->_internal_bawu_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.bawu_type");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  // string BDUSS = 29;
  if (!this->_internal_bduss().empty()) {
    const std::string& _s = this->_internal_bduss();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.BDUSS");
    target = stream->WriteStringMaybeAliased(29, _s, target);
  }

  // int32 post_num = 37;
  if (this->_internal_post_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        37, this->_internal_post_num(), target);
  }

  // string tb_age = 38;
  if (!this->_internal_tb_age().empty()) {
    const std::string& _s = this->_internal_tb_age();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.tb_age");
    target = stream->WriteStringMaybeAliased(38, _s, target);
  }

  // int32 gender = 42;
  if (this->_internal_gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        42, this->_internal_gender(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .User.PrivSets priv_sets = 45;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::priv_sets(this),
        _Internal::priv_sets(this).GetCachedSize(), target, stream);
  }

  // int32 is_friend = 46;
  if (this->_internal_is_friend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        46, this->_internal_is_friend(), target);
  }

  // repeated .User.LikeForumInfo likeForum = 47;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_likeforum_size()); i < n; i++) {
    const auto& repfield = this->_internal_likeforum().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(47, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 is_guanfang = 52;
  if (this->_internal_is_guanfang() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        52, this->_internal_is_guanfang(), target);
  }

  // .User.UserVipInfo vipInfo = 61;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::vipinfo(this),
        _Internal::vipinfo(this).GetCachedSize(), target, stream);
  }

  // int32 is_fans = 91;
  if (this->_internal_is_fans() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        91, this->_internal_is_fans(), target);
  }

  // .User.NewGodInfo new_god_data = 101;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::new_god_data(this),
        _Internal::new_god_data(this).GetCachedSize(), target, stream);
  }

  // int32 is_default_avatar = 106;
  if (this->_internal_is_default_avatar() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        106, this->_internal_is_default_avatar(), target);
  }

  // string tieba_uid = 120;
  if (!this->_internal_tieba_uid().empty()) {
    const std::string& _s = this->_internal_tieba_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "User.tieba_uid");
    target = stream->WriteStringMaybeAliased(120, _s, target);
  }

  // .User.VirtualImageInfo virtual_image_info = 136;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(136, _Internal::virtual_image_info(this),
        _Internal::virtual_image_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:User)
  return target;
}

::size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .User.LikeForumInfo likeForum = 47;
  total_size += 2UL * this->_internal_likeforum_size();
  for (const auto& msg : this->_internal_likeforum()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string name_show = 4;
  if (!this->_internal_name_show().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_show());
  }

  // string portrait = 5;
  if (!this->_internal_portrait().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_portrait());
  }

  // string bawu_type = 26;
  if (!this->_internal_bawu_type().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bawu_type());
  }

  // string BDUSS = 29;
  if (!this->_internal_bduss().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bduss());
  }

  // string tb_age = 38;
  if (!this->_internal_tb_age().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tb_age());
  }

  // string tieba_uid = 120;
  if (!this->_internal_tieba_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tieba_uid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .User.PrivSets priv_sets = 45;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.priv_sets_);
    }

    // .User.UserVipInfo vipInfo = 61;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.vipinfo_);
    }

    // .User.NewGodInfo new_god_data = 101;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.new_god_data_);
    }

    // .User.VirtualImageInfo virtual_image_info = 136;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.virtual_image_info_);
    }

  }
  // int64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int32 is_coreuser = 20;
  if (this->_internal_is_coreuser() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_coreuser());
  }

  // int32 level_id = 23;
  if (this->_internal_level_id() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_level_id());
  }

  // int32 is_bawu = 25;
  if (this->_internal_is_bawu() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_bawu());
  }

  // int32 post_num = 37;
  if (this->_internal_post_num() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_post_num());
  }

  // int32 gender = 42;
  if (this->_internal_gender() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_gender());
  }

  // int32 is_friend = 46;
  if (this->_internal_is_friend() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_friend());
  }

  // int32 is_guanfang = 52;
  if (this->_internal_is_guanfang() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_guanfang());
  }

  // int32 is_fans = 91;
  if (this->_internal_is_fans() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_fans());
  }

  // int32 is_default_avatar = 106;
  if (this->_internal_is_default_avatar() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_is_default_avatar());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User::MergeImpl
};
const ::google::protobuf::Message::ClassData*User::GetClassData() const { return &_class_data_; }


void User::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_likeforum()->MergeFrom(from._internal_likeforum());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_name_show().empty()) {
    _this->_internal_set_name_show(from._internal_name_show());
  }
  if (!from._internal_portrait().empty()) {
    _this->_internal_set_portrait(from._internal_portrait());
  }
  if (!from._internal_bawu_type().empty()) {
    _this->_internal_set_bawu_type(from._internal_bawu_type());
  }
  if (!from._internal_bduss().empty()) {
    _this->_internal_set_bduss(from._internal_bduss());
  }
  if (!from._internal_tb_age().empty()) {
    _this->_internal_set_tb_age(from._internal_tb_age());
  }
  if (!from._internal_tieba_uid().empty()) {
    _this->_internal_set_tieba_uid(from._internal_tieba_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_priv_sets()->::User_PrivSets::MergeFrom(
          from._internal_priv_sets());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_vipinfo()->::User_UserVipInfo::MergeFrom(
          from._internal_vipinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_new_god_data()->::User_NewGodInfo::MergeFrom(
          from._internal_new_god_data());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_virtual_image_info()->::User_VirtualImageInfo::MergeFrom(
          from._internal_virtual_image_info());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_is_coreuser() != 0) {
    _this->_internal_set_is_coreuser(from._internal_is_coreuser());
  }
  if (from._internal_level_id() != 0) {
    _this->_internal_set_level_id(from._internal_level_id());
  }
  if (from._internal_is_bawu() != 0) {
    _this->_internal_set_is_bawu(from._internal_is_bawu());
  }
  if (from._internal_post_num() != 0) {
    _this->_internal_set_post_num(from._internal_post_num());
  }
  if (from._internal_gender() != 0) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (from._internal_is_friend() != 0) {
    _this->_internal_set_is_friend(from._internal_is_friend());
  }
  if (from._internal_is_guanfang() != 0) {
    _this->_internal_set_is_guanfang(from._internal_is_guanfang());
  }
  if (from._internal_is_fans() != 0) {
    _this->_internal_set_is_fans(from._internal_is_fans());
  }
  if (from._internal_is_default_avatar() != 0) {
    _this->_internal_set_is_default_avatar(from._internal_is_default_avatar());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User::IsInitialized() const {
  return true;
}

void User::InternalSwap(User* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.likeforum_.InternalSwap(&other->_impl_.likeforum_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_show_, lhs_arena,
                                       &other->_impl_.name_show_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.portrait_, lhs_arena,
                                       &other->_impl_.portrait_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bawu_type_, lhs_arena,
                                       &other->_impl_.bawu_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bduss_, lhs_arena,
                                       &other->_impl_.bduss_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tb_age_, lhs_arena,
                                       &other->_impl_.tb_age_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tieba_uid_, lhs_arena,
                                       &other->_impl_.tieba_uid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User, _impl_.is_default_avatar_)
      + sizeof(User::_impl_.is_default_avatar_)
      - PROTOBUF_FIELD_OFFSET(User, _impl_.priv_sets_)>(
          reinterpret_cast<char*>(&_impl_.priv_sets_),
          reinterpret_cast<char*>(&other->_impl_.priv_sets_));
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_User_2eproto_getter, &descriptor_table_User_2eproto_once,
      file_level_metadata_User_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
