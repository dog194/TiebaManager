// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrsPageResIdl.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_FrsPageResIdl_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_FrsPageResIdl_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "Page.pb.h"
#include "ThreadInfo.pb.h"
#include "User.pb.h"
#include "FrsTabInfo.pb.h"
#include "Error.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_FrsPageResIdl_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_FrsPageResIdl_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_FrsPageResIdl_2eproto;
class FrsPageResIdl;
struct FrsPageResIdlDefaultTypeInternal;
extern FrsPageResIdlDefaultTypeInternal _FrsPageResIdl_default_instance_;
class FrsPageResIdl_DataRes;
struct FrsPageResIdl_DataResDefaultTypeInternal;
extern FrsPageResIdl_DataResDefaultTypeInternal _FrsPageResIdl_DataRes_default_instance_;
class FrsPageResIdl_DataRes_ForumInfo;
struct FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal;
extern FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal _FrsPageResIdl_DataRes_ForumInfo_default_instance_;
class FrsPageResIdl_DataRes_NavTabInfo;
struct FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal;
extern FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal _FrsPageResIdl_DataRes_NavTabInfo_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class FrsPageResIdl_DataRes_ForumInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes.ForumInfo) */ {
 public:
  inline FrsPageResIdl_DataRes_ForumInfo() : FrsPageResIdl_DataRes_ForumInfo(nullptr) {}
  ~FrsPageResIdl_DataRes_ForumInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_ForumInfo(::google::protobuf::internal::ConstantInitialized);

  FrsPageResIdl_DataRes_ForumInfo(const FrsPageResIdl_DataRes_ForumInfo& from);
  FrsPageResIdl_DataRes_ForumInfo(FrsPageResIdl_DataRes_ForumInfo&& from) noexcept
    : FrsPageResIdl_DataRes_ForumInfo() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes_ForumInfo& operator=(const FrsPageResIdl_DataRes_ForumInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrsPageResIdl_DataRes_ForumInfo& operator=(FrsPageResIdl_DataRes_ForumInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrsPageResIdl_DataRes_ForumInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrsPageResIdl_DataRes_ForumInfo* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes_ForumInfo*>(
               &_FrsPageResIdl_DataRes_ForumInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FrsPageResIdl_DataRes_ForumInfo& a, FrsPageResIdl_DataRes_ForumInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FrsPageResIdl_DataRes_ForumInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrsPageResIdl_DataRes_ForumInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrsPageResIdl_DataRes_ForumInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrsPageResIdl_DataRes_ForumInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrsPageResIdl_DataRes_ForumInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrsPageResIdl_DataRes_ForumInfo& from) {
    FrsPageResIdl_DataRes_ForumInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrsPageResIdl_DataRes_ForumInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "FrsPageResIdl.DataRes.ForumInfo";
  }
  protected:
  explicit FrsPageResIdl_DataRes_ForumInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kMemberNumFieldNumber = 9,
    kThreadNumFieldNumber = 10,
    kPostNumFieldNumber = 12,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int32 member_num = 9;
  void clear_member_num() ;
  ::int32_t member_num() const;
  void set_member_num(::int32_t value);

  private:
  ::int32_t _internal_member_num() const;
  void _internal_set_member_num(::int32_t value);

  public:
  // int32 thread_num = 10;
  void clear_thread_num() ;
  ::int32_t thread_num() const;
  void set_thread_num(::int32_t value);

  private:
  ::int32_t _internal_thread_num() const;
  void _internal_set_thread_num(::int32_t value);

  public:
  // int32 post_num = 12;
  void clear_post_num() ;
  ::int32_t post_num() const;
  void set_post_num(::int32_t value);

  private:
  ::int32_t _internal_post_num() const;
  void _internal_set_post_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes.ForumInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 0, 44, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t id_;
    ::int32_t member_num_;
    ::int32_t thread_num_;
    ::int32_t post_num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FrsPageResIdl_2eproto;
};// -------------------------------------------------------------------

class FrsPageResIdl_DataRes_NavTabInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes.NavTabInfo) */ {
 public:
  inline FrsPageResIdl_DataRes_NavTabInfo() : FrsPageResIdl_DataRes_NavTabInfo(nullptr) {}
  ~FrsPageResIdl_DataRes_NavTabInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_NavTabInfo(::google::protobuf::internal::ConstantInitialized);

  FrsPageResIdl_DataRes_NavTabInfo(const FrsPageResIdl_DataRes_NavTabInfo& from);
  FrsPageResIdl_DataRes_NavTabInfo(FrsPageResIdl_DataRes_NavTabInfo&& from) noexcept
    : FrsPageResIdl_DataRes_NavTabInfo() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes_NavTabInfo& operator=(const FrsPageResIdl_DataRes_NavTabInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrsPageResIdl_DataRes_NavTabInfo& operator=(FrsPageResIdl_DataRes_NavTabInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrsPageResIdl_DataRes_NavTabInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrsPageResIdl_DataRes_NavTabInfo* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes_NavTabInfo*>(
               &_FrsPageResIdl_DataRes_NavTabInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FrsPageResIdl_DataRes_NavTabInfo& a, FrsPageResIdl_DataRes_NavTabInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FrsPageResIdl_DataRes_NavTabInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrsPageResIdl_DataRes_NavTabInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrsPageResIdl_DataRes_NavTabInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrsPageResIdl_DataRes_NavTabInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrsPageResIdl_DataRes_NavTabInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrsPageResIdl_DataRes_NavTabInfo& from) {
    FrsPageResIdl_DataRes_NavTabInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrsPageResIdl_DataRes_NavTabInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "FrsPageResIdl.DataRes.NavTabInfo";
  }
  protected:
  explicit FrsPageResIdl_DataRes_NavTabInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTabFieldNumber = 1,
  };
  // repeated .FrsTabInfo tab = 1;
  int tab_size() const;
  private:
  int _internal_tab_size() const;

  public:
  void clear_tab() ;
  ::FrsTabInfo* mutable_tab(int index);
  ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
      mutable_tab();
  private:
  const ::google::protobuf::RepeatedPtrField<::FrsTabInfo>& _internal_tab() const;
  ::google::protobuf::RepeatedPtrField<::FrsTabInfo>* _internal_mutable_tab();
  public:
  const ::FrsTabInfo& tab(int index) const;
  ::FrsTabInfo* add_tab();
  const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
      tab() const;
  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes.NavTabInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::FrsTabInfo > tab_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FrsPageResIdl_2eproto;
};// -------------------------------------------------------------------

class FrsPageResIdl_DataRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes) */ {
 public:
  inline FrsPageResIdl_DataRes() : FrsPageResIdl_DataRes(nullptr) {}
  ~FrsPageResIdl_DataRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes(::google::protobuf::internal::ConstantInitialized);

  FrsPageResIdl_DataRes(const FrsPageResIdl_DataRes& from);
  FrsPageResIdl_DataRes(FrsPageResIdl_DataRes&& from) noexcept
    : FrsPageResIdl_DataRes() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes& operator=(const FrsPageResIdl_DataRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrsPageResIdl_DataRes& operator=(FrsPageResIdl_DataRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrsPageResIdl_DataRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrsPageResIdl_DataRes* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes*>(
               &_FrsPageResIdl_DataRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FrsPageResIdl_DataRes& a, FrsPageResIdl_DataRes& b) {
    a.Swap(&b);
  }
  inline void Swap(FrsPageResIdl_DataRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrsPageResIdl_DataRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrsPageResIdl_DataRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrsPageResIdl_DataRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrsPageResIdl_DataRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrsPageResIdl_DataRes& from) {
    FrsPageResIdl_DataRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrsPageResIdl_DataRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "FrsPageResIdl.DataRes";
  }
  protected:
  explicit FrsPageResIdl_DataRes(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FrsPageResIdl_DataRes_ForumInfo ForumInfo;
  typedef FrsPageResIdl_DataRes_NavTabInfo NavTabInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kThreadListFieldNumber = 7,
    kUserListFieldNumber = 17,
    kForumFieldNumber = 2,
    kPageFieldNumber = 4,
    kNavTabInfoFieldNumber = 37,
  };
  // repeated .ThreadInfo thread_list = 7;
  int thread_list_size() const;
  private:
  int _internal_thread_list_size() const;

  public:
  void clear_thread_list() ;
  ::ThreadInfo* mutable_thread_list(int index);
  ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
      mutable_thread_list();
  private:
  const ::google::protobuf::RepeatedPtrField<::ThreadInfo>& _internal_thread_list() const;
  ::google::protobuf::RepeatedPtrField<::ThreadInfo>* _internal_mutable_thread_list();
  public:
  const ::ThreadInfo& thread_list(int index) const;
  ::ThreadInfo* add_thread_list();
  const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
      thread_list() const;
  // repeated .User user_list = 17;
  int user_list_size() const;
  private:
  int _internal_user_list_size() const;

  public:
  void clear_user_list() ;
  ::User* mutable_user_list(int index);
  ::google::protobuf::RepeatedPtrField< ::User >*
      mutable_user_list();
  private:
  const ::google::protobuf::RepeatedPtrField<::User>& _internal_user_list() const;
  ::google::protobuf::RepeatedPtrField<::User>* _internal_mutable_user_list();
  public:
  const ::User& user_list(int index) const;
  ::User* add_user_list();
  const ::google::protobuf::RepeatedPtrField< ::User >&
      user_list() const;
  // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
  bool has_forum() const;
  void clear_forum() ;
  const ::FrsPageResIdl_DataRes_ForumInfo& forum() const;
  PROTOBUF_NODISCARD ::FrsPageResIdl_DataRes_ForumInfo* release_forum();
  ::FrsPageResIdl_DataRes_ForumInfo* mutable_forum();
  void set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* value);
  void unsafe_arena_set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* value);
  ::FrsPageResIdl_DataRes_ForumInfo* unsafe_arena_release_forum();

  private:
  const ::FrsPageResIdl_DataRes_ForumInfo& _internal_forum() const;
  ::FrsPageResIdl_DataRes_ForumInfo* _internal_mutable_forum();

  public:
  // .Page page = 4;
  bool has_page() const;
  void clear_page() ;
  const ::Page& page() const;
  PROTOBUF_NODISCARD ::Page* release_page();
  ::Page* mutable_page();
  void set_allocated_page(::Page* value);
  void unsafe_arena_set_allocated_page(::Page* value);
  ::Page* unsafe_arena_release_page();

  private:
  const ::Page& _internal_page() const;
  ::Page* _internal_mutable_page();

  public:
  // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
  bool has_nav_tab_info() const;
  void clear_nav_tab_info() ;
  const ::FrsPageResIdl_DataRes_NavTabInfo& nav_tab_info() const;
  PROTOBUF_NODISCARD ::FrsPageResIdl_DataRes_NavTabInfo* release_nav_tab_info();
  ::FrsPageResIdl_DataRes_NavTabInfo* mutable_nav_tab_info();
  void set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* value);
  void unsafe_arena_set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* value);
  ::FrsPageResIdl_DataRes_NavTabInfo* unsafe_arena_release_nav_tab_info();

  private:
  const ::FrsPageResIdl_DataRes_NavTabInfo& _internal_nav_tab_info() const;
  ::FrsPageResIdl_DataRes_NavTabInfo* _internal_mutable_nav_tab_info();

  public:
  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 5, 0, 7> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ThreadInfo > thread_list_;
    ::google::protobuf::RepeatedPtrField< ::User > user_list_;
    ::FrsPageResIdl_DataRes_ForumInfo* forum_;
    ::Page* page_;
    ::FrsPageResIdl_DataRes_NavTabInfo* nav_tab_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FrsPageResIdl_2eproto;
};// -------------------------------------------------------------------

class FrsPageResIdl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl) */ {
 public:
  inline FrsPageResIdl() : FrsPageResIdl(nullptr) {}
  ~FrsPageResIdl() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrsPageResIdl(::google::protobuf::internal::ConstantInitialized);

  FrsPageResIdl(const FrsPageResIdl& from);
  FrsPageResIdl(FrsPageResIdl&& from) noexcept
    : FrsPageResIdl() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl& operator=(const FrsPageResIdl& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrsPageResIdl& operator=(FrsPageResIdl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrsPageResIdl& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrsPageResIdl* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl*>(
               &_FrsPageResIdl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FrsPageResIdl& a, FrsPageResIdl& b) {
    a.Swap(&b);
  }
  inline void Swap(FrsPageResIdl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrsPageResIdl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrsPageResIdl* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrsPageResIdl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrsPageResIdl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrsPageResIdl& from) {
    FrsPageResIdl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrsPageResIdl* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "FrsPageResIdl";
  }
  protected:
  explicit FrsPageResIdl(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FrsPageResIdl_DataRes DataRes;

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // .Error error = 1;
  bool has_error() const;
  void clear_error() ;
  const ::Error& error() const;
  PROTOBUF_NODISCARD ::Error* release_error();
  ::Error* mutable_error();
  void set_allocated_error(::Error* value);
  void unsafe_arena_set_allocated_error(::Error* value);
  ::Error* unsafe_arena_release_error();

  private:
  const ::Error& _internal_error() const;
  ::Error* _internal_mutable_error();

  public:
  // .FrsPageResIdl.DataRes data = 2;
  bool has_data() const;
  void clear_data() ;
  const ::FrsPageResIdl_DataRes& data() const;
  PROTOBUF_NODISCARD ::FrsPageResIdl_DataRes* release_data();
  ::FrsPageResIdl_DataRes* mutable_data();
  void set_allocated_data(::FrsPageResIdl_DataRes* value);
  void unsafe_arena_set_allocated_data(::FrsPageResIdl_DataRes* value);
  ::FrsPageResIdl_DataRes* unsafe_arena_release_data();

  private:
  const ::FrsPageResIdl_DataRes& _internal_data() const;
  ::FrsPageResIdl_DataRes* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:FrsPageResIdl)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Error* error_;
    ::FrsPageResIdl_DataRes* data_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FrsPageResIdl_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FrsPageResIdl_DataRes_ForumInfo

// int64 id = 1;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t FrsPageResIdl_DataRes_ForumInfo::id() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.id)
  return _internal_id();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.id)
}
inline ::int64_t FrsPageResIdl_DataRes_ForumInfo::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FrsPageResIdl_DataRes_ForumInfo::name() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FrsPageResIdl_DataRes_ForumInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.name)
}
inline std::string* FrsPageResIdl_DataRes_ForumInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.ForumInfo.name)
  return _s;
}
inline const std::string& FrsPageResIdl_DataRes_ForumInfo::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void FrsPageResIdl_DataRes_ForumInfo::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* FrsPageResIdl_DataRes_ForumInfo::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* FrsPageResIdl_DataRes_ForumInfo::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.ForumInfo.name)
  return _impl_.name_.Release();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.ForumInfo.name)
}

// int32 member_num = 9;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_member_num() {
  _impl_.member_num_ = 0;
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::member_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.member_num)
  return _internal_member_num();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_member_num(::int32_t value) {
  _internal_set_member_num(value);
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.member_num)
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::_internal_member_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.member_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::_internal_set_member_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.member_num_ = value;
}

// int32 thread_num = 10;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_thread_num() {
  _impl_.thread_num_ = 0;
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::thread_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.thread_num)
  return _internal_thread_num();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_thread_num(::int32_t value) {
  _internal_set_thread_num(value);
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.thread_num)
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::_internal_thread_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thread_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::_internal_set_thread_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.thread_num_ = value;
}

// int32 post_num = 12;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_post_num() {
  _impl_.post_num_ = 0;
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::post_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.post_num)
  return _internal_post_num();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_post_num(::int32_t value) {
  _internal_set_post_num(value);
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.post_num)
}
inline ::int32_t FrsPageResIdl_DataRes_ForumInfo::_internal_post_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.post_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::_internal_set_post_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.post_num_ = value;
}

// -------------------------------------------------------------------

// FrsPageResIdl_DataRes_NavTabInfo

// repeated .FrsTabInfo tab = 1;
inline int FrsPageResIdl_DataRes_NavTabInfo::_internal_tab_size() const {
  return _internal_tab().size();
}
inline int FrsPageResIdl_DataRes_NavTabInfo::tab_size() const {
  return _internal_tab_size();
}
inline ::FrsTabInfo* FrsPageResIdl_DataRes_NavTabInfo::mutable_tab(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return _internal_mutable_tab()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
FrsPageResIdl_DataRes_NavTabInfo::mutable_tab() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.NavTabInfo.tab)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tab();
}
inline const ::FrsTabInfo& FrsPageResIdl_DataRes_NavTabInfo::tab(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.NavTabInfo.tab)
    return _internal_tab().Get(index);
}
inline ::FrsTabInfo* FrsPageResIdl_DataRes_NavTabInfo::add_tab() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::FrsTabInfo* _add = _internal_mutable_tab()->Add();
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
FrsPageResIdl_DataRes_NavTabInfo::tab() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return _internal_tab();
}
inline const ::google::protobuf::RepeatedPtrField<::FrsTabInfo>&
FrsPageResIdl_DataRes_NavTabInfo::_internal_tab() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tab_;
}
inline ::google::protobuf::RepeatedPtrField<::FrsTabInfo>*
FrsPageResIdl_DataRes_NavTabInfo::_internal_mutable_tab() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tab_;
}

// -------------------------------------------------------------------

// FrsPageResIdl_DataRes

// .FrsPageResIdl.DataRes.ForumInfo forum = 2;
inline bool FrsPageResIdl_DataRes::has_forum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.forum_ != nullptr);
  return value;
}
inline void FrsPageResIdl_DataRes::clear_forum() {
  if (_impl_.forum_ != nullptr) _impl_.forum_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::FrsPageResIdl_DataRes_ForumInfo& FrsPageResIdl_DataRes::_internal_forum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::FrsPageResIdl_DataRes_ForumInfo* p = _impl_.forum_;
  return p != nullptr ? *p : reinterpret_cast<const ::FrsPageResIdl_DataRes_ForumInfo&>(::_FrsPageResIdl_DataRes_ForumInfo_default_instance_);
}
inline const ::FrsPageResIdl_DataRes_ForumInfo& FrsPageResIdl_DataRes::forum() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.forum)
  return _internal_forum();
}
inline void FrsPageResIdl_DataRes::unsafe_arena_set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.forum_);
  }
  _impl_.forum_ = reinterpret_cast<::FrsPageResIdl_DataRes_ForumInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FrsPageResIdl.DataRes.forum)
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::release_forum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::FrsPageResIdl_DataRes_ForumInfo* released = _impl_.forum_;
  _impl_.forum_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::unsafe_arena_release_forum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.forum)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::FrsPageResIdl_DataRes_ForumInfo* temp = _impl_.forum_;
  _impl_.forum_ = nullptr;
  return temp;
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::_internal_mutable_forum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.forum_ == nullptr) {
    auto* p = CreateMaybeMessage<::FrsPageResIdl_DataRes_ForumInfo>(GetArenaForAllocation());
    _impl_.forum_ = reinterpret_cast<::FrsPageResIdl_DataRes_ForumInfo*>(p);
  }
  return _impl_.forum_;
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::mutable_forum() {
  ::FrsPageResIdl_DataRes_ForumInfo* _msg = _internal_mutable_forum();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.forum)
  return _msg;
}
inline void FrsPageResIdl_DataRes::set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::FrsPageResIdl_DataRes_ForumInfo*>(_impl_.forum_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::FrsPageResIdl_DataRes_ForumInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.forum_ = reinterpret_cast<::FrsPageResIdl_DataRes_ForumInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.forum)
}

// .Page page = 4;
inline bool FrsPageResIdl_DataRes::has_page() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.page_ != nullptr);
  return value;
}
inline const ::Page& FrsPageResIdl_DataRes::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Page* p = _impl_.page_;
  return p != nullptr ? *p : reinterpret_cast<const ::Page&>(::_Page_default_instance_);
}
inline const ::Page& FrsPageResIdl_DataRes::page() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.page)
  return _internal_page();
}
inline void FrsPageResIdl_DataRes::unsafe_arena_set_allocated_page(::Page* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.page_);
  }
  _impl_.page_ = reinterpret_cast<::Page*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FrsPageResIdl.DataRes.page)
}
inline ::Page* FrsPageResIdl_DataRes::release_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Page* released = _impl_.page_;
  _impl_.page_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Page* FrsPageResIdl_DataRes::unsafe_arena_release_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.page)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Page* temp = _impl_.page_;
  _impl_.page_ = nullptr;
  return temp;
}
inline ::Page* FrsPageResIdl_DataRes::_internal_mutable_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.page_ == nullptr) {
    auto* p = CreateMaybeMessage<::Page>(GetArenaForAllocation());
    _impl_.page_ = reinterpret_cast<::Page*>(p);
  }
  return _impl_.page_;
}
inline ::Page* FrsPageResIdl_DataRes::mutable_page() {
  ::Page* _msg = _internal_mutable_page();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.page)
  return _msg;
}
inline void FrsPageResIdl_DataRes::set_allocated_page(::Page* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.page_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.page_ = reinterpret_cast<::Page*>(value);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.page)
}

// repeated .ThreadInfo thread_list = 7;
inline int FrsPageResIdl_DataRes::_internal_thread_list_size() const {
  return _internal_thread_list().size();
}
inline int FrsPageResIdl_DataRes::thread_list_size() const {
  return _internal_thread_list_size();
}
inline ::ThreadInfo* FrsPageResIdl_DataRes::mutable_thread_list(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.thread_list)
  return _internal_mutable_thread_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
FrsPageResIdl_DataRes::mutable_thread_list() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.thread_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_thread_list();
}
inline const ::ThreadInfo& FrsPageResIdl_DataRes::thread_list(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.thread_list)
    return _internal_thread_list().Get(index);
}
inline ::ThreadInfo* FrsPageResIdl_DataRes::add_thread_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ThreadInfo* _add = _internal_mutable_thread_list()->Add();
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.thread_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
FrsPageResIdl_DataRes::thread_list() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.thread_list)
  return _internal_thread_list();
}
inline const ::google::protobuf::RepeatedPtrField<::ThreadInfo>&
FrsPageResIdl_DataRes::_internal_thread_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thread_list_;
}
inline ::google::protobuf::RepeatedPtrField<::ThreadInfo>*
FrsPageResIdl_DataRes::_internal_mutable_thread_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.thread_list_;
}

// repeated .User user_list = 17;
inline int FrsPageResIdl_DataRes::_internal_user_list_size() const {
  return _internal_user_list().size();
}
inline int FrsPageResIdl_DataRes::user_list_size() const {
  return _internal_user_list_size();
}
inline ::User* FrsPageResIdl_DataRes::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.user_list)
  return _internal_mutable_user_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::User >*
FrsPageResIdl_DataRes::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.user_list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_user_list();
}
inline const ::User& FrsPageResIdl_DataRes::user_list(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.user_list)
    return _internal_user_list().Get(index);
}
inline ::User* FrsPageResIdl_DataRes::add_user_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::User* _add = _internal_mutable_user_list()->Add();
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.user_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::User >&
FrsPageResIdl_DataRes::user_list() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.user_list)
  return _internal_user_list();
}
inline const ::google::protobuf::RepeatedPtrField<::User>&
FrsPageResIdl_DataRes::_internal_user_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_list_;
}
inline ::google::protobuf::RepeatedPtrField<::User>*
FrsPageResIdl_DataRes::_internal_mutable_user_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.user_list_;
}

// .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
inline bool FrsPageResIdl_DataRes::has_nav_tab_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nav_tab_info_ != nullptr);
  return value;
}
inline void FrsPageResIdl_DataRes::clear_nav_tab_info() {
  if (_impl_.nav_tab_info_ != nullptr) _impl_.nav_tab_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::FrsPageResIdl_DataRes_NavTabInfo& FrsPageResIdl_DataRes::_internal_nav_tab_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::FrsPageResIdl_DataRes_NavTabInfo* p = _impl_.nav_tab_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::FrsPageResIdl_DataRes_NavTabInfo&>(::_FrsPageResIdl_DataRes_NavTabInfo_default_instance_);
}
inline const ::FrsPageResIdl_DataRes_NavTabInfo& FrsPageResIdl_DataRes::nav_tab_info() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.nav_tab_info)
  return _internal_nav_tab_info();
}
inline void FrsPageResIdl_DataRes::unsafe_arena_set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nav_tab_info_);
  }
  _impl_.nav_tab_info_ = reinterpret_cast<::FrsPageResIdl_DataRes_NavTabInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FrsPageResIdl.DataRes.nav_tab_info)
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::release_nav_tab_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::FrsPageResIdl_DataRes_NavTabInfo* released = _impl_.nav_tab_info_;
  _impl_.nav_tab_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::unsafe_arena_release_nav_tab_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.nav_tab_info)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::FrsPageResIdl_DataRes_NavTabInfo* temp = _impl_.nav_tab_info_;
  _impl_.nav_tab_info_ = nullptr;
  return temp;
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::_internal_mutable_nav_tab_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.nav_tab_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::FrsPageResIdl_DataRes_NavTabInfo>(GetArenaForAllocation());
    _impl_.nav_tab_info_ = reinterpret_cast<::FrsPageResIdl_DataRes_NavTabInfo*>(p);
  }
  return _impl_.nav_tab_info_;
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::mutable_nav_tab_info() {
  ::FrsPageResIdl_DataRes_NavTabInfo* _msg = _internal_mutable_nav_tab_info();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.nav_tab_info)
  return _msg;
}
inline void FrsPageResIdl_DataRes::set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::FrsPageResIdl_DataRes_NavTabInfo*>(_impl_.nav_tab_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::FrsPageResIdl_DataRes_NavTabInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.nav_tab_info_ = reinterpret_cast<::FrsPageResIdl_DataRes_NavTabInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.nav_tab_info)
}

// -------------------------------------------------------------------

// FrsPageResIdl

// .Error error = 1;
inline bool FrsPageResIdl::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline const ::Error& FrsPageResIdl::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Error* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::Error&>(::_Error_default_instance_);
}
inline const ::Error& FrsPageResIdl::error() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.error)
  return _internal_error();
}
inline void FrsPageResIdl::unsafe_arena_set_allocated_error(::Error* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::Error*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FrsPageResIdl.error)
}
inline ::Error* FrsPageResIdl::release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Error* released = _impl_.error_;
  _impl_.error_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Error* FrsPageResIdl::unsafe_arena_release_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.error)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Error* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::Error* FrsPageResIdl::_internal_mutable_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.error_ == nullptr) {
    auto* p = CreateMaybeMessage<::Error>(GetArenaForAllocation());
    _impl_.error_ = reinterpret_cast<::Error*>(p);
  }
  return _impl_.error_;
}
inline ::Error* FrsPageResIdl::mutable_error() {
  ::Error* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.error)
  return _msg;
}
inline void FrsPageResIdl::set_allocated_error(::Error* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_ = reinterpret_cast<::Error*>(value);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.error)
}

// .FrsPageResIdl.DataRes data = 2;
inline bool FrsPageResIdl::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void FrsPageResIdl::clear_data() {
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::FrsPageResIdl_DataRes& FrsPageResIdl::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::FrsPageResIdl_DataRes* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::FrsPageResIdl_DataRes&>(::_FrsPageResIdl_DataRes_default_instance_);
}
inline const ::FrsPageResIdl_DataRes& FrsPageResIdl::data() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.data)
  return _internal_data();
}
inline void FrsPageResIdl::unsafe_arena_set_allocated_data(::FrsPageResIdl_DataRes* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::FrsPageResIdl_DataRes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FrsPageResIdl.data)
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::FrsPageResIdl_DataRes* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::unsafe_arena_release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:FrsPageResIdl.data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::FrsPageResIdl_DataRes* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::FrsPageResIdl_DataRes>(GetArenaForAllocation());
    _impl_.data_ = reinterpret_cast<::FrsPageResIdl_DataRes*>(p);
  }
  return _impl_.data_;
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::mutable_data() {
  ::FrsPageResIdl_DataRes* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.data)
  return _msg;
}
inline void FrsPageResIdl::set_allocated_data(::FrsPageResIdl_DataRes* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::FrsPageResIdl_DataRes*>(_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::FrsPageResIdl_DataRes*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.data_ = reinterpret_cast<::FrsPageResIdl_DataRes*>(value);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_FrsPageResIdl_2eproto_2epb_2eh
