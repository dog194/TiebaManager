// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrsPageResIdl.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_FrsPageResIdl_2eproto__INCLUDED
#define PROTOBUF_FrsPageResIdl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Page.pb.h"
#include "ThreadInfo.pb.h"
#include "User.pb.h"
#include "FrsTabInfo.pb.h"
#include "Error.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_FrsPageResIdl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFrsPageResIdl_DataRes_ForumInfoImpl();
void InitDefaultsFrsPageResIdl_DataRes_ForumInfo();
void InitDefaultsFrsPageResIdl_DataRes_NavTabInfoImpl();
void InitDefaultsFrsPageResIdl_DataRes_NavTabInfo();
void InitDefaultsFrsPageResIdl_DataResImpl();
void InitDefaultsFrsPageResIdl_DataRes();
void InitDefaultsFrsPageResIdlImpl();
void InitDefaultsFrsPageResIdl();
inline void InitDefaults() {
  InitDefaultsFrsPageResIdl_DataRes_ForumInfo();
  InitDefaultsFrsPageResIdl_DataRes_NavTabInfo();
  InitDefaultsFrsPageResIdl_DataRes();
  InitDefaultsFrsPageResIdl();
}
}  // namespace protobuf_FrsPageResIdl_2eproto
class FrsPageResIdl;
class FrsPageResIdlDefaultTypeInternal;
extern FrsPageResIdlDefaultTypeInternal _FrsPageResIdl_default_instance_;
class FrsPageResIdl_DataRes;
class FrsPageResIdl_DataResDefaultTypeInternal;
extern FrsPageResIdl_DataResDefaultTypeInternal _FrsPageResIdl_DataRes_default_instance_;
class FrsPageResIdl_DataRes_ForumInfo;
class FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal;
extern FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal _FrsPageResIdl_DataRes_ForumInfo_default_instance_;
class FrsPageResIdl_DataRes_NavTabInfo;
class FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal;
extern FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal _FrsPageResIdl_DataRes_NavTabInfo_default_instance_;

// ===================================================================

class FrsPageResIdl_DataRes_ForumInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes.ForumInfo) */ {
 public:
  FrsPageResIdl_DataRes_ForumInfo();
  virtual ~FrsPageResIdl_DataRes_ForumInfo();

  FrsPageResIdl_DataRes_ForumInfo(const FrsPageResIdl_DataRes_ForumInfo& from);

  inline FrsPageResIdl_DataRes_ForumInfo& operator=(const FrsPageResIdl_DataRes_ForumInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrsPageResIdl_DataRes_ForumInfo(FrsPageResIdl_DataRes_ForumInfo&& from) noexcept
    : FrsPageResIdl_DataRes_ForumInfo() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes_ForumInfo& operator=(FrsPageResIdl_DataRes_ForumInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrsPageResIdl_DataRes_ForumInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrsPageResIdl_DataRes_ForumInfo* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes_ForumInfo*>(
               &_FrsPageResIdl_DataRes_ForumInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FrsPageResIdl_DataRes_ForumInfo* other);
  friend void swap(FrsPageResIdl_DataRes_ForumInfo& a, FrsPageResIdl_DataRes_ForumInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrsPageResIdl_DataRes_ForumInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FrsPageResIdl_DataRes_ForumInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrsPageResIdl_DataRes_ForumInfo& from);
  void MergeFrom(const FrsPageResIdl_DataRes_ForumInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrsPageResIdl_DataRes_ForumInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int32 post_num = 12;
  void clear_post_num();
  static const int kPostNumFieldNumber = 12;
  ::google::protobuf::int32 post_num() const;
  void set_post_num(::google::protobuf::int32 value);

  // int32 member_num = 9;
  void clear_member_num();
  static const int kMemberNumFieldNumber = 9;
  ::google::protobuf::int32 member_num() const;
  void set_member_num(::google::protobuf::int32 value);

  // int32 thread_num = 10;
  void clear_thread_num();
  static const int kThreadNumFieldNumber = 10;
  ::google::protobuf::int32 thread_num() const;
  void set_thread_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes.ForumInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 post_num_;
  ::google::protobuf::int32 member_num_;
  ::google::protobuf::int32 thread_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_FrsPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_FrsPageResIdl_2eproto::InitDefaultsFrsPageResIdl_DataRes_ForumInfoImpl();
};
// -------------------------------------------------------------------

class FrsPageResIdl_DataRes_NavTabInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes.NavTabInfo) */ {
 public:
  FrsPageResIdl_DataRes_NavTabInfo();
  virtual ~FrsPageResIdl_DataRes_NavTabInfo();

  FrsPageResIdl_DataRes_NavTabInfo(const FrsPageResIdl_DataRes_NavTabInfo& from);

  inline FrsPageResIdl_DataRes_NavTabInfo& operator=(const FrsPageResIdl_DataRes_NavTabInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrsPageResIdl_DataRes_NavTabInfo(FrsPageResIdl_DataRes_NavTabInfo&& from) noexcept
    : FrsPageResIdl_DataRes_NavTabInfo() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes_NavTabInfo& operator=(FrsPageResIdl_DataRes_NavTabInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrsPageResIdl_DataRes_NavTabInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrsPageResIdl_DataRes_NavTabInfo* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes_NavTabInfo*>(
               &_FrsPageResIdl_DataRes_NavTabInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FrsPageResIdl_DataRes_NavTabInfo* other);
  friend void swap(FrsPageResIdl_DataRes_NavTabInfo& a, FrsPageResIdl_DataRes_NavTabInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrsPageResIdl_DataRes_NavTabInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FrsPageResIdl_DataRes_NavTabInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrsPageResIdl_DataRes_NavTabInfo& from);
  void MergeFrom(const FrsPageResIdl_DataRes_NavTabInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrsPageResIdl_DataRes_NavTabInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FrsTabInfo tab = 1;
  int tab_size() const;
  void clear_tab();
  static const int kTabFieldNumber = 1;
  const ::FrsTabInfo& tab(int index) const;
  ::FrsTabInfo* mutable_tab(int index);
  ::FrsTabInfo* add_tab();
  ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
      mutable_tab();
  const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
      tab() const;

  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes.NavTabInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::FrsTabInfo > tab_;
  mutable int _cached_size_;
  friend struct ::protobuf_FrsPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_FrsPageResIdl_2eproto::InitDefaultsFrsPageResIdl_DataRes_NavTabInfoImpl();
};
// -------------------------------------------------------------------

class FrsPageResIdl_DataRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl.DataRes) */ {
 public:
  FrsPageResIdl_DataRes();
  virtual ~FrsPageResIdl_DataRes();

  FrsPageResIdl_DataRes(const FrsPageResIdl_DataRes& from);

  inline FrsPageResIdl_DataRes& operator=(const FrsPageResIdl_DataRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrsPageResIdl_DataRes(FrsPageResIdl_DataRes&& from) noexcept
    : FrsPageResIdl_DataRes() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl_DataRes& operator=(FrsPageResIdl_DataRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrsPageResIdl_DataRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrsPageResIdl_DataRes* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl_DataRes*>(
               &_FrsPageResIdl_DataRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FrsPageResIdl_DataRes* other);
  friend void swap(FrsPageResIdl_DataRes& a, FrsPageResIdl_DataRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrsPageResIdl_DataRes* New() const PROTOBUF_FINAL { return New(NULL); }

  FrsPageResIdl_DataRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrsPageResIdl_DataRes& from);
  void MergeFrom(const FrsPageResIdl_DataRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrsPageResIdl_DataRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FrsPageResIdl_DataRes_ForumInfo ForumInfo;
  typedef FrsPageResIdl_DataRes_NavTabInfo NavTabInfo;

  // accessors -------------------------------------------------------

  // repeated .ThreadInfo thread_list = 7;
  int thread_list_size() const;
  void clear_thread_list();
  static const int kThreadListFieldNumber = 7;
  const ::ThreadInfo& thread_list(int index) const;
  ::ThreadInfo* mutable_thread_list(int index);
  ::ThreadInfo* add_thread_list();
  ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
      mutable_thread_list();
  const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
      thread_list() const;

  // repeated .User user_list = 17;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 17;
  const ::User& user_list(int index) const;
  ::User* mutable_user_list(int index);
  ::User* add_user_list();
  ::google::protobuf::RepeatedPtrField< ::User >*
      mutable_user_list();
  const ::google::protobuf::RepeatedPtrField< ::User >&
      user_list() const;

  // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
  bool has_forum() const;
  void clear_forum();
  static const int kForumFieldNumber = 2;
  const ::FrsPageResIdl_DataRes_ForumInfo& forum() const;
  ::FrsPageResIdl_DataRes_ForumInfo* release_forum();
  ::FrsPageResIdl_DataRes_ForumInfo* mutable_forum();
  void set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* forum);

  // .Page page = 4;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 4;
  const ::Page& page() const;
  ::Page* release_page();
  ::Page* mutable_page();
  void set_allocated_page(::Page* page);

  // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
  bool has_nav_tab_info() const;
  void clear_nav_tab_info();
  static const int kNavTabInfoFieldNumber = 37;
  const ::FrsPageResIdl_DataRes_NavTabInfo& nav_tab_info() const;
  ::FrsPageResIdl_DataRes_NavTabInfo* release_nav_tab_info();
  ::FrsPageResIdl_DataRes_NavTabInfo* mutable_nav_tab_info();
  void set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* nav_tab_info);

  // @@protoc_insertion_point(class_scope:FrsPageResIdl.DataRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ThreadInfo > thread_list_;
  ::google::protobuf::RepeatedPtrField< ::User > user_list_;
  ::FrsPageResIdl_DataRes_ForumInfo* forum_;
  ::Page* page_;
  ::FrsPageResIdl_DataRes_NavTabInfo* nav_tab_info_;
  mutable int _cached_size_;
  friend struct ::protobuf_FrsPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_FrsPageResIdl_2eproto::InitDefaultsFrsPageResIdl_DataResImpl();
};
// -------------------------------------------------------------------

class FrsPageResIdl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsPageResIdl) */ {
 public:
  FrsPageResIdl();
  virtual ~FrsPageResIdl();

  FrsPageResIdl(const FrsPageResIdl& from);

  inline FrsPageResIdl& operator=(const FrsPageResIdl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrsPageResIdl(FrsPageResIdl&& from) noexcept
    : FrsPageResIdl() {
    *this = ::std::move(from);
  }

  inline FrsPageResIdl& operator=(FrsPageResIdl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrsPageResIdl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrsPageResIdl* internal_default_instance() {
    return reinterpret_cast<const FrsPageResIdl*>(
               &_FrsPageResIdl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FrsPageResIdl* other);
  friend void swap(FrsPageResIdl& a, FrsPageResIdl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrsPageResIdl* New() const PROTOBUF_FINAL { return New(NULL); }

  FrsPageResIdl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrsPageResIdl& from);
  void MergeFrom(const FrsPageResIdl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrsPageResIdl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FrsPageResIdl_DataRes DataRes;

  // accessors -------------------------------------------------------

  // .Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::Error& error() const;
  ::Error* release_error();
  ::Error* mutable_error();
  void set_allocated_error(::Error* error);

  // .FrsPageResIdl.DataRes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::FrsPageResIdl_DataRes& data() const;
  ::FrsPageResIdl_DataRes* release_data();
  ::FrsPageResIdl_DataRes* mutable_data();
  void set_allocated_data(::FrsPageResIdl_DataRes* data);

  // @@protoc_insertion_point(class_scope:FrsPageResIdl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Error* error_;
  ::FrsPageResIdl_DataRes* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_FrsPageResIdl_2eproto::TableStruct;
  friend void ::protobuf_FrsPageResIdl_2eproto::InitDefaultsFrsPageResIdlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FrsPageResIdl_DataRes_ForumInfo

// int64 id = 1;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FrsPageResIdl_DataRes_ForumInfo::id() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.id)
  return id_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.id)
}

// string name = 2;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FrsPageResIdl_DataRes_ForumInfo::name() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.name)
  return name_.GetNoArena();
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.name)
}
#if LANG_CXX11
inline void FrsPageResIdl_DataRes_ForumInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FrsPageResIdl.DataRes.ForumInfo.name)
}
#endif
inline void FrsPageResIdl_DataRes_ForumInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FrsPageResIdl.DataRes.ForumInfo.name)
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FrsPageResIdl.DataRes.ForumInfo.name)
}
inline ::std::string* FrsPageResIdl_DataRes_ForumInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.ForumInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrsPageResIdl_DataRes_ForumInfo::release_name() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.ForumInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.ForumInfo.name)
}

// int32 member_num = 9;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_member_num() {
  member_num_ = 0;
}
inline ::google::protobuf::int32 FrsPageResIdl_DataRes_ForumInfo::member_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.member_num)
  return member_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_member_num(::google::protobuf::int32 value) {
  
  member_num_ = value;
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.member_num)
}

// int32 thread_num = 10;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_thread_num() {
  thread_num_ = 0;
}
inline ::google::protobuf::int32 FrsPageResIdl_DataRes_ForumInfo::thread_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.thread_num)
  return thread_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_thread_num(::google::protobuf::int32 value) {
  
  thread_num_ = value;
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.thread_num)
}

// int32 post_num = 12;
inline void FrsPageResIdl_DataRes_ForumInfo::clear_post_num() {
  post_num_ = 0;
}
inline ::google::protobuf::int32 FrsPageResIdl_DataRes_ForumInfo::post_num() const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.ForumInfo.post_num)
  return post_num_;
}
inline void FrsPageResIdl_DataRes_ForumInfo::set_post_num(::google::protobuf::int32 value) {
  
  post_num_ = value;
  // @@protoc_insertion_point(field_set:FrsPageResIdl.DataRes.ForumInfo.post_num)
}

// -------------------------------------------------------------------

// FrsPageResIdl_DataRes_NavTabInfo

// repeated .FrsTabInfo tab = 1;
inline int FrsPageResIdl_DataRes_NavTabInfo::tab_size() const {
  return tab_.size();
}
inline const ::FrsTabInfo& FrsPageResIdl_DataRes_NavTabInfo::tab(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return tab_.Get(index);
}
inline ::FrsTabInfo* FrsPageResIdl_DataRes_NavTabInfo::mutable_tab(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return tab_.Mutable(index);
}
inline ::FrsTabInfo* FrsPageResIdl_DataRes_NavTabInfo::add_tab() {
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return tab_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
FrsPageResIdl_DataRes_NavTabInfo::mutable_tab() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return &tab_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
FrsPageResIdl_DataRes_NavTabInfo::tab() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.NavTabInfo.tab)
  return tab_;
}

// -------------------------------------------------------------------

// FrsPageResIdl_DataRes

// .FrsPageResIdl.DataRes.ForumInfo forum = 2;
inline bool FrsPageResIdl_DataRes::has_forum() const {
  return this != internal_default_instance() && forum_ != NULL;
}
inline void FrsPageResIdl_DataRes::clear_forum() {
  if (GetArenaNoVirtual() == NULL && forum_ != NULL) {
    delete forum_;
  }
  forum_ = NULL;
}
inline const ::FrsPageResIdl_DataRes_ForumInfo& FrsPageResIdl_DataRes::forum() const {
  const ::FrsPageResIdl_DataRes_ForumInfo* p = forum_;
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.forum)
  return p != NULL ? *p : *reinterpret_cast<const ::FrsPageResIdl_DataRes_ForumInfo*>(
      &::_FrsPageResIdl_DataRes_ForumInfo_default_instance_);
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::release_forum() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.forum)
  
  ::FrsPageResIdl_DataRes_ForumInfo* temp = forum_;
  forum_ = NULL;
  return temp;
}
inline ::FrsPageResIdl_DataRes_ForumInfo* FrsPageResIdl_DataRes::mutable_forum() {
  
  if (forum_ == NULL) {
    forum_ = new ::FrsPageResIdl_DataRes_ForumInfo;
  }
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.forum)
  return forum_;
}
inline void FrsPageResIdl_DataRes::set_allocated_forum(::FrsPageResIdl_DataRes_ForumInfo* forum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete forum_;
  }
  if (forum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forum, submessage_arena);
    }
    
  } else {
    
  }
  forum_ = forum;
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.forum)
}

// .Page page = 4;
inline bool FrsPageResIdl_DataRes::has_page() const {
  return this != internal_default_instance() && page_ != NULL;
}
inline const ::Page& FrsPageResIdl_DataRes::page() const {
  const ::Page* p = page_;
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.page)
  return p != NULL ? *p : *reinterpret_cast<const ::Page*>(
      &::_Page_default_instance_);
}
inline ::Page* FrsPageResIdl_DataRes::release_page() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.page)
  
  ::Page* temp = page_;
  page_ = NULL;
  return temp;
}
inline ::Page* FrsPageResIdl_DataRes::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::Page;
  }
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.page)
  return page_;
}
inline void FrsPageResIdl_DataRes::set_allocated_page(::Page* page) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(page_);
  }
  if (page) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      page = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, page, submessage_arena);
    }
    
  } else {
    
  }
  page_ = page;
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.page)
}

// repeated .ThreadInfo thread_list = 7;
inline int FrsPageResIdl_DataRes::thread_list_size() const {
  return thread_list_.size();
}
inline const ::ThreadInfo& FrsPageResIdl_DataRes::thread_list(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.thread_list)
  return thread_list_.Get(index);
}
inline ::ThreadInfo* FrsPageResIdl_DataRes::mutable_thread_list(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.thread_list)
  return thread_list_.Mutable(index);
}
inline ::ThreadInfo* FrsPageResIdl_DataRes::add_thread_list() {
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.thread_list)
  return thread_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
FrsPageResIdl_DataRes::mutable_thread_list() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.thread_list)
  return &thread_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
FrsPageResIdl_DataRes::thread_list() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.thread_list)
  return thread_list_;
}

// repeated .User user_list = 17;
inline int FrsPageResIdl_DataRes::user_list_size() const {
  return user_list_.size();
}
inline const ::User& FrsPageResIdl_DataRes::user_list(int index) const {
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.user_list)
  return user_list_.Get(index);
}
inline ::User* FrsPageResIdl_DataRes::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.user_list)
  return user_list_.Mutable(index);
}
inline ::User* FrsPageResIdl_DataRes::add_user_list() {
  // @@protoc_insertion_point(field_add:FrsPageResIdl.DataRes.user_list)
  return user_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::User >*
FrsPageResIdl_DataRes::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:FrsPageResIdl.DataRes.user_list)
  return &user_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::User >&
FrsPageResIdl_DataRes::user_list() const {
  // @@protoc_insertion_point(field_list:FrsPageResIdl.DataRes.user_list)
  return user_list_;
}

// .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
inline bool FrsPageResIdl_DataRes::has_nav_tab_info() const {
  return this != internal_default_instance() && nav_tab_info_ != NULL;
}
inline void FrsPageResIdl_DataRes::clear_nav_tab_info() {
  if (GetArenaNoVirtual() == NULL && nav_tab_info_ != NULL) {
    delete nav_tab_info_;
  }
  nav_tab_info_ = NULL;
}
inline const ::FrsPageResIdl_DataRes_NavTabInfo& FrsPageResIdl_DataRes::nav_tab_info() const {
  const ::FrsPageResIdl_DataRes_NavTabInfo* p = nav_tab_info_;
  // @@protoc_insertion_point(field_get:FrsPageResIdl.DataRes.nav_tab_info)
  return p != NULL ? *p : *reinterpret_cast<const ::FrsPageResIdl_DataRes_NavTabInfo*>(
      &::_FrsPageResIdl_DataRes_NavTabInfo_default_instance_);
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::release_nav_tab_info() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.DataRes.nav_tab_info)
  
  ::FrsPageResIdl_DataRes_NavTabInfo* temp = nav_tab_info_;
  nav_tab_info_ = NULL;
  return temp;
}
inline ::FrsPageResIdl_DataRes_NavTabInfo* FrsPageResIdl_DataRes::mutable_nav_tab_info() {
  
  if (nav_tab_info_ == NULL) {
    nav_tab_info_ = new ::FrsPageResIdl_DataRes_NavTabInfo;
  }
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.DataRes.nav_tab_info)
  return nav_tab_info_;
}
inline void FrsPageResIdl_DataRes::set_allocated_nav_tab_info(::FrsPageResIdl_DataRes_NavTabInfo* nav_tab_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nav_tab_info_;
  }
  if (nav_tab_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nav_tab_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nav_tab_info, submessage_arena);
    }
    
  } else {
    
  }
  nav_tab_info_ = nav_tab_info;
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.DataRes.nav_tab_info)
}

// -------------------------------------------------------------------

// FrsPageResIdl

// .Error error = 1;
inline bool FrsPageResIdl::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::Error& FrsPageResIdl::error() const {
  const ::Error* p = error_;
  // @@protoc_insertion_point(field_get:FrsPageResIdl.error)
  return p != NULL ? *p : *reinterpret_cast<const ::Error*>(
      &::_Error_default_instance_);
}
inline ::Error* FrsPageResIdl::release_error() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.error)
  
  ::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::Error* FrsPageResIdl::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::Error;
  }
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.error)
  return error_;
}
inline void FrsPageResIdl::set_allocated_error(::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.error)
}

// .FrsPageResIdl.DataRes data = 2;
inline bool FrsPageResIdl::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void FrsPageResIdl::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::FrsPageResIdl_DataRes& FrsPageResIdl::data() const {
  const ::FrsPageResIdl_DataRes* p = data_;
  // @@protoc_insertion_point(field_get:FrsPageResIdl.data)
  return p != NULL ? *p : *reinterpret_cast<const ::FrsPageResIdl_DataRes*>(
      &::_FrsPageResIdl_DataRes_default_instance_);
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::release_data() {
  // @@protoc_insertion_point(field_release:FrsPageResIdl.data)
  
  ::FrsPageResIdl_DataRes* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::FrsPageResIdl_DataRes* FrsPageResIdl::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::FrsPageResIdl_DataRes;
  }
  // @@protoc_insertion_point(field_mutable:FrsPageResIdl.data)
  return data_;
}
inline void FrsPageResIdl::set_allocated_data(::FrsPageResIdl_DataRes* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:FrsPageResIdl.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FrsPageResIdl_2eproto__INCLUDED
