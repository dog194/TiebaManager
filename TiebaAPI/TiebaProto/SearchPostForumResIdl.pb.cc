// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchPostForumResIdl.proto

#include "SearchPostForumResIdl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class SearchPostForumResIdl_DataRes_SearchForumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPostForumResIdl_DataRes_SearchForum>
      _instance;
} _SearchPostForumResIdl_DataRes_SearchForum_default_instance_;
class SearchPostForumResIdl_DataResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPostForumResIdl_DataRes>
      _instance;
} _SearchPostForumResIdl_DataRes_default_instance_;
class SearchPostForumResIdlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPostForumResIdl>
      _instance;
} _SearchPostForumResIdl_default_instance_;
namespace protobuf_SearchPostForumResIdl_2eproto {
void InitDefaultsSearchPostForumResIdl_DataRes_SearchForumImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_FrsTabInfo_2eproto::InitDefaultsFrsTabInfo();
  {
    void* ptr = &::_SearchPostForumResIdl_DataRes_SearchForum_default_instance_;
    new (ptr) ::SearchPostForumResIdl_DataRes_SearchForum();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchPostForumResIdl_DataRes_SearchForum::InitAsDefaultInstance();
}

void InitDefaultsSearchPostForumResIdl_DataRes_SearchForum() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchPostForumResIdl_DataRes_SearchForumImpl);
}

void InitDefaultsSearchPostForumResIdl_DataResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes_SearchForum();
  {
    void* ptr = &::_SearchPostForumResIdl_DataRes_default_instance_;
    new (ptr) ::SearchPostForumResIdl_DataRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchPostForumResIdl_DataRes::InitAsDefaultInstance();
}

void InitDefaultsSearchPostForumResIdl_DataRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchPostForumResIdl_DataResImpl);
}

void InitDefaultsSearchPostForumResIdlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes();
  {
    void* ptr = &::_SearchPostForumResIdl_default_instance_;
    new (ptr) ::SearchPostForumResIdl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchPostForumResIdl::InitAsDefaultInstance();
}

void InitDefaultsSearchPostForumResIdl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchPostForumResIdlImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes_SearchForum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes_SearchForum, forum_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes_SearchForum, forum_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes_SearchForum, tab_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl_DataRes, exact_match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchPostForumResIdl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SearchPostForumResIdl_DataRes_SearchForum)},
  { 8, -1, sizeof(::SearchPostForumResIdl_DataRes)},
  { 14, -1, sizeof(::SearchPostForumResIdl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchPostForumResIdl_DataRes_SearchForum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchPostForumResIdl_DataRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchPostForumResIdl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SearchPostForumResIdl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033SearchPostForumResIdl.proto\032\020FrsTabInf"
      "o.proto\032\013Error.proto\"\375\001\n\025SearchPostForum"
      "ResIdl\022\025\n\005error\030\001 \001(\0132\006.Error\022,\n\004data\030\002 "
      "\001(\0132\036.SearchPostForumResIdl.DataRes\032\236\001\n\007"
      "DataRes\022\?\n\013exact_match\030\001 \001(\0132*.SearchPos"
      "tForumResIdl.DataRes.SearchForum\032R\n\013Sear"
      "chForum\022\020\n\010forum_id\030\001 \001(\003\022\022\n\nforum_name\030"
      "\002 \001(\t\022\035\n\010tab_info\030\t \003(\0132\013.FrsTabInfob\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SearchPostForumResIdl.proto", &protobuf_RegisterTypes);
  ::protobuf_FrsTabInfo_2eproto::AddDescriptors();
  ::protobuf_Error_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SearchPostForumResIdl_2eproto

// ===================================================================

void SearchPostForumResIdl_DataRes_SearchForum::InitAsDefaultInstance() {
}
void SearchPostForumResIdl_DataRes_SearchForum::clear_tab_info() {
  tab_info_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPostForumResIdl_DataRes_SearchForum::kForumIdFieldNumber;
const int SearchPostForumResIdl_DataRes_SearchForum::kForumNameFieldNumber;
const int SearchPostForumResIdl_DataRes_SearchForum::kTabInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPostForumResIdl_DataRes_SearchForum::SearchPostForumResIdl_DataRes_SearchForum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes_SearchForum();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchPostForumResIdl.DataRes.SearchForum)
}
SearchPostForumResIdl_DataRes_SearchForum::SearchPostForumResIdl_DataRes_SearchForum(const SearchPostForumResIdl_DataRes_SearchForum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tab_info_(from.tab_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  forum_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.forum_name().size() > 0) {
    forum_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forum_name_);
  }
  forum_id_ = from.forum_id_;
  // @@protoc_insertion_point(copy_constructor:SearchPostForumResIdl.DataRes.SearchForum)
}

void SearchPostForumResIdl_DataRes_SearchForum::SharedCtor() {
  forum_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forum_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SearchPostForumResIdl_DataRes_SearchForum::~SearchPostForumResIdl_DataRes_SearchForum() {
  // @@protoc_insertion_point(destructor:SearchPostForumResIdl.DataRes.SearchForum)
  SharedDtor();
}

void SearchPostForumResIdl_DataRes_SearchForum::SharedDtor() {
  forum_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchPostForumResIdl_DataRes_SearchForum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchPostForumResIdl_DataRes_SearchForum::descriptor() {
  ::protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPostForumResIdl_DataRes_SearchForum& SearchPostForumResIdl_DataRes_SearchForum::default_instance() {
  ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes_SearchForum();
  return *internal_default_instance();
}

SearchPostForumResIdl_DataRes_SearchForum* SearchPostForumResIdl_DataRes_SearchForum::New(::google::protobuf::Arena* arena) const {
  SearchPostForumResIdl_DataRes_SearchForum* n = new SearchPostForumResIdl_DataRes_SearchForum;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchPostForumResIdl_DataRes_SearchForum::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchPostForumResIdl.DataRes.SearchForum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tab_info_.Clear();
  forum_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forum_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SearchPostForumResIdl_DataRes_SearchForum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchPostForumResIdl.DataRes.SearchForum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 forum_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &forum_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string forum_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forum_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->forum_name().data(), static_cast<int>(this->forum_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchPostForumResIdl.DataRes.SearchForum.forum_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FrsTabInfo tab_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tab_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchPostForumResIdl.DataRes.SearchForum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchPostForumResIdl.DataRes.SearchForum)
  return false;
#undef DO_
}

void SearchPostForumResIdl_DataRes_SearchForum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchPostForumResIdl.DataRes.SearchForum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 forum_id = 1;
  if (this->forum_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->forum_id(), output);
  }

  // string forum_name = 2;
  if (this->forum_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forum_name().data(), static_cast<int>(this->forum_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchPostForumResIdl.DataRes.SearchForum.forum_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->forum_name(), output);
  }

  // repeated .FrsTabInfo tab_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tab_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->tab_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchPostForumResIdl.DataRes.SearchForum)
}

::google::protobuf::uint8* SearchPostForumResIdl_DataRes_SearchForum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchPostForumResIdl.DataRes.SearchForum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 forum_id = 1;
  if (this->forum_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->forum_id(), target);
  }

  // string forum_name = 2;
  if (this->forum_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forum_name().data(), static_cast<int>(this->forum_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchPostForumResIdl.DataRes.SearchForum.forum_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->forum_name(), target);
  }

  // repeated .FrsTabInfo tab_info = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tab_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->tab_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchPostForumResIdl.DataRes.SearchForum)
  return target;
}

size_t SearchPostForumResIdl_DataRes_SearchForum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchPostForumResIdl.DataRes.SearchForum)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .FrsTabInfo tab_info = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->tab_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tab_info(static_cast<int>(i)));
    }
  }

  // string forum_name = 2;
  if (this->forum_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->forum_name());
  }

  // int64 forum_id = 1;
  if (this->forum_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->forum_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchPostForumResIdl_DataRes_SearchForum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchPostForumResIdl.DataRes.SearchForum)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPostForumResIdl_DataRes_SearchForum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPostForumResIdl_DataRes_SearchForum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchPostForumResIdl.DataRes.SearchForum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchPostForumResIdl.DataRes.SearchForum)
    MergeFrom(*source);
  }
}

void SearchPostForumResIdl_DataRes_SearchForum::MergeFrom(const SearchPostForumResIdl_DataRes_SearchForum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchPostForumResIdl.DataRes.SearchForum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tab_info_.MergeFrom(from.tab_info_);
  if (from.forum_name().size() > 0) {

    forum_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forum_name_);
  }
  if (from.forum_id() != 0) {
    set_forum_id(from.forum_id());
  }
}

void SearchPostForumResIdl_DataRes_SearchForum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchPostForumResIdl.DataRes.SearchForum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPostForumResIdl_DataRes_SearchForum::CopyFrom(const SearchPostForumResIdl_DataRes_SearchForum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchPostForumResIdl.DataRes.SearchForum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPostForumResIdl_DataRes_SearchForum::IsInitialized() const {
  return true;
}

void SearchPostForumResIdl_DataRes_SearchForum::Swap(SearchPostForumResIdl_DataRes_SearchForum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPostForumResIdl_DataRes_SearchForum::InternalSwap(SearchPostForumResIdl_DataRes_SearchForum* other) {
  using std::swap;
  tab_info_.InternalSwap(&other->tab_info_);
  forum_name_.Swap(&other->forum_name_);
  swap(forum_id_, other->forum_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchPostForumResIdl_DataRes_SearchForum::GetMetadata() const {
  protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchPostForumResIdl_DataRes::InitAsDefaultInstance() {
  ::_SearchPostForumResIdl_DataRes_default_instance_._instance.get_mutable()->exact_match_ = const_cast< ::SearchPostForumResIdl_DataRes_SearchForum*>(
      ::SearchPostForumResIdl_DataRes_SearchForum::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPostForumResIdl_DataRes::kExactMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPostForumResIdl_DataRes::SearchPostForumResIdl_DataRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchPostForumResIdl.DataRes)
}
SearchPostForumResIdl_DataRes::SearchPostForumResIdl_DataRes(const SearchPostForumResIdl_DataRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exact_match()) {
    exact_match_ = new ::SearchPostForumResIdl_DataRes_SearchForum(*from.exact_match_);
  } else {
    exact_match_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SearchPostForumResIdl.DataRes)
}

void SearchPostForumResIdl_DataRes::SharedCtor() {
  exact_match_ = NULL;
  _cached_size_ = 0;
}

SearchPostForumResIdl_DataRes::~SearchPostForumResIdl_DataRes() {
  // @@protoc_insertion_point(destructor:SearchPostForumResIdl.DataRes)
  SharedDtor();
}

void SearchPostForumResIdl_DataRes::SharedDtor() {
  if (this != internal_default_instance()) delete exact_match_;
}

void SearchPostForumResIdl_DataRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchPostForumResIdl_DataRes::descriptor() {
  ::protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPostForumResIdl_DataRes& SearchPostForumResIdl_DataRes::default_instance() {
  ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes();
  return *internal_default_instance();
}

SearchPostForumResIdl_DataRes* SearchPostForumResIdl_DataRes::New(::google::protobuf::Arena* arena) const {
  SearchPostForumResIdl_DataRes* n = new SearchPostForumResIdl_DataRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchPostForumResIdl_DataRes::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchPostForumResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && exact_match_ != NULL) {
    delete exact_match_;
  }
  exact_match_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchPostForumResIdl_DataRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchPostForumResIdl.DataRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exact_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchPostForumResIdl.DataRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchPostForumResIdl.DataRes)
  return false;
#undef DO_
}

void SearchPostForumResIdl_DataRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchPostForumResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
  if (this->has_exact_match()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->exact_match_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchPostForumResIdl.DataRes)
}

::google::protobuf::uint8* SearchPostForumResIdl_DataRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchPostForumResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
  if (this->has_exact_match()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->exact_match_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchPostForumResIdl.DataRes)
  return target;
}

size_t SearchPostForumResIdl_DataRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchPostForumResIdl.DataRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
  if (this->has_exact_match()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->exact_match_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchPostForumResIdl_DataRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchPostForumResIdl.DataRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPostForumResIdl_DataRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPostForumResIdl_DataRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchPostForumResIdl.DataRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchPostForumResIdl.DataRes)
    MergeFrom(*source);
  }
}

void SearchPostForumResIdl_DataRes::MergeFrom(const SearchPostForumResIdl_DataRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchPostForumResIdl.DataRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exact_match()) {
    mutable_exact_match()->::SearchPostForumResIdl_DataRes_SearchForum::MergeFrom(from.exact_match());
  }
}

void SearchPostForumResIdl_DataRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchPostForumResIdl.DataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPostForumResIdl_DataRes::CopyFrom(const SearchPostForumResIdl_DataRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchPostForumResIdl.DataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPostForumResIdl_DataRes::IsInitialized() const {
  return true;
}

void SearchPostForumResIdl_DataRes::Swap(SearchPostForumResIdl_DataRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPostForumResIdl_DataRes::InternalSwap(SearchPostForumResIdl_DataRes* other) {
  using std::swap;
  swap(exact_match_, other->exact_match_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchPostForumResIdl_DataRes::GetMetadata() const {
  protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchPostForumResIdl::InitAsDefaultInstance() {
  ::_SearchPostForumResIdl_default_instance_._instance.get_mutable()->error_ = const_cast< ::Error*>(
      ::Error::internal_default_instance());
  ::_SearchPostForumResIdl_default_instance_._instance.get_mutable()->data_ = const_cast< ::SearchPostForumResIdl_DataRes*>(
      ::SearchPostForumResIdl_DataRes::internal_default_instance());
}
void SearchPostForumResIdl::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPostForumResIdl::kErrorFieldNumber;
const int SearchPostForumResIdl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPostForumResIdl::SearchPostForumResIdl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchPostForumResIdl)
}
SearchPostForumResIdl::SearchPostForumResIdl(const SearchPostForumResIdl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::SearchPostForumResIdl_DataRes(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SearchPostForumResIdl)
}

void SearchPostForumResIdl::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&error_)) + sizeof(data_));
  _cached_size_ = 0;
}

SearchPostForumResIdl::~SearchPostForumResIdl() {
  // @@protoc_insertion_point(destructor:SearchPostForumResIdl)
  SharedDtor();
}

void SearchPostForumResIdl::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete data_;
}

void SearchPostForumResIdl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchPostForumResIdl::descriptor() {
  ::protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPostForumResIdl& SearchPostForumResIdl::default_instance() {
  ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl();
  return *internal_default_instance();
}

SearchPostForumResIdl* SearchPostForumResIdl::New(::google::protobuf::Arena* arena) const {
  SearchPostForumResIdl* n = new SearchPostForumResIdl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchPostForumResIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchPostForumResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchPostForumResIdl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchPostForumResIdl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SearchPostForumResIdl.DataRes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchPostForumResIdl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchPostForumResIdl)
  return false;
#undef DO_
}

void SearchPostForumResIdl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchPostForumResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // .SearchPostForumResIdl.DataRes data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchPostForumResIdl)
}

::google::protobuf::uint8* SearchPostForumResIdl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchPostForumResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  // .SearchPostForumResIdl.DataRes data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchPostForumResIdl)
  return target;
}

size_t SearchPostForumResIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchPostForumResIdl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .SearchPostForumResIdl.DataRes data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchPostForumResIdl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchPostForumResIdl)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPostForumResIdl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPostForumResIdl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchPostForumResIdl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchPostForumResIdl)
    MergeFrom(*source);
  }
}

void SearchPostForumResIdl::MergeFrom(const SearchPostForumResIdl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchPostForumResIdl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::Error::MergeFrom(from.error());
  }
  if (from.has_data()) {
    mutable_data()->::SearchPostForumResIdl_DataRes::MergeFrom(from.data());
  }
}

void SearchPostForumResIdl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchPostForumResIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPostForumResIdl::CopyFrom(const SearchPostForumResIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchPostForumResIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPostForumResIdl::IsInitialized() const {
  return true;
}

void SearchPostForumResIdl::Swap(SearchPostForumResIdl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPostForumResIdl::InternalSwap(SearchPostForumResIdl* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchPostForumResIdl::GetMetadata() const {
  protobuf_SearchPostForumResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SearchPostForumResIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
