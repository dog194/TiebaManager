// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrsTabInfo.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_FrsTabInfo_2eproto__INCLUDED
#define PROTOBUF_FrsTabInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_FrsTabInfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFrsTabInfoImpl();
void InitDefaultsFrsTabInfo();
inline void InitDefaults() {
  InitDefaultsFrsTabInfo();
}
}  // namespace protobuf_FrsTabInfo_2eproto
class FrsTabInfo;
class FrsTabInfoDefaultTypeInternal;
extern FrsTabInfoDefaultTypeInternal _FrsTabInfo_default_instance_;

// ===================================================================

class FrsTabInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrsTabInfo) */ {
 public:
  FrsTabInfo();
  virtual ~FrsTabInfo();

  FrsTabInfo(const FrsTabInfo& from);

  inline FrsTabInfo& operator=(const FrsTabInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrsTabInfo(FrsTabInfo&& from) noexcept
    : FrsTabInfo() {
    *this = ::std::move(from);
  }

  inline FrsTabInfo& operator=(FrsTabInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrsTabInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrsTabInfo* internal_default_instance() {
    return reinterpret_cast<const FrsTabInfo*>(
               &_FrsTabInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FrsTabInfo* other);
  friend void swap(FrsTabInfo& a, FrsTabInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrsTabInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FrsTabInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrsTabInfo& from);
  void MergeFrom(const FrsTabInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrsTabInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tab_name = 3;
  void clear_tab_name();
  static const int kTabNameFieldNumber = 3;
  const ::std::string& tab_name() const;
  void set_tab_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tab_name(::std::string&& value);
  #endif
  void set_tab_name(const char* value);
  void set_tab_name(const char* value, size_t size);
  ::std::string* mutable_tab_name();
  ::std::string* release_tab_name();
  void set_allocated_tab_name(::std::string* tab_name);

  // int32 tab_id = 1;
  void clear_tab_id();
  static const int kTabIdFieldNumber = 1;
  ::google::protobuf::int32 tab_id() const;
  void set_tab_id(::google::protobuf::int32 value);

  // int32 is_general_tab = 7;
  void clear_is_general_tab();
  static const int kIsGeneralTabFieldNumber = 7;
  ::google::protobuf::int32 is_general_tab() const;
  void set_is_general_tab(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FrsTabInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tab_name_;
  ::google::protobuf::int32 tab_id_;
  ::google::protobuf::int32 is_general_tab_;
  mutable int _cached_size_;
  friend struct ::protobuf_FrsTabInfo_2eproto::TableStruct;
  friend void ::protobuf_FrsTabInfo_2eproto::InitDefaultsFrsTabInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FrsTabInfo

// int32 tab_id = 1;
inline void FrsTabInfo::clear_tab_id() {
  tab_id_ = 0;
}
inline ::google::protobuf::int32 FrsTabInfo::tab_id() const {
  // @@protoc_insertion_point(field_get:FrsTabInfo.tab_id)
  return tab_id_;
}
inline void FrsTabInfo::set_tab_id(::google::protobuf::int32 value) {
  
  tab_id_ = value;
  // @@protoc_insertion_point(field_set:FrsTabInfo.tab_id)
}

// string tab_name = 3;
inline void FrsTabInfo::clear_tab_name() {
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FrsTabInfo::tab_name() const {
  // @@protoc_insertion_point(field_get:FrsTabInfo.tab_name)
  return tab_name_.GetNoArena();
}
inline void FrsTabInfo::set_tab_name(const ::std::string& value) {
  
  tab_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FrsTabInfo.tab_name)
}
#if LANG_CXX11
inline void FrsTabInfo::set_tab_name(::std::string&& value) {
  
  tab_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FrsTabInfo.tab_name)
}
#endif
inline void FrsTabInfo::set_tab_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tab_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FrsTabInfo.tab_name)
}
inline void FrsTabInfo::set_tab_name(const char* value, size_t size) {
  
  tab_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FrsTabInfo.tab_name)
}
inline ::std::string* FrsTabInfo::mutable_tab_name() {
  
  // @@protoc_insertion_point(field_mutable:FrsTabInfo.tab_name)
  return tab_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrsTabInfo::release_tab_name() {
  // @@protoc_insertion_point(field_release:FrsTabInfo.tab_name)
  
  return tab_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrsTabInfo::set_allocated_tab_name(::std::string* tab_name) {
  if (tab_name != NULL) {
    
  } else {
    
  }
  tab_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tab_name);
  // @@protoc_insertion_point(field_set_allocated:FrsTabInfo.tab_name)
}

// int32 is_general_tab = 7;
inline void FrsTabInfo::clear_is_general_tab() {
  is_general_tab_ = 0;
}
inline ::google::protobuf::int32 FrsTabInfo::is_general_tab() const {
  // @@protoc_insertion_point(field_get:FrsTabInfo.is_general_tab)
  return is_general_tab_;
}
inline void FrsTabInfo::set_is_general_tab(::google::protobuf::int32 value) {
  
  is_general_tab_ = value;
  // @@protoc_insertion_point(field_set:FrsTabInfo.is_general_tab)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FrsTabInfo_2eproto__INCLUDED
