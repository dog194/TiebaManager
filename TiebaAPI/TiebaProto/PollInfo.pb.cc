// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PollInfo.proto

#include "PollInfo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR PollInfo_PollOption::PollInfo_PollOption(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.num_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PollInfo_PollOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PollInfo_PollOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PollInfo_PollOptionDefaultTypeInternal() {}
  union {
    PollInfo_PollOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PollInfo_PollOptionDefaultTypeInternal _PollInfo_PollOption_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PollInfo::PollInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.options_)*/ {},
      /*decltype(_impl_.title_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.total_num_)*/ ::int64_t{0},
      /*decltype(_impl_.total_poll_)*/ ::int64_t{0},
      /*decltype(_impl_.is_multi_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PollInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PollInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PollInfoDefaultTypeInternal() {}
  union {
    PollInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PollInfoDefaultTypeInternal _PollInfo_default_instance_;
static ::_pb::Metadata file_level_metadata_PollInfo_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_PollInfo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_PollInfo_2eproto = nullptr;
const ::uint32_t TableStruct_PollInfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PollInfo_PollOption, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PollInfo_PollOption, _impl_.num_),
    PROTOBUF_FIELD_OFFSET(::PollInfo_PollOption, _impl_.text_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PollInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PollInfo, _impl_.is_multi_),
    PROTOBUF_FIELD_OFFSET(::PollInfo, _impl_.total_num_),
    PROTOBUF_FIELD_OFFSET(::PollInfo, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::PollInfo, _impl_.total_poll_),
    PROTOBUF_FIELD_OFFSET(::PollInfo, _impl_.title_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::PollInfo_PollOption)},
        {10, -1, -1, sizeof(::PollInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_PollInfo_PollOption_default_instance_._instance,
    &::_PollInfo_default_instance_._instance,
};
const char descriptor_table_protodef_PollInfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016PollInfo.proto\"\242\001\n\010PollInfo\022\020\n\010is_mult"
    "i\030\002 \001(\005\022\021\n\ttotal_num\030\003 \001(\003\022%\n\007options\030\t "
    "\003(\0132\024.PollInfo.PollOption\022\022\n\ntotal_poll\030"
    "\013 \001(\003\022\r\n\005title\030\014 \001(\t\032\'\n\nPollOption\022\013\n\003nu"
    "m\030\002 \001(\003\022\014\n\004text\030\003 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_PollInfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PollInfo_2eproto = {
    false,
    false,
    189,
    descriptor_table_protodef_PollInfo_2eproto,
    "PollInfo.proto",
    &descriptor_table_PollInfo_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_PollInfo_2eproto::offsets,
    file_level_metadata_PollInfo_2eproto,
    file_level_enum_descriptors_PollInfo_2eproto,
    file_level_service_descriptors_PollInfo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PollInfo_2eproto_getter() {
  return &descriptor_table_PollInfo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_PollInfo_2eproto(&descriptor_table_PollInfo_2eproto);
// ===================================================================

class PollInfo_PollOption::_Internal {
 public:
};

PollInfo_PollOption::PollInfo_PollOption(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PollInfo.PollOption)
}
PollInfo_PollOption::PollInfo_PollOption(const PollInfo_PollOption& from) : ::google::protobuf::Message() {
  PollInfo_PollOption* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){},
      decltype(_impl_.num_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }
  _this->_impl_.num_ = from._impl_.num_;

  // @@protoc_insertion_point(copy_constructor:PollInfo.PollOption)
}
inline void PollInfo_PollOption::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){},
      decltype(_impl_.num_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PollInfo_PollOption::~PollInfo_PollOption() {
  // @@protoc_insertion_point(destructor:PollInfo.PollOption)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PollInfo_PollOption::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}
void PollInfo_PollOption::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PollInfo_PollOption::Clear() {
// @@protoc_insertion_point(message_clear_start:PollInfo.PollOption)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.num_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PollInfo_PollOption::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> PollInfo_PollOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PollInfo_PollOption_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PollInfo_PollOption, _impl_.num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo_PollOption, _impl_.num_)}},
    // string text = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo_PollOption, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 num = 2;
    {PROTOBUF_FIELD_OFFSET(PollInfo_PollOption, _impl_.num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string text = 3;
    {PROTOBUF_FIELD_OFFSET(PollInfo_PollOption, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\4\0\0\0\0\0"
    "PollInfo.PollOption"
    "text"
  }},
};

::uint8_t* PollInfo_PollOption::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PollInfo.PollOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 num = 2;
  if (this->_internal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_num(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PollInfo.PollOption.text");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PollInfo.PollOption)
  return target;
}

::size_t PollInfo_PollOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PollInfo.PollOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // int64 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PollInfo_PollOption::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PollInfo_PollOption::MergeImpl
};
const ::google::protobuf::Message::ClassData*PollInfo_PollOption::GetClassData() const { return &_class_data_; }


void PollInfo_PollOption::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PollInfo_PollOption*>(&to_msg);
  auto& from = static_cast<const PollInfo_PollOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PollInfo.PollOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PollInfo_PollOption::CopyFrom(const PollInfo_PollOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PollInfo.PollOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PollInfo_PollOption::IsInitialized() const {
  return true;
}

void PollInfo_PollOption::InternalSwap(PollInfo_PollOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
        swap(_impl_.num_, other->_impl_.num_);
}

::google::protobuf::Metadata PollInfo_PollOption::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PollInfo_2eproto_getter, &descriptor_table_PollInfo_2eproto_once,
      file_level_metadata_PollInfo_2eproto[0]);
}
// ===================================================================

class PollInfo::_Internal {
 public:
};

PollInfo::PollInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PollInfo)
}
PollInfo::PollInfo(const PollInfo& from) : ::google::protobuf::Message() {
  PollInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){from._impl_.options_},
      decltype(_impl_.title_){},
      decltype(_impl_.total_num_){},
      decltype(_impl_.total_poll_){},
      decltype(_impl_.is_multi_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.total_num_, &from._impl_.total_num_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.is_multi_) -
    reinterpret_cast<char*>(&_impl_.total_num_)) + sizeof(_impl_.is_multi_));

  // @@protoc_insertion_point(copy_constructor:PollInfo)
}
inline void PollInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.options_){arena},
      decltype(_impl_.title_){},
      decltype(_impl_.total_num_){::int64_t{0}},
      decltype(_impl_.total_poll_){::int64_t{0}},
      decltype(_impl_.is_multi_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.title_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PollInfo::~PollInfo() {
  // @@protoc_insertion_point(destructor:PollInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PollInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.options_.~RepeatedPtrField();
  _impl_.title_.Destroy();
}
void PollInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PollInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PollInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_options()->Clear();
  _impl_.title_.ClearToEmpty();
  ::memset(&_impl_.total_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_multi_) -
      reinterpret_cast<char*>(&_impl_.total_num_)) + sizeof(_impl_.is_multi_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PollInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 22, 2> PollInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963961,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PollInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string title = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.title_)}},
    // repeated .PollInfo.PollOption options = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.options_)}},
    // int32 is_multi = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PollInfo, _impl_.is_multi_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.is_multi_)}},
    // int64 total_num = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PollInfo, _impl_.total_num_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.total_num_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 is_multi = 2;
    {PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.is_multi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 total_num = 3;
    {PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.total_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .PollInfo.PollOption options = 9;
    {PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 total_poll = 11;
    {PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.total_poll_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string title = 12;
    {PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PollInfo_PollOption>()},
  }}, {{
    "\10\0\0\0\0\5\0\0"
    "PollInfo"
    "title"
  }},
};

::uint8_t* PollInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PollInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 is_multi = 2;
  if (this->_internal_is_multi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_is_multi(), target);
  }

  // int64 total_num = 3;
  if (this->_internal_total_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_total_num(), target);
  }

  // repeated .PollInfo.PollOption options = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 total_poll = 11;
  if (this->_internal_total_poll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_total_poll(), target);
  }

  // string title = 12;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PollInfo.title");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PollInfo)
  return target;
}

::size_t PollInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PollInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PollInfo.PollOption options = 9;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string title = 12;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // int64 total_num = 3;
  if (this->_internal_total_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_num());
  }

  // int64 total_poll = 11;
  if (this->_internal_total_poll() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_poll());
  }

  // int32 is_multi = 2;
  if (this->_internal_is_multi() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_is_multi());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PollInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PollInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*PollInfo::GetClassData() const { return &_class_data_; }


void PollInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PollInfo*>(&to_msg);
  auto& from = static_cast<const PollInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PollInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(from._internal_options());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (from._internal_total_num() != 0) {
    _this->_internal_set_total_num(from._internal_total_num());
  }
  if (from._internal_total_poll() != 0) {
    _this->_internal_set_total_poll(from._internal_total_poll());
  }
  if (from._internal_is_multi() != 0) {
    _this->_internal_set_is_multi(from._internal_is_multi());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PollInfo::CopyFrom(const PollInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PollInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PollInfo::IsInitialized() const {
  return true;
}

void PollInfo::InternalSwap(PollInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, lhs_arena,
                                       &other->_impl_.title_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.is_multi_)
      + sizeof(PollInfo::_impl_.is_multi_)
      - PROTOBUF_FIELD_OFFSET(PollInfo, _impl_.total_num_)>(
          reinterpret_cast<char*>(&_impl_.total_num_),
          reinterpret_cast<char*>(&other->_impl_.total_num_));
}

::google::protobuf::Metadata PollInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PollInfo_2eproto_getter, &descriptor_table_PollInfo_2eproto_once,
      file_level_metadata_PollInfo_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
