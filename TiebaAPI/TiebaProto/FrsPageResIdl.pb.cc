// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrsPageResIdl.proto

#include "FrsPageResIdl.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_ForumInfo::FrsPageResIdl_DataRes_ForumInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ ::int64_t{0},
      /*decltype(_impl_.member_num_)*/ 0,
      /*decltype(_impl_.thread_num_)*/ 0,
      /*decltype(_impl_.post_num_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal() {}
  union {
    FrsPageResIdl_DataRes_ForumInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrsPageResIdl_DataRes_ForumInfoDefaultTypeInternal _FrsPageResIdl_DataRes_ForumInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_NavTabInfo::FrsPageResIdl_DataRes_NavTabInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.tab_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal() {}
  union {
    FrsPageResIdl_DataRes_NavTabInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrsPageResIdl_DataRes_NavTabInfoDefaultTypeInternal _FrsPageResIdl_DataRes_NavTabInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FrsPageResIdl_DataRes::FrsPageResIdl_DataRes(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.thread_list_)*/ {},
      /*decltype(_impl_.user_list_)*/ {},
      /*decltype(_impl_.forum_)*/ nullptr,
      /*decltype(_impl_.page_)*/ nullptr,
      /*decltype(_impl_.nav_tab_info_)*/ nullptr,
    } {}
struct FrsPageResIdl_DataResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrsPageResIdl_DataResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrsPageResIdl_DataResDefaultTypeInternal() {}
  union {
    FrsPageResIdl_DataRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrsPageResIdl_DataResDefaultTypeInternal _FrsPageResIdl_DataRes_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FrsPageResIdl::FrsPageResIdl(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.error_)*/ nullptr,
      /*decltype(_impl_.data_)*/ nullptr,
    } {}
struct FrsPageResIdlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrsPageResIdlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrsPageResIdlDefaultTypeInternal() {}
  union {
    FrsPageResIdl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrsPageResIdlDefaultTypeInternal _FrsPageResIdl_default_instance_;
static ::_pb::Metadata file_level_metadata_FrsPageResIdl_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_FrsPageResIdl_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_FrsPageResIdl_2eproto = nullptr;
const ::uint32_t TableStruct_FrsPageResIdl_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _impl_.member_num_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _impl_.thread_num_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_ForumInfo, _impl_.post_num_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_NavTabInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes_NavTabInfo, _impl_.tab_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_.forum_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_.page_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_.thread_list_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_.user_list_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl_DataRes, _impl_.nav_tab_info_),
    0,
    1,
    ~0u,
    ~0u,
    2,
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl, _impl_.error_),
    PROTOBUF_FIELD_OFFSET(::FrsPageResIdl, _impl_.data_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::FrsPageResIdl_DataRes_ForumInfo)},
        {13, -1, -1, sizeof(::FrsPageResIdl_DataRes_NavTabInfo)},
        {22, 35, -1, sizeof(::FrsPageResIdl_DataRes)},
        {40, 50, -1, sizeof(::FrsPageResIdl)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_FrsPageResIdl_DataRes_ForumInfo_default_instance_._instance,
    &::_FrsPageResIdl_DataRes_NavTabInfo_default_instance_._instance,
    &::_FrsPageResIdl_DataRes_default_instance_._instance,
    &::_FrsPageResIdl_default_instance_._instance,
};
const char descriptor_table_protodef_FrsPageResIdl_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023FrsPageResIdl.proto\032\nPage.proto\032\020Threa"
    "dInfo.proto\032\nUser.proto\032\020FrsTabInfo.prot"
    "o\032\013Error.proto\"\234\003\n\rFrsPageResIdl\022\025\n\005erro"
    "r\030\001 \001(\0132\006.Error\022$\n\004data\030\002 \001(\0132\026.FrsPageR"
    "esIdl.DataRes\032\315\002\n\007DataRes\022/\n\005forum\030\002 \001(\013"
    "2 .FrsPageResIdl.DataRes.ForumInfo\022\023\n\004pa"
    "ge\030\004 \001(\0132\005.Page\022 \n\013thread_list\030\007 \003(\0132\013.T"
    "hreadInfo\022\030\n\tuser_list\030\021 \003(\0132\005.User\0227\n\014n"
    "av_tab_info\030% \001(\0132!.FrsPageResIdl.DataRe"
    "s.NavTabInfo\032_\n\tForumInfo\022\n\n\002id\030\001 \001(\003\022\014\n"
    "\004name\030\002 \001(\t\022\022\n\nmember_num\030\t \001(\005\022\022\n\nthrea"
    "d_num\030\n \001(\005\022\020\n\010post_num\030\014 \001(\005\032&\n\nNavTabI"
    "nfo\022\030\n\003tab\030\001 \003(\0132\013.FrsTabInfob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_FrsPageResIdl_2eproto_deps[5] =
    {
        &::descriptor_table_Error_2eproto,
        &::descriptor_table_FrsTabInfo_2eproto,
        &::descriptor_table_Page_2eproto,
        &::descriptor_table_ThreadInfo_2eproto,
        &::descriptor_table_User_2eproto,
};
static ::absl::once_flag descriptor_table_FrsPageResIdl_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_FrsPageResIdl_2eproto = {
    false,
    false,
    517,
    descriptor_table_protodef_FrsPageResIdl_2eproto,
    "FrsPageResIdl.proto",
    &descriptor_table_FrsPageResIdl_2eproto_once,
    descriptor_table_FrsPageResIdl_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_FrsPageResIdl_2eproto::offsets,
    file_level_metadata_FrsPageResIdl_2eproto,
    file_level_enum_descriptors_FrsPageResIdl_2eproto,
    file_level_service_descriptors_FrsPageResIdl_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_FrsPageResIdl_2eproto_getter() {
  return &descriptor_table_FrsPageResIdl_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_FrsPageResIdl_2eproto(&descriptor_table_FrsPageResIdl_2eproto);
// ===================================================================

class FrsPageResIdl_DataRes_ForumInfo::_Internal {
 public:
};

FrsPageResIdl_DataRes_ForumInfo::FrsPageResIdl_DataRes_ForumInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FrsPageResIdl.DataRes.ForumInfo)
}
FrsPageResIdl_DataRes_ForumInfo::FrsPageResIdl_DataRes_ForumInfo(const FrsPageResIdl_DataRes_ForumInfo& from) : ::google::protobuf::Message() {
  FrsPageResIdl_DataRes_ForumInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.id_){},
      decltype(_impl_.member_num_){},
      decltype(_impl_.thread_num_){},
      decltype(_impl_.post_num_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.post_num_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.post_num_));

  // @@protoc_insertion_point(copy_constructor:FrsPageResIdl.DataRes.ForumInfo)
}
inline void FrsPageResIdl_DataRes_ForumInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.id_){::int64_t{0}},
      decltype(_impl_.member_num_){0},
      decltype(_impl_.thread_num_){0},
      decltype(_impl_.post_num_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
FrsPageResIdl_DataRes_ForumInfo::~FrsPageResIdl_DataRes_ForumInfo() {
  // @@protoc_insertion_point(destructor:FrsPageResIdl.DataRes.ForumInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrsPageResIdl_DataRes_ForumInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}
void FrsPageResIdl_DataRes_ForumInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FrsPageResIdl_DataRes_ForumInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageResIdl.DataRes.ForumInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.post_num_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.post_num_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrsPageResIdl_DataRes_ForumInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 0, 44, 2> FrsPageResIdl_DataRes_ForumInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964476,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FrsPageResIdl_DataRes_ForumInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 post_num = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FrsPageResIdl_DataRes_ForumInfo, _impl_.post_num_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.post_num_)}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FrsPageResIdl_DataRes_ForumInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 member_num = 9;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.member_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 thread_num = 10;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.thread_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 post_num = 12;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.post_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\37\0\4\0\0\0\0\0"
    "FrsPageResIdl.DataRes.ForumInfo"
    "name"
  }},
};

::uint8_t* FrsPageResIdl_DataRes_ForumInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageResIdl.DataRes.ForumInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FrsPageResIdl.DataRes.ForumInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 member_num = 9;
  if (this->_internal_member_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_member_num(), target);
  }

  // int32 thread_num = 10;
  if (this->_internal_thread_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_thread_num(), target);
  }

  // int32 post_num = 12;
  if (this->_internal_post_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_post_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageResIdl.DataRes.ForumInfo)
  return target;
}

::size_t FrsPageResIdl_DataRes_ForumInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageResIdl.DataRes.ForumInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int32 member_num = 9;
  if (this->_internal_member_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_member_num());
  }

  // int32 thread_num = 10;
  if (this->_internal_thread_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_thread_num());
  }

  // int32 post_num = 12;
  if (this->_internal_post_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_post_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FrsPageResIdl_DataRes_ForumInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FrsPageResIdl_DataRes_ForumInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*FrsPageResIdl_DataRes_ForumInfo::GetClassData() const { return &_class_data_; }


void FrsPageResIdl_DataRes_ForumInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FrsPageResIdl_DataRes_ForumInfo*>(&to_msg);
  auto& from = static_cast<const FrsPageResIdl_DataRes_ForumInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FrsPageResIdl.DataRes.ForumInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_member_num() != 0) {
    _this->_internal_set_member_num(from._internal_member_num());
  }
  if (from._internal_thread_num() != 0) {
    _this->_internal_set_thread_num(from._internal_thread_num());
  }
  if (from._internal_post_num() != 0) {
    _this->_internal_set_post_num(from._internal_post_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrsPageResIdl_DataRes_ForumInfo::CopyFrom(const FrsPageResIdl_DataRes_ForumInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageResIdl.DataRes.ForumInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrsPageResIdl_DataRes_ForumInfo::IsInitialized() const {
  return true;
}

void FrsPageResIdl_DataRes_ForumInfo::InternalSwap(FrsPageResIdl_DataRes_ForumInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.post_num_)
      + sizeof(FrsPageResIdl_DataRes_ForumInfo::_impl_.post_num_)
      - PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_ForumInfo, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata FrsPageResIdl_DataRes_ForumInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_FrsPageResIdl_2eproto_getter, &descriptor_table_FrsPageResIdl_2eproto_once,
      file_level_metadata_FrsPageResIdl_2eproto[0]);
}
// ===================================================================

class FrsPageResIdl_DataRes_NavTabInfo::_Internal {
 public:
};

void FrsPageResIdl_DataRes_NavTabInfo::clear_tab() {
  _internal_mutable_tab()->Clear();
}
FrsPageResIdl_DataRes_NavTabInfo::FrsPageResIdl_DataRes_NavTabInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FrsPageResIdl.DataRes.NavTabInfo)
}
FrsPageResIdl_DataRes_NavTabInfo::FrsPageResIdl_DataRes_NavTabInfo(const FrsPageResIdl_DataRes_NavTabInfo& from) : ::google::protobuf::Message() {
  FrsPageResIdl_DataRes_NavTabInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tab_){from._impl_.tab_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:FrsPageResIdl.DataRes.NavTabInfo)
}
inline void FrsPageResIdl_DataRes_NavTabInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.tab_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
FrsPageResIdl_DataRes_NavTabInfo::~FrsPageResIdl_DataRes_NavTabInfo() {
  // @@protoc_insertion_point(destructor:FrsPageResIdl.DataRes.NavTabInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrsPageResIdl_DataRes_NavTabInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tab_.~RepeatedPtrField();
}
void FrsPageResIdl_DataRes_NavTabInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FrsPageResIdl_DataRes_NavTabInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageResIdl.DataRes.NavTabInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_tab()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrsPageResIdl_DataRes_NavTabInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FrsPageResIdl_DataRes_NavTabInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FrsPageResIdl_DataRes_NavTabInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .FrsTabInfo tab = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_NavTabInfo, _impl_.tab_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .FrsTabInfo tab = 1;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes_NavTabInfo, _impl_.tab_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::FrsTabInfo>()},
  }}, {{
  }},
};

::uint8_t* FrsPageResIdl_DataRes_NavTabInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageResIdl.DataRes.NavTabInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .FrsTabInfo tab = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tab_size()); i < n; i++) {
    const auto& repfield = this->_internal_tab().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageResIdl.DataRes.NavTabInfo)
  return target;
}

::size_t FrsPageResIdl_DataRes_NavTabInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageResIdl.DataRes.NavTabInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FrsTabInfo tab = 1;
  total_size += 1UL * this->_internal_tab_size();
  for (const auto& msg : this->_internal_tab()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FrsPageResIdl_DataRes_NavTabInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FrsPageResIdl_DataRes_NavTabInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*FrsPageResIdl_DataRes_NavTabInfo::GetClassData() const { return &_class_data_; }


void FrsPageResIdl_DataRes_NavTabInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FrsPageResIdl_DataRes_NavTabInfo*>(&to_msg);
  auto& from = static_cast<const FrsPageResIdl_DataRes_NavTabInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FrsPageResIdl.DataRes.NavTabInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tab()->MergeFrom(from._internal_tab());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrsPageResIdl_DataRes_NavTabInfo::CopyFrom(const FrsPageResIdl_DataRes_NavTabInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageResIdl.DataRes.NavTabInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrsPageResIdl_DataRes_NavTabInfo::IsInitialized() const {
  return true;
}

void FrsPageResIdl_DataRes_NavTabInfo::InternalSwap(FrsPageResIdl_DataRes_NavTabInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tab_.InternalSwap(&other->_impl_.tab_);
}

::google::protobuf::Metadata FrsPageResIdl_DataRes_NavTabInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_FrsPageResIdl_2eproto_getter, &descriptor_table_FrsPageResIdl_2eproto_once,
      file_level_metadata_FrsPageResIdl_2eproto[1]);
}
// ===================================================================

class FrsPageResIdl_DataRes::_Internal {
 public:
  using HasBits = decltype(std::declval<FrsPageResIdl_DataRes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_._has_bits_);
  static const ::FrsPageResIdl_DataRes_ForumInfo& forum(const FrsPageResIdl_DataRes* msg);
  static void set_has_forum(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::Page& page(const FrsPageResIdl_DataRes* msg);
  static void set_has_page(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::FrsPageResIdl_DataRes_NavTabInfo& nav_tab_info(const FrsPageResIdl_DataRes* msg);
  static void set_has_nav_tab_info(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::FrsPageResIdl_DataRes_ForumInfo& FrsPageResIdl_DataRes::_Internal::forum(const FrsPageResIdl_DataRes* msg) {
  return *msg->_impl_.forum_;
}
const ::Page& FrsPageResIdl_DataRes::_Internal::page(const FrsPageResIdl_DataRes* msg) {
  return *msg->_impl_.page_;
}
const ::FrsPageResIdl_DataRes_NavTabInfo& FrsPageResIdl_DataRes::_Internal::nav_tab_info(const FrsPageResIdl_DataRes* msg) {
  return *msg->_impl_.nav_tab_info_;
}
void FrsPageResIdl_DataRes::clear_page() {
  if (_impl_.page_ != nullptr) _impl_.page_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void FrsPageResIdl_DataRes::clear_thread_list() {
  _internal_mutable_thread_list()->Clear();
}
void FrsPageResIdl_DataRes::clear_user_list() {
  _internal_mutable_user_list()->Clear();
}
FrsPageResIdl_DataRes::FrsPageResIdl_DataRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FrsPageResIdl.DataRes)
}
FrsPageResIdl_DataRes::FrsPageResIdl_DataRes(const FrsPageResIdl_DataRes& from) : ::google::protobuf::Message() {
  FrsPageResIdl_DataRes* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.thread_list_){from._impl_.thread_list_},
      decltype(_impl_.user_list_){from._impl_.user_list_},
      decltype(_impl_.forum_){nullptr},
      decltype(_impl_.page_){nullptr},
      decltype(_impl_.nav_tab_info_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.forum_ = new ::FrsPageResIdl_DataRes_ForumInfo(*from._impl_.forum_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.page_ = new ::Page(*from._impl_.page_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.nav_tab_info_ = new ::FrsPageResIdl_DataRes_NavTabInfo(*from._impl_.nav_tab_info_);
  }

  // @@protoc_insertion_point(copy_constructor:FrsPageResIdl.DataRes)
}
inline void FrsPageResIdl_DataRes::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.thread_list_){arena},
      decltype(_impl_.user_list_){arena},
      decltype(_impl_.forum_){nullptr},
      decltype(_impl_.page_){nullptr},
      decltype(_impl_.nav_tab_info_){nullptr},
  };
}
FrsPageResIdl_DataRes::~FrsPageResIdl_DataRes() {
  // @@protoc_insertion_point(destructor:FrsPageResIdl.DataRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrsPageResIdl_DataRes::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.thread_list_.~RepeatedPtrField();
  _impl_.user_list_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.forum_;
  if (this != internal_default_instance()) delete _impl_.page_;
  if (this != internal_default_instance()) delete _impl_.nav_tab_info_;
}
void FrsPageResIdl_DataRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FrsPageResIdl_DataRes::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageResIdl.DataRes)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_thread_list()->Clear();
  _internal_mutable_user_list()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.forum_ != nullptr);
      _impl_.forum_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.page_ != nullptr);
      _impl_.page_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.nav_tab_info_ != nullptr);
      _impl_.nav_tab_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrsPageResIdl_DataRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 7> FrsPageResIdl_DataRes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_._has_bits_),
    0, // no _extensions_
    37, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901685,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FrsPageResIdl_DataRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .User user_list = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 3, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.user_list_)}},
    // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.forum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .Page page = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.page_)}},
    // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
    {::_pbi::TcParser::FastMtS2,
     {682, 2, 4, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.nav_tab_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .ThreadInfo thread_list = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.thread_list_)}},
  }}, {{
    37, 0, 1,
    65534, 4,
    65535, 65535
  }}, {{
    // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.forum_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Page page = 4;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.page_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ThreadInfo thread_list = 7;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.thread_list_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .User user_list = 17;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.user_list_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.nav_tab_info_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::FrsPageResIdl_DataRes_ForumInfo>()},
    {::_pbi::TcParser::GetTable<::Page>()},
    {::_pbi::TcParser::GetTable<::ThreadInfo>()},
    {::_pbi::TcParser::GetTable<::User>()},
    {::_pbi::TcParser::GetTable<::FrsPageResIdl_DataRes_NavTabInfo>()},
  }}, {{
  }},
};

::uint8_t* FrsPageResIdl_DataRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageResIdl.DataRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::forum(this),
        _Internal::forum(this).GetCachedSize(), target, stream);
  }

  // .Page page = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::page(this),
        _Internal::page(this).GetCachedSize(), target, stream);
  }

  // repeated .ThreadInfo thread_list = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_thread_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_thread_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .User user_list = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_user_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_user_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::nav_tab_info(this),
        _Internal::nav_tab_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageResIdl.DataRes)
  return target;
}

::size_t FrsPageResIdl_DataRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageResIdl.DataRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ThreadInfo thread_list = 7;
  total_size += 1UL * this->_internal_thread_list_size();
  for (const auto& msg : this->_internal_thread_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .User user_list = 17;
  total_size += 2UL * this->_internal_user_list_size();
  for (const auto& msg : this->_internal_user_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .FrsPageResIdl.DataRes.ForumInfo forum = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.forum_);
    }

    // .Page page = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.page_);
    }

    // .FrsPageResIdl.DataRes.NavTabInfo nav_tab_info = 37;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.nav_tab_info_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FrsPageResIdl_DataRes::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FrsPageResIdl_DataRes::MergeImpl
};
const ::google::protobuf::Message::ClassData*FrsPageResIdl_DataRes::GetClassData() const { return &_class_data_; }


void FrsPageResIdl_DataRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FrsPageResIdl_DataRes*>(&to_msg);
  auto& from = static_cast<const FrsPageResIdl_DataRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FrsPageResIdl.DataRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_thread_list()->MergeFrom(from._internal_thread_list());
  _this->_internal_mutable_user_list()->MergeFrom(from._internal_user_list());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_forum()->::FrsPageResIdl_DataRes_ForumInfo::MergeFrom(
          from._internal_forum());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_page()->::Page::MergeFrom(
          from._internal_page());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_nav_tab_info()->::FrsPageResIdl_DataRes_NavTabInfo::MergeFrom(
          from._internal_nav_tab_info());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrsPageResIdl_DataRes::CopyFrom(const FrsPageResIdl_DataRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageResIdl.DataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrsPageResIdl_DataRes::IsInitialized() const {
  return true;
}

void FrsPageResIdl_DataRes::InternalSwap(FrsPageResIdl_DataRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.thread_list_.InternalSwap(&other->_impl_.thread_list_);
  _impl_.user_list_.InternalSwap(&other->_impl_.user_list_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.nav_tab_info_)
      + sizeof(FrsPageResIdl_DataRes::_impl_.nav_tab_info_)
      - PROTOBUF_FIELD_OFFSET(FrsPageResIdl_DataRes, _impl_.forum_)>(
          reinterpret_cast<char*>(&_impl_.forum_),
          reinterpret_cast<char*>(&other->_impl_.forum_));
}

::google::protobuf::Metadata FrsPageResIdl_DataRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_FrsPageResIdl_2eproto_getter, &descriptor_table_FrsPageResIdl_2eproto_once,
      file_level_metadata_FrsPageResIdl_2eproto[2]);
}
// ===================================================================

class FrsPageResIdl::_Internal {
 public:
  using HasBits = decltype(std::declval<FrsPageResIdl>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_._has_bits_);
  static const ::Error& error(const FrsPageResIdl* msg);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::FrsPageResIdl_DataRes& data(const FrsPageResIdl* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Error& FrsPageResIdl::_Internal::error(const FrsPageResIdl* msg) {
  return *msg->_impl_.error_;
}
const ::FrsPageResIdl_DataRes& FrsPageResIdl::_Internal::data(const FrsPageResIdl* msg) {
  return *msg->_impl_.data_;
}
void FrsPageResIdl::clear_error() {
  if (_impl_.error_ != nullptr) _impl_.error_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
FrsPageResIdl::FrsPageResIdl(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FrsPageResIdl)
}
FrsPageResIdl::FrsPageResIdl(const FrsPageResIdl& from) : ::google::protobuf::Message() {
  FrsPageResIdl* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.error_){nullptr},
      decltype(_impl_.data_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.error_ = new ::Error(*from._impl_.error_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.data_ = new ::FrsPageResIdl_DataRes(*from._impl_.data_);
  }

  // @@protoc_insertion_point(copy_constructor:FrsPageResIdl)
}
inline void FrsPageResIdl::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.error_){nullptr},
      decltype(_impl_.data_){nullptr},
  };
}
FrsPageResIdl::~FrsPageResIdl() {
  // @@protoc_insertion_point(destructor:FrsPageResIdl)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrsPageResIdl::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.error_;
  if (this != internal_default_instance()) delete _impl_.data_;
}
void FrsPageResIdl::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FrsPageResIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:FrsPageResIdl)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.error_ != nullptr);
      _impl_.error_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrsPageResIdl::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> FrsPageResIdl::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FrsPageResIdl_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .FrsPageResIdl.DataRes data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.data_)}},
    // .Error error = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Error error = 1;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .FrsPageResIdl.DataRes data = 2;
    {PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Error>()},
    {::_pbi::TcParser::GetTable<::FrsPageResIdl_DataRes>()},
  }}, {{
  }},
};

::uint8_t* FrsPageResIdl::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FrsPageResIdl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Error error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .FrsPageResIdl.DataRes data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrsPageResIdl)
  return target;
}

::size_t FrsPageResIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrsPageResIdl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .Error error = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.error_);
    }

    // .FrsPageResIdl.DataRes data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FrsPageResIdl::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FrsPageResIdl::MergeImpl
};
const ::google::protobuf::Message::ClassData*FrsPageResIdl::GetClassData() const { return &_class_data_; }


void FrsPageResIdl::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FrsPageResIdl*>(&to_msg);
  auto& from = static_cast<const FrsPageResIdl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FrsPageResIdl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_error()->::Error::MergeFrom(
          from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_data()->::FrsPageResIdl_DataRes::MergeFrom(
          from._internal_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrsPageResIdl::CopyFrom(const FrsPageResIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrsPageResIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrsPageResIdl::IsInitialized() const {
  return true;
}

void FrsPageResIdl::InternalSwap(FrsPageResIdl* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.data_)
      + sizeof(FrsPageResIdl::_impl_.data_)
      - PROTOBUF_FIELD_OFFSET(FrsPageResIdl, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata FrsPageResIdl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_FrsPageResIdl_2eproto_getter, &descriptor_table_FrsPageResIdl_2eproto_once,
      file_level_metadata_FrsPageResIdl_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
