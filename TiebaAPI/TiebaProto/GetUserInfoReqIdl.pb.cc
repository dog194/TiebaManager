// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetUserInfoReqIdl.proto

#include "GetUserInfoReqIdl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class GetUserInfoReqIdl_DataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoReqIdl_DataReq>
      _instance;
} _GetUserInfoReqIdl_DataReq_default_instance_;
class GetUserInfoReqIdlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoReqIdl>
      _instance;
} _GetUserInfoReqIdl_default_instance_;
namespace protobuf_GetUserInfoReqIdl_2eproto {
void InitDefaultsGetUserInfoReqIdl_DataReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CommonReq_2eproto::InitDefaultsCommonReq();
  {
    void* ptr = &::_GetUserInfoReqIdl_DataReq_default_instance_;
    new (ptr) ::GetUserInfoReqIdl_DataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetUserInfoReqIdl_DataReq::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoReqIdl_DataReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoReqIdl_DataReqImpl);
}

void InitDefaultsGetUserInfoReqIdlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GetUserInfoReqIdl_2eproto::InitDefaultsGetUserInfoReqIdl_DataReq();
  {
    void* ptr = &::_GetUserInfoReqIdl_default_instance_;
    new (ptr) ::GetUserInfoReqIdl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetUserInfoReqIdl::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoReqIdl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoReqIdlImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl_DataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl_DataReq, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl_DataReq, scr_w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl_DataReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUserInfoReqIdl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GetUserInfoReqIdl_DataReq)},
  { 8, -1, sizeof(::GetUserInfoReqIdl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetUserInfoReqIdl_DataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetUserInfoReqIdl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GetUserInfoReqIdl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027GetUserInfoReqIdl.proto\032\017CommonReq.pro"
      "to\"\200\001\n\021GetUserInfoReqIdl\022(\n\004data\030\001 \001(\0132\032"
      ".GetUserInfoReqIdl.DataReq\032A\n\007DataReq\022\032\n"
      "\006common\030\001 \001(\0132\n.CommonReq\022\r\n\005scr_w\030\003 \001(\005"
      "\022\013\n\003uid\030\002 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 181);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetUserInfoReqIdl.proto", &protobuf_RegisterTypes);
  ::protobuf_CommonReq_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GetUserInfoReqIdl_2eproto

// ===================================================================

void GetUserInfoReqIdl_DataReq::InitAsDefaultInstance() {
  ::_GetUserInfoReqIdl_DataReq_default_instance_._instance.get_mutable()->common_ = const_cast< ::CommonReq*>(
      ::CommonReq::internal_default_instance());
}
void GetUserInfoReqIdl_DataReq::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoReqIdl_DataReq::kCommonFieldNumber;
const int GetUserInfoReqIdl_DataReq::kScrWFieldNumber;
const int GetUserInfoReqIdl_DataReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoReqIdl_DataReq::GetUserInfoReqIdl_DataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GetUserInfoReqIdl_2eproto::InitDefaultsGetUserInfoReqIdl_DataReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetUserInfoReqIdl.DataReq)
}
GetUserInfoReqIdl_DataReq::GetUserInfoReqIdl_DataReq(const GetUserInfoReqIdl_DataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::CommonReq(*from.common_);
  } else {
    common_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&scr_w_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(scr_w_));
  // @@protoc_insertion_point(copy_constructor:GetUserInfoReqIdl.DataReq)
}

void GetUserInfoReqIdl_DataReq::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scr_w_) -
      reinterpret_cast<char*>(&common_)) + sizeof(scr_w_));
  _cached_size_ = 0;
}

GetUserInfoReqIdl_DataReq::~GetUserInfoReqIdl_DataReq() {
  // @@protoc_insertion_point(destructor:GetUserInfoReqIdl.DataReq)
  SharedDtor();
}

void GetUserInfoReqIdl_DataReq::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
}

void GetUserInfoReqIdl_DataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoReqIdl_DataReq::descriptor() {
  ::protobuf_GetUserInfoReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetUserInfoReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoReqIdl_DataReq& GetUserInfoReqIdl_DataReq::default_instance() {
  ::protobuf_GetUserInfoReqIdl_2eproto::InitDefaultsGetUserInfoReqIdl_DataReq();
  return *internal_default_instance();
}

GetUserInfoReqIdl_DataReq* GetUserInfoReqIdl_DataReq::New(::google::protobuf::Arena* arena) const {
  GetUserInfoReqIdl_DataReq* n = new GetUserInfoReqIdl_DataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoReqIdl_DataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetUserInfoReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scr_w_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(scr_w_));
  _internal_metadata_.Clear();
}

bool GetUserInfoReqIdl_DataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetUserInfoReqIdl.DataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CommonReq common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 scr_w = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scr_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetUserInfoReqIdl.DataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetUserInfoReqIdl.DataReq)
  return false;
#undef DO_
}

void GetUserInfoReqIdl_DataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetUserInfoReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CommonReq common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_, output);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uid(), output);
  }

  // int32 scr_w = 3;
  if (this->scr_w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scr_w(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetUserInfoReqIdl.DataReq)
}

::google::protobuf::uint8* GetUserInfoReqIdl_DataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetUserInfoReqIdl.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CommonReq common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->common_, deterministic, target);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uid(), target);
  }

  // int32 scr_w = 3;
  if (this->scr_w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scr_w(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetUserInfoReqIdl.DataReq)
  return target;
}

size_t GetUserInfoReqIdl_DataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetUserInfoReqIdl.DataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CommonReq common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->common_);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  // int32 scr_w = 3;
  if (this->scr_w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scr_w());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoReqIdl_DataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetUserInfoReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoReqIdl_DataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoReqIdl_DataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetUserInfoReqIdl.DataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetUserInfoReqIdl.DataReq)
    MergeFrom(*source);
  }
}

void GetUserInfoReqIdl_DataReq::MergeFrom(const GetUserInfoReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetUserInfoReqIdl.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::CommonReq::MergeFrom(from.common());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.scr_w() != 0) {
    set_scr_w(from.scr_w());
  }
}

void GetUserInfoReqIdl_DataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetUserInfoReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoReqIdl_DataReq::CopyFrom(const GetUserInfoReqIdl_DataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetUserInfoReqIdl.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoReqIdl_DataReq::IsInitialized() const {
  return true;
}

void GetUserInfoReqIdl_DataReq::Swap(GetUserInfoReqIdl_DataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoReqIdl_DataReq::InternalSwap(GetUserInfoReqIdl_DataReq* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(uid_, other->uid_);
  swap(scr_w_, other->scr_w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoReqIdl_DataReq::GetMetadata() const {
  protobuf_GetUserInfoReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetUserInfoReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoReqIdl::InitAsDefaultInstance() {
  ::_GetUserInfoReqIdl_default_instance_._instance.get_mutable()->data_ = const_cast< ::GetUserInfoReqIdl_DataReq*>(
      ::GetUserInfoReqIdl_DataReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoReqIdl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoReqIdl::GetUserInfoReqIdl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GetUserInfoReqIdl_2eproto::InitDefaultsGetUserInfoReqIdl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetUserInfoReqIdl)
}
GetUserInfoReqIdl::GetUserInfoReqIdl(const GetUserInfoReqIdl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::GetUserInfoReqIdl_DataReq(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GetUserInfoReqIdl)
}

void GetUserInfoReqIdl::SharedCtor() {
  data_ = NULL;
  _cached_size_ = 0;
}

GetUserInfoReqIdl::~GetUserInfoReqIdl() {
  // @@protoc_insertion_point(destructor:GetUserInfoReqIdl)
  SharedDtor();
}

void GetUserInfoReqIdl::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void GetUserInfoReqIdl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoReqIdl::descriptor() {
  ::protobuf_GetUserInfoReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetUserInfoReqIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoReqIdl& GetUserInfoReqIdl::default_instance() {
  ::protobuf_GetUserInfoReqIdl_2eproto::InitDefaultsGetUserInfoReqIdl();
  return *internal_default_instance();
}

GetUserInfoReqIdl* GetUserInfoReqIdl::New(::google::protobuf::Arena* arena) const {
  GetUserInfoReqIdl* n = new GetUserInfoReqIdl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoReqIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:GetUserInfoReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool GetUserInfoReqIdl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetUserInfoReqIdl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GetUserInfoReqIdl.DataReq data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetUserInfoReqIdl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetUserInfoReqIdl)
  return false;
#undef DO_
}

void GetUserInfoReqIdl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetUserInfoReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GetUserInfoReqIdl.DataReq data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GetUserInfoReqIdl)
}

::google::protobuf::uint8* GetUserInfoReqIdl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetUserInfoReqIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GetUserInfoReqIdl.DataReq data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetUserInfoReqIdl)
  return target;
}

size_t GetUserInfoReqIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetUserInfoReqIdl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GetUserInfoReqIdl.DataReq data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoReqIdl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetUserInfoReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoReqIdl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoReqIdl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetUserInfoReqIdl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetUserInfoReqIdl)
    MergeFrom(*source);
  }
}

void GetUserInfoReqIdl::MergeFrom(const GetUserInfoReqIdl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetUserInfoReqIdl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::GetUserInfoReqIdl_DataReq::MergeFrom(from.data());
  }
}

void GetUserInfoReqIdl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetUserInfoReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoReqIdl::CopyFrom(const GetUserInfoReqIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetUserInfoReqIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoReqIdl::IsInitialized() const {
  return true;
}

void GetUserInfoReqIdl::Swap(GetUserInfoReqIdl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoReqIdl::InternalSwap(GetUserInfoReqIdl* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoReqIdl::GetMetadata() const {
  protobuf_GetUserInfoReqIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetUserInfoReqIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
