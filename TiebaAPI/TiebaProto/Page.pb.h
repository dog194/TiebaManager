// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Page.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Page_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Page_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Page_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Page_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Page_2eproto;
class Page;
struct PageDefaultTypeInternal;
extern PageDefaultTypeInternal _Page_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Page final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Page) */ {
 public:
  inline Page() : Page(nullptr) {}
  ~Page() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Page(::google::protobuf::internal::ConstantInitialized);

  Page(const Page& from);
  Page(Page&& from) noexcept
    : Page() {
    *this = ::std::move(from);
  }

  inline Page& operator=(const Page& from) {
    CopyFrom(from);
    return *this;
  }
  inline Page& operator=(Page&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Page& default_instance() {
    return *internal_default_instance();
  }
  static inline const Page* internal_default_instance() {
    return reinterpret_cast<const Page*>(
               &_Page_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Page& a, Page& b) {
    a.Swap(&b);
  }
  inline void Swap(Page* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Page* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Page* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Page>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Page& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Page& from) {
    Page::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Page* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Page";
  }
  protected:
  explicit Page(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageSizeFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kCurrentPageFieldNumber = 3,
    kTotalCountFieldNumber = 4,
    kTotalPageFieldNumber = 5,
    kHasMoreFieldNumber = 6,
    kHasPrevFieldNumber = 7,
    kCurGoodIdFieldNumber = 8,
    kReqNumFieldNumber = 9,
    kPnumFieldNumber = 10,
    kTnumFieldNumber = 11,
    kTotalNumFieldNumber = 12,
    kLzTotalFloorFieldNumber = 13,
    kNewTotalPageFieldNumber = 14,
  };
  // int32 page_size = 1;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // int32 offset = 2;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // int32 current_page = 3;
  void clear_current_page() ;
  ::int32_t current_page() const;
  void set_current_page(::int32_t value);

  private:
  ::int32_t _internal_current_page() const;
  void _internal_set_current_page(::int32_t value);

  public:
  // int32 total_count = 4;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // int32 total_page = 5;
  void clear_total_page() ;
  ::int32_t total_page() const;
  void set_total_page(::int32_t value);

  private:
  ::int32_t _internal_total_page() const;
  void _internal_set_total_page(::int32_t value);

  public:
  // int32 has_more = 6;
  void clear_has_more() ;
  ::int32_t has_more() const;
  void set_has_more(::int32_t value);

  private:
  ::int32_t _internal_has_more() const;
  void _internal_set_has_more(::int32_t value);

  public:
  // int32 has_prev = 7;
  void clear_has_prev() ;
  ::int32_t has_prev() const;
  void set_has_prev(::int32_t value);

  private:
  ::int32_t _internal_has_prev() const;
  void _internal_set_has_prev(::int32_t value);

  public:
  // int32 cur_good_id = 8;
  void clear_cur_good_id() ;
  ::int32_t cur_good_id() const;
  void set_cur_good_id(::int32_t value);

  private:
  ::int32_t _internal_cur_good_id() const;
  void _internal_set_cur_good_id(::int32_t value);

  public:
  // int32 req_num = 9;
  void clear_req_num() ;
  ::int32_t req_num() const;
  void set_req_num(::int32_t value);

  private:
  ::int32_t _internal_req_num() const;
  void _internal_set_req_num(::int32_t value);

  public:
  // int32 pnum = 10;
  void clear_pnum() ;
  ::int32_t pnum() const;
  void set_pnum(::int32_t value);

  private:
  ::int32_t _internal_pnum() const;
  void _internal_set_pnum(::int32_t value);

  public:
  // int32 tnum = 11;
  void clear_tnum() ;
  ::int32_t tnum() const;
  void set_tnum(::int32_t value);

  private:
  ::int32_t _internal_tnum() const;
  void _internal_set_tnum(::int32_t value);

  public:
  // int32 total_num = 12;
  void clear_total_num() ;
  ::int32_t total_num() const;
  void set_total_num(::int32_t value);

  private:
  ::int32_t _internal_total_num() const;
  void _internal_set_total_num(::int32_t value);

  public:
  // int32 lz_total_floor = 13;
  void clear_lz_total_floor() ;
  ::int32_t lz_total_floor() const;
  void set_lz_total_floor(::int32_t value);

  private:
  ::int32_t _internal_lz_total_floor() const;
  void _internal_set_lz_total_floor(::int32_t value);

  public:
  // int32 new_total_page = 14;
  void clear_new_total_page() ;
  ::int32_t new_total_page() const;
  void set_new_total_page(::int32_t value);

  private:
  ::int32_t _internal_new_total_page() const;
  void _internal_set_new_total_page(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Page)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t page_size_;
    ::int32_t offset_;
    ::int32_t current_page_;
    ::int32_t total_count_;
    ::int32_t total_page_;
    ::int32_t has_more_;
    ::int32_t has_prev_;
    ::int32_t cur_good_id_;
    ::int32_t req_num_;
    ::int32_t pnum_;
    ::int32_t tnum_;
    ::int32_t total_num_;
    ::int32_t lz_total_floor_;
    ::int32_t new_total_page_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Page_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Page

// int32 page_size = 1;
inline void Page::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline ::int32_t Page::page_size() const {
  // @@protoc_insertion_point(field_get:Page.page_size)
  return _internal_page_size();
}
inline void Page::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:Page.page_size)
}
inline ::int32_t Page::_internal_page_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_size_;
}
inline void Page::_internal_set_page_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_size_ = value;
}

// int32 offset = 2;
inline void Page::clear_offset() {
  _impl_.offset_ = 0;
}
inline ::int32_t Page::offset() const {
  // @@protoc_insertion_point(field_get:Page.offset)
  return _internal_offset();
}
inline void Page::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:Page.offset)
}
inline ::int32_t Page::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void Page::_internal_set_offset(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// int32 current_page = 3;
inline void Page::clear_current_page() {
  _impl_.current_page_ = 0;
}
inline ::int32_t Page::current_page() const {
  // @@protoc_insertion_point(field_get:Page.current_page)
  return _internal_current_page();
}
inline void Page::set_current_page(::int32_t value) {
  _internal_set_current_page(value);
  // @@protoc_insertion_point(field_set:Page.current_page)
}
inline ::int32_t Page::_internal_current_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_page_;
}
inline void Page::_internal_set_current_page(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_page_ = value;
}

// int32 total_count = 4;
inline void Page::clear_total_count() {
  _impl_.total_count_ = 0;
}
inline ::int32_t Page::total_count() const {
  // @@protoc_insertion_point(field_get:Page.total_count)
  return _internal_total_count();
}
inline void Page::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:Page.total_count)
}
inline ::int32_t Page::_internal_total_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_count_;
}
inline void Page::_internal_set_total_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_count_ = value;
}

// int32 total_page = 5;
inline void Page::clear_total_page() {
  _impl_.total_page_ = 0;
}
inline ::int32_t Page::total_page() const {
  // @@protoc_insertion_point(field_get:Page.total_page)
  return _internal_total_page();
}
inline void Page::set_total_page(::int32_t value) {
  _internal_set_total_page(value);
  // @@protoc_insertion_point(field_set:Page.total_page)
}
inline ::int32_t Page::_internal_total_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_page_;
}
inline void Page::_internal_set_total_page(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_page_ = value;
}

// int32 has_more = 6;
inline void Page::clear_has_more() {
  _impl_.has_more_ = 0;
}
inline ::int32_t Page::has_more() const {
  // @@protoc_insertion_point(field_get:Page.has_more)
  return _internal_has_more();
}
inline void Page::set_has_more(::int32_t value) {
  _internal_set_has_more(value);
  // @@protoc_insertion_point(field_set:Page.has_more)
}
inline ::int32_t Page::_internal_has_more() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_more_;
}
inline void Page::_internal_set_has_more(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_more_ = value;
}

// int32 has_prev = 7;
inline void Page::clear_has_prev() {
  _impl_.has_prev_ = 0;
}
inline ::int32_t Page::has_prev() const {
  // @@protoc_insertion_point(field_get:Page.has_prev)
  return _internal_has_prev();
}
inline void Page::set_has_prev(::int32_t value) {
  _internal_set_has_prev(value);
  // @@protoc_insertion_point(field_set:Page.has_prev)
}
inline ::int32_t Page::_internal_has_prev() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_prev_;
}
inline void Page::_internal_set_has_prev(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_prev_ = value;
}

// int32 cur_good_id = 8;
inline void Page::clear_cur_good_id() {
  _impl_.cur_good_id_ = 0;
}
inline ::int32_t Page::cur_good_id() const {
  // @@protoc_insertion_point(field_get:Page.cur_good_id)
  return _internal_cur_good_id();
}
inline void Page::set_cur_good_id(::int32_t value) {
  _internal_set_cur_good_id(value);
  // @@protoc_insertion_point(field_set:Page.cur_good_id)
}
inline ::int32_t Page::_internal_cur_good_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cur_good_id_;
}
inline void Page::_internal_set_cur_good_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cur_good_id_ = value;
}

// int32 req_num = 9;
inline void Page::clear_req_num() {
  _impl_.req_num_ = 0;
}
inline ::int32_t Page::req_num() const {
  // @@protoc_insertion_point(field_get:Page.req_num)
  return _internal_req_num();
}
inline void Page::set_req_num(::int32_t value) {
  _internal_set_req_num(value);
  // @@protoc_insertion_point(field_set:Page.req_num)
}
inline ::int32_t Page::_internal_req_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.req_num_;
}
inline void Page::_internal_set_req_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.req_num_ = value;
}

// int32 pnum = 10;
inline void Page::clear_pnum() {
  _impl_.pnum_ = 0;
}
inline ::int32_t Page::pnum() const {
  // @@protoc_insertion_point(field_get:Page.pnum)
  return _internal_pnum();
}
inline void Page::set_pnum(::int32_t value) {
  _internal_set_pnum(value);
  // @@protoc_insertion_point(field_set:Page.pnum)
}
inline ::int32_t Page::_internal_pnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pnum_;
}
inline void Page::_internal_set_pnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pnum_ = value;
}

// int32 tnum = 11;
inline void Page::clear_tnum() {
  _impl_.tnum_ = 0;
}
inline ::int32_t Page::tnum() const {
  // @@protoc_insertion_point(field_get:Page.tnum)
  return _internal_tnum();
}
inline void Page::set_tnum(::int32_t value) {
  _internal_set_tnum(value);
  // @@protoc_insertion_point(field_set:Page.tnum)
}
inline ::int32_t Page::_internal_tnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tnum_;
}
inline void Page::_internal_set_tnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tnum_ = value;
}

// int32 total_num = 12;
inline void Page::clear_total_num() {
  _impl_.total_num_ = 0;
}
inline ::int32_t Page::total_num() const {
  // @@protoc_insertion_point(field_get:Page.total_num)
  return _internal_total_num();
}
inline void Page::set_total_num(::int32_t value) {
  _internal_set_total_num(value);
  // @@protoc_insertion_point(field_set:Page.total_num)
}
inline ::int32_t Page::_internal_total_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_num_;
}
inline void Page::_internal_set_total_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_num_ = value;
}

// int32 lz_total_floor = 13;
inline void Page::clear_lz_total_floor() {
  _impl_.lz_total_floor_ = 0;
}
inline ::int32_t Page::lz_total_floor() const {
  // @@protoc_insertion_point(field_get:Page.lz_total_floor)
  return _internal_lz_total_floor();
}
inline void Page::set_lz_total_floor(::int32_t value) {
  _internal_set_lz_total_floor(value);
  // @@protoc_insertion_point(field_set:Page.lz_total_floor)
}
inline ::int32_t Page::_internal_lz_total_floor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lz_total_floor_;
}
inline void Page::_internal_set_lz_total_floor(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lz_total_floor_ = value;
}

// int32 new_total_page = 14;
inline void Page::clear_new_total_page() {
  _impl_.new_total_page_ = 0;
}
inline ::int32_t Page::new_total_page() const {
  // @@protoc_insertion_point(field_get:Page.new_total_page)
  return _internal_new_total_page();
}
inline void Page::set_new_total_page(::int32_t value) {
  _internal_set_new_total_page(value);
  // @@protoc_insertion_point(field_set:Page.new_total_page)
}
inline ::int32_t Page::_internal_new_total_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_total_page_;
}
inline void Page::_internal_set_new_total_page(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_total_page_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Page_2eproto_2epb_2eh
