// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbPageResIdl.proto

#include "PbPageResIdl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class PbPageResIdl_DataResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbPageResIdl_DataRes>
      _instance;
} _PbPageResIdl_DataRes_default_instance_;
class PbPageResIdlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbPageResIdl>
      _instance;
} _PbPageResIdl_default_instance_;
namespace protobuf_PbPageResIdl_2eproto {
void InitDefaultsPbPageResIdl_DataResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_SimpleForum_2eproto::InitDefaultsSimpleForum();
  protobuf_Page_2eproto::InitDefaultsPage();
  protobuf_Post_2eproto::InitDefaultsPost();
  protobuf_ThreadInfo_2eproto::InitDefaultsThreadInfo();
  protobuf_User_2eproto::InitDefaultsUser();
  {
    void* ptr = &::_PbPageResIdl_DataRes_default_instance_;
    new (ptr) ::PbPageResIdl_DataRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbPageResIdl_DataRes::InitAsDefaultInstance();
}

void InitDefaultsPbPageResIdl_DataRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbPageResIdl_DataResImpl);
}

void InitDefaultsPbPageResIdlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Error_2eproto::InitDefaultsError();
  protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl_DataRes();
  {
    void* ptr = &::_PbPageResIdl_default_instance_;
    new (ptr) ::PbPageResIdl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbPageResIdl::InitAsDefaultInstance();
}

void InitDefaultsPbPageResIdl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbPageResIdlImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, forum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, post_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl_DataRes, user_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbPageResIdl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PbPageResIdl_DataRes)},
  { 10, -1, sizeof(::PbPageResIdl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbPageResIdl_DataRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbPageResIdl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PbPageResIdl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022PbPageResIdl.proto\032\021SimpleForum.proto\032"
      "\nPage.proto\032\nPost.proto\032\020ThreadInfo.prot"
      "o\032\nUser.proto\032\013Error.proto\"\331\001\n\014PbPageRes"
      "Idl\022\025\n\005error\030\001 \001(\0132\006.Error\022#\n\004data\030\002 \001(\013"
      "2\025.PbPageResIdl.DataRes\032\214\001\n\007DataRes\022\033\n\005f"
      "orum\030\002 \001(\0132\014.SimpleForum\022\023\n\004page\030\003 \001(\0132\005"
      ".Page\022\030\n\tpost_list\030\006 \003(\0132\005.Post\022\033\n\006threa"
      "d\030\010 \001(\0132\013.ThreadInfo\022\030\n\tuser_list\030\r \003(\0132"
      "\005.Userb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PbPageResIdl.proto", &protobuf_RegisterTypes);
  ::protobuf_SimpleForum_2eproto::AddDescriptors();
  ::protobuf_Page_2eproto::AddDescriptors();
  ::protobuf_Post_2eproto::AddDescriptors();
  ::protobuf_ThreadInfo_2eproto::AddDescriptors();
  ::protobuf_User_2eproto::AddDescriptors();
  ::protobuf_Error_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PbPageResIdl_2eproto

// ===================================================================

void PbPageResIdl_DataRes::InitAsDefaultInstance() {
  ::_PbPageResIdl_DataRes_default_instance_._instance.get_mutable()->forum_ = const_cast< ::SimpleForum*>(
      ::SimpleForum::internal_default_instance());
  ::_PbPageResIdl_DataRes_default_instance_._instance.get_mutable()->page_ = const_cast< ::Page*>(
      ::Page::internal_default_instance());
  ::_PbPageResIdl_DataRes_default_instance_._instance.get_mutable()->thread_ = const_cast< ::ThreadInfo*>(
      ::ThreadInfo::internal_default_instance());
}
void PbPageResIdl_DataRes::clear_forum() {
  if (GetArenaNoVirtual() == NULL && forum_ != NULL) {
    delete forum_;
  }
  forum_ = NULL;
}
void PbPageResIdl_DataRes::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) {
    delete page_;
  }
  page_ = NULL;
}
void PbPageResIdl_DataRes::clear_post_list() {
  post_list_.Clear();
}
void PbPageResIdl_DataRes::clear_thread() {
  if (GetArenaNoVirtual() == NULL && thread_ != NULL) {
    delete thread_;
  }
  thread_ = NULL;
}
void PbPageResIdl_DataRes::clear_user_list() {
  user_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbPageResIdl_DataRes::kForumFieldNumber;
const int PbPageResIdl_DataRes::kPageFieldNumber;
const int PbPageResIdl_DataRes::kPostListFieldNumber;
const int PbPageResIdl_DataRes::kThreadFieldNumber;
const int PbPageResIdl_DataRes::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbPageResIdl_DataRes::PbPageResIdl_DataRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl_DataRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbPageResIdl.DataRes)
}
PbPageResIdl_DataRes::PbPageResIdl_DataRes(const PbPageResIdl_DataRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      post_list_(from.post_list_),
      user_list_(from.user_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forum()) {
    forum_ = new ::SimpleForum(*from.forum_);
  } else {
    forum_ = NULL;
  }
  if (from.has_page()) {
    page_ = new ::Page(*from.page_);
  } else {
    page_ = NULL;
  }
  if (from.has_thread()) {
    thread_ = new ::ThreadInfo(*from.thread_);
  } else {
    thread_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PbPageResIdl.DataRes)
}

void PbPageResIdl_DataRes::SharedCtor() {
  ::memset(&forum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thread_) -
      reinterpret_cast<char*>(&forum_)) + sizeof(thread_));
  _cached_size_ = 0;
}

PbPageResIdl_DataRes::~PbPageResIdl_DataRes() {
  // @@protoc_insertion_point(destructor:PbPageResIdl.DataRes)
  SharedDtor();
}

void PbPageResIdl_DataRes::SharedDtor() {
  if (this != internal_default_instance()) delete forum_;
  if (this != internal_default_instance()) delete page_;
  if (this != internal_default_instance()) delete thread_;
}

void PbPageResIdl_DataRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbPageResIdl_DataRes::descriptor() {
  ::protobuf_PbPageResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbPageResIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbPageResIdl_DataRes& PbPageResIdl_DataRes::default_instance() {
  ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl_DataRes();
  return *internal_default_instance();
}

PbPageResIdl_DataRes* PbPageResIdl_DataRes::New(::google::protobuf::Arena* arena) const {
  PbPageResIdl_DataRes* n = new PbPageResIdl_DataRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbPageResIdl_DataRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PbPageResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  post_list_.Clear();
  user_list_.Clear();
  if (GetArenaNoVirtual() == NULL && forum_ != NULL) {
    delete forum_;
  }
  forum_ = NULL;
  if (GetArenaNoVirtual() == NULL && page_ != NULL) {
    delete page_;
  }
  page_ = NULL;
  if (GetArenaNoVirtual() == NULL && thread_ != NULL) {
    delete thread_;
  }
  thread_ = NULL;
  _internal_metadata_.Clear();
}

bool PbPageResIdl_DataRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbPageResIdl.DataRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SimpleForum forum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Page page = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Post post_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_post_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ThreadInfo thread = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_thread()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .User user_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_user_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbPageResIdl.DataRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbPageResIdl.DataRes)
  return false;
#undef DO_
}

void PbPageResIdl_DataRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbPageResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SimpleForum forum = 2;
  if (this->has_forum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->forum_, output);
  }

  // .Page page = 3;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->page_, output);
  }

  // repeated .Post post_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->post_list(static_cast<int>(i)), output);
  }

  // .ThreadInfo thread = 8;
  if (this->has_thread()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->thread_, output);
  }

  // repeated .User user_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->user_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbPageResIdl.DataRes)
}

::google::protobuf::uint8* PbPageResIdl_DataRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbPageResIdl.DataRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SimpleForum forum = 2;
  if (this->has_forum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->forum_, deterministic, target);
  }

  // .Page page = 3;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->page_, deterministic, target);
  }

  // repeated .Post post_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->post_list(static_cast<int>(i)), deterministic, target);
  }

  // .ThreadInfo thread = 8;
  if (this->has_thread()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->thread_, deterministic, target);
  }

  // repeated .User user_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->user_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbPageResIdl.DataRes)
  return target;
}

size_t PbPageResIdl_DataRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbPageResIdl.DataRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Post post_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->post_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->post_list(static_cast<int>(i)));
    }
  }

  // repeated .User user_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->user_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_list(static_cast<int>(i)));
    }
  }

  // .SimpleForum forum = 2;
  if (this->has_forum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forum_);
  }

  // .Page page = 3;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->page_);
  }

  // .ThreadInfo thread = 8;
  if (this->has_thread()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->thread_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbPageResIdl_DataRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbPageResIdl.DataRes)
  GOOGLE_DCHECK_NE(&from, this);
  const PbPageResIdl_DataRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbPageResIdl_DataRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbPageResIdl.DataRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbPageResIdl.DataRes)
    MergeFrom(*source);
  }
}

void PbPageResIdl_DataRes::MergeFrom(const PbPageResIdl_DataRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbPageResIdl.DataRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  post_list_.MergeFrom(from.post_list_);
  user_list_.MergeFrom(from.user_list_);
  if (from.has_forum()) {
    mutable_forum()->::SimpleForum::MergeFrom(from.forum());
  }
  if (from.has_page()) {
    mutable_page()->::Page::MergeFrom(from.page());
  }
  if (from.has_thread()) {
    mutable_thread()->::ThreadInfo::MergeFrom(from.thread());
  }
}

void PbPageResIdl_DataRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbPageResIdl.DataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbPageResIdl_DataRes::CopyFrom(const PbPageResIdl_DataRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbPageResIdl.DataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbPageResIdl_DataRes::IsInitialized() const {
  return true;
}

void PbPageResIdl_DataRes::Swap(PbPageResIdl_DataRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbPageResIdl_DataRes::InternalSwap(PbPageResIdl_DataRes* other) {
  using std::swap;
  post_list_.InternalSwap(&other->post_list_);
  user_list_.InternalSwap(&other->user_list_);
  swap(forum_, other->forum_);
  swap(page_, other->page_);
  swap(thread_, other->thread_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbPageResIdl_DataRes::GetMetadata() const {
  protobuf_PbPageResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbPageResIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PbPageResIdl::InitAsDefaultInstance() {
  ::_PbPageResIdl_default_instance_._instance.get_mutable()->error_ = const_cast< ::Error*>(
      ::Error::internal_default_instance());
  ::_PbPageResIdl_default_instance_._instance.get_mutable()->data_ = const_cast< ::PbPageResIdl_DataRes*>(
      ::PbPageResIdl_DataRes::internal_default_instance());
}
void PbPageResIdl::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbPageResIdl::kErrorFieldNumber;
const int PbPageResIdl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbPageResIdl::PbPageResIdl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbPageResIdl)
}
PbPageResIdl::PbPageResIdl(const PbPageResIdl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::PbPageResIdl_DataRes(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PbPageResIdl)
}

void PbPageResIdl::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&error_)) + sizeof(data_));
  _cached_size_ = 0;
}

PbPageResIdl::~PbPageResIdl() {
  // @@protoc_insertion_point(destructor:PbPageResIdl)
  SharedDtor();
}

void PbPageResIdl::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete data_;
}

void PbPageResIdl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbPageResIdl::descriptor() {
  ::protobuf_PbPageResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbPageResIdl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbPageResIdl& PbPageResIdl::default_instance() {
  ::protobuf_PbPageResIdl_2eproto::InitDefaultsPbPageResIdl();
  return *internal_default_instance();
}

PbPageResIdl* PbPageResIdl::New(::google::protobuf::Arena* arena) const {
  PbPageResIdl* n = new PbPageResIdl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbPageResIdl::Clear() {
// @@protoc_insertion_point(message_clear_start:PbPageResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool PbPageResIdl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbPageResIdl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PbPageResIdl.DataRes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbPageResIdl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbPageResIdl)
  return false;
#undef DO_
}

void PbPageResIdl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbPageResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // .PbPageResIdl.DataRes data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbPageResIdl)
}

::google::protobuf::uint8* PbPageResIdl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbPageResIdl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  // .PbPageResIdl.DataRes data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbPageResIdl)
  return target;
}

size_t PbPageResIdl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbPageResIdl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .PbPageResIdl.DataRes data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbPageResIdl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbPageResIdl)
  GOOGLE_DCHECK_NE(&from, this);
  const PbPageResIdl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbPageResIdl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbPageResIdl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbPageResIdl)
    MergeFrom(*source);
  }
}

void PbPageResIdl::MergeFrom(const PbPageResIdl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbPageResIdl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::Error::MergeFrom(from.error());
  }
  if (from.has_data()) {
    mutable_data()->::PbPageResIdl_DataRes::MergeFrom(from.data());
  }
}

void PbPageResIdl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbPageResIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbPageResIdl::CopyFrom(const PbPageResIdl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbPageResIdl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbPageResIdl::IsInitialized() const {
  return true;
}

void PbPageResIdl::Swap(PbPageResIdl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbPageResIdl::InternalSwap(PbPageResIdl* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbPageResIdl::GetMetadata() const {
  protobuf_PbPageResIdl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbPageResIdl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
