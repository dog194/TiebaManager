// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_User_2eproto__INCLUDED
#define PROTOBUF_User_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_User_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUser_PrivSetsImpl();
void InitDefaultsUser_PrivSets();
void InitDefaultsUser_LikeForumInfoImpl();
void InitDefaultsUser_LikeForumInfo();
void InitDefaultsUser_UserVipInfoImpl();
void InitDefaultsUser_UserVipInfo();
void InitDefaultsUser_NewGodInfoImpl();
void InitDefaultsUser_NewGodInfo();
void InitDefaultsUserImpl();
void InitDefaultsUser();
inline void InitDefaults() {
  InitDefaultsUser_PrivSets();
  InitDefaultsUser_LikeForumInfo();
  InitDefaultsUser_UserVipInfo();
  InitDefaultsUser_NewGodInfo();
  InitDefaultsUser();
}
}  // namespace protobuf_User_2eproto
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
class User_LikeForumInfo;
class User_LikeForumInfoDefaultTypeInternal;
extern User_LikeForumInfoDefaultTypeInternal _User_LikeForumInfo_default_instance_;
class User_NewGodInfo;
class User_NewGodInfoDefaultTypeInternal;
extern User_NewGodInfoDefaultTypeInternal _User_NewGodInfo_default_instance_;
class User_PrivSets;
class User_PrivSetsDefaultTypeInternal;
extern User_PrivSetsDefaultTypeInternal _User_PrivSets_default_instance_;
class User_UserVipInfo;
class User_UserVipInfoDefaultTypeInternal;
extern User_UserVipInfoDefaultTypeInternal _User_UserVipInfo_default_instance_;

// ===================================================================

class User_PrivSets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:User.PrivSets) */ {
 public:
  User_PrivSets();
  virtual ~User_PrivSets();

  User_PrivSets(const User_PrivSets& from);

  inline User_PrivSets& operator=(const User_PrivSets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_PrivSets(User_PrivSets&& from) noexcept
    : User_PrivSets() {
    *this = ::std::move(from);
  }

  inline User_PrivSets& operator=(User_PrivSets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const User_PrivSets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_PrivSets* internal_default_instance() {
    return reinterpret_cast<const User_PrivSets*>(
               &_User_PrivSets_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(User_PrivSets* other);
  friend void swap(User_PrivSets& a, User_PrivSets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_PrivSets* New() const PROTOBUF_FINAL { return New(NULL); }

  User_PrivSets* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User_PrivSets& from);
  void MergeFrom(const User_PrivSets& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User_PrivSets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 location = 1;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  ::google::protobuf::int32 location() const;
  void set_location(::google::protobuf::int32 value);

  // int32 like = 2;
  void clear_like();
  static const int kLikeFieldNumber = 2;
  ::google::protobuf::int32 like() const;
  void set_like(::google::protobuf::int32 value);

  // int32 group = 3;
  void clear_group();
  static const int kGroupFieldNumber = 3;
  ::google::protobuf::int32 group() const;
  void set_group(::google::protobuf::int32 value);

  // int32 post = 4;
  void clear_post();
  static const int kPostFieldNumber = 4;
  ::google::protobuf::int32 post() const;
  void set_post(::google::protobuf::int32 value);

  // int32 friend = 5;
  void clear_friend_();
  static const int kFriendFieldNumber = 5;
  ::google::protobuf::int32 friend_() const;
  void set_friend_(::google::protobuf::int32 value);

  // int32 live = 6;
  void clear_live();
  static const int kLiveFieldNumber = 6;
  ::google::protobuf::int32 live() const;
  void set_live(::google::protobuf::int32 value);

  // int32 reply = 7;
  void clear_reply();
  static const int kReplyFieldNumber = 7;
  ::google::protobuf::int32 reply() const;
  void set_reply(::google::protobuf::int32 value);

  // int32 bazhu_show_inside = 8;
  void clear_bazhu_show_inside();
  static const int kBazhuShowInsideFieldNumber = 8;
  ::google::protobuf::int32 bazhu_show_inside() const;
  void set_bazhu_show_inside(::google::protobuf::int32 value);

  // int32 bazhu_show_outside = 9;
  void clear_bazhu_show_outside();
  static const int kBazhuShowOutsideFieldNumber = 9;
  ::google::protobuf::int32 bazhu_show_outside() const;
  void set_bazhu_show_outside(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:User.PrivSets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 location_;
  ::google::protobuf::int32 like_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 post_;
  ::google::protobuf::int32 friend__;
  ::google::protobuf::int32 live_;
  ::google::protobuf::int32 reply_;
  ::google::protobuf::int32 bazhu_show_inside_;
  ::google::protobuf::int32 bazhu_show_outside_;
  mutable int _cached_size_;
  friend struct ::protobuf_User_2eproto::TableStruct;
  friend void ::protobuf_User_2eproto::InitDefaultsUser_PrivSetsImpl();
};
// -------------------------------------------------------------------

class User_LikeForumInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:User.LikeForumInfo) */ {
 public:
  User_LikeForumInfo();
  virtual ~User_LikeForumInfo();

  User_LikeForumInfo(const User_LikeForumInfo& from);

  inline User_LikeForumInfo& operator=(const User_LikeForumInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_LikeForumInfo(User_LikeForumInfo&& from) noexcept
    : User_LikeForumInfo() {
    *this = ::std::move(from);
  }

  inline User_LikeForumInfo& operator=(User_LikeForumInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const User_LikeForumInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_LikeForumInfo* internal_default_instance() {
    return reinterpret_cast<const User_LikeForumInfo*>(
               &_User_LikeForumInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(User_LikeForumInfo* other);
  friend void swap(User_LikeForumInfo& a, User_LikeForumInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_LikeForumInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  User_LikeForumInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User_LikeForumInfo& from);
  void MergeFrom(const User_LikeForumInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User_LikeForumInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string forum_name = 1;
  void clear_forum_name();
  static const int kForumNameFieldNumber = 1;
  const ::std::string& forum_name() const;
  void set_forum_name(const ::std::string& value);
  #if LANG_CXX11
  void set_forum_name(::std::string&& value);
  #endif
  void set_forum_name(const char* value);
  void set_forum_name(const char* value, size_t size);
  ::std::string* mutable_forum_name();
  ::std::string* release_forum_name();
  void set_allocated_forum_name(::std::string* forum_name);

  // uint64 forum_id = 2;
  void clear_forum_id();
  static const int kForumIdFieldNumber = 2;
  ::google::protobuf::uint64 forum_id() const;
  void set_forum_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:User.LikeForumInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr forum_name_;
  ::google::protobuf::uint64 forum_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_User_2eproto::TableStruct;
  friend void ::protobuf_User_2eproto::InitDefaultsUser_LikeForumInfoImpl();
};
// -------------------------------------------------------------------

class User_UserVipInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:User.UserVipInfo) */ {
 public:
  User_UserVipInfo();
  virtual ~User_UserVipInfo();

  User_UserVipInfo(const User_UserVipInfo& from);

  inline User_UserVipInfo& operator=(const User_UserVipInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_UserVipInfo(User_UserVipInfo&& from) noexcept
    : User_UserVipInfo() {
    *this = ::std::move(from);
  }

  inline User_UserVipInfo& operator=(User_UserVipInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const User_UserVipInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_UserVipInfo* internal_default_instance() {
    return reinterpret_cast<const User_UserVipInfo*>(
               &_User_UserVipInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(User_UserVipInfo* other);
  friend void swap(User_UserVipInfo& a, User_UserVipInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_UserVipInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  User_UserVipInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User_UserVipInfo& from);
  void MergeFrom(const User_UserVipInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User_UserVipInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string icon_url = 8;
  void clear_icon_url();
  static const int kIconUrlFieldNumber = 8;
  const ::std::string& icon_url() const;
  void set_icon_url(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_url(::std::string&& value);
  #endif
  void set_icon_url(const char* value);
  void set_icon_url(const char* value, size_t size);
  ::std::string* mutable_icon_url();
  ::std::string* release_icon_url();
  void set_allocated_icon_url(::std::string* icon_url);

  // uint32 v_status = 1;
  void clear_v_status();
  static const int kVStatusFieldNumber = 1;
  ::google::protobuf::uint32 v_status() const;
  void set_v_status(::google::protobuf::uint32 value);

  // uint32 s_time = 2;
  void clear_s_time();
  static const int kSTimeFieldNumber = 2;
  ::google::protobuf::uint32 s_time() const;
  void set_s_time(::google::protobuf::uint32 value);

  // uint32 e_time = 3;
  void clear_e_time();
  static const int kETimeFieldNumber = 3;
  ::google::protobuf::uint32 e_time() const;
  void set_e_time(::google::protobuf::uint32 value);

  // uint32 ext_score = 4;
  void clear_ext_score();
  static const int kExtScoreFieldNumber = 4;
  ::google::protobuf::uint32 ext_score() const;
  void set_ext_score(::google::protobuf::uint32 value);

  // uint32 v_level = 5;
  void clear_v_level();
  static const int kVLevelFieldNumber = 5;
  ::google::protobuf::uint32 v_level() const;
  void set_v_level(::google::protobuf::uint32 value);

  // int32 a_score = 6;
  void clear_a_score();
  static const int kAScoreFieldNumber = 6;
  ::google::protobuf::int32 a_score() const;
  void set_a_score(::google::protobuf::int32 value);

  // uint32 n_score = 7;
  void clear_n_score();
  static const int kNScoreFieldNumber = 7;
  ::google::protobuf::uint32 n_score() const;
  void set_n_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.UserVipInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr icon_url_;
  ::google::protobuf::uint32 v_status_;
  ::google::protobuf::uint32 s_time_;
  ::google::protobuf::uint32 e_time_;
  ::google::protobuf::uint32 ext_score_;
  ::google::protobuf::uint32 v_level_;
  ::google::protobuf::int32 a_score_;
  ::google::protobuf::uint32 n_score_;
  mutable int _cached_size_;
  friend struct ::protobuf_User_2eproto::TableStruct;
  friend void ::protobuf_User_2eproto::InitDefaultsUser_UserVipInfoImpl();
};
// -------------------------------------------------------------------

class User_NewGodInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:User.NewGodInfo) */ {
 public:
  User_NewGodInfo();
  virtual ~User_NewGodInfo();

  User_NewGodInfo(const User_NewGodInfo& from);

  inline User_NewGodInfo& operator=(const User_NewGodInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User_NewGodInfo(User_NewGodInfo&& from) noexcept
    : User_NewGodInfo() {
    *this = ::std::move(from);
  }

  inline User_NewGodInfo& operator=(User_NewGodInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const User_NewGodInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User_NewGodInfo* internal_default_instance() {
    return reinterpret_cast<const User_NewGodInfo*>(
               &_User_NewGodInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(User_NewGodInfo* other);
  friend void swap(User_NewGodInfo& a, User_NewGodInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User_NewGodInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  User_NewGodInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User_NewGodInfo& from);
  void MergeFrom(const User_NewGodInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User_NewGodInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string field_name = 3;
  void clear_field_name();
  static const int kFieldNameFieldNumber = 3;
  const ::std::string& field_name() const;
  void set_field_name(const ::std::string& value);
  #if LANG_CXX11
  void set_field_name(::std::string&& value);
  #endif
  void set_field_name(const char* value);
  void set_field_name(const char* value, size_t size);
  ::std::string* mutable_field_name();
  ::std::string* release_field_name();
  void set_allocated_field_name(::std::string* field_name);

  // string type_name = 5;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 5;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  #if LANG_CXX11
  void set_type_name(::std::string&& value);
  #endif
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // uint32 field_id = 2;
  void clear_field_id();
  static const int kFieldIdFieldNumber = 2;
  ::google::protobuf::uint32 field_id() const;
  void set_field_id(::google::protobuf::uint32 value);

  // uint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:User.NewGodInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr field_name_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 field_id_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_User_2eproto::TableStruct;
  friend void ::protobuf_User_2eproto::InitDefaultsUser_NewGodInfoImpl();
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User(User&& from) noexcept
    : User() {
    *this = ::std::move(from);
  }

  inline User& operator=(User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(User* other);
  friend void swap(User& a, User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User* New() const PROTOBUF_FINAL { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef User_PrivSets PrivSets;
  typedef User_LikeForumInfo LikeForumInfo;
  typedef User_UserVipInfo UserVipInfo;
  typedef User_NewGodInfo NewGodInfo;

  // accessors -------------------------------------------------------

  // repeated .User.LikeForumInfo likeForum = 47;
  int likeforum_size() const;
  void clear_likeforum();
  static const int kLikeForumFieldNumber = 47;
  const ::User_LikeForumInfo& likeforum(int index) const;
  ::User_LikeForumInfo* mutable_likeforum(int index);
  ::User_LikeForumInfo* add_likeforum();
  ::google::protobuf::RepeatedPtrField< ::User_LikeForumInfo >*
      mutable_likeforum();
  const ::google::protobuf::RepeatedPtrField< ::User_LikeForumInfo >&
      likeforum() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string name_show = 4;
  void clear_name_show();
  static const int kNameShowFieldNumber = 4;
  const ::std::string& name_show() const;
  void set_name_show(const ::std::string& value);
  #if LANG_CXX11
  void set_name_show(::std::string&& value);
  #endif
  void set_name_show(const char* value);
  void set_name_show(const char* value, size_t size);
  ::std::string* mutable_name_show();
  ::std::string* release_name_show();
  void set_allocated_name_show(::std::string* name_show);

  // string portrait = 5;
  void clear_portrait();
  static const int kPortraitFieldNumber = 5;
  const ::std::string& portrait() const;
  void set_portrait(const ::std::string& value);
  #if LANG_CXX11
  void set_portrait(::std::string&& value);
  #endif
  void set_portrait(const char* value);
  void set_portrait(const char* value, size_t size);
  ::std::string* mutable_portrait();
  ::std::string* release_portrait();
  void set_allocated_portrait(::std::string* portrait);

  // string bawu_type = 26;
  void clear_bawu_type();
  static const int kBawuTypeFieldNumber = 26;
  const ::std::string& bawu_type() const;
  void set_bawu_type(const ::std::string& value);
  #if LANG_CXX11
  void set_bawu_type(::std::string&& value);
  #endif
  void set_bawu_type(const char* value);
  void set_bawu_type(const char* value, size_t size);
  ::std::string* mutable_bawu_type();
  ::std::string* release_bawu_type();
  void set_allocated_bawu_type(::std::string* bawu_type);

  // string BDUSS = 29;
  void clear_bduss();
  static const int kBDUSSFieldNumber = 29;
  const ::std::string& bduss() const;
  void set_bduss(const ::std::string& value);
  #if LANG_CXX11
  void set_bduss(::std::string&& value);
  #endif
  void set_bduss(const char* value);
  void set_bduss(const char* value, size_t size);
  ::std::string* mutable_bduss();
  ::std::string* release_bduss();
  void set_allocated_bduss(::std::string* bduss);

  // string tb_age = 38;
  void clear_tb_age();
  static const int kTbAgeFieldNumber = 38;
  const ::std::string& tb_age() const;
  void set_tb_age(const ::std::string& value);
  #if LANG_CXX11
  void set_tb_age(::std::string&& value);
  #endif
  void set_tb_age(const char* value);
  void set_tb_age(const char* value, size_t size);
  ::std::string* mutable_tb_age();
  ::std::string* release_tb_age();
  void set_allocated_tb_age(::std::string* tb_age);

  // string tieba_uid = 120;
  void clear_tieba_uid();
  static const int kTiebaUidFieldNumber = 120;
  const ::std::string& tieba_uid() const;
  void set_tieba_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_tieba_uid(::std::string&& value);
  #endif
  void set_tieba_uid(const char* value);
  void set_tieba_uid(const char* value, size_t size);
  ::std::string* mutable_tieba_uid();
  ::std::string* release_tieba_uid();
  void set_allocated_tieba_uid(::std::string* tieba_uid);

  // .User.PrivSets priv_sets = 45;
  bool has_priv_sets() const;
  void clear_priv_sets();
  static const int kPrivSetsFieldNumber = 45;
  const ::User_PrivSets& priv_sets() const;
  ::User_PrivSets* release_priv_sets();
  ::User_PrivSets* mutable_priv_sets();
  void set_allocated_priv_sets(::User_PrivSets* priv_sets);

  // .User.UserVipInfo vipInfo = 61;
  bool has_vipinfo() const;
  void clear_vipinfo();
  static const int kVipInfoFieldNumber = 61;
  const ::User_UserVipInfo& vipinfo() const;
  ::User_UserVipInfo* release_vipinfo();
  ::User_UserVipInfo* mutable_vipinfo();
  void set_allocated_vipinfo(::User_UserVipInfo* vipinfo);

  // .User.NewGodInfo new_god_data = 101;
  bool has_new_god_data() const;
  void clear_new_god_data();
  static const int kNewGodDataFieldNumber = 101;
  const ::User_NewGodInfo& new_god_data() const;
  ::User_NewGodInfo* release_new_god_data();
  ::User_NewGodInfo* mutable_new_god_data();
  void set_allocated_new_god_data(::User_NewGodInfo* new_god_data);

  // int64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int32 is_coreuser = 20;
  void clear_is_coreuser();
  static const int kIsCoreuserFieldNumber = 20;
  ::google::protobuf::int32 is_coreuser() const;
  void set_is_coreuser(::google::protobuf::int32 value);

  // int32 level_id = 23;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 23;
  ::google::protobuf::int32 level_id() const;
  void set_level_id(::google::protobuf::int32 value);

  // int32 is_default_avatar = 106;
  void clear_is_default_avatar();
  static const int kIsDefaultAvatarFieldNumber = 106;
  ::google::protobuf::int32 is_default_avatar() const;
  void set_is_default_avatar(::google::protobuf::int32 value);

  // int32 is_bawu = 25;
  void clear_is_bawu();
  static const int kIsBawuFieldNumber = 25;
  ::google::protobuf::int32 is_bawu() const;
  void set_is_bawu(::google::protobuf::int32 value);

  // int32 post_num = 37;
  void clear_post_num();
  static const int kPostNumFieldNumber = 37;
  ::google::protobuf::int32 post_num() const;
  void set_post_num(::google::protobuf::int32 value);

  // int32 gender = 42;
  void clear_gender();
  static const int kGenderFieldNumber = 42;
  ::google::protobuf::int32 gender() const;
  void set_gender(::google::protobuf::int32 value);

  // int32 is_friend = 46;
  void clear_is_friend();
  static const int kIsFriendFieldNumber = 46;
  ::google::protobuf::int32 is_friend() const;
  void set_is_friend(::google::protobuf::int32 value);

  // int32 is_guanfang = 52;
  void clear_is_guanfang();
  static const int kIsGuanfangFieldNumber = 52;
  ::google::protobuf::int32 is_guanfang() const;
  void set_is_guanfang(::google::protobuf::int32 value);

  // int32 is_fans = 91;
  void clear_is_fans();
  static const int kIsFansFieldNumber = 91;
  ::google::protobuf::int32 is_fans() const;
  void set_is_fans(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::User_LikeForumInfo > likeforum_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr name_show_;
  ::google::protobuf::internal::ArenaStringPtr portrait_;
  ::google::protobuf::internal::ArenaStringPtr bawu_type_;
  ::google::protobuf::internal::ArenaStringPtr bduss_;
  ::google::protobuf::internal::ArenaStringPtr tb_age_;
  ::google::protobuf::internal::ArenaStringPtr tieba_uid_;
  ::User_PrivSets* priv_sets_;
  ::User_UserVipInfo* vipinfo_;
  ::User_NewGodInfo* new_god_data_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 is_coreuser_;
  ::google::protobuf::int32 level_id_;
  ::google::protobuf::int32 is_default_avatar_;
  ::google::protobuf::int32 is_bawu_;
  ::google::protobuf::int32 post_num_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 is_friend_;
  ::google::protobuf::int32 is_guanfang_;
  ::google::protobuf::int32 is_fans_;
  mutable int _cached_size_;
  friend struct ::protobuf_User_2eproto::TableStruct;
  friend void ::protobuf_User_2eproto::InitDefaultsUserImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// User_PrivSets

// int32 location = 1;
inline void User_PrivSets::clear_location() {
  location_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::location() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.location)
  return location_;
}
inline void User_PrivSets::set_location(::google::protobuf::int32 value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.location)
}

// int32 like = 2;
inline void User_PrivSets::clear_like() {
  like_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::like() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.like)
  return like_;
}
inline void User_PrivSets::set_like(::google::protobuf::int32 value) {
  
  like_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.like)
}

// int32 group = 3;
inline void User_PrivSets::clear_group() {
  group_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::group() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.group)
  return group_;
}
inline void User_PrivSets::set_group(::google::protobuf::int32 value) {
  
  group_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.group)
}

// int32 post = 4;
inline void User_PrivSets::clear_post() {
  post_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::post() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.post)
  return post_;
}
inline void User_PrivSets::set_post(::google::protobuf::int32 value) {
  
  post_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.post)
}

// int32 friend = 5;
inline void User_PrivSets::clear_friend_() {
  friend__ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::friend_() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.friend)
  return friend__;
}
inline void User_PrivSets::set_friend_(::google::protobuf::int32 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.friend)
}

// int32 live = 6;
inline void User_PrivSets::clear_live() {
  live_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::live() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.live)
  return live_;
}
inline void User_PrivSets::set_live(::google::protobuf::int32 value) {
  
  live_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.live)
}

// int32 reply = 7;
inline void User_PrivSets::clear_reply() {
  reply_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::reply() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.reply)
  return reply_;
}
inline void User_PrivSets::set_reply(::google::protobuf::int32 value) {
  
  reply_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.reply)
}

// int32 bazhu_show_inside = 8;
inline void User_PrivSets::clear_bazhu_show_inside() {
  bazhu_show_inside_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::bazhu_show_inside() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.bazhu_show_inside)
  return bazhu_show_inside_;
}
inline void User_PrivSets::set_bazhu_show_inside(::google::protobuf::int32 value) {
  
  bazhu_show_inside_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.bazhu_show_inside)
}

// int32 bazhu_show_outside = 9;
inline void User_PrivSets::clear_bazhu_show_outside() {
  bazhu_show_outside_ = 0;
}
inline ::google::protobuf::int32 User_PrivSets::bazhu_show_outside() const {
  // @@protoc_insertion_point(field_get:User.PrivSets.bazhu_show_outside)
  return bazhu_show_outside_;
}
inline void User_PrivSets::set_bazhu_show_outside(::google::protobuf::int32 value) {
  
  bazhu_show_outside_ = value;
  // @@protoc_insertion_point(field_set:User.PrivSets.bazhu_show_outside)
}

// -------------------------------------------------------------------

// User_LikeForumInfo

// string forum_name = 1;
inline void User_LikeForumInfo::clear_forum_name() {
  forum_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User_LikeForumInfo::forum_name() const {
  // @@protoc_insertion_point(field_get:User.LikeForumInfo.forum_name)
  return forum_name_.GetNoArena();
}
inline void User_LikeForumInfo::set_forum_name(const ::std::string& value) {
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.LikeForumInfo.forum_name)
}
#if LANG_CXX11
inline void User_LikeForumInfo::set_forum_name(::std::string&& value) {
  
  forum_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.LikeForumInfo.forum_name)
}
#endif
inline void User_LikeForumInfo::set_forum_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.LikeForumInfo.forum_name)
}
inline void User_LikeForumInfo::set_forum_name(const char* value, size_t size) {
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.LikeForumInfo.forum_name)
}
inline ::std::string* User_LikeForumInfo::mutable_forum_name() {
  
  // @@protoc_insertion_point(field_mutable:User.LikeForumInfo.forum_name)
  return forum_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User_LikeForumInfo::release_forum_name() {
  // @@protoc_insertion_point(field_release:User.LikeForumInfo.forum_name)
  
  return forum_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User_LikeForumInfo::set_allocated_forum_name(::std::string* forum_name) {
  if (forum_name != NULL) {
    
  } else {
    
  }
  forum_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forum_name);
  // @@protoc_insertion_point(field_set_allocated:User.LikeForumInfo.forum_name)
}

// uint64 forum_id = 2;
inline void User_LikeForumInfo::clear_forum_id() {
  forum_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 User_LikeForumInfo::forum_id() const {
  // @@protoc_insertion_point(field_get:User.LikeForumInfo.forum_id)
  return forum_id_;
}
inline void User_LikeForumInfo::set_forum_id(::google::protobuf::uint64 value) {
  
  forum_id_ = value;
  // @@protoc_insertion_point(field_set:User.LikeForumInfo.forum_id)
}

// -------------------------------------------------------------------

// User_UserVipInfo

// uint32 v_status = 1;
inline void User_UserVipInfo::clear_v_status() {
  v_status_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::v_status() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.v_status)
  return v_status_;
}
inline void User_UserVipInfo::set_v_status(::google::protobuf::uint32 value) {
  
  v_status_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.v_status)
}

// uint32 s_time = 2;
inline void User_UserVipInfo::clear_s_time() {
  s_time_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::s_time() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.s_time)
  return s_time_;
}
inline void User_UserVipInfo::set_s_time(::google::protobuf::uint32 value) {
  
  s_time_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.s_time)
}

// uint32 e_time = 3;
inline void User_UserVipInfo::clear_e_time() {
  e_time_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::e_time() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.e_time)
  return e_time_;
}
inline void User_UserVipInfo::set_e_time(::google::protobuf::uint32 value) {
  
  e_time_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.e_time)
}

// uint32 ext_score = 4;
inline void User_UserVipInfo::clear_ext_score() {
  ext_score_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::ext_score() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.ext_score)
  return ext_score_;
}
inline void User_UserVipInfo::set_ext_score(::google::protobuf::uint32 value) {
  
  ext_score_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.ext_score)
}

// uint32 v_level = 5;
inline void User_UserVipInfo::clear_v_level() {
  v_level_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::v_level() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.v_level)
  return v_level_;
}
inline void User_UserVipInfo::set_v_level(::google::protobuf::uint32 value) {
  
  v_level_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.v_level)
}

// int32 a_score = 6;
inline void User_UserVipInfo::clear_a_score() {
  a_score_ = 0;
}
inline ::google::protobuf::int32 User_UserVipInfo::a_score() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.a_score)
  return a_score_;
}
inline void User_UserVipInfo::set_a_score(::google::protobuf::int32 value) {
  
  a_score_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.a_score)
}

// uint32 n_score = 7;
inline void User_UserVipInfo::clear_n_score() {
  n_score_ = 0u;
}
inline ::google::protobuf::uint32 User_UserVipInfo::n_score() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.n_score)
  return n_score_;
}
inline void User_UserVipInfo::set_n_score(::google::protobuf::uint32 value) {
  
  n_score_ = value;
  // @@protoc_insertion_point(field_set:User.UserVipInfo.n_score)
}

// string icon_url = 8;
inline void User_UserVipInfo::clear_icon_url() {
  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User_UserVipInfo::icon_url() const {
  // @@protoc_insertion_point(field_get:User.UserVipInfo.icon_url)
  return icon_url_.GetNoArena();
}
inline void User_UserVipInfo::set_icon_url(const ::std::string& value) {
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.UserVipInfo.icon_url)
}
#if LANG_CXX11
inline void User_UserVipInfo::set_icon_url(::std::string&& value) {
  
  icon_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.UserVipInfo.icon_url)
}
#endif
inline void User_UserVipInfo::set_icon_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.UserVipInfo.icon_url)
}
inline void User_UserVipInfo::set_icon_url(const char* value, size_t size) {
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.UserVipInfo.icon_url)
}
inline ::std::string* User_UserVipInfo::mutable_icon_url() {
  
  // @@protoc_insertion_point(field_mutable:User.UserVipInfo.icon_url)
  return icon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User_UserVipInfo::release_icon_url() {
  // @@protoc_insertion_point(field_release:User.UserVipInfo.icon_url)
  
  return icon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User_UserVipInfo::set_allocated_icon_url(::std::string* icon_url) {
  if (icon_url != NULL) {
    
  } else {
    
  }
  icon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_url);
  // @@protoc_insertion_point(field_set_allocated:User.UserVipInfo.icon_url)
}

// -------------------------------------------------------------------

// User_NewGodInfo

// int32 status = 1;
inline void User_NewGodInfo::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 User_NewGodInfo::status() const {
  // @@protoc_insertion_point(field_get:User.NewGodInfo.status)
  return status_;
}
inline void User_NewGodInfo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:User.NewGodInfo.status)
}

// uint32 field_id = 2;
inline void User_NewGodInfo::clear_field_id() {
  field_id_ = 0u;
}
inline ::google::protobuf::uint32 User_NewGodInfo::field_id() const {
  // @@protoc_insertion_point(field_get:User.NewGodInfo.field_id)
  return field_id_;
}
inline void User_NewGodInfo::set_field_id(::google::protobuf::uint32 value) {
  
  field_id_ = value;
  // @@protoc_insertion_point(field_set:User.NewGodInfo.field_id)
}

// string field_name = 3;
inline void User_NewGodInfo::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User_NewGodInfo::field_name() const {
  // @@protoc_insertion_point(field_get:User.NewGodInfo.field_name)
  return field_name_.GetNoArena();
}
inline void User_NewGodInfo::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.NewGodInfo.field_name)
}
#if LANG_CXX11
inline void User_NewGodInfo::set_field_name(::std::string&& value) {
  
  field_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.NewGodInfo.field_name)
}
#endif
inline void User_NewGodInfo::set_field_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.NewGodInfo.field_name)
}
inline void User_NewGodInfo::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.NewGodInfo.field_name)
}
inline ::std::string* User_NewGodInfo::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:User.NewGodInfo.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User_NewGodInfo::release_field_name() {
  // @@protoc_insertion_point(field_release:User.NewGodInfo.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User_NewGodInfo::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:User.NewGodInfo.field_name)
}

// uint32 type = 4;
inline void User_NewGodInfo::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 User_NewGodInfo::type() const {
  // @@protoc_insertion_point(field_get:User.NewGodInfo.type)
  return type_;
}
inline void User_NewGodInfo::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:User.NewGodInfo.type)
}

// string type_name = 5;
inline void User_NewGodInfo::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User_NewGodInfo::type_name() const {
  // @@protoc_insertion_point(field_get:User.NewGodInfo.type_name)
  return type_name_.GetNoArena();
}
inline void User_NewGodInfo::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.NewGodInfo.type_name)
}
#if LANG_CXX11
inline void User_NewGodInfo::set_type_name(::std::string&& value) {
  
  type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.NewGodInfo.type_name)
}
#endif
inline void User_NewGodInfo::set_type_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.NewGodInfo.type_name)
}
inline void User_NewGodInfo::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.NewGodInfo.type_name)
}
inline ::std::string* User_NewGodInfo::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:User.NewGodInfo.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User_NewGodInfo::release_type_name() {
  // @@protoc_insertion_point(field_release:User.NewGodInfo.type_name)
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User_NewGodInfo::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:User.NewGodInfo.type_name)
}

// -------------------------------------------------------------------

// User

// int64 id = 2;
inline void User::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 User::id() const {
  // @@protoc_insertion_point(field_get:User.id)
  return id_;
}
inline void User::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:User.id)
}

// string name = 3;
inline void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:User.name)
  return name_.GetNoArena();
}
inline void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.name)
}
#if LANG_CXX11
inline void User::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.name)
}
#endif
inline void User::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.name)
}
inline void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.name)
}
inline ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:User.name)
}

// string name_show = 4;
inline void User::clear_name_show() {
  name_show_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::name_show() const {
  // @@protoc_insertion_point(field_get:User.name_show)
  return name_show_.GetNoArena();
}
inline void User::set_name_show(const ::std::string& value) {
  
  name_show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.name_show)
}
#if LANG_CXX11
inline void User::set_name_show(::std::string&& value) {
  
  name_show_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.name_show)
}
#endif
inline void User::set_name_show(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.name_show)
}
inline void User::set_name_show(const char* value, size_t size) {
  
  name_show_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.name_show)
}
inline ::std::string* User::mutable_name_show() {
  
  // @@protoc_insertion_point(field_mutable:User.name_show)
  return name_show_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_name_show() {
  // @@protoc_insertion_point(field_release:User.name_show)
  
  return name_show_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_name_show(::std::string* name_show) {
  if (name_show != NULL) {
    
  } else {
    
  }
  name_show_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_show);
  // @@protoc_insertion_point(field_set_allocated:User.name_show)
}

// string portrait = 5;
inline void User::clear_portrait() {
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::portrait() const {
  // @@protoc_insertion_point(field_get:User.portrait)
  return portrait_.GetNoArena();
}
inline void User::set_portrait(const ::std::string& value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.portrait)
}
#if LANG_CXX11
inline void User::set_portrait(::std::string&& value) {
  
  portrait_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.portrait)
}
#endif
inline void User::set_portrait(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.portrait)
}
inline void User::set_portrait(const char* value, size_t size) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.portrait)
}
inline ::std::string* User::mutable_portrait() {
  
  // @@protoc_insertion_point(field_mutable:User.portrait)
  return portrait_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_portrait() {
  // @@protoc_insertion_point(field_release:User.portrait)
  
  return portrait_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_portrait(::std::string* portrait) {
  if (portrait != NULL) {
    
  } else {
    
  }
  portrait_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portrait);
  // @@protoc_insertion_point(field_set_allocated:User.portrait)
}

// int32 is_coreuser = 20;
inline void User::clear_is_coreuser() {
  is_coreuser_ = 0;
}
inline ::google::protobuf::int32 User::is_coreuser() const {
  // @@protoc_insertion_point(field_get:User.is_coreuser)
  return is_coreuser_;
}
inline void User::set_is_coreuser(::google::protobuf::int32 value) {
  
  is_coreuser_ = value;
  // @@protoc_insertion_point(field_set:User.is_coreuser)
}

// int32 level_id = 23;
inline void User::clear_level_id() {
  level_id_ = 0;
}
inline ::google::protobuf::int32 User::level_id() const {
  // @@protoc_insertion_point(field_get:User.level_id)
  return level_id_;
}
inline void User::set_level_id(::google::protobuf::int32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:User.level_id)
}

// int32 is_bawu = 25;
inline void User::clear_is_bawu() {
  is_bawu_ = 0;
}
inline ::google::protobuf::int32 User::is_bawu() const {
  // @@protoc_insertion_point(field_get:User.is_bawu)
  return is_bawu_;
}
inline void User::set_is_bawu(::google::protobuf::int32 value) {
  
  is_bawu_ = value;
  // @@protoc_insertion_point(field_set:User.is_bawu)
}

// string bawu_type = 26;
inline void User::clear_bawu_type() {
  bawu_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::bawu_type() const {
  // @@protoc_insertion_point(field_get:User.bawu_type)
  return bawu_type_.GetNoArena();
}
inline void User::set_bawu_type(const ::std::string& value) {
  
  bawu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.bawu_type)
}
#if LANG_CXX11
inline void User::set_bawu_type(::std::string&& value) {
  
  bawu_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.bawu_type)
}
#endif
inline void User::set_bawu_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bawu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.bawu_type)
}
inline void User::set_bawu_type(const char* value, size_t size) {
  
  bawu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.bawu_type)
}
inline ::std::string* User::mutable_bawu_type() {
  
  // @@protoc_insertion_point(field_mutable:User.bawu_type)
  return bawu_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_bawu_type() {
  // @@protoc_insertion_point(field_release:User.bawu_type)
  
  return bawu_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_bawu_type(::std::string* bawu_type) {
  if (bawu_type != NULL) {
    
  } else {
    
  }
  bawu_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bawu_type);
  // @@protoc_insertion_point(field_set_allocated:User.bawu_type)
}

// string BDUSS = 29;
inline void User::clear_bduss() {
  bduss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::bduss() const {
  // @@protoc_insertion_point(field_get:User.BDUSS)
  return bduss_.GetNoArena();
}
inline void User::set_bduss(const ::std::string& value) {
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.BDUSS)
}
#if LANG_CXX11
inline void User::set_bduss(::std::string&& value) {
  
  bduss_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.BDUSS)
}
#endif
inline void User::set_bduss(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.BDUSS)
}
inline void User::set_bduss(const char* value, size_t size) {
  
  bduss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.BDUSS)
}
inline ::std::string* User::mutable_bduss() {
  
  // @@protoc_insertion_point(field_mutable:User.BDUSS)
  return bduss_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_bduss() {
  // @@protoc_insertion_point(field_release:User.BDUSS)
  
  return bduss_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_bduss(::std::string* bduss) {
  if (bduss != NULL) {
    
  } else {
    
  }
  bduss_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bduss);
  // @@protoc_insertion_point(field_set_allocated:User.BDUSS)
}

// int32 post_num = 37;
inline void User::clear_post_num() {
  post_num_ = 0;
}
inline ::google::protobuf::int32 User::post_num() const {
  // @@protoc_insertion_point(field_get:User.post_num)
  return post_num_;
}
inline void User::set_post_num(::google::protobuf::int32 value) {
  
  post_num_ = value;
  // @@protoc_insertion_point(field_set:User.post_num)
}

// string tb_age = 38;
inline void User::clear_tb_age() {
  tb_age_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::tb_age() const {
  // @@protoc_insertion_point(field_get:User.tb_age)
  return tb_age_.GetNoArena();
}
inline void User::set_tb_age(const ::std::string& value) {
  
  tb_age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.tb_age)
}
#if LANG_CXX11
inline void User::set_tb_age(::std::string&& value) {
  
  tb_age_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.tb_age)
}
#endif
inline void User::set_tb_age(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tb_age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.tb_age)
}
inline void User::set_tb_age(const char* value, size_t size) {
  
  tb_age_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.tb_age)
}
inline ::std::string* User::mutable_tb_age() {
  
  // @@protoc_insertion_point(field_mutable:User.tb_age)
  return tb_age_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_tb_age() {
  // @@protoc_insertion_point(field_release:User.tb_age)
  
  return tb_age_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_tb_age(::std::string* tb_age) {
  if (tb_age != NULL) {
    
  } else {
    
  }
  tb_age_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tb_age);
  // @@protoc_insertion_point(field_set_allocated:User.tb_age)
}

// int32 gender = 42;
inline void User::clear_gender() {
  gender_ = 0;
}
inline ::google::protobuf::int32 User::gender() const {
  // @@protoc_insertion_point(field_get:User.gender)
  return gender_;
}
inline void User::set_gender(::google::protobuf::int32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:User.gender)
}

// .User.PrivSets priv_sets = 45;
inline bool User::has_priv_sets() const {
  return this != internal_default_instance() && priv_sets_ != NULL;
}
inline void User::clear_priv_sets() {
  if (GetArenaNoVirtual() == NULL && priv_sets_ != NULL) {
    delete priv_sets_;
  }
  priv_sets_ = NULL;
}
inline const ::User_PrivSets& User::priv_sets() const {
  const ::User_PrivSets* p = priv_sets_;
  // @@protoc_insertion_point(field_get:User.priv_sets)
  return p != NULL ? *p : *reinterpret_cast<const ::User_PrivSets*>(
      &::_User_PrivSets_default_instance_);
}
inline ::User_PrivSets* User::release_priv_sets() {
  // @@protoc_insertion_point(field_release:User.priv_sets)
  
  ::User_PrivSets* temp = priv_sets_;
  priv_sets_ = NULL;
  return temp;
}
inline ::User_PrivSets* User::mutable_priv_sets() {
  
  if (priv_sets_ == NULL) {
    priv_sets_ = new ::User_PrivSets;
  }
  // @@protoc_insertion_point(field_mutable:User.priv_sets)
  return priv_sets_;
}
inline void User::set_allocated_priv_sets(::User_PrivSets* priv_sets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete priv_sets_;
  }
  if (priv_sets) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      priv_sets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, priv_sets, submessage_arena);
    }
    
  } else {
    
  }
  priv_sets_ = priv_sets;
  // @@protoc_insertion_point(field_set_allocated:User.priv_sets)
}

// int32 is_friend = 46;
inline void User::clear_is_friend() {
  is_friend_ = 0;
}
inline ::google::protobuf::int32 User::is_friend() const {
  // @@protoc_insertion_point(field_get:User.is_friend)
  return is_friend_;
}
inline void User::set_is_friend(::google::protobuf::int32 value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:User.is_friend)
}

// repeated .User.LikeForumInfo likeForum = 47;
inline int User::likeforum_size() const {
  return likeforum_.size();
}
inline void User::clear_likeforum() {
  likeforum_.Clear();
}
inline const ::User_LikeForumInfo& User::likeforum(int index) const {
  // @@protoc_insertion_point(field_get:User.likeForum)
  return likeforum_.Get(index);
}
inline ::User_LikeForumInfo* User::mutable_likeforum(int index) {
  // @@protoc_insertion_point(field_mutable:User.likeForum)
  return likeforum_.Mutable(index);
}
inline ::User_LikeForumInfo* User::add_likeforum() {
  // @@protoc_insertion_point(field_add:User.likeForum)
  return likeforum_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::User_LikeForumInfo >*
User::mutable_likeforum() {
  // @@protoc_insertion_point(field_mutable_list:User.likeForum)
  return &likeforum_;
}
inline const ::google::protobuf::RepeatedPtrField< ::User_LikeForumInfo >&
User::likeforum() const {
  // @@protoc_insertion_point(field_list:User.likeForum)
  return likeforum_;
}

// int32 is_guanfang = 52;
inline void User::clear_is_guanfang() {
  is_guanfang_ = 0;
}
inline ::google::protobuf::int32 User::is_guanfang() const {
  // @@protoc_insertion_point(field_get:User.is_guanfang)
  return is_guanfang_;
}
inline void User::set_is_guanfang(::google::protobuf::int32 value) {
  
  is_guanfang_ = value;
  // @@protoc_insertion_point(field_set:User.is_guanfang)
}

// .User.UserVipInfo vipInfo = 61;
inline bool User::has_vipinfo() const {
  return this != internal_default_instance() && vipinfo_ != NULL;
}
inline void User::clear_vipinfo() {
  if (GetArenaNoVirtual() == NULL && vipinfo_ != NULL) {
    delete vipinfo_;
  }
  vipinfo_ = NULL;
}
inline const ::User_UserVipInfo& User::vipinfo() const {
  const ::User_UserVipInfo* p = vipinfo_;
  // @@protoc_insertion_point(field_get:User.vipInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::User_UserVipInfo*>(
      &::_User_UserVipInfo_default_instance_);
}
inline ::User_UserVipInfo* User::release_vipinfo() {
  // @@protoc_insertion_point(field_release:User.vipInfo)
  
  ::User_UserVipInfo* temp = vipinfo_;
  vipinfo_ = NULL;
  return temp;
}
inline ::User_UserVipInfo* User::mutable_vipinfo() {
  
  if (vipinfo_ == NULL) {
    vipinfo_ = new ::User_UserVipInfo;
  }
  // @@protoc_insertion_point(field_mutable:User.vipInfo)
  return vipinfo_;
}
inline void User::set_allocated_vipinfo(::User_UserVipInfo* vipinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vipinfo_;
  }
  if (vipinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vipinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vipinfo, submessage_arena);
    }
    
  } else {
    
  }
  vipinfo_ = vipinfo;
  // @@protoc_insertion_point(field_set_allocated:User.vipInfo)
}

// int32 is_fans = 91;
inline void User::clear_is_fans() {
  is_fans_ = 0;
}
inline ::google::protobuf::int32 User::is_fans() const {
  // @@protoc_insertion_point(field_get:User.is_fans)
  return is_fans_;
}
inline void User::set_is_fans(::google::protobuf::int32 value) {
  
  is_fans_ = value;
  // @@protoc_insertion_point(field_set:User.is_fans)
}

// .User.NewGodInfo new_god_data = 101;
inline bool User::has_new_god_data() const {
  return this != internal_default_instance() && new_god_data_ != NULL;
}
inline void User::clear_new_god_data() {
  if (GetArenaNoVirtual() == NULL && new_god_data_ != NULL) {
    delete new_god_data_;
  }
  new_god_data_ = NULL;
}
inline const ::User_NewGodInfo& User::new_god_data() const {
  const ::User_NewGodInfo* p = new_god_data_;
  // @@protoc_insertion_point(field_get:User.new_god_data)
  return p != NULL ? *p : *reinterpret_cast<const ::User_NewGodInfo*>(
      &::_User_NewGodInfo_default_instance_);
}
inline ::User_NewGodInfo* User::release_new_god_data() {
  // @@protoc_insertion_point(field_release:User.new_god_data)
  
  ::User_NewGodInfo* temp = new_god_data_;
  new_god_data_ = NULL;
  return temp;
}
inline ::User_NewGodInfo* User::mutable_new_god_data() {
  
  if (new_god_data_ == NULL) {
    new_god_data_ = new ::User_NewGodInfo;
  }
  // @@protoc_insertion_point(field_mutable:User.new_god_data)
  return new_god_data_;
}
inline void User::set_allocated_new_god_data(::User_NewGodInfo* new_god_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete new_god_data_;
  }
  if (new_god_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      new_god_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, new_god_data, submessage_arena);
    }
    
  } else {
    
  }
  new_god_data_ = new_god_data;
  // @@protoc_insertion_point(field_set_allocated:User.new_god_data)
}

// int32 is_default_avatar = 106;
inline void User::clear_is_default_avatar() {
  is_default_avatar_ = 0;
}
inline ::google::protobuf::int32 User::is_default_avatar() const {
  // @@protoc_insertion_point(field_get:User.is_default_avatar)
  return is_default_avatar_;
}
inline void User::set_is_default_avatar(::google::protobuf::int32 value) {
  
  is_default_avatar_ = value;
  // @@protoc_insertion_point(field_set:User.is_default_avatar)
}

// string tieba_uid = 120;
inline void User::clear_tieba_uid() {
  tieba_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::tieba_uid() const {
  // @@protoc_insertion_point(field_get:User.tieba_uid)
  return tieba_uid_.GetNoArena();
}
inline void User::set_tieba_uid(const ::std::string& value) {
  
  tieba_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:User.tieba_uid)
}
#if LANG_CXX11
inline void User::set_tieba_uid(::std::string&& value) {
  
  tieba_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:User.tieba_uid)
}
#endif
inline void User::set_tieba_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tieba_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:User.tieba_uid)
}
inline void User::set_tieba_uid(const char* value, size_t size) {
  
  tieba_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:User.tieba_uid)
}
inline ::std::string* User::mutable_tieba_uid() {
  
  // @@protoc_insertion_point(field_mutable:User.tieba_uid)
  return tieba_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_tieba_uid() {
  // @@protoc_insertion_point(field_release:User.tieba_uid)
  
  return tieba_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_tieba_uid(::std::string* tieba_uid) {
  if (tieba_uid != NULL) {
    
  } else {
    
  }
  tieba_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tieba_uid);
  // @@protoc_insertion_point(field_set_allocated:User.tieba_uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_User_2eproto__INCLUDED
