// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Post.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_Post_2eproto__INCLUDED
#define PROTOBUF_Post_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PbContent.pb.h"
#include "SubPostList.pb.h"
#include "Agree.pb.h"
#include "SimpleForum.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Post_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPost_SubPostImpl();
void InitDefaultsPost_SubPost();
void InitDefaultsPost_SignatureData_SignatureContentImpl();
void InitDefaultsPost_SignatureData_SignatureContent();
void InitDefaultsPost_SignatureDataImpl();
void InitDefaultsPost_SignatureData();
void InitDefaultsPostImpl();
void InitDefaultsPost();
inline void InitDefaults() {
  InitDefaultsPost_SubPost();
  InitDefaultsPost_SignatureData_SignatureContent();
  InitDefaultsPost_SignatureData();
  InitDefaultsPost();
}
}  // namespace protobuf_Post_2eproto
class Post;
class PostDefaultTypeInternal;
extern PostDefaultTypeInternal _Post_default_instance_;
class Post_SignatureData;
class Post_SignatureDataDefaultTypeInternal;
extern Post_SignatureDataDefaultTypeInternal _Post_SignatureData_default_instance_;
class Post_SignatureData_SignatureContent;
class Post_SignatureData_SignatureContentDefaultTypeInternal;
extern Post_SignatureData_SignatureContentDefaultTypeInternal _Post_SignatureData_SignatureContent_default_instance_;
class Post_SubPost;
class Post_SubPostDefaultTypeInternal;
extern Post_SubPostDefaultTypeInternal _Post_SubPost_default_instance_;

// ===================================================================

class Post_SubPost : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Post.SubPost) */ {
 public:
  Post_SubPost();
  virtual ~Post_SubPost();

  Post_SubPost(const Post_SubPost& from);

  inline Post_SubPost& operator=(const Post_SubPost& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Post_SubPost(Post_SubPost&& from) noexcept
    : Post_SubPost() {
    *this = ::std::move(from);
  }

  inline Post_SubPost& operator=(Post_SubPost&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Post_SubPost& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Post_SubPost* internal_default_instance() {
    return reinterpret_cast<const Post_SubPost*>(
               &_Post_SubPost_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Post_SubPost* other);
  friend void swap(Post_SubPost& a, Post_SubPost& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Post_SubPost* New() const PROTOBUF_FINAL { return New(NULL); }

  Post_SubPost* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Post_SubPost& from);
  void MergeFrom(const Post_SubPost& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Post_SubPost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SubPostList sub_post_list = 2;
  int sub_post_list_size() const;
  void clear_sub_post_list();
  static const int kSubPostListFieldNumber = 2;
  const ::SubPostList& sub_post_list(int index) const;
  ::SubPostList* mutable_sub_post_list(int index);
  ::SubPostList* add_sub_post_list();
  ::google::protobuf::RepeatedPtrField< ::SubPostList >*
      mutable_sub_post_list();
  const ::google::protobuf::RepeatedPtrField< ::SubPostList >&
      sub_post_list() const;

  // uint64 pid = 1;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Post.SubPost)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SubPostList > sub_post_list_;
  ::google::protobuf::uint64 pid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Post_2eproto::TableStruct;
  friend void ::protobuf_Post_2eproto::InitDefaultsPost_SubPostImpl();
};
// -------------------------------------------------------------------

class Post_SignatureData_SignatureContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Post.SignatureData.SignatureContent) */ {
 public:
  Post_SignatureData_SignatureContent();
  virtual ~Post_SignatureData_SignatureContent();

  Post_SignatureData_SignatureContent(const Post_SignatureData_SignatureContent& from);

  inline Post_SignatureData_SignatureContent& operator=(const Post_SignatureData_SignatureContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Post_SignatureData_SignatureContent(Post_SignatureData_SignatureContent&& from) noexcept
    : Post_SignatureData_SignatureContent() {
    *this = ::std::move(from);
  }

  inline Post_SignatureData_SignatureContent& operator=(Post_SignatureData_SignatureContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Post_SignatureData_SignatureContent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Post_SignatureData_SignatureContent* internal_default_instance() {
    return reinterpret_cast<const Post_SignatureData_SignatureContent*>(
               &_Post_SignatureData_SignatureContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Post_SignatureData_SignatureContent* other);
  friend void swap(Post_SignatureData_SignatureContent& a, Post_SignatureData_SignatureContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Post_SignatureData_SignatureContent* New() const PROTOBUF_FINAL { return New(NULL); }

  Post_SignatureData_SignatureContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Post_SignatureData_SignatureContent& from);
  void MergeFrom(const Post_SignatureData_SignatureContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Post_SignatureData_SignatureContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Post.SignatureData.SignatureContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_Post_2eproto::TableStruct;
  friend void ::protobuf_Post_2eproto::InitDefaultsPost_SignatureData_SignatureContentImpl();
};
// -------------------------------------------------------------------

class Post_SignatureData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Post.SignatureData) */ {
 public:
  Post_SignatureData();
  virtual ~Post_SignatureData();

  Post_SignatureData(const Post_SignatureData& from);

  inline Post_SignatureData& operator=(const Post_SignatureData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Post_SignatureData(Post_SignatureData&& from) noexcept
    : Post_SignatureData() {
    *this = ::std::move(from);
  }

  inline Post_SignatureData& operator=(Post_SignatureData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Post_SignatureData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Post_SignatureData* internal_default_instance() {
    return reinterpret_cast<const Post_SignatureData*>(
               &_Post_SignatureData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Post_SignatureData* other);
  friend void swap(Post_SignatureData& a, Post_SignatureData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Post_SignatureData* New() const PROTOBUF_FINAL { return New(NULL); }

  Post_SignatureData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Post_SignatureData& from);
  void MergeFrom(const Post_SignatureData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Post_SignatureData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Post_SignatureData_SignatureContent SignatureContent;

  // accessors -------------------------------------------------------

  // repeated .Post.SignatureData.SignatureContent content = 4;
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::Post_SignatureData_SignatureContent& content(int index) const;
  ::Post_SignatureData_SignatureContent* mutable_content(int index);
  ::Post_SignatureData_SignatureContent* add_content();
  ::google::protobuf::RepeatedPtrField< ::Post_SignatureData_SignatureContent >*
      mutable_content();
  const ::google::protobuf::RepeatedPtrField< ::Post_SignatureData_SignatureContent >&
      content() const;

  // string fontKeyName = 2;
  void clear_fontkeyname();
  static const int kFontKeyNameFieldNumber = 2;
  const ::std::string& fontkeyname() const;
  void set_fontkeyname(const ::std::string& value);
  #if LANG_CXX11
  void set_fontkeyname(::std::string&& value);
  #endif
  void set_fontkeyname(const char* value);
  void set_fontkeyname(const char* value, size_t size);
  ::std::string* mutable_fontkeyname();
  ::std::string* release_fontkeyname();
  void set_allocated_fontkeyname(::std::string* fontkeyname);

  // string fontColor = 3;
  void clear_fontcolor();
  static const int kFontColorFieldNumber = 3;
  const ::std::string& fontcolor() const;
  void set_fontcolor(const ::std::string& value);
  #if LANG_CXX11
  void set_fontcolor(::std::string&& value);
  #endif
  void set_fontcolor(const char* value);
  void set_fontcolor(const char* value, size_t size);
  ::std::string* mutable_fontcolor();
  ::std::string* release_fontcolor();
  void set_allocated_fontcolor(::std::string* fontcolor);

  // int32 signature_id = 1;
  void clear_signature_id();
  static const int kSignatureIdFieldNumber = 1;
  ::google::protobuf::int32 signature_id() const;
  void set_signature_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Post.SignatureData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Post_SignatureData_SignatureContent > content_;
  ::google::protobuf::internal::ArenaStringPtr fontkeyname_;
  ::google::protobuf::internal::ArenaStringPtr fontcolor_;
  ::google::protobuf::int32 signature_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Post_2eproto::TableStruct;
  friend void ::protobuf_Post_2eproto::InitDefaultsPost_SignatureDataImpl();
};
// -------------------------------------------------------------------

class Post : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Post) */ {
 public:
  Post();
  virtual ~Post();

  Post(const Post& from);

  inline Post& operator=(const Post& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Post(Post&& from) noexcept
    : Post() {
    *this = ::std::move(from);
  }

  inline Post& operator=(Post&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Post& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Post* internal_default_instance() {
    return reinterpret_cast<const Post*>(
               &_Post_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Post* other);
  friend void swap(Post& a, Post& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Post* New() const PROTOBUF_FINAL { return New(NULL); }

  Post* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Post& from);
  void MergeFrom(const Post& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Post* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Post_SubPost SubPost;
  typedef Post_SignatureData SignatureData;

  // accessors -------------------------------------------------------

  // repeated .PbContent content = 5;
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::PbContent& content(int index) const;
  ::PbContent* mutable_content(int index);
  ::PbContent* add_content();
  ::google::protobuf::RepeatedPtrField< ::PbContent >*
      mutable_content();
  const ::google::protobuf::RepeatedPtrField< ::PbContent >&
      content() const;

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // .Post.SubPost sub_post_list = 15;
  bool has_sub_post_list() const;
  void clear_sub_post_list();
  static const int kSubPostListFieldNumber = 15;
  const ::Post_SubPost& sub_post_list() const;
  ::Post_SubPost* release_sub_post_list();
  ::Post_SubPost* mutable_sub_post_list();
  void set_allocated_sub_post_list(::Post_SubPost* sub_post_list);

  // .Post.SignatureData signature = 21;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 21;
  const ::Post_SignatureData& signature() const;
  ::Post_SignatureData* release_signature();
  ::Post_SignatureData* mutable_signature();
  void set_allocated_signature(::Post_SignatureData* signature);

  // .Agree agree = 37;
  bool has_agree() const;
  void clear_agree();
  static const int kAgreeFieldNumber = 37;
  const ::Agree& agree() const;
  ::Agree* release_agree();
  ::Agree* mutable_agree();
  void set_allocated_agree(::Agree* agree);

  // .SimpleForum from_forum = 38;
  bool has_from_forum() const;
  void clear_from_forum();
  static const int kFromForumFieldNumber = 38;
  const ::SimpleForum& from_forum() const;
  ::SimpleForum* release_from_forum();
  ::SimpleForum* mutable_from_forum();
  void set_allocated_from_forum(::SimpleForum* from_forum);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // uint32 floor = 3;
  void clear_floor();
  static const int kFloorFieldNumber = 3;
  ::google::protobuf::uint32 floor() const;
  void set_floor(::google::protobuf::uint32 value);

  // uint32 time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // uint32 sub_post_number = 13;
  void clear_sub_post_number();
  static const int kSubPostNumberFieldNumber = 13;
  ::google::protobuf::uint32 sub_post_number() const;
  void set_sub_post_number(::google::protobuf::uint32 value);

  // int64 author_id = 19;
  void clear_author_id();
  static const int kAuthorIdFieldNumber = 19;
  ::google::protobuf::int64 author_id() const;
  void set_author_id(::google::protobuf::int64 value);

  // int64 tid = 46;
  void clear_tid();
  static const int kTidFieldNumber = 46;
  ::google::protobuf::int64 tid() const;
  void set_tid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Post)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PbContent > content_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::Post_SubPost* sub_post_list_;
  ::Post_SignatureData* signature_;
  ::Agree* agree_;
  ::SimpleForum* from_forum_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 floor_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 sub_post_number_;
  ::google::protobuf::int64 author_id_;
  ::google::protobuf::int64 tid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Post_2eproto::TableStruct;
  friend void ::protobuf_Post_2eproto::InitDefaultsPostImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Post_SubPost

// uint64 pid = 1;
inline void Post_SubPost::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Post_SubPost::pid() const {
  // @@protoc_insertion_point(field_get:Post.SubPost.pid)
  return pid_;
}
inline void Post_SubPost::set_pid(::google::protobuf::uint64 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:Post.SubPost.pid)
}

// repeated .SubPostList sub_post_list = 2;
inline int Post_SubPost::sub_post_list_size() const {
  return sub_post_list_.size();
}
inline const ::SubPostList& Post_SubPost::sub_post_list(int index) const {
  // @@protoc_insertion_point(field_get:Post.SubPost.sub_post_list)
  return sub_post_list_.Get(index);
}
inline ::SubPostList* Post_SubPost::mutable_sub_post_list(int index) {
  // @@protoc_insertion_point(field_mutable:Post.SubPost.sub_post_list)
  return sub_post_list_.Mutable(index);
}
inline ::SubPostList* Post_SubPost::add_sub_post_list() {
  // @@protoc_insertion_point(field_add:Post.SubPost.sub_post_list)
  return sub_post_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SubPostList >*
Post_SubPost::mutable_sub_post_list() {
  // @@protoc_insertion_point(field_mutable_list:Post.SubPost.sub_post_list)
  return &sub_post_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SubPostList >&
Post_SubPost::sub_post_list() const {
  // @@protoc_insertion_point(field_list:Post.SubPost.sub_post_list)
  return sub_post_list_;
}

// -------------------------------------------------------------------

// Post_SignatureData_SignatureContent

// int32 type = 1;
inline void Post_SignatureData_SignatureContent::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Post_SignatureData_SignatureContent::type() const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.SignatureContent.type)
  return type_;
}
inline void Post_SignatureData_SignatureContent::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Post.SignatureData.SignatureContent.type)
}

// string text = 2;
inline void Post_SignatureData_SignatureContent::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Post_SignatureData_SignatureContent::text() const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.SignatureContent.text)
  return text_.GetNoArena();
}
inline void Post_SignatureData_SignatureContent::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Post.SignatureData.SignatureContent.text)
}
#if LANG_CXX11
inline void Post_SignatureData_SignatureContent::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Post.SignatureData.SignatureContent.text)
}
#endif
inline void Post_SignatureData_SignatureContent::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Post.SignatureData.SignatureContent.text)
}
inline void Post_SignatureData_SignatureContent::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Post.SignatureData.SignatureContent.text)
}
inline ::std::string* Post_SignatureData_SignatureContent::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Post.SignatureData.SignatureContent.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Post_SignatureData_SignatureContent::release_text() {
  // @@protoc_insertion_point(field_release:Post.SignatureData.SignatureContent.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Post_SignatureData_SignatureContent::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Post.SignatureData.SignatureContent.text)
}

// -------------------------------------------------------------------

// Post_SignatureData

// int32 signature_id = 1;
inline void Post_SignatureData::clear_signature_id() {
  signature_id_ = 0;
}
inline ::google::protobuf::int32 Post_SignatureData::signature_id() const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.signature_id)
  return signature_id_;
}
inline void Post_SignatureData::set_signature_id(::google::protobuf::int32 value) {
  
  signature_id_ = value;
  // @@protoc_insertion_point(field_set:Post.SignatureData.signature_id)
}

// string fontKeyName = 2;
inline void Post_SignatureData::clear_fontkeyname() {
  fontkeyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Post_SignatureData::fontkeyname() const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.fontKeyName)
  return fontkeyname_.GetNoArena();
}
inline void Post_SignatureData::set_fontkeyname(const ::std::string& value) {
  
  fontkeyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Post.SignatureData.fontKeyName)
}
#if LANG_CXX11
inline void Post_SignatureData::set_fontkeyname(::std::string&& value) {
  
  fontkeyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Post.SignatureData.fontKeyName)
}
#endif
inline void Post_SignatureData::set_fontkeyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fontkeyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Post.SignatureData.fontKeyName)
}
inline void Post_SignatureData::set_fontkeyname(const char* value, size_t size) {
  
  fontkeyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Post.SignatureData.fontKeyName)
}
inline ::std::string* Post_SignatureData::mutable_fontkeyname() {
  
  // @@protoc_insertion_point(field_mutable:Post.SignatureData.fontKeyName)
  return fontkeyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Post_SignatureData::release_fontkeyname() {
  // @@protoc_insertion_point(field_release:Post.SignatureData.fontKeyName)
  
  return fontkeyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Post_SignatureData::set_allocated_fontkeyname(::std::string* fontkeyname) {
  if (fontkeyname != NULL) {
    
  } else {
    
  }
  fontkeyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fontkeyname);
  // @@protoc_insertion_point(field_set_allocated:Post.SignatureData.fontKeyName)
}

// string fontColor = 3;
inline void Post_SignatureData::clear_fontcolor() {
  fontcolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Post_SignatureData::fontcolor() const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.fontColor)
  return fontcolor_.GetNoArena();
}
inline void Post_SignatureData::set_fontcolor(const ::std::string& value) {
  
  fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Post.SignatureData.fontColor)
}
#if LANG_CXX11
inline void Post_SignatureData::set_fontcolor(::std::string&& value) {
  
  fontcolor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Post.SignatureData.fontColor)
}
#endif
inline void Post_SignatureData::set_fontcolor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Post.SignatureData.fontColor)
}
inline void Post_SignatureData::set_fontcolor(const char* value, size_t size) {
  
  fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Post.SignatureData.fontColor)
}
inline ::std::string* Post_SignatureData::mutable_fontcolor() {
  
  // @@protoc_insertion_point(field_mutable:Post.SignatureData.fontColor)
  return fontcolor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Post_SignatureData::release_fontcolor() {
  // @@protoc_insertion_point(field_release:Post.SignatureData.fontColor)
  
  return fontcolor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Post_SignatureData::set_allocated_fontcolor(::std::string* fontcolor) {
  if (fontcolor != NULL) {
    
  } else {
    
  }
  fontcolor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fontcolor);
  // @@protoc_insertion_point(field_set_allocated:Post.SignatureData.fontColor)
}

// repeated .Post.SignatureData.SignatureContent content = 4;
inline int Post_SignatureData::content_size() const {
  return content_.size();
}
inline void Post_SignatureData::clear_content() {
  content_.Clear();
}
inline const ::Post_SignatureData_SignatureContent& Post_SignatureData::content(int index) const {
  // @@protoc_insertion_point(field_get:Post.SignatureData.content)
  return content_.Get(index);
}
inline ::Post_SignatureData_SignatureContent* Post_SignatureData::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:Post.SignatureData.content)
  return content_.Mutable(index);
}
inline ::Post_SignatureData_SignatureContent* Post_SignatureData::add_content() {
  // @@protoc_insertion_point(field_add:Post.SignatureData.content)
  return content_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Post_SignatureData_SignatureContent >*
Post_SignatureData::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:Post.SignatureData.content)
  return &content_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Post_SignatureData_SignatureContent >&
Post_SignatureData::content() const {
  // @@protoc_insertion_point(field_list:Post.SignatureData.content)
  return content_;
}

// -------------------------------------------------------------------

// Post

// int64 id = 1;
inline void Post::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Post::id() const {
  // @@protoc_insertion_point(field_get:Post.id)
  return id_;
}
inline void Post::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Post.id)
}

// string title = 2;
inline void Post::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Post::title() const {
  // @@protoc_insertion_point(field_get:Post.title)
  return title_.GetNoArena();
}
inline void Post::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Post.title)
}
#if LANG_CXX11
inline void Post::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Post.title)
}
#endif
inline void Post::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Post.title)
}
inline void Post::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Post.title)
}
inline ::std::string* Post::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:Post.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Post::release_title() {
  // @@protoc_insertion_point(field_release:Post.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Post::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:Post.title)
}

// uint32 floor = 3;
inline void Post::clear_floor() {
  floor_ = 0u;
}
inline ::google::protobuf::uint32 Post::floor() const {
  // @@protoc_insertion_point(field_get:Post.floor)
  return floor_;
}
inline void Post::set_floor(::google::protobuf::uint32 value) {
  
  floor_ = value;
  // @@protoc_insertion_point(field_set:Post.floor)
}

// uint32 time = 4;
inline void Post::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 Post::time() const {
  // @@protoc_insertion_point(field_get:Post.time)
  return time_;
}
inline void Post::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:Post.time)
}

// repeated .PbContent content = 5;
inline int Post::content_size() const {
  return content_.size();
}
inline const ::PbContent& Post::content(int index) const {
  // @@protoc_insertion_point(field_get:Post.content)
  return content_.Get(index);
}
inline ::PbContent* Post::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:Post.content)
  return content_.Mutable(index);
}
inline ::PbContent* Post::add_content() {
  // @@protoc_insertion_point(field_add:Post.content)
  return content_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PbContent >*
Post::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:Post.content)
  return &content_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PbContent >&
Post::content() const {
  // @@protoc_insertion_point(field_list:Post.content)
  return content_;
}

// uint32 sub_post_number = 13;
inline void Post::clear_sub_post_number() {
  sub_post_number_ = 0u;
}
inline ::google::protobuf::uint32 Post::sub_post_number() const {
  // @@protoc_insertion_point(field_get:Post.sub_post_number)
  return sub_post_number_;
}
inline void Post::set_sub_post_number(::google::protobuf::uint32 value) {
  
  sub_post_number_ = value;
  // @@protoc_insertion_point(field_set:Post.sub_post_number)
}

// int64 author_id = 19;
inline void Post::clear_author_id() {
  author_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Post::author_id() const {
  // @@protoc_insertion_point(field_get:Post.author_id)
  return author_id_;
}
inline void Post::set_author_id(::google::protobuf::int64 value) {
  
  author_id_ = value;
  // @@protoc_insertion_point(field_set:Post.author_id)
}

// .Post.SubPost sub_post_list = 15;
inline bool Post::has_sub_post_list() const {
  return this != internal_default_instance() && sub_post_list_ != NULL;
}
inline void Post::clear_sub_post_list() {
  if (GetArenaNoVirtual() == NULL && sub_post_list_ != NULL) {
    delete sub_post_list_;
  }
  sub_post_list_ = NULL;
}
inline const ::Post_SubPost& Post::sub_post_list() const {
  const ::Post_SubPost* p = sub_post_list_;
  // @@protoc_insertion_point(field_get:Post.sub_post_list)
  return p != NULL ? *p : *reinterpret_cast<const ::Post_SubPost*>(
      &::_Post_SubPost_default_instance_);
}
inline ::Post_SubPost* Post::release_sub_post_list() {
  // @@protoc_insertion_point(field_release:Post.sub_post_list)
  
  ::Post_SubPost* temp = sub_post_list_;
  sub_post_list_ = NULL;
  return temp;
}
inline ::Post_SubPost* Post::mutable_sub_post_list() {
  
  if (sub_post_list_ == NULL) {
    sub_post_list_ = new ::Post_SubPost;
  }
  // @@protoc_insertion_point(field_mutable:Post.sub_post_list)
  return sub_post_list_;
}
inline void Post::set_allocated_sub_post_list(::Post_SubPost* sub_post_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sub_post_list_;
  }
  if (sub_post_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sub_post_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sub_post_list, submessage_arena);
    }
    
  } else {
    
  }
  sub_post_list_ = sub_post_list;
  // @@protoc_insertion_point(field_set_allocated:Post.sub_post_list)
}

// .Post.SignatureData signature = 21;
inline bool Post::has_signature() const {
  return this != internal_default_instance() && signature_ != NULL;
}
inline void Post::clear_signature() {
  if (GetArenaNoVirtual() == NULL && signature_ != NULL) {
    delete signature_;
  }
  signature_ = NULL;
}
inline const ::Post_SignatureData& Post::signature() const {
  const ::Post_SignatureData* p = signature_;
  // @@protoc_insertion_point(field_get:Post.signature)
  return p != NULL ? *p : *reinterpret_cast<const ::Post_SignatureData*>(
      &::_Post_SignatureData_default_instance_);
}
inline ::Post_SignatureData* Post::release_signature() {
  // @@protoc_insertion_point(field_release:Post.signature)
  
  ::Post_SignatureData* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline ::Post_SignatureData* Post::mutable_signature() {
  
  if (signature_ == NULL) {
    signature_ = new ::Post_SignatureData;
  }
  // @@protoc_insertion_point(field_mutable:Post.signature)
  return signature_;
}
inline void Post::set_allocated_signature(::Post_SignatureData* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete signature_;
  }
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    
  } else {
    
  }
  signature_ = signature;
  // @@protoc_insertion_point(field_set_allocated:Post.signature)
}

// .Agree agree = 37;
inline bool Post::has_agree() const {
  return this != internal_default_instance() && agree_ != NULL;
}
inline const ::Agree& Post::agree() const {
  const ::Agree* p = agree_;
  // @@protoc_insertion_point(field_get:Post.agree)
  return p != NULL ? *p : *reinterpret_cast<const ::Agree*>(
      &::_Agree_default_instance_);
}
inline ::Agree* Post::release_agree() {
  // @@protoc_insertion_point(field_release:Post.agree)
  
  ::Agree* temp = agree_;
  agree_ = NULL;
  return temp;
}
inline ::Agree* Post::mutable_agree() {
  
  if (agree_ == NULL) {
    agree_ = new ::Agree;
  }
  // @@protoc_insertion_point(field_mutable:Post.agree)
  return agree_;
}
inline void Post::set_allocated_agree(::Agree* agree) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(agree_);
  }
  if (agree) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      agree = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agree, submessage_arena);
    }
    
  } else {
    
  }
  agree_ = agree;
  // @@protoc_insertion_point(field_set_allocated:Post.agree)
}

// .SimpleForum from_forum = 38;
inline bool Post::has_from_forum() const {
  return this != internal_default_instance() && from_forum_ != NULL;
}
inline const ::SimpleForum& Post::from_forum() const {
  const ::SimpleForum* p = from_forum_;
  // @@protoc_insertion_point(field_get:Post.from_forum)
  return p != NULL ? *p : *reinterpret_cast<const ::SimpleForum*>(
      &::_SimpleForum_default_instance_);
}
inline ::SimpleForum* Post::release_from_forum() {
  // @@protoc_insertion_point(field_release:Post.from_forum)
  
  ::SimpleForum* temp = from_forum_;
  from_forum_ = NULL;
  return temp;
}
inline ::SimpleForum* Post::mutable_from_forum() {
  
  if (from_forum_ == NULL) {
    from_forum_ = new ::SimpleForum;
  }
  // @@protoc_insertion_point(field_mutable:Post.from_forum)
  return from_forum_;
}
inline void Post::set_allocated_from_forum(::SimpleForum* from_forum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(from_forum_);
  }
  if (from_forum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      from_forum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, from_forum, submessage_arena);
    }
    
  } else {
    
  }
  from_forum_ = from_forum;
  // @@protoc_insertion_point(field_set_allocated:Post.from_forum)
}

// int64 tid = 46;
inline void Post::clear_tid() {
  tid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Post::tid() const {
  // @@protoc_insertion_point(field_get:Post.tid)
  return tid_;
}
inline void Post::set_tid(::google::protobuf::int64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:Post.tid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Post_2eproto__INCLUDED
