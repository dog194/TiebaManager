// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchPostForumResIdl.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_SearchPostForumResIdl_2eproto__INCLUDED
#define PROTOBUF_SearchPostForumResIdl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "FrsTabInfo.pb.h"
#include "Error.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_SearchPostForumResIdl_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSearchPostForumResIdl_DataRes_SearchForumImpl();
void InitDefaultsSearchPostForumResIdl_DataRes_SearchForum();
void InitDefaultsSearchPostForumResIdl_DataResImpl();
void InitDefaultsSearchPostForumResIdl_DataRes();
void InitDefaultsSearchPostForumResIdlImpl();
void InitDefaultsSearchPostForumResIdl();
inline void InitDefaults() {
  InitDefaultsSearchPostForumResIdl_DataRes_SearchForum();
  InitDefaultsSearchPostForumResIdl_DataRes();
  InitDefaultsSearchPostForumResIdl();
}
}  // namespace protobuf_SearchPostForumResIdl_2eproto
class SearchPostForumResIdl;
class SearchPostForumResIdlDefaultTypeInternal;
extern SearchPostForumResIdlDefaultTypeInternal _SearchPostForumResIdl_default_instance_;
class SearchPostForumResIdl_DataRes;
class SearchPostForumResIdl_DataResDefaultTypeInternal;
extern SearchPostForumResIdl_DataResDefaultTypeInternal _SearchPostForumResIdl_DataRes_default_instance_;
class SearchPostForumResIdl_DataRes_SearchForum;
class SearchPostForumResIdl_DataRes_SearchForumDefaultTypeInternal;
extern SearchPostForumResIdl_DataRes_SearchForumDefaultTypeInternal _SearchPostForumResIdl_DataRes_SearchForum_default_instance_;

// ===================================================================

class SearchPostForumResIdl_DataRes_SearchForum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchPostForumResIdl.DataRes.SearchForum) */ {
 public:
  SearchPostForumResIdl_DataRes_SearchForum();
  virtual ~SearchPostForumResIdl_DataRes_SearchForum();

  SearchPostForumResIdl_DataRes_SearchForum(const SearchPostForumResIdl_DataRes_SearchForum& from);

  inline SearchPostForumResIdl_DataRes_SearchForum& operator=(const SearchPostForumResIdl_DataRes_SearchForum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchPostForumResIdl_DataRes_SearchForum(SearchPostForumResIdl_DataRes_SearchForum&& from) noexcept
    : SearchPostForumResIdl_DataRes_SearchForum() {
    *this = ::std::move(from);
  }

  inline SearchPostForumResIdl_DataRes_SearchForum& operator=(SearchPostForumResIdl_DataRes_SearchForum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPostForumResIdl_DataRes_SearchForum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchPostForumResIdl_DataRes_SearchForum* internal_default_instance() {
    return reinterpret_cast<const SearchPostForumResIdl_DataRes_SearchForum*>(
               &_SearchPostForumResIdl_DataRes_SearchForum_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SearchPostForumResIdl_DataRes_SearchForum* other);
  friend void swap(SearchPostForumResIdl_DataRes_SearchForum& a, SearchPostForumResIdl_DataRes_SearchForum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchPostForumResIdl_DataRes_SearchForum* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchPostForumResIdl_DataRes_SearchForum* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchPostForumResIdl_DataRes_SearchForum& from);
  void MergeFrom(const SearchPostForumResIdl_DataRes_SearchForum& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchPostForumResIdl_DataRes_SearchForum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FrsTabInfo tab_info = 9;
  int tab_info_size() const;
  void clear_tab_info();
  static const int kTabInfoFieldNumber = 9;
  const ::FrsTabInfo& tab_info(int index) const;
  ::FrsTabInfo* mutable_tab_info(int index);
  ::FrsTabInfo* add_tab_info();
  ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
      mutable_tab_info();
  const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
      tab_info() const;

  // string forum_name = 2;
  void clear_forum_name();
  static const int kForumNameFieldNumber = 2;
  const ::std::string& forum_name() const;
  void set_forum_name(const ::std::string& value);
  #if LANG_CXX11
  void set_forum_name(::std::string&& value);
  #endif
  void set_forum_name(const char* value);
  void set_forum_name(const char* value, size_t size);
  ::std::string* mutable_forum_name();
  ::std::string* release_forum_name();
  void set_allocated_forum_name(::std::string* forum_name);

  // int64 forum_id = 1;
  void clear_forum_id();
  static const int kForumIdFieldNumber = 1;
  ::google::protobuf::int64 forum_id() const;
  void set_forum_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SearchPostForumResIdl.DataRes.SearchForum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::FrsTabInfo > tab_info_;
  ::google::protobuf::internal::ArenaStringPtr forum_name_;
  ::google::protobuf::int64 forum_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_SearchPostForumResIdl_2eproto::TableStruct;
  friend void ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataRes_SearchForumImpl();
};
// -------------------------------------------------------------------

class SearchPostForumResIdl_DataRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchPostForumResIdl.DataRes) */ {
 public:
  SearchPostForumResIdl_DataRes();
  virtual ~SearchPostForumResIdl_DataRes();

  SearchPostForumResIdl_DataRes(const SearchPostForumResIdl_DataRes& from);

  inline SearchPostForumResIdl_DataRes& operator=(const SearchPostForumResIdl_DataRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchPostForumResIdl_DataRes(SearchPostForumResIdl_DataRes&& from) noexcept
    : SearchPostForumResIdl_DataRes() {
    *this = ::std::move(from);
  }

  inline SearchPostForumResIdl_DataRes& operator=(SearchPostForumResIdl_DataRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPostForumResIdl_DataRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchPostForumResIdl_DataRes* internal_default_instance() {
    return reinterpret_cast<const SearchPostForumResIdl_DataRes*>(
               &_SearchPostForumResIdl_DataRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SearchPostForumResIdl_DataRes* other);
  friend void swap(SearchPostForumResIdl_DataRes& a, SearchPostForumResIdl_DataRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchPostForumResIdl_DataRes* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchPostForumResIdl_DataRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchPostForumResIdl_DataRes& from);
  void MergeFrom(const SearchPostForumResIdl_DataRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchPostForumResIdl_DataRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SearchPostForumResIdl_DataRes_SearchForum SearchForum;

  // accessors -------------------------------------------------------

  // .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
  bool has_exact_match() const;
  void clear_exact_match();
  static const int kExactMatchFieldNumber = 1;
  const ::SearchPostForumResIdl_DataRes_SearchForum& exact_match() const;
  ::SearchPostForumResIdl_DataRes_SearchForum* release_exact_match();
  ::SearchPostForumResIdl_DataRes_SearchForum* mutable_exact_match();
  void set_allocated_exact_match(::SearchPostForumResIdl_DataRes_SearchForum* exact_match);

  // @@protoc_insertion_point(class_scope:SearchPostForumResIdl.DataRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SearchPostForumResIdl_DataRes_SearchForum* exact_match_;
  mutable int _cached_size_;
  friend struct ::protobuf_SearchPostForumResIdl_2eproto::TableStruct;
  friend void ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdl_DataResImpl();
};
// -------------------------------------------------------------------

class SearchPostForumResIdl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchPostForumResIdl) */ {
 public:
  SearchPostForumResIdl();
  virtual ~SearchPostForumResIdl();

  SearchPostForumResIdl(const SearchPostForumResIdl& from);

  inline SearchPostForumResIdl& operator=(const SearchPostForumResIdl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchPostForumResIdl(SearchPostForumResIdl&& from) noexcept
    : SearchPostForumResIdl() {
    *this = ::std::move(from);
  }

  inline SearchPostForumResIdl& operator=(SearchPostForumResIdl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPostForumResIdl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchPostForumResIdl* internal_default_instance() {
    return reinterpret_cast<const SearchPostForumResIdl*>(
               &_SearchPostForumResIdl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SearchPostForumResIdl* other);
  friend void swap(SearchPostForumResIdl& a, SearchPostForumResIdl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchPostForumResIdl* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchPostForumResIdl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchPostForumResIdl& from);
  void MergeFrom(const SearchPostForumResIdl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchPostForumResIdl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SearchPostForumResIdl_DataRes DataRes;

  // accessors -------------------------------------------------------

  // .Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::Error& error() const;
  ::Error* release_error();
  ::Error* mutable_error();
  void set_allocated_error(::Error* error);

  // .SearchPostForumResIdl.DataRes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::SearchPostForumResIdl_DataRes& data() const;
  ::SearchPostForumResIdl_DataRes* release_data();
  ::SearchPostForumResIdl_DataRes* mutable_data();
  void set_allocated_data(::SearchPostForumResIdl_DataRes* data);

  // @@protoc_insertion_point(class_scope:SearchPostForumResIdl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Error* error_;
  ::SearchPostForumResIdl_DataRes* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_SearchPostForumResIdl_2eproto::TableStruct;
  friend void ::protobuf_SearchPostForumResIdl_2eproto::InitDefaultsSearchPostForumResIdlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SearchPostForumResIdl_DataRes_SearchForum

// int64 forum_id = 1;
inline void SearchPostForumResIdl_DataRes_SearchForum::clear_forum_id() {
  forum_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchPostForumResIdl_DataRes_SearchForum::forum_id() const {
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.DataRes.SearchForum.forum_id)
  return forum_id_;
}
inline void SearchPostForumResIdl_DataRes_SearchForum::set_forum_id(::google::protobuf::int64 value) {
  
  forum_id_ = value;
  // @@protoc_insertion_point(field_set:SearchPostForumResIdl.DataRes.SearchForum.forum_id)
}

// string forum_name = 2;
inline void SearchPostForumResIdl_DataRes_SearchForum::clear_forum_name() {
  forum_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchPostForumResIdl_DataRes_SearchForum::forum_name() const {
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
  return forum_name_.GetNoArena();
}
inline void SearchPostForumResIdl_DataRes_SearchForum::set_forum_name(const ::std::string& value) {
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
}
#if LANG_CXX11
inline void SearchPostForumResIdl_DataRes_SearchForum::set_forum_name(::std::string&& value) {
  
  forum_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
}
#endif
inline void SearchPostForumResIdl_DataRes_SearchForum::set_forum_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
}
inline void SearchPostForumResIdl_DataRes_SearchForum::set_forum_name(const char* value, size_t size) {
  
  forum_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
}
inline ::std::string* SearchPostForumResIdl_DataRes_SearchForum::mutable_forum_name() {
  
  // @@protoc_insertion_point(field_mutable:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
  return forum_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchPostForumResIdl_DataRes_SearchForum::release_forum_name() {
  // @@protoc_insertion_point(field_release:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
  
  return forum_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchPostForumResIdl_DataRes_SearchForum::set_allocated_forum_name(::std::string* forum_name) {
  if (forum_name != NULL) {
    
  } else {
    
  }
  forum_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forum_name);
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumResIdl.DataRes.SearchForum.forum_name)
}

// repeated .FrsTabInfo tab_info = 9;
inline int SearchPostForumResIdl_DataRes_SearchForum::tab_info_size() const {
  return tab_info_.size();
}
inline const ::FrsTabInfo& SearchPostForumResIdl_DataRes_SearchForum::tab_info(int index) const {
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.DataRes.SearchForum.tab_info)
  return tab_info_.Get(index);
}
inline ::FrsTabInfo* SearchPostForumResIdl_DataRes_SearchForum::mutable_tab_info(int index) {
  // @@protoc_insertion_point(field_mutable:SearchPostForumResIdl.DataRes.SearchForum.tab_info)
  return tab_info_.Mutable(index);
}
inline ::FrsTabInfo* SearchPostForumResIdl_DataRes_SearchForum::add_tab_info() {
  // @@protoc_insertion_point(field_add:SearchPostForumResIdl.DataRes.SearchForum.tab_info)
  return tab_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >*
SearchPostForumResIdl_DataRes_SearchForum::mutable_tab_info() {
  // @@protoc_insertion_point(field_mutable_list:SearchPostForumResIdl.DataRes.SearchForum.tab_info)
  return &tab_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FrsTabInfo >&
SearchPostForumResIdl_DataRes_SearchForum::tab_info() const {
  // @@protoc_insertion_point(field_list:SearchPostForumResIdl.DataRes.SearchForum.tab_info)
  return tab_info_;
}

// -------------------------------------------------------------------

// SearchPostForumResIdl_DataRes

// .SearchPostForumResIdl.DataRes.SearchForum exact_match = 1;
inline bool SearchPostForumResIdl_DataRes::has_exact_match() const {
  return this != internal_default_instance() && exact_match_ != NULL;
}
inline void SearchPostForumResIdl_DataRes::clear_exact_match() {
  if (GetArenaNoVirtual() == NULL && exact_match_ != NULL) {
    delete exact_match_;
  }
  exact_match_ = NULL;
}
inline const ::SearchPostForumResIdl_DataRes_SearchForum& SearchPostForumResIdl_DataRes::exact_match() const {
  const ::SearchPostForumResIdl_DataRes_SearchForum* p = exact_match_;
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.DataRes.exact_match)
  return p != NULL ? *p : *reinterpret_cast<const ::SearchPostForumResIdl_DataRes_SearchForum*>(
      &::_SearchPostForumResIdl_DataRes_SearchForum_default_instance_);
}
inline ::SearchPostForumResIdl_DataRes_SearchForum* SearchPostForumResIdl_DataRes::release_exact_match() {
  // @@protoc_insertion_point(field_release:SearchPostForumResIdl.DataRes.exact_match)
  
  ::SearchPostForumResIdl_DataRes_SearchForum* temp = exact_match_;
  exact_match_ = NULL;
  return temp;
}
inline ::SearchPostForumResIdl_DataRes_SearchForum* SearchPostForumResIdl_DataRes::mutable_exact_match() {
  
  if (exact_match_ == NULL) {
    exact_match_ = new ::SearchPostForumResIdl_DataRes_SearchForum;
  }
  // @@protoc_insertion_point(field_mutable:SearchPostForumResIdl.DataRes.exact_match)
  return exact_match_;
}
inline void SearchPostForumResIdl_DataRes::set_allocated_exact_match(::SearchPostForumResIdl_DataRes_SearchForum* exact_match) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exact_match_;
  }
  if (exact_match) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exact_match = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exact_match, submessage_arena);
    }
    
  } else {
    
  }
  exact_match_ = exact_match;
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumResIdl.DataRes.exact_match)
}

// -------------------------------------------------------------------

// SearchPostForumResIdl

// .Error error = 1;
inline bool SearchPostForumResIdl::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::Error& SearchPostForumResIdl::error() const {
  const ::Error* p = error_;
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.error)
  return p != NULL ? *p : *reinterpret_cast<const ::Error*>(
      &::_Error_default_instance_);
}
inline ::Error* SearchPostForumResIdl::release_error() {
  // @@protoc_insertion_point(field_release:SearchPostForumResIdl.error)
  
  ::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::Error* SearchPostForumResIdl::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::Error;
  }
  // @@protoc_insertion_point(field_mutable:SearchPostForumResIdl.error)
  return error_;
}
inline void SearchPostForumResIdl::set_allocated_error(::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumResIdl.error)
}

// .SearchPostForumResIdl.DataRes data = 2;
inline bool SearchPostForumResIdl::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void SearchPostForumResIdl::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::SearchPostForumResIdl_DataRes& SearchPostForumResIdl::data() const {
  const ::SearchPostForumResIdl_DataRes* p = data_;
  // @@protoc_insertion_point(field_get:SearchPostForumResIdl.data)
  return p != NULL ? *p : *reinterpret_cast<const ::SearchPostForumResIdl_DataRes*>(
      &::_SearchPostForumResIdl_DataRes_default_instance_);
}
inline ::SearchPostForumResIdl_DataRes* SearchPostForumResIdl::release_data() {
  // @@protoc_insertion_point(field_release:SearchPostForumResIdl.data)
  
  ::SearchPostForumResIdl_DataRes* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::SearchPostForumResIdl_DataRes* SearchPostForumResIdl::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::SearchPostForumResIdl_DataRes;
  }
  // @@protoc_insertion_point(field_mutable:SearchPostForumResIdl.data)
  return data_;
}
inline void SearchPostForumResIdl::set_allocated_data(::SearchPostForumResIdl_DataRes* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:SearchPostForumResIdl.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SearchPostForumResIdl_2eproto__INCLUDED
