// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TiebaPlusInfo.proto
#define PROTOBUF_USE_DLLS
#ifndef PROTOBUF_TiebaPlusInfo_2eproto__INCLUDED
#define PROTOBUF_TiebaPlusInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_TiebaPlusInfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTiebaPlusInfoImpl();
void InitDefaultsTiebaPlusInfo();
inline void InitDefaults() {
  InitDefaultsTiebaPlusInfo();
}
}  // namespace protobuf_TiebaPlusInfo_2eproto
class TiebaPlusInfo;
class TiebaPlusInfoDefaultTypeInternal;
extern TiebaPlusInfoDefaultTypeInternal _TiebaPlusInfo_default_instance_;

// ===================================================================

class TiebaPlusInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TiebaPlusInfo) */ {
 public:
  TiebaPlusInfo();
  virtual ~TiebaPlusInfo();

  TiebaPlusInfo(const TiebaPlusInfo& from);

  inline TiebaPlusInfo& operator=(const TiebaPlusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TiebaPlusInfo(TiebaPlusInfo&& from) noexcept
    : TiebaPlusInfo() {
    *this = ::std::move(from);
  }

  inline TiebaPlusInfo& operator=(TiebaPlusInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TiebaPlusInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TiebaPlusInfo* internal_default_instance() {
    return reinterpret_cast<const TiebaPlusInfo*>(
               &_TiebaPlusInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TiebaPlusInfo* other);
  friend void swap(TiebaPlusInfo& a, TiebaPlusInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TiebaPlusInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TiebaPlusInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TiebaPlusInfo& from);
  void MergeFrom(const TiebaPlusInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TiebaPlusInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string desc = 2;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string jump_url = 3;
  void clear_jump_url();
  static const int kJumpUrlFieldNumber = 3;
  const ::std::string& jump_url() const;
  void set_jump_url(const ::std::string& value);
  #if LANG_CXX11
  void set_jump_url(::std::string&& value);
  #endif
  void set_jump_url(const char* value);
  void set_jump_url(const char* value, size_t size);
  ::std::string* mutable_jump_url();
  ::std::string* release_jump_url();
  void set_allocated_jump_url(::std::string* jump_url);

  // string app_icon = 6;
  void clear_app_icon();
  static const int kAppIconFieldNumber = 6;
  const ::std::string& app_icon() const;
  void set_app_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_app_icon(::std::string&& value);
  #endif
  void set_app_icon(const char* value);
  void set_app_icon(const char* value, size_t size);
  ::std::string* mutable_app_icon();
  ::std::string* release_app_icon();
  void set_allocated_app_icon(::std::string* app_icon);

  // string h5_jump_number = 14;
  void clear_h5_jump_number();
  static const int kH5JumpNumberFieldNumber = 14;
  const ::std::string& h5_jump_number() const;
  void set_h5_jump_number(const ::std::string& value);
  #if LANG_CXX11
  void set_h5_jump_number(::std::string&& value);
  #endif
  void set_h5_jump_number(const char* value);
  void set_h5_jump_number(const char* value, size_t size);
  ::std::string* mutable_h5_jump_number();
  ::std::string* release_h5_jump_number();
  void set_allocated_h5_jump_number(::std::string* h5_jump_number);

  // string h5_jump_param = 15;
  void clear_h5_jump_param();
  static const int kH5JumpParamFieldNumber = 15;
  const ::std::string& h5_jump_param() const;
  void set_h5_jump_param(const ::std::string& value);
  #if LANG_CXX11
  void set_h5_jump_param(::std::string&& value);
  #endif
  void set_h5_jump_param(const char* value);
  void set_h5_jump_param(const char* value, size_t size);
  ::std::string* mutable_h5_jump_param();
  ::std::string* release_h5_jump_param();
  void set_allocated_h5_jump_param(::std::string* h5_jump_param);

  // string button_desc = 23;
  void clear_button_desc();
  static const int kButtonDescFieldNumber = 23;
  const ::std::string& button_desc() const;
  void set_button_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_button_desc(::std::string&& value);
  #endif
  void set_button_desc(const char* value);
  void set_button_desc(const char* value, size_t size);
  ::std::string* mutable_button_desc();
  ::std::string* release_button_desc();
  void set_allocated_button_desc(::std::string* button_desc);

  // int32 jump_type = 16;
  void clear_jump_type();
  static const int kJumpTypeFieldNumber = 16;
  ::google::protobuf::int32 jump_type() const;
  void set_jump_type(::google::protobuf::int32 value);

  // int32 target_type = 12;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 12;
  ::google::protobuf::int32 target_type() const;
  void set_target_type(::google::protobuf::int32 value);

  // int32 h5_jump_type = 13;
  void clear_h5_jump_type();
  static const int kH5JumpTypeFieldNumber = 13;
  ::google::protobuf::int32 h5_jump_type() const;
  void set_h5_jump_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TiebaPlusInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr jump_url_;
  ::google::protobuf::internal::ArenaStringPtr app_icon_;
  ::google::protobuf::internal::ArenaStringPtr h5_jump_number_;
  ::google::protobuf::internal::ArenaStringPtr h5_jump_param_;
  ::google::protobuf::internal::ArenaStringPtr button_desc_;
  ::google::protobuf::int32 jump_type_;
  ::google::protobuf::int32 target_type_;
  ::google::protobuf::int32 h5_jump_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_TiebaPlusInfo_2eproto::TableStruct;
  friend void ::protobuf_TiebaPlusInfo_2eproto::InitDefaultsTiebaPlusInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TiebaPlusInfo

// string title = 1;
inline void TiebaPlusInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::title() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.title)
  return title_.GetNoArena();
}
inline void TiebaPlusInfo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.title)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.title)
}
#endif
inline void TiebaPlusInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.title)
}
inline void TiebaPlusInfo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.title)
}
inline ::std::string* TiebaPlusInfo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_title() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.title)
}

// string desc = 2;
inline void TiebaPlusInfo::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::desc() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.desc)
  return desc_.GetNoArena();
}
inline void TiebaPlusInfo::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.desc)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.desc)
}
#endif
inline void TiebaPlusInfo::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.desc)
}
inline void TiebaPlusInfo::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.desc)
}
inline ::std::string* TiebaPlusInfo::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_desc() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.desc)
}

// string jump_url = 3;
inline void TiebaPlusInfo::clear_jump_url() {
  jump_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::jump_url() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.jump_url)
  return jump_url_.GetNoArena();
}
inline void TiebaPlusInfo::set_jump_url(const ::std::string& value) {
  
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.jump_url)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_jump_url(::std::string&& value) {
  
  jump_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.jump_url)
}
#endif
inline void TiebaPlusInfo::set_jump_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.jump_url)
}
inline void TiebaPlusInfo::set_jump_url(const char* value, size_t size) {
  
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.jump_url)
}
inline ::std::string* TiebaPlusInfo::mutable_jump_url() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.jump_url)
  return jump_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_jump_url() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.jump_url)
  
  return jump_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_jump_url(::std::string* jump_url) {
  if (jump_url != NULL) {
    
  } else {
    
  }
  jump_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jump_url);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.jump_url)
}

// string app_icon = 6;
inline void TiebaPlusInfo::clear_app_icon() {
  app_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::app_icon() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.app_icon)
  return app_icon_.GetNoArena();
}
inline void TiebaPlusInfo::set_app_icon(const ::std::string& value) {
  
  app_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.app_icon)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_app_icon(::std::string&& value) {
  
  app_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.app_icon)
}
#endif
inline void TiebaPlusInfo::set_app_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.app_icon)
}
inline void TiebaPlusInfo::set_app_icon(const char* value, size_t size) {
  
  app_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.app_icon)
}
inline ::std::string* TiebaPlusInfo::mutable_app_icon() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.app_icon)
  return app_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_app_icon() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.app_icon)
  
  return app_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_app_icon(::std::string* app_icon) {
  if (app_icon != NULL) {
    
  } else {
    
  }
  app_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_icon);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.app_icon)
}

// int32 target_type = 12;
inline void TiebaPlusInfo::clear_target_type() {
  target_type_ = 0;
}
inline ::google::protobuf::int32 TiebaPlusInfo::target_type() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.target_type)
  return target_type_;
}
inline void TiebaPlusInfo::set_target_type(::google::protobuf::int32 value) {
  
  target_type_ = value;
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.target_type)
}

// int32 h5_jump_type = 13;
inline void TiebaPlusInfo::clear_h5_jump_type() {
  h5_jump_type_ = 0;
}
inline ::google::protobuf::int32 TiebaPlusInfo::h5_jump_type() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.h5_jump_type)
  return h5_jump_type_;
}
inline void TiebaPlusInfo::set_h5_jump_type(::google::protobuf::int32 value) {
  
  h5_jump_type_ = value;
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.h5_jump_type)
}

// string h5_jump_number = 14;
inline void TiebaPlusInfo::clear_h5_jump_number() {
  h5_jump_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::h5_jump_number() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.h5_jump_number)
  return h5_jump_number_.GetNoArena();
}
inline void TiebaPlusInfo::set_h5_jump_number(const ::std::string& value) {
  
  h5_jump_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.h5_jump_number)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_h5_jump_number(::std::string&& value) {
  
  h5_jump_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.h5_jump_number)
}
#endif
inline void TiebaPlusInfo::set_h5_jump_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  h5_jump_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.h5_jump_number)
}
inline void TiebaPlusInfo::set_h5_jump_number(const char* value, size_t size) {
  
  h5_jump_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.h5_jump_number)
}
inline ::std::string* TiebaPlusInfo::mutable_h5_jump_number() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.h5_jump_number)
  return h5_jump_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_h5_jump_number() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.h5_jump_number)
  
  return h5_jump_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_h5_jump_number(::std::string* h5_jump_number) {
  if (h5_jump_number != NULL) {
    
  } else {
    
  }
  h5_jump_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), h5_jump_number);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.h5_jump_number)
}

// string h5_jump_param = 15;
inline void TiebaPlusInfo::clear_h5_jump_param() {
  h5_jump_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::h5_jump_param() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.h5_jump_param)
  return h5_jump_param_.GetNoArena();
}
inline void TiebaPlusInfo::set_h5_jump_param(const ::std::string& value) {
  
  h5_jump_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.h5_jump_param)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_h5_jump_param(::std::string&& value) {
  
  h5_jump_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.h5_jump_param)
}
#endif
inline void TiebaPlusInfo::set_h5_jump_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  h5_jump_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.h5_jump_param)
}
inline void TiebaPlusInfo::set_h5_jump_param(const char* value, size_t size) {
  
  h5_jump_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.h5_jump_param)
}
inline ::std::string* TiebaPlusInfo::mutable_h5_jump_param() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.h5_jump_param)
  return h5_jump_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_h5_jump_param() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.h5_jump_param)
  
  return h5_jump_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_h5_jump_param(::std::string* h5_jump_param) {
  if (h5_jump_param != NULL) {
    
  } else {
    
  }
  h5_jump_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), h5_jump_param);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.h5_jump_param)
}

// int32 jump_type = 16;
inline void TiebaPlusInfo::clear_jump_type() {
  jump_type_ = 0;
}
inline ::google::protobuf::int32 TiebaPlusInfo::jump_type() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.jump_type)
  return jump_type_;
}
inline void TiebaPlusInfo::set_jump_type(::google::protobuf::int32 value) {
  
  jump_type_ = value;
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.jump_type)
}

// string button_desc = 23;
inline void TiebaPlusInfo::clear_button_desc() {
  button_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TiebaPlusInfo::button_desc() const {
  // @@protoc_insertion_point(field_get:TiebaPlusInfo.button_desc)
  return button_desc_.GetNoArena();
}
inline void TiebaPlusInfo::set_button_desc(const ::std::string& value) {
  
  button_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TiebaPlusInfo.button_desc)
}
#if LANG_CXX11
inline void TiebaPlusInfo::set_button_desc(::std::string&& value) {
  
  button_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TiebaPlusInfo.button_desc)
}
#endif
inline void TiebaPlusInfo::set_button_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  button_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TiebaPlusInfo.button_desc)
}
inline void TiebaPlusInfo::set_button_desc(const char* value, size_t size) {
  
  button_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TiebaPlusInfo.button_desc)
}
inline ::std::string* TiebaPlusInfo::mutable_button_desc() {
  
  // @@protoc_insertion_point(field_mutable:TiebaPlusInfo.button_desc)
  return button_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TiebaPlusInfo::release_button_desc() {
  // @@protoc_insertion_point(field_release:TiebaPlusInfo.button_desc)
  
  return button_desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TiebaPlusInfo::set_allocated_button_desc(::std::string* button_desc) {
  if (button_desc != NULL) {
    
  } else {
    
  }
  button_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), button_desc);
  // @@protoc_insertion_point(field_set_allocated:TiebaPlusInfo.button_desc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TiebaPlusInfo_2eproto__INCLUDED
