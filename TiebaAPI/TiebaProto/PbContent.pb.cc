// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbContent.proto

#include "PbContent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class PbContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PbContent>
      _instance;
} _PbContent_default_instance_;
namespace protobuf_PbContent_2eproto {
void InitDefaultsPbContentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PbContent_default_instance_;
    new (ptr) ::PbContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PbContent::InitAsDefaultInstance();
}

void InitDefaultsPbContent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPbContentImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, bsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, big_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, big_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, cdn_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, big_cdn_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, imgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, voice_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, packet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, phonetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, e_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, origin_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PbContent, origin_size_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PbContent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PbContent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PbContent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017PbContent.proto\"\276\002\n\tPbContent\022\014\n\004type\030"
      "\001 \001(\r\022\014\n\004text\030\002 \001(\t\022\014\n\004link\030\003 \001(\t\022\013\n\003src"
      "\030\004 \001(\t\022\r\n\005bsize\030\005 \001(\t\022\017\n\007big_src\030\006 \001(\t\022\020"
      "\n\010big_size\030\007 \001(\t\022\017\n\007cdn_src\030\010 \001(\t\022\023\n\013big"
      "_cdn_src\030\t \001(\t\022\017\n\007imgtype\030\n \001(\t\022\021\n\tvoice"
      "_md5\030\014 \001(\t\022\r\n\005width\030\022 \001(\r\022\016\n\006height\030\023 \001("
      "\r\022\023\n\013packet_name\030\024 \001(\t\022\021\n\tphonetype\030\025 \001("
      "\t\022\016\n\006e_type\030\030 \001(\r\022\022\n\norigin_src\030\031 \001(\t\022\023\n"
      "\013origin_size\030\033 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PbContent.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PbContent_2eproto

// ===================================================================

void PbContent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PbContent::kTypeFieldNumber;
const int PbContent::kTextFieldNumber;
const int PbContent::kLinkFieldNumber;
const int PbContent::kSrcFieldNumber;
const int PbContent::kBsizeFieldNumber;
const int PbContent::kBigSrcFieldNumber;
const int PbContent::kBigSizeFieldNumber;
const int PbContent::kCdnSrcFieldNumber;
const int PbContent::kBigCdnSrcFieldNumber;
const int PbContent::kImgtypeFieldNumber;
const int PbContent::kVoiceMd5FieldNumber;
const int PbContent::kWidthFieldNumber;
const int PbContent::kHeightFieldNumber;
const int PbContent::kPacketNameFieldNumber;
const int PbContent::kPhonetypeFieldNumber;
const int PbContent::kETypeFieldNumber;
const int PbContent::kOriginSrcFieldNumber;
const int PbContent::kOriginSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PbContent::PbContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_PbContent_2eproto::InitDefaultsPbContent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbContent)
}
PbContent::PbContent(const PbContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link().size() > 0) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src().size() > 0) {
    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  bsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bsize().size() > 0) {
    bsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bsize_);
  }
  big_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big_src().size() > 0) {
    big_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_src_);
  }
  big_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big_size().size() > 0) {
    big_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_size_);
  }
  cdn_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cdn_src().size() > 0) {
    cdn_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cdn_src_);
  }
  big_cdn_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big_cdn_src().size() > 0) {
    big_cdn_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_cdn_src_);
  }
  imgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imgtype().size() > 0) {
    imgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgtype_);
  }
  voice_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.voice_md5().size() > 0) {
    voice_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_md5_);
  }
  packet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packet_name().size() > 0) {
    packet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packet_name_);
  }
  phonetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phonetype().size() > 0) {
    phonetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonetype_);
  }
  origin_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin_src().size() > 0) {
    origin_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_src_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&e_type_) -
    reinterpret_cast<char*>(&type_)) + sizeof(e_type_));
  // @@protoc_insertion_point(copy_constructor:PbContent)
}

void PbContent::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cdn_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_cdn_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&e_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(e_type_));
  _cached_size_ = 0;
}

PbContent::~PbContent() {
  // @@protoc_insertion_point(destructor:PbContent)
  SharedDtor();
}

void PbContent::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bsize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cdn_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_cdn_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PbContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PbContent::descriptor() {
  ::protobuf_PbContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbContent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PbContent& PbContent::default_instance() {
  ::protobuf_PbContent_2eproto::InitDefaultsPbContent();
  return *internal_default_instance();
}

PbContent* PbContent::New(::google::protobuf::Arena* arena) const {
  PbContent* n = new PbContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PbContent::Clear() {
// @@protoc_insertion_point(message_clear_start:PbContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cdn_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_cdn_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&e_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(e_type_));
  _internal_metadata_.Clear();
}

bool PbContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src().data(), static_cast<int>(this->src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bsize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsize()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bsize().data(), static_cast<int>(this->bsize().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.bsize"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string big_src = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big_src().data(), static_cast<int>(this->big_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.big_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string big_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big_size().data(), static_cast<int>(this->big_size().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.big_size"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cdn_src = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cdn_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cdn_src().data(), static_cast<int>(this->cdn_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.cdn_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string big_cdn_src = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big_cdn_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big_cdn_src().data(), static_cast<int>(this->big_cdn_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.big_cdn_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imgtype = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imgtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imgtype().data(), static_cast<int>(this->imgtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.imgtype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string voice_md5 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->voice_md5().data(), static_cast<int>(this->voice_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.voice_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string packet_name = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packet_name().data(), static_cast<int>(this->packet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.packet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phonetype = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonetype().data(), static_cast<int>(this->phonetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.phonetype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 e_type = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &e_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin_src = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin_src().data(), static_cast<int>(this->origin_src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbContent.origin_src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 origin_size = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbContent)
  return false;
#undef DO_
}

void PbContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link(), output);
  }

  // string src = 4;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->src(), output);
  }

  // string bsize = 5;
  if (this->bsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bsize().data(), static_cast<int>(this->bsize().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.bsize");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bsize(), output);
  }

  // string big_src = 6;
  if (this->big_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_src().data(), static_cast<int>(this->big_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->big_src(), output);
  }

  // string big_size = 7;
  if (this->big_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_size().data(), static_cast<int>(this->big_size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->big_size(), output);
  }

  // string cdn_src = 8;
  if (this->cdn_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cdn_src().data(), static_cast<int>(this->cdn_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.cdn_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cdn_src(), output);
  }

  // string big_cdn_src = 9;
  if (this->big_cdn_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_cdn_src().data(), static_cast<int>(this->big_cdn_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_cdn_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->big_cdn_src(), output);
  }

  // string imgtype = 10;
  if (this->imgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imgtype().data(), static_cast<int>(this->imgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.imgtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->imgtype(), output);
  }

  // string voice_md5 = 12;
  if (this->voice_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voice_md5().data(), static_cast<int>(this->voice_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.voice_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->voice_md5(), output);
  }

  // uint32 width = 18;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->width(), output);
  }

  // uint32 height = 19;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->height(), output);
  }

  // string packet_name = 20;
  if (this->packet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packet_name().data(), static_cast<int>(this->packet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.packet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->packet_name(), output);
  }

  // string phonetype = 21;
  if (this->phonetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonetype().data(), static_cast<int>(this->phonetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.phonetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->phonetype(), output);
  }

  // uint32 e_type = 24;
  if (this->e_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->e_type(), output);
  }

  // string origin_src = 25;
  if (this->origin_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_src().data(), static_cast<int>(this->origin_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.origin_src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->origin_src(), output);
  }

  // uint32 origin_size = 27;
  if (this->origin_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->origin_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbContent)
}

::google::protobuf::uint8* PbContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link(), target);
  }

  // string src = 4;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->src(), target);
  }

  // string bsize = 5;
  if (this->bsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bsize().data(), static_cast<int>(this->bsize().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.bsize");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bsize(), target);
  }

  // string big_src = 6;
  if (this->big_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_src().data(), static_cast<int>(this->big_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->big_src(), target);
  }

  // string big_size = 7;
  if (this->big_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_size().data(), static_cast<int>(this->big_size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->big_size(), target);
  }

  // string cdn_src = 8;
  if (this->cdn_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cdn_src().data(), static_cast<int>(this->cdn_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.cdn_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cdn_src(), target);
  }

  // string big_cdn_src = 9;
  if (this->big_cdn_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_cdn_src().data(), static_cast<int>(this->big_cdn_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.big_cdn_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->big_cdn_src(), target);
  }

  // string imgtype = 10;
  if (this->imgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imgtype().data(), static_cast<int>(this->imgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.imgtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->imgtype(), target);
  }

  // string voice_md5 = 12;
  if (this->voice_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->voice_md5().data(), static_cast<int>(this->voice_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.voice_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->voice_md5(), target);
  }

  // uint32 width = 18;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->width(), target);
  }

  // uint32 height = 19;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->height(), target);
  }

  // string packet_name = 20;
  if (this->packet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packet_name().data(), static_cast<int>(this->packet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.packet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->packet_name(), target);
  }

  // string phonetype = 21;
  if (this->phonetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonetype().data(), static_cast<int>(this->phonetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.phonetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->phonetype(), target);
  }

  // uint32 e_type = 24;
  if (this->e_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->e_type(), target);
  }

  // string origin_src = 25;
  if (this->origin_src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_src().data(), static_cast<int>(this->origin_src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbContent.origin_src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->origin_src(), target);
  }

  // uint32 origin_size = 27;
  if (this->origin_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->origin_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbContent)
  return target;
}

size_t PbContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string link = 3;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  // string src = 4;
  if (this->src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  // string bsize = 5;
  if (this->bsize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bsize());
  }

  // string big_src = 6;
  if (this->big_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big_src());
  }

  // string big_size = 7;
  if (this->big_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big_size());
  }

  // string cdn_src = 8;
  if (this->cdn_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cdn_src());
  }

  // string big_cdn_src = 9;
  if (this->big_cdn_src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big_cdn_src());
  }

  // string imgtype = 10;
  if (this->imgtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imgtype());
  }

  // string voice_md5 = 12;
  if (this->voice_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->voice_md5());
  }

  // string packet_name = 20;
  if (this->packet_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packet_name());
  }

  // string phonetype = 21;
  if (this->phonetype().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonetype());
  }

  // string origin_src = 25;
  if (this->origin_src().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin_src());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 width = 18;
  if (this->width() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 origin_size = 27;
  if (this->origin_size() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->origin_size());
  }

  // uint32 height = 19;
  if (this->height() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 e_type = 24;
  if (this->e_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->e_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PbContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbContent)
  GOOGLE_DCHECK_NE(&from, this);
  const PbContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PbContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbContent)
    MergeFrom(*source);
  }
}

void PbContent::MergeFrom(const PbContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  if (from.src().size() > 0) {

    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  if (from.bsize().size() > 0) {

    bsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bsize_);
  }
  if (from.big_src().size() > 0) {

    big_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_src_);
  }
  if (from.big_size().size() > 0) {

    big_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_size_);
  }
  if (from.cdn_src().size() > 0) {

    cdn_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cdn_src_);
  }
  if (from.big_cdn_src().size() > 0) {

    big_cdn_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_cdn_src_);
  }
  if (from.imgtype().size() > 0) {

    imgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgtype_);
  }
  if (from.voice_md5().size() > 0) {

    voice_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_md5_);
  }
  if (from.packet_name().size() > 0) {

    packet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packet_name_);
  }
  if (from.phonetype().size() > 0) {

    phonetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonetype_);
  }
  if (from.origin_src().size() > 0) {

    origin_src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_src_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.origin_size() != 0) {
    set_origin_size(from.origin_size());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.e_type() != 0) {
    set_e_type(from.e_type());
  }
}

void PbContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbContent::CopyFrom(const PbContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbContent::IsInitialized() const {
  return true;
}

void PbContent::Swap(PbContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PbContent::InternalSwap(PbContent* other) {
  using std::swap;
  text_.Swap(&other->text_);
  link_.Swap(&other->link_);
  src_.Swap(&other->src_);
  bsize_.Swap(&other->bsize_);
  big_src_.Swap(&other->big_src_);
  big_size_.Swap(&other->big_size_);
  cdn_src_.Swap(&other->cdn_src_);
  big_cdn_src_.Swap(&other->big_cdn_src_);
  imgtype_.Swap(&other->imgtype_);
  voice_md5_.Swap(&other->voice_md5_);
  packet_name_.Swap(&other->packet_name_);
  phonetype_.Swap(&other->phonetype_);
  origin_src_.Swap(&other->origin_src_);
  swap(type_, other->type_);
  swap(width_, other->width_);
  swap(origin_size_, other->origin_size_);
  swap(height_, other->height_);
  swap(e_type_, other->e_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PbContent::GetMetadata() const {
  protobuf_PbContent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PbContent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
