// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbContent.proto

#include "PbContent.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR PbContent::PbContent(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.link_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bsize_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.big_src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.big_size_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.cdn_src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.big_cdn_src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.imgtype_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.voice_md5_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.packet_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.phonetype_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.origin_src_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tiebaplus_info_)*/ nullptr,
      /*decltype(_impl_.type_)*/ 0u,
      /*decltype(_impl_.during_time_)*/ 0u,
      /*decltype(_impl_.uid_)*/ ::int64_t{0},
      /*decltype(_impl_.is_sub_)*/ 0u,
      /*decltype(_impl_.width_)*/ 0u,
      /*decltype(_impl_.height_)*/ 0u,
      /*decltype(_impl_.e_type_)*/ 0u,
      /*decltype(_impl_.origin_size_)*/ 0u,
    } {}
struct PbContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PbContentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PbContentDefaultTypeInternal() {}
  union {
    PbContent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PbContentDefaultTypeInternal _PbContent_default_instance_;
static ::_pb::Metadata file_level_metadata_PbContent_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_PbContent_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_PbContent_2eproto = nullptr;
const ::uint32_t TableStruct_PbContent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.link_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.src_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.bsize_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.big_src_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.big_size_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.cdn_src_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.big_cdn_src_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.imgtype_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.voice_md5_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.during_time_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.is_sub_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.packet_name_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.phonetype_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.e_type_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.origin_src_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.origin_size_),
    PROTOBUF_FIELD_OFFSET(::PbContent, _impl_.tiebaplus_info_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 30, -1, sizeof(::PbContent)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_PbContent_default_instance_._instance,
};
const char descriptor_table_protodef_PbContent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017PbContent.proto\032\023TiebaPlusInfo.proto\"\230"
    "\003\n\tPbContent\022\014\n\004type\030\001 \001(\r\022\014\n\004text\030\002 \001(\t"
    "\022\014\n\004link\030\003 \001(\t\022\013\n\003src\030\004 \001(\t\022\r\n\005bsize\030\005 \001"
    "(\t\022\017\n\007big_src\030\006 \001(\t\022\020\n\010big_size\030\007 \001(\t\022\017\n"
    "\007cdn_src\030\010 \001(\t\022\023\n\013big_cdn_src\030\t \001(\t\022\017\n\007i"
    "mgtype\030\n \001(\t\022\021\n\tvoice_md5\030\014 \001(\t\022\023\n\013durin"
    "g_time\030\r \001(\r\022\016\n\006is_sub\030\016 \001(\r\022\013\n\003uid\030\017 \001("
    "\003\022\r\n\005width\030\022 \001(\r\022\016\n\006height\030\023 \001(\r\022\023\n\013pack"
    "et_name\030\024 \001(\t\022\021\n\tphonetype\030\025 \001(\t\022\016\n\006e_ty"
    "pe\030\030 \001(\r\022\022\n\norigin_src\030\031 \001(\t\022\023\n\013origin_s"
    "ize\030\033 \001(\r\022&\n\016tiebaplus_info\030( \001(\0132\016.Tieb"
    "aPlusInfob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_PbContent_2eproto_deps[1] =
    {
        &::descriptor_table_TiebaPlusInfo_2eproto,
};
static ::absl::once_flag descriptor_table_PbContent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PbContent_2eproto = {
    false,
    false,
    457,
    descriptor_table_protodef_PbContent_2eproto,
    "PbContent.proto",
    &descriptor_table_PbContent_2eproto_once,
    descriptor_table_PbContent_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_PbContent_2eproto::offsets,
    file_level_metadata_PbContent_2eproto,
    file_level_enum_descriptors_PbContent_2eproto,
    file_level_service_descriptors_PbContent_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PbContent_2eproto_getter() {
  return &descriptor_table_PbContent_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_PbContent_2eproto(&descriptor_table_PbContent_2eproto);
// ===================================================================

class PbContent::_Internal {
 public:
  using HasBits = decltype(std::declval<PbContent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PbContent, _impl_._has_bits_);
  static const ::TiebaPlusInfo& tiebaplus_info(const PbContent* msg);
  static void set_has_tiebaplus_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TiebaPlusInfo& PbContent::_Internal::tiebaplus_info(const PbContent* msg) {
  return *msg->_impl_.tiebaplus_info_;
}
void PbContent::clear_tiebaplus_info() {
  if (_impl_.tiebaplus_info_ != nullptr) _impl_.tiebaplus_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PbContent::PbContent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PbContent)
}
PbContent::PbContent(const PbContent& from) : ::google::protobuf::Message() {
  PbContent* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
      decltype(_impl_.link_){},
      decltype(_impl_.src_){},
      decltype(_impl_.bsize_){},
      decltype(_impl_.big_src_){},
      decltype(_impl_.big_size_){},
      decltype(_impl_.cdn_src_){},
      decltype(_impl_.big_cdn_src_){},
      decltype(_impl_.imgtype_){},
      decltype(_impl_.voice_md5_){},
      decltype(_impl_.packet_name_){},
      decltype(_impl_.phonetype_){},
      decltype(_impl_.origin_src_){},
      decltype(_impl_.tiebaplus_info_){nullptr},
      decltype(_impl_.type_){},
      decltype(_impl_.during_time_){},
      decltype(_impl_.uid_){},
      decltype(_impl_.is_sub_){},
      decltype(_impl_.width_){},
      decltype(_impl_.height_){},
      decltype(_impl_.e_type_){},
      decltype(_impl_.origin_size_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_link().empty()) {
    _this->_impl_.link_.Set(from._internal_link(), _this->GetArenaForAllocation());
  }
  _impl_.src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_src().empty()) {
    _this->_impl_.src_.Set(from._internal_src(), _this->GetArenaForAllocation());
  }
  _impl_.bsize_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bsize_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bsize().empty()) {
    _this->_impl_.bsize_.Set(from._internal_bsize(), _this->GetArenaForAllocation());
  }
  _impl_.big_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_big_src().empty()) {
    _this->_impl_.big_src_.Set(from._internal_big_src(), _this->GetArenaForAllocation());
  }
  _impl_.big_size_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_size_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_big_size().empty()) {
    _this->_impl_.big_size_.Set(from._internal_big_size(), _this->GetArenaForAllocation());
  }
  _impl_.cdn_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cdn_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cdn_src().empty()) {
    _this->_impl_.cdn_src_.Set(from._internal_cdn_src(), _this->GetArenaForAllocation());
  }
  _impl_.big_cdn_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_cdn_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_big_cdn_src().empty()) {
    _this->_impl_.big_cdn_src_.Set(from._internal_big_cdn_src(), _this->GetArenaForAllocation());
  }
  _impl_.imgtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.imgtype_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_imgtype().empty()) {
    _this->_impl_.imgtype_.Set(from._internal_imgtype(), _this->GetArenaForAllocation());
  }
  _impl_.voice_md5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voice_md5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_voice_md5().empty()) {
    _this->_impl_.voice_md5_.Set(from._internal_voice_md5(), _this->GetArenaForAllocation());
  }
  _impl_.packet_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.packet_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_packet_name().empty()) {
    _this->_impl_.packet_name_.Set(from._internal_packet_name(), _this->GetArenaForAllocation());
  }
  _impl_.phonetype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phonetype_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phonetype().empty()) {
    _this->_impl_.phonetype_.Set(from._internal_phonetype(), _this->GetArenaForAllocation());
  }
  _impl_.origin_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.origin_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_origin_src().empty()) {
    _this->_impl_.origin_src_.Set(from._internal_origin_src(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.tiebaplus_info_ = new ::TiebaPlusInfo(*from._impl_.tiebaplus_info_);
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.origin_size_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.origin_size_));

  // @@protoc_insertion_point(copy_constructor:PbContent)
}
inline void PbContent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.text_){},
      decltype(_impl_.link_){},
      decltype(_impl_.src_){},
      decltype(_impl_.bsize_){},
      decltype(_impl_.big_src_){},
      decltype(_impl_.big_size_){},
      decltype(_impl_.cdn_src_){},
      decltype(_impl_.big_cdn_src_){},
      decltype(_impl_.imgtype_){},
      decltype(_impl_.voice_md5_){},
      decltype(_impl_.packet_name_){},
      decltype(_impl_.phonetype_){},
      decltype(_impl_.origin_src_){},
      decltype(_impl_.tiebaplus_info_){nullptr},
      decltype(_impl_.type_){0u},
      decltype(_impl_.during_time_){0u},
      decltype(_impl_.uid_){::int64_t{0}},
      decltype(_impl_.is_sub_){0u},
      decltype(_impl_.width_){0u},
      decltype(_impl_.height_){0u},
      decltype(_impl_.e_type_){0u},
      decltype(_impl_.origin_size_){0u},
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.link_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.link_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bsize_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bsize_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.big_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.big_size_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_size_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cdn_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cdn_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.big_cdn_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.big_cdn_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.imgtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.imgtype_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.voice_md5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.voice_md5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.packet_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.packet_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.phonetype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.phonetype_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.origin_src_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.origin_src_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PbContent::~PbContent() {
  // @@protoc_insertion_point(destructor:PbContent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PbContent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
  _impl_.link_.Destroy();
  _impl_.src_.Destroy();
  _impl_.bsize_.Destroy();
  _impl_.big_src_.Destroy();
  _impl_.big_size_.Destroy();
  _impl_.cdn_src_.Destroy();
  _impl_.big_cdn_src_.Destroy();
  _impl_.imgtype_.Destroy();
  _impl_.voice_md5_.Destroy();
  _impl_.packet_name_.Destroy();
  _impl_.phonetype_.Destroy();
  _impl_.origin_src_.Destroy();
  if (this != internal_default_instance()) delete _impl_.tiebaplus_info_;
}
void PbContent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PbContent::Clear() {
// @@protoc_insertion_point(message_clear_start:PbContent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.link_.ClearToEmpty();
  _impl_.src_.ClearToEmpty();
  _impl_.bsize_.ClearToEmpty();
  _impl_.big_src_.ClearToEmpty();
  _impl_.big_size_.ClearToEmpty();
  _impl_.cdn_src_.ClearToEmpty();
  _impl_.big_cdn_src_.ClearToEmpty();
  _impl_.imgtype_.ClearToEmpty();
  _impl_.voice_md5_.ClearToEmpty();
  _impl_.packet_name_.ClearToEmpty();
  _impl_.phonetype_.ClearToEmpty();
  _impl_.origin_src_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tiebaplus_info_ != nullptr);
    _impl_.tiebaplus_info_->Clear();
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.origin_size_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.origin_size_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PbContent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 22, 1, 129, 7> PbContent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PbContent, _impl_._has_bits_),
    0, // no _extensions_
    40, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4200694784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PbContent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PbContent, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.type_)}},
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.text_)}},
    // string link = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.link_)}},
    // string src = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.src_)}},
    // string bsize = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.bsize_)}},
    // string big_src = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_src_)}},
    // string big_size = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_size_)}},
    // string cdn_src = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.cdn_src_)}},
    // string big_cdn_src = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_cdn_src_)}},
    // string imgtype = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.imgtype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string voice_md5 = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.voice_md5_)}},
    // uint32 during_time = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PbContent, _impl_.during_time_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.during_time_)}},
    // uint32 is_sub = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PbContent, _impl_.is_sub_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.is_sub_)}},
    // int64 uid = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PbContent, _impl_.uid_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 width = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.width_)}},
    // uint32 height = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.height_)}},
    // string packet_name = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.packet_name_)}},
    // string phonetype = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.phonetype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 e_type = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.e_type_)}},
    // string origin_src = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.origin_src_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 origin_size = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 63, 0, PROTOBUF_FIELD_OFFSET(PbContent, _impl_.origin_size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    40, 0, 1,
    65534, 21,
    65535, 65535
  }}, {{
    // uint32 type = 1;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.text_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string link = 3;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.link_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string src = 4;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.src_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bsize = 5;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.bsize_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string big_src = 6;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_src_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string big_size = 7;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cdn_src = 8;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.cdn_src_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string big_cdn_src = 9;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.big_cdn_src_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string imgtype = 10;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.imgtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string voice_md5 = 12;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.voice_md5_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 during_time = 13;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.during_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 is_sub = 14;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.is_sub_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int64 uid = 15;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 width = 18;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.width_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 19;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string packet_name = 20;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.packet_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string phonetype = 21;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.phonetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 e_type = 24;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.e_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string origin_src = 25;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.origin_src_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 origin_size = 27;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.origin_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .TiebaPlusInfo tiebaplus_info = 40;
    {PROTOBUF_FIELD_OFFSET(PbContent, _impl_.tiebaplus_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TiebaPlusInfo>()},
  }}, {{
    "\11\0\4\4\3\5\7\10\7\13\7\11\0\0\0\0\0\13\11\0\12\0\0\0"
    "PbContent"
    "text"
    "link"
    "src"
    "bsize"
    "big_src"
    "big_size"
    "cdn_src"
    "big_cdn_src"
    "imgtype"
    "voice_md5"
    "packet_name"
    "phonetype"
    "origin_src"
  }},
};

::uint8_t* PbContent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PbContent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_type(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string link = 3;
  if (!this->_internal_link().empty()) {
    const std::string& _s = this->_internal_link();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.link");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string src = 4;
  if (!this->_internal_src().empty()) {
    const std::string& _s = this->_internal_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.src");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string bsize = 5;
  if (!this->_internal_bsize().empty()) {
    const std::string& _s = this->_internal_bsize();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.bsize");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string big_src = 6;
  if (!this->_internal_big_src().empty()) {
    const std::string& _s = this->_internal_big_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.big_src");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string big_size = 7;
  if (!this->_internal_big_size().empty()) {
    const std::string& _s = this->_internal_big_size();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.big_size");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string cdn_src = 8;
  if (!this->_internal_cdn_src().empty()) {
    const std::string& _s = this->_internal_cdn_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.cdn_src");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string big_cdn_src = 9;
  if (!this->_internal_big_cdn_src().empty()) {
    const std::string& _s = this->_internal_big_cdn_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.big_cdn_src");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string imgtype = 10;
  if (!this->_internal_imgtype().empty()) {
    const std::string& _s = this->_internal_imgtype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.imgtype");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string voice_md5 = 12;
  if (!this->_internal_voice_md5().empty()) {
    const std::string& _s = this->_internal_voice_md5();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.voice_md5");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // uint32 during_time = 13;
  if (this->_internal_during_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_during_time(), target);
  }

  // uint32 is_sub = 14;
  if (this->_internal_is_sub() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_is_sub(), target);
  }

  // int64 uid = 15;
  if (this->_internal_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<15>(
            stream, this->_internal_uid(), target);
  }

  // uint32 width = 18;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this->_internal_width(), target);
  }

  // uint32 height = 19;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this->_internal_height(), target);
  }

  // string packet_name = 20;
  if (!this->_internal_packet_name().empty()) {
    const std::string& _s = this->_internal_packet_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.packet_name");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // string phonetype = 21;
  if (!this->_internal_phonetype().empty()) {
    const std::string& _s = this->_internal_phonetype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.phonetype");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // uint32 e_type = 24;
  if (this->_internal_e_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        24, this->_internal_e_type(), target);
  }

  // string origin_src = 25;
  if (!this->_internal_origin_src().empty()) {
    const std::string& _s = this->_internal_origin_src();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PbContent.origin_src");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // uint32 origin_size = 27;
  if (this->_internal_origin_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        27, this->_internal_origin_size(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .TiebaPlusInfo tiebaplus_info = 40;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(40, _Internal::tiebaplus_info(this),
        _Internal::tiebaplus_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbContent)
  return target;
}

::size_t PbContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbContent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // string link = 3;
  if (!this->_internal_link().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_link());
  }

  // string src = 4;
  if (!this->_internal_src().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_src());
  }

  // string bsize = 5;
  if (!this->_internal_bsize().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bsize());
  }

  // string big_src = 6;
  if (!this->_internal_big_src().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_big_src());
  }

  // string big_size = 7;
  if (!this->_internal_big_size().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_big_size());
  }

  // string cdn_src = 8;
  if (!this->_internal_cdn_src().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cdn_src());
  }

  // string big_cdn_src = 9;
  if (!this->_internal_big_cdn_src().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_big_cdn_src());
  }

  // string imgtype = 10;
  if (!this->_internal_imgtype().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_imgtype());
  }

  // string voice_md5 = 12;
  if (!this->_internal_voice_md5().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_voice_md5());
  }

  // string packet_name = 20;
  if (!this->_internal_packet_name().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_packet_name());
  }

  // string phonetype = 21;
  if (!this->_internal_phonetype().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phonetype());
  }

  // string origin_src = 25;
  if (!this->_internal_origin_src().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_origin_src());
  }

  // .TiebaPlusInfo tiebaplus_info = 40;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.tiebaplus_info_);
  }

  // uint32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_type());
  }

  // uint32 during_time = 13;
  if (this->_internal_during_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_during_time());
  }

  // int64 uid = 15;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_uid());
  }

  // uint32 is_sub = 14;
  if (this->_internal_is_sub() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_is_sub());
  }

  // uint32 width = 18;
  if (this->_internal_width() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_width());
  }

  // uint32 height = 19;
  if (this->_internal_height() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_height());
  }

  // uint32 e_type = 24;
  if (this->_internal_e_type() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_e_type());
  }

  // uint32 origin_size = 27;
  if (this->_internal_origin_size() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_origin_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PbContent::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PbContent::MergeImpl
};
const ::google::protobuf::Message::ClassData*PbContent::GetClassData() const { return &_class_data_; }


void PbContent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PbContent*>(&to_msg);
  auto& from = static_cast<const PbContent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PbContent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (!from._internal_link().empty()) {
    _this->_internal_set_link(from._internal_link());
  }
  if (!from._internal_src().empty()) {
    _this->_internal_set_src(from._internal_src());
  }
  if (!from._internal_bsize().empty()) {
    _this->_internal_set_bsize(from._internal_bsize());
  }
  if (!from._internal_big_src().empty()) {
    _this->_internal_set_big_src(from._internal_big_src());
  }
  if (!from._internal_big_size().empty()) {
    _this->_internal_set_big_size(from._internal_big_size());
  }
  if (!from._internal_cdn_src().empty()) {
    _this->_internal_set_cdn_src(from._internal_cdn_src());
  }
  if (!from._internal_big_cdn_src().empty()) {
    _this->_internal_set_big_cdn_src(from._internal_big_cdn_src());
  }
  if (!from._internal_imgtype().empty()) {
    _this->_internal_set_imgtype(from._internal_imgtype());
  }
  if (!from._internal_voice_md5().empty()) {
    _this->_internal_set_voice_md5(from._internal_voice_md5());
  }
  if (!from._internal_packet_name().empty()) {
    _this->_internal_set_packet_name(from._internal_packet_name());
  }
  if (!from._internal_phonetype().empty()) {
    _this->_internal_set_phonetype(from._internal_phonetype());
  }
  if (!from._internal_origin_src().empty()) {
    _this->_internal_set_origin_src(from._internal_origin_src());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_tiebaplus_info()->::TiebaPlusInfo::MergeFrom(
        from._internal_tiebaplus_info());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_during_time() != 0) {
    _this->_internal_set_during_time(from._internal_during_time());
  }
  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_is_sub() != 0) {
    _this->_internal_set_is_sub(from._internal_is_sub());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_e_type() != 0) {
    _this->_internal_set_e_type(from._internal_e_type());
  }
  if (from._internal_origin_size() != 0) {
    _this->_internal_set_origin_size(from._internal_origin_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PbContent::CopyFrom(const PbContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PbContent::IsInitialized() const {
  return true;
}

void PbContent::InternalSwap(PbContent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.link_, lhs_arena,
                                       &other->_impl_.link_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_, lhs_arena,
                                       &other->_impl_.src_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bsize_, lhs_arena,
                                       &other->_impl_.bsize_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.big_src_, lhs_arena,
                                       &other->_impl_.big_src_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.big_size_, lhs_arena,
                                       &other->_impl_.big_size_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cdn_src_, lhs_arena,
                                       &other->_impl_.cdn_src_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.big_cdn_src_, lhs_arena,
                                       &other->_impl_.big_cdn_src_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.imgtype_, lhs_arena,
                                       &other->_impl_.imgtype_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voice_md5_, lhs_arena,
                                       &other->_impl_.voice_md5_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.packet_name_, lhs_arena,
                                       &other->_impl_.packet_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phonetype_, lhs_arena,
                                       &other->_impl_.phonetype_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_src_, lhs_arena,
                                       &other->_impl_.origin_src_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PbContent, _impl_.origin_size_)
      + sizeof(PbContent::_impl_.origin_size_)
      - PROTOBUF_FIELD_OFFSET(PbContent, _impl_.tiebaplus_info_)>(
          reinterpret_cast<char*>(&_impl_.tiebaplus_info_),
          reinterpret_cast<char*>(&other->_impl_.tiebaplus_info_));
}

::google::protobuf::Metadata PbContent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PbContent_2eproto_getter, &descriptor_table_PbContent_2eproto_once,
      file_level_metadata_PbContent_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
